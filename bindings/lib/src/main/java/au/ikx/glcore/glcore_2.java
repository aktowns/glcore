// Generated by jextract

package au.ikx.glcore;

import java.lang.invoke.*;
import java.lang.foreign.*;
import java.nio.ByteOrder;
import java.util.*;
import java.util.function.*;
import java.util.stream.*;

import static java.lang.foreign.ValueLayout.*;
import static java.lang.foreign.MemoryLayout.PathElement.*;

public class glcore_2 extends glcore_3 {

    glcore_2() {
        // Should not be called directly
    }

    private static class glad_debug_glGetnUniformuiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetnUniformuiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMUIVPROC glad_debug_glGetnUniformuiv
     * }
     */
    public static AddressLayout glad_debug_glGetnUniformuiv$layout() {
        return glad_debug_glGetnUniformuiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMUIVPROC glad_debug_glGetnUniformuiv
     * }
     */
    public static MemorySegment glad_debug_glGetnUniformuiv$segment() {
        return glad_debug_glGetnUniformuiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMUIVPROC glad_debug_glGetnUniformuiv
     * }
     */
    public static MemorySegment glad_debug_glGetnUniformuiv() {
        return glad_debug_glGetnUniformuiv$constants.SEGMENT.get(glad_debug_glGetnUniformuiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMUIVPROC glad_debug_glGetnUniformuiv
     * }
     */
    public static void glad_debug_glGetnUniformuiv(MemorySegment varValue) {
        glad_debug_glGetnUniformuiv$constants.SEGMENT.set(glad_debug_glGetnUniformuiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetnUniformuivARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetnUniformuivARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMUIVARBPROC glad_glGetnUniformuivARB
     * }
     */
    public static AddressLayout glad_glGetnUniformuivARB$layout() {
        return glad_glGetnUniformuivARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMUIVARBPROC glad_glGetnUniformuivARB
     * }
     */
    public static MemorySegment glad_glGetnUniformuivARB$segment() {
        return glad_glGetnUniformuivARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMUIVARBPROC glad_glGetnUniformuivARB
     * }
     */
    public static MemorySegment glad_glGetnUniformuivARB() {
        return glad_glGetnUniformuivARB$constants.SEGMENT.get(glad_glGetnUniformuivARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMUIVARBPROC glad_glGetnUniformuivARB
     * }
     */
    public static void glad_glGetnUniformuivARB(MemorySegment varValue) {
        glad_glGetnUniformuivARB$constants.SEGMENT.set(glad_glGetnUniformuivARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetnUniformuivARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetnUniformuivARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMUIVARBPROC glad_debug_glGetnUniformuivARB
     * }
     */
    public static AddressLayout glad_debug_glGetnUniformuivARB$layout() {
        return glad_debug_glGetnUniformuivARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMUIVARBPROC glad_debug_glGetnUniformuivARB
     * }
     */
    public static MemorySegment glad_debug_glGetnUniformuivARB$segment() {
        return glad_debug_glGetnUniformuivARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMUIVARBPROC glad_debug_glGetnUniformuivARB
     * }
     */
    public static MemorySegment glad_debug_glGetnUniformuivARB() {
        return glad_debug_glGetnUniformuivARB$constants.SEGMENT.get(glad_debug_glGetnUniformuivARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMUIVARBPROC glad_debug_glGetnUniformuivARB
     * }
     */
    public static void glad_debug_glGetnUniformuivARB(MemorySegment varValue) {
        glad_debug_glGetnUniformuivARB$constants.SEGMENT.set(glad_debug_glGetnUniformuivARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glHint$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glHint").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLHINTPROC glad_glHint
     * }
     */
    public static AddressLayout glad_glHint$layout() {
        return glad_glHint$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLHINTPROC glad_glHint
     * }
     */
    public static MemorySegment glad_glHint$segment() {
        return glad_glHint$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLHINTPROC glad_glHint
     * }
     */
    public static MemorySegment glad_glHint() {
        return glad_glHint$constants.SEGMENT.get(glad_glHint$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLHINTPROC glad_glHint
     * }
     */
    public static void glad_glHint(MemorySegment varValue) {
        glad_glHint$constants.SEGMENT.set(glad_glHint$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glHint$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glHint").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLHINTPROC glad_debug_glHint
     * }
     */
    public static AddressLayout glad_debug_glHint$layout() {
        return glad_debug_glHint$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLHINTPROC glad_debug_glHint
     * }
     */
    public static MemorySegment glad_debug_glHint$segment() {
        return glad_debug_glHint$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLHINTPROC glad_debug_glHint
     * }
     */
    public static MemorySegment glad_debug_glHint() {
        return glad_debug_glHint$constants.SEGMENT.get(glad_debug_glHint$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLHINTPROC glad_debug_glHint
     * }
     */
    public static void glad_debug_glHint(MemorySegment varValue) {
        glad_debug_glHint$constants.SEGMENT.set(glad_debug_glHint$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glHistogram$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glHistogram").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLHISTOGRAMPROC glad_glHistogram
     * }
     */
    public static AddressLayout glad_glHistogram$layout() {
        return glad_glHistogram$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLHISTOGRAMPROC glad_glHistogram
     * }
     */
    public static MemorySegment glad_glHistogram$segment() {
        return glad_glHistogram$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLHISTOGRAMPROC glad_glHistogram
     * }
     */
    public static MemorySegment glad_glHistogram() {
        return glad_glHistogram$constants.SEGMENT.get(glad_glHistogram$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLHISTOGRAMPROC glad_glHistogram
     * }
     */
    public static void glad_glHistogram(MemorySegment varValue) {
        glad_glHistogram$constants.SEGMENT.set(glad_glHistogram$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glHistogram$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glHistogram").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLHISTOGRAMPROC glad_debug_glHistogram
     * }
     */
    public static AddressLayout glad_debug_glHistogram$layout() {
        return glad_debug_glHistogram$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLHISTOGRAMPROC glad_debug_glHistogram
     * }
     */
    public static MemorySegment glad_debug_glHistogram$segment() {
        return glad_debug_glHistogram$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLHISTOGRAMPROC glad_debug_glHistogram
     * }
     */
    public static MemorySegment glad_debug_glHistogram() {
        return glad_debug_glHistogram$constants.SEGMENT.get(glad_debug_glHistogram$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLHISTOGRAMPROC glad_debug_glHistogram
     * }
     */
    public static void glad_debug_glHistogram(MemorySegment varValue) {
        glad_debug_glHistogram$constants.SEGMENT.set(glad_debug_glHistogram$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glIndexMask$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glIndexMask").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXMASKPROC glad_glIndexMask
     * }
     */
    public static AddressLayout glad_glIndexMask$layout() {
        return glad_glIndexMask$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXMASKPROC glad_glIndexMask
     * }
     */
    public static MemorySegment glad_glIndexMask$segment() {
        return glad_glIndexMask$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXMASKPROC glad_glIndexMask
     * }
     */
    public static MemorySegment glad_glIndexMask() {
        return glad_glIndexMask$constants.SEGMENT.get(glad_glIndexMask$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXMASKPROC glad_glIndexMask
     * }
     */
    public static void glad_glIndexMask(MemorySegment varValue) {
        glad_glIndexMask$constants.SEGMENT.set(glad_glIndexMask$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glIndexMask$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glIndexMask").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXMASKPROC glad_debug_glIndexMask
     * }
     */
    public static AddressLayout glad_debug_glIndexMask$layout() {
        return glad_debug_glIndexMask$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXMASKPROC glad_debug_glIndexMask
     * }
     */
    public static MemorySegment glad_debug_glIndexMask$segment() {
        return glad_debug_glIndexMask$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXMASKPROC glad_debug_glIndexMask
     * }
     */
    public static MemorySegment glad_debug_glIndexMask() {
        return glad_debug_glIndexMask$constants.SEGMENT.get(glad_debug_glIndexMask$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXMASKPROC glad_debug_glIndexMask
     * }
     */
    public static void glad_debug_glIndexMask(MemorySegment varValue) {
        glad_debug_glIndexMask$constants.SEGMENT.set(glad_debug_glIndexMask$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glIndexPointer$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glIndexPointer").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXPOINTERPROC glad_glIndexPointer
     * }
     */
    public static AddressLayout glad_glIndexPointer$layout() {
        return glad_glIndexPointer$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXPOINTERPROC glad_glIndexPointer
     * }
     */
    public static MemorySegment glad_glIndexPointer$segment() {
        return glad_glIndexPointer$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXPOINTERPROC glad_glIndexPointer
     * }
     */
    public static MemorySegment glad_glIndexPointer() {
        return glad_glIndexPointer$constants.SEGMENT.get(glad_glIndexPointer$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXPOINTERPROC glad_glIndexPointer
     * }
     */
    public static void glad_glIndexPointer(MemorySegment varValue) {
        glad_glIndexPointer$constants.SEGMENT.set(glad_glIndexPointer$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glIndexPointer$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glIndexPointer").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXPOINTERPROC glad_debug_glIndexPointer
     * }
     */
    public static AddressLayout glad_debug_glIndexPointer$layout() {
        return glad_debug_glIndexPointer$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXPOINTERPROC glad_debug_glIndexPointer
     * }
     */
    public static MemorySegment glad_debug_glIndexPointer$segment() {
        return glad_debug_glIndexPointer$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXPOINTERPROC glad_debug_glIndexPointer
     * }
     */
    public static MemorySegment glad_debug_glIndexPointer() {
        return glad_debug_glIndexPointer$constants.SEGMENT.get(glad_debug_glIndexPointer$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXPOINTERPROC glad_debug_glIndexPointer
     * }
     */
    public static void glad_debug_glIndexPointer(MemorySegment varValue) {
        glad_debug_glIndexPointer$constants.SEGMENT.set(glad_debug_glIndexPointer$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glIndexPointerEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glIndexPointerEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXPOINTEREXTPROC glad_glIndexPointerEXT
     * }
     */
    public static AddressLayout glad_glIndexPointerEXT$layout() {
        return glad_glIndexPointerEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXPOINTEREXTPROC glad_glIndexPointerEXT
     * }
     */
    public static MemorySegment glad_glIndexPointerEXT$segment() {
        return glad_glIndexPointerEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXPOINTEREXTPROC glad_glIndexPointerEXT
     * }
     */
    public static MemorySegment glad_glIndexPointerEXT() {
        return glad_glIndexPointerEXT$constants.SEGMENT.get(glad_glIndexPointerEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXPOINTEREXTPROC glad_glIndexPointerEXT
     * }
     */
    public static void glad_glIndexPointerEXT(MemorySegment varValue) {
        glad_glIndexPointerEXT$constants.SEGMENT.set(glad_glIndexPointerEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glIndexPointerEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glIndexPointerEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXPOINTEREXTPROC glad_debug_glIndexPointerEXT
     * }
     */
    public static AddressLayout glad_debug_glIndexPointerEXT$layout() {
        return glad_debug_glIndexPointerEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXPOINTEREXTPROC glad_debug_glIndexPointerEXT
     * }
     */
    public static MemorySegment glad_debug_glIndexPointerEXT$segment() {
        return glad_debug_glIndexPointerEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXPOINTEREXTPROC glad_debug_glIndexPointerEXT
     * }
     */
    public static MemorySegment glad_debug_glIndexPointerEXT() {
        return glad_debug_glIndexPointerEXT$constants.SEGMENT.get(glad_debug_glIndexPointerEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXPOINTEREXTPROC glad_debug_glIndexPointerEXT
     * }
     */
    public static void glad_debug_glIndexPointerEXT(MemorySegment varValue) {
        glad_debug_glIndexPointerEXT$constants.SEGMENT.set(glad_debug_glIndexPointerEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glIndexd$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glIndexd").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXDPROC glad_glIndexd
     * }
     */
    public static AddressLayout glad_glIndexd$layout() {
        return glad_glIndexd$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXDPROC glad_glIndexd
     * }
     */
    public static MemorySegment glad_glIndexd$segment() {
        return glad_glIndexd$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXDPROC glad_glIndexd
     * }
     */
    public static MemorySegment glad_glIndexd() {
        return glad_glIndexd$constants.SEGMENT.get(glad_glIndexd$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXDPROC glad_glIndexd
     * }
     */
    public static void glad_glIndexd(MemorySegment varValue) {
        glad_glIndexd$constants.SEGMENT.set(glad_glIndexd$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glIndexd$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glIndexd").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXDPROC glad_debug_glIndexd
     * }
     */
    public static AddressLayout glad_debug_glIndexd$layout() {
        return glad_debug_glIndexd$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXDPROC glad_debug_glIndexd
     * }
     */
    public static MemorySegment glad_debug_glIndexd$segment() {
        return glad_debug_glIndexd$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXDPROC glad_debug_glIndexd
     * }
     */
    public static MemorySegment glad_debug_glIndexd() {
        return glad_debug_glIndexd$constants.SEGMENT.get(glad_debug_glIndexd$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXDPROC glad_debug_glIndexd
     * }
     */
    public static void glad_debug_glIndexd(MemorySegment varValue) {
        glad_debug_glIndexd$constants.SEGMENT.set(glad_debug_glIndexd$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glIndexdv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glIndexdv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXDVPROC glad_glIndexdv
     * }
     */
    public static AddressLayout glad_glIndexdv$layout() {
        return glad_glIndexdv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXDVPROC glad_glIndexdv
     * }
     */
    public static MemorySegment glad_glIndexdv$segment() {
        return glad_glIndexdv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXDVPROC glad_glIndexdv
     * }
     */
    public static MemorySegment glad_glIndexdv() {
        return glad_glIndexdv$constants.SEGMENT.get(glad_glIndexdv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXDVPROC glad_glIndexdv
     * }
     */
    public static void glad_glIndexdv(MemorySegment varValue) {
        glad_glIndexdv$constants.SEGMENT.set(glad_glIndexdv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glIndexdv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glIndexdv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXDVPROC glad_debug_glIndexdv
     * }
     */
    public static AddressLayout glad_debug_glIndexdv$layout() {
        return glad_debug_glIndexdv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXDVPROC glad_debug_glIndexdv
     * }
     */
    public static MemorySegment glad_debug_glIndexdv$segment() {
        return glad_debug_glIndexdv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXDVPROC glad_debug_glIndexdv
     * }
     */
    public static MemorySegment glad_debug_glIndexdv() {
        return glad_debug_glIndexdv$constants.SEGMENT.get(glad_debug_glIndexdv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXDVPROC glad_debug_glIndexdv
     * }
     */
    public static void glad_debug_glIndexdv(MemorySegment varValue) {
        glad_debug_glIndexdv$constants.SEGMENT.set(glad_debug_glIndexdv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glIndexf$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glIndexf").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXFPROC glad_glIndexf
     * }
     */
    public static AddressLayout glad_glIndexf$layout() {
        return glad_glIndexf$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXFPROC glad_glIndexf
     * }
     */
    public static MemorySegment glad_glIndexf$segment() {
        return glad_glIndexf$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXFPROC glad_glIndexf
     * }
     */
    public static MemorySegment glad_glIndexf() {
        return glad_glIndexf$constants.SEGMENT.get(glad_glIndexf$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXFPROC glad_glIndexf
     * }
     */
    public static void glad_glIndexf(MemorySegment varValue) {
        glad_glIndexf$constants.SEGMENT.set(glad_glIndexf$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glIndexf$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glIndexf").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXFPROC glad_debug_glIndexf
     * }
     */
    public static AddressLayout glad_debug_glIndexf$layout() {
        return glad_debug_glIndexf$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXFPROC glad_debug_glIndexf
     * }
     */
    public static MemorySegment glad_debug_glIndexf$segment() {
        return glad_debug_glIndexf$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXFPROC glad_debug_glIndexf
     * }
     */
    public static MemorySegment glad_debug_glIndexf() {
        return glad_debug_glIndexf$constants.SEGMENT.get(glad_debug_glIndexf$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXFPROC glad_debug_glIndexf
     * }
     */
    public static void glad_debug_glIndexf(MemorySegment varValue) {
        glad_debug_glIndexf$constants.SEGMENT.set(glad_debug_glIndexf$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glIndexfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glIndexfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXFVPROC glad_glIndexfv
     * }
     */
    public static AddressLayout glad_glIndexfv$layout() {
        return glad_glIndexfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXFVPROC glad_glIndexfv
     * }
     */
    public static MemorySegment glad_glIndexfv$segment() {
        return glad_glIndexfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXFVPROC glad_glIndexfv
     * }
     */
    public static MemorySegment glad_glIndexfv() {
        return glad_glIndexfv$constants.SEGMENT.get(glad_glIndexfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXFVPROC glad_glIndexfv
     * }
     */
    public static void glad_glIndexfv(MemorySegment varValue) {
        glad_glIndexfv$constants.SEGMENT.set(glad_glIndexfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glIndexfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glIndexfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXFVPROC glad_debug_glIndexfv
     * }
     */
    public static AddressLayout glad_debug_glIndexfv$layout() {
        return glad_debug_glIndexfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXFVPROC glad_debug_glIndexfv
     * }
     */
    public static MemorySegment glad_debug_glIndexfv$segment() {
        return glad_debug_glIndexfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXFVPROC glad_debug_glIndexfv
     * }
     */
    public static MemorySegment glad_debug_glIndexfv() {
        return glad_debug_glIndexfv$constants.SEGMENT.get(glad_debug_glIndexfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXFVPROC glad_debug_glIndexfv
     * }
     */
    public static void glad_debug_glIndexfv(MemorySegment varValue) {
        glad_debug_glIndexfv$constants.SEGMENT.set(glad_debug_glIndexfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glIndexi$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glIndexi").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXIPROC glad_glIndexi
     * }
     */
    public static AddressLayout glad_glIndexi$layout() {
        return glad_glIndexi$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXIPROC glad_glIndexi
     * }
     */
    public static MemorySegment glad_glIndexi$segment() {
        return glad_glIndexi$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXIPROC glad_glIndexi
     * }
     */
    public static MemorySegment glad_glIndexi() {
        return glad_glIndexi$constants.SEGMENT.get(glad_glIndexi$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXIPROC glad_glIndexi
     * }
     */
    public static void glad_glIndexi(MemorySegment varValue) {
        glad_glIndexi$constants.SEGMENT.set(glad_glIndexi$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glIndexi$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glIndexi").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXIPROC glad_debug_glIndexi
     * }
     */
    public static AddressLayout glad_debug_glIndexi$layout() {
        return glad_debug_glIndexi$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXIPROC glad_debug_glIndexi
     * }
     */
    public static MemorySegment glad_debug_glIndexi$segment() {
        return glad_debug_glIndexi$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXIPROC glad_debug_glIndexi
     * }
     */
    public static MemorySegment glad_debug_glIndexi() {
        return glad_debug_glIndexi$constants.SEGMENT.get(glad_debug_glIndexi$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXIPROC glad_debug_glIndexi
     * }
     */
    public static void glad_debug_glIndexi(MemorySegment varValue) {
        glad_debug_glIndexi$constants.SEGMENT.set(glad_debug_glIndexi$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glIndexiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glIndexiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXIVPROC glad_glIndexiv
     * }
     */
    public static AddressLayout glad_glIndexiv$layout() {
        return glad_glIndexiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXIVPROC glad_glIndexiv
     * }
     */
    public static MemorySegment glad_glIndexiv$segment() {
        return glad_glIndexiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXIVPROC glad_glIndexiv
     * }
     */
    public static MemorySegment glad_glIndexiv() {
        return glad_glIndexiv$constants.SEGMENT.get(glad_glIndexiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXIVPROC glad_glIndexiv
     * }
     */
    public static void glad_glIndexiv(MemorySegment varValue) {
        glad_glIndexiv$constants.SEGMENT.set(glad_glIndexiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glIndexiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glIndexiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXIVPROC glad_debug_glIndexiv
     * }
     */
    public static AddressLayout glad_debug_glIndexiv$layout() {
        return glad_debug_glIndexiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXIVPROC glad_debug_glIndexiv
     * }
     */
    public static MemorySegment glad_debug_glIndexiv$segment() {
        return glad_debug_glIndexiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXIVPROC glad_debug_glIndexiv
     * }
     */
    public static MemorySegment glad_debug_glIndexiv() {
        return glad_debug_glIndexiv$constants.SEGMENT.get(glad_debug_glIndexiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXIVPROC glad_debug_glIndexiv
     * }
     */
    public static void glad_debug_glIndexiv(MemorySegment varValue) {
        glad_debug_glIndexiv$constants.SEGMENT.set(glad_debug_glIndexiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glIndexs$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glIndexs").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXSPROC glad_glIndexs
     * }
     */
    public static AddressLayout glad_glIndexs$layout() {
        return glad_glIndexs$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXSPROC glad_glIndexs
     * }
     */
    public static MemorySegment glad_glIndexs$segment() {
        return glad_glIndexs$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXSPROC glad_glIndexs
     * }
     */
    public static MemorySegment glad_glIndexs() {
        return glad_glIndexs$constants.SEGMENT.get(glad_glIndexs$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXSPROC glad_glIndexs
     * }
     */
    public static void glad_glIndexs(MemorySegment varValue) {
        glad_glIndexs$constants.SEGMENT.set(glad_glIndexs$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glIndexs$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glIndexs").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXSPROC glad_debug_glIndexs
     * }
     */
    public static AddressLayout glad_debug_glIndexs$layout() {
        return glad_debug_glIndexs$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXSPROC glad_debug_glIndexs
     * }
     */
    public static MemorySegment glad_debug_glIndexs$segment() {
        return glad_debug_glIndexs$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXSPROC glad_debug_glIndexs
     * }
     */
    public static MemorySegment glad_debug_glIndexs() {
        return glad_debug_glIndexs$constants.SEGMENT.get(glad_debug_glIndexs$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXSPROC glad_debug_glIndexs
     * }
     */
    public static void glad_debug_glIndexs(MemorySegment varValue) {
        glad_debug_glIndexs$constants.SEGMENT.set(glad_debug_glIndexs$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glIndexsv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glIndexsv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXSVPROC glad_glIndexsv
     * }
     */
    public static AddressLayout glad_glIndexsv$layout() {
        return glad_glIndexsv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXSVPROC glad_glIndexsv
     * }
     */
    public static MemorySegment glad_glIndexsv$segment() {
        return glad_glIndexsv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXSVPROC glad_glIndexsv
     * }
     */
    public static MemorySegment glad_glIndexsv() {
        return glad_glIndexsv$constants.SEGMENT.get(glad_glIndexsv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXSVPROC glad_glIndexsv
     * }
     */
    public static void glad_glIndexsv(MemorySegment varValue) {
        glad_glIndexsv$constants.SEGMENT.set(glad_glIndexsv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glIndexsv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glIndexsv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXSVPROC glad_debug_glIndexsv
     * }
     */
    public static AddressLayout glad_debug_glIndexsv$layout() {
        return glad_debug_glIndexsv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXSVPROC glad_debug_glIndexsv
     * }
     */
    public static MemorySegment glad_debug_glIndexsv$segment() {
        return glad_debug_glIndexsv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXSVPROC glad_debug_glIndexsv
     * }
     */
    public static MemorySegment glad_debug_glIndexsv() {
        return glad_debug_glIndexsv$constants.SEGMENT.get(glad_debug_glIndexsv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXSVPROC glad_debug_glIndexsv
     * }
     */
    public static void glad_debug_glIndexsv(MemorySegment varValue) {
        glad_debug_glIndexsv$constants.SEGMENT.set(glad_debug_glIndexsv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glIndexub$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glIndexub").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXUBPROC glad_glIndexub
     * }
     */
    public static AddressLayout glad_glIndexub$layout() {
        return glad_glIndexub$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXUBPROC glad_glIndexub
     * }
     */
    public static MemorySegment glad_glIndexub$segment() {
        return glad_glIndexub$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXUBPROC glad_glIndexub
     * }
     */
    public static MemorySegment glad_glIndexub() {
        return glad_glIndexub$constants.SEGMENT.get(glad_glIndexub$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXUBPROC glad_glIndexub
     * }
     */
    public static void glad_glIndexub(MemorySegment varValue) {
        glad_glIndexub$constants.SEGMENT.set(glad_glIndexub$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glIndexub$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glIndexub").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXUBPROC glad_debug_glIndexub
     * }
     */
    public static AddressLayout glad_debug_glIndexub$layout() {
        return glad_debug_glIndexub$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXUBPROC glad_debug_glIndexub
     * }
     */
    public static MemorySegment glad_debug_glIndexub$segment() {
        return glad_debug_glIndexub$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXUBPROC glad_debug_glIndexub
     * }
     */
    public static MemorySegment glad_debug_glIndexub() {
        return glad_debug_glIndexub$constants.SEGMENT.get(glad_debug_glIndexub$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXUBPROC glad_debug_glIndexub
     * }
     */
    public static void glad_debug_glIndexub(MemorySegment varValue) {
        glad_debug_glIndexub$constants.SEGMENT.set(glad_debug_glIndexub$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glIndexubv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glIndexubv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXUBVPROC glad_glIndexubv
     * }
     */
    public static AddressLayout glad_glIndexubv$layout() {
        return glad_glIndexubv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXUBVPROC glad_glIndexubv
     * }
     */
    public static MemorySegment glad_glIndexubv$segment() {
        return glad_glIndexubv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXUBVPROC glad_glIndexubv
     * }
     */
    public static MemorySegment glad_glIndexubv() {
        return glad_glIndexubv$constants.SEGMENT.get(glad_glIndexubv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXUBVPROC glad_glIndexubv
     * }
     */
    public static void glad_glIndexubv(MemorySegment varValue) {
        glad_glIndexubv$constants.SEGMENT.set(glad_glIndexubv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glIndexubv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glIndexubv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXUBVPROC glad_debug_glIndexubv
     * }
     */
    public static AddressLayout glad_debug_glIndexubv$layout() {
        return glad_debug_glIndexubv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXUBVPROC glad_debug_glIndexubv
     * }
     */
    public static MemorySegment glad_debug_glIndexubv$segment() {
        return glad_debug_glIndexubv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXUBVPROC glad_debug_glIndexubv
     * }
     */
    public static MemorySegment glad_debug_glIndexubv() {
        return glad_debug_glIndexubv$constants.SEGMENT.get(glad_debug_glIndexubv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLINDEXUBVPROC glad_debug_glIndexubv
     * }
     */
    public static void glad_debug_glIndexubv(MemorySegment varValue) {
        glad_debug_glIndexubv$constants.SEGMENT.set(glad_debug_glIndexubv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glInitNames$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glInitNames").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLINITNAMESPROC glad_glInitNames
     * }
     */
    public static AddressLayout glad_glInitNames$layout() {
        return glad_glInitNames$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLINITNAMESPROC glad_glInitNames
     * }
     */
    public static MemorySegment glad_glInitNames$segment() {
        return glad_glInitNames$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLINITNAMESPROC glad_glInitNames
     * }
     */
    public static MemorySegment glad_glInitNames() {
        return glad_glInitNames$constants.SEGMENT.get(glad_glInitNames$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLINITNAMESPROC glad_glInitNames
     * }
     */
    public static void glad_glInitNames(MemorySegment varValue) {
        glad_glInitNames$constants.SEGMENT.set(glad_glInitNames$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glInitNames$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glInitNames").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLINITNAMESPROC glad_debug_glInitNames
     * }
     */
    public static AddressLayout glad_debug_glInitNames$layout() {
        return glad_debug_glInitNames$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLINITNAMESPROC glad_debug_glInitNames
     * }
     */
    public static MemorySegment glad_debug_glInitNames$segment() {
        return glad_debug_glInitNames$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLINITNAMESPROC glad_debug_glInitNames
     * }
     */
    public static MemorySegment glad_debug_glInitNames() {
        return glad_debug_glInitNames$constants.SEGMENT.get(glad_debug_glInitNames$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLINITNAMESPROC glad_debug_glInitNames
     * }
     */
    public static void glad_debug_glInitNames(MemorySegment varValue) {
        glad_debug_glInitNames$constants.SEGMENT.set(glad_debug_glInitNames$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glInterleavedArrays$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glInterleavedArrays").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLINTERLEAVEDARRAYSPROC glad_glInterleavedArrays
     * }
     */
    public static AddressLayout glad_glInterleavedArrays$layout() {
        return glad_glInterleavedArrays$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLINTERLEAVEDARRAYSPROC glad_glInterleavedArrays
     * }
     */
    public static MemorySegment glad_glInterleavedArrays$segment() {
        return glad_glInterleavedArrays$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLINTERLEAVEDARRAYSPROC glad_glInterleavedArrays
     * }
     */
    public static MemorySegment glad_glInterleavedArrays() {
        return glad_glInterleavedArrays$constants.SEGMENT.get(glad_glInterleavedArrays$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLINTERLEAVEDARRAYSPROC glad_glInterleavedArrays
     * }
     */
    public static void glad_glInterleavedArrays(MemorySegment varValue) {
        glad_glInterleavedArrays$constants.SEGMENT.set(glad_glInterleavedArrays$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glInterleavedArrays$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glInterleavedArrays").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLINTERLEAVEDARRAYSPROC glad_debug_glInterleavedArrays
     * }
     */
    public static AddressLayout glad_debug_glInterleavedArrays$layout() {
        return glad_debug_glInterleavedArrays$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLINTERLEAVEDARRAYSPROC glad_debug_glInterleavedArrays
     * }
     */
    public static MemorySegment glad_debug_glInterleavedArrays$segment() {
        return glad_debug_glInterleavedArrays$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLINTERLEAVEDARRAYSPROC glad_debug_glInterleavedArrays
     * }
     */
    public static MemorySegment glad_debug_glInterleavedArrays() {
        return glad_debug_glInterleavedArrays$constants.SEGMENT.get(glad_debug_glInterleavedArrays$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLINTERLEAVEDARRAYSPROC glad_debug_glInterleavedArrays
     * }
     */
    public static void glad_debug_glInterleavedArrays(MemorySegment varValue) {
        glad_debug_glInterleavedArrays$constants.SEGMENT.set(glad_debug_glInterleavedArrays$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glInvalidateBufferData$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glInvalidateBufferData").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATEBUFFERDATAPROC glad_glInvalidateBufferData
     * }
     */
    public static AddressLayout glad_glInvalidateBufferData$layout() {
        return glad_glInvalidateBufferData$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATEBUFFERDATAPROC glad_glInvalidateBufferData
     * }
     */
    public static MemorySegment glad_glInvalidateBufferData$segment() {
        return glad_glInvalidateBufferData$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATEBUFFERDATAPROC glad_glInvalidateBufferData
     * }
     */
    public static MemorySegment glad_glInvalidateBufferData() {
        return glad_glInvalidateBufferData$constants.SEGMENT.get(glad_glInvalidateBufferData$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATEBUFFERDATAPROC glad_glInvalidateBufferData
     * }
     */
    public static void glad_glInvalidateBufferData(MemorySegment varValue) {
        glad_glInvalidateBufferData$constants.SEGMENT.set(glad_glInvalidateBufferData$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glInvalidateBufferData$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glInvalidateBufferData").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATEBUFFERDATAPROC glad_debug_glInvalidateBufferData
     * }
     */
    public static AddressLayout glad_debug_glInvalidateBufferData$layout() {
        return glad_debug_glInvalidateBufferData$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATEBUFFERDATAPROC glad_debug_glInvalidateBufferData
     * }
     */
    public static MemorySegment glad_debug_glInvalidateBufferData$segment() {
        return glad_debug_glInvalidateBufferData$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATEBUFFERDATAPROC glad_debug_glInvalidateBufferData
     * }
     */
    public static MemorySegment glad_debug_glInvalidateBufferData() {
        return glad_debug_glInvalidateBufferData$constants.SEGMENT.get(glad_debug_glInvalidateBufferData$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATEBUFFERDATAPROC glad_debug_glInvalidateBufferData
     * }
     */
    public static void glad_debug_glInvalidateBufferData(MemorySegment varValue) {
        glad_debug_glInvalidateBufferData$constants.SEGMENT.set(glad_debug_glInvalidateBufferData$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glInvalidateBufferSubData$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glInvalidateBufferSubData").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATEBUFFERSUBDATAPROC glad_glInvalidateBufferSubData
     * }
     */
    public static AddressLayout glad_glInvalidateBufferSubData$layout() {
        return glad_glInvalidateBufferSubData$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATEBUFFERSUBDATAPROC glad_glInvalidateBufferSubData
     * }
     */
    public static MemorySegment glad_glInvalidateBufferSubData$segment() {
        return glad_glInvalidateBufferSubData$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATEBUFFERSUBDATAPROC glad_glInvalidateBufferSubData
     * }
     */
    public static MemorySegment glad_glInvalidateBufferSubData() {
        return glad_glInvalidateBufferSubData$constants.SEGMENT.get(glad_glInvalidateBufferSubData$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATEBUFFERSUBDATAPROC glad_glInvalidateBufferSubData
     * }
     */
    public static void glad_glInvalidateBufferSubData(MemorySegment varValue) {
        glad_glInvalidateBufferSubData$constants.SEGMENT.set(glad_glInvalidateBufferSubData$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glInvalidateBufferSubData$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glInvalidateBufferSubData").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATEBUFFERSUBDATAPROC glad_debug_glInvalidateBufferSubData
     * }
     */
    public static AddressLayout glad_debug_glInvalidateBufferSubData$layout() {
        return glad_debug_glInvalidateBufferSubData$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATEBUFFERSUBDATAPROC glad_debug_glInvalidateBufferSubData
     * }
     */
    public static MemorySegment glad_debug_glInvalidateBufferSubData$segment() {
        return glad_debug_glInvalidateBufferSubData$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATEBUFFERSUBDATAPROC glad_debug_glInvalidateBufferSubData
     * }
     */
    public static MemorySegment glad_debug_glInvalidateBufferSubData() {
        return glad_debug_glInvalidateBufferSubData$constants.SEGMENT.get(glad_debug_glInvalidateBufferSubData$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATEBUFFERSUBDATAPROC glad_debug_glInvalidateBufferSubData
     * }
     */
    public static void glad_debug_glInvalidateBufferSubData(MemorySegment varValue) {
        glad_debug_glInvalidateBufferSubData$constants.SEGMENT.set(glad_debug_glInvalidateBufferSubData$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glInvalidateFramebuffer$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glInvalidateFramebuffer").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATEFRAMEBUFFERPROC glad_glInvalidateFramebuffer
     * }
     */
    public static AddressLayout glad_glInvalidateFramebuffer$layout() {
        return glad_glInvalidateFramebuffer$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATEFRAMEBUFFERPROC glad_glInvalidateFramebuffer
     * }
     */
    public static MemorySegment glad_glInvalidateFramebuffer$segment() {
        return glad_glInvalidateFramebuffer$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATEFRAMEBUFFERPROC glad_glInvalidateFramebuffer
     * }
     */
    public static MemorySegment glad_glInvalidateFramebuffer() {
        return glad_glInvalidateFramebuffer$constants.SEGMENT.get(glad_glInvalidateFramebuffer$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATEFRAMEBUFFERPROC glad_glInvalidateFramebuffer
     * }
     */
    public static void glad_glInvalidateFramebuffer(MemorySegment varValue) {
        glad_glInvalidateFramebuffer$constants.SEGMENT.set(glad_glInvalidateFramebuffer$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glInvalidateFramebuffer$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glInvalidateFramebuffer").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATEFRAMEBUFFERPROC glad_debug_glInvalidateFramebuffer
     * }
     */
    public static AddressLayout glad_debug_glInvalidateFramebuffer$layout() {
        return glad_debug_glInvalidateFramebuffer$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATEFRAMEBUFFERPROC glad_debug_glInvalidateFramebuffer
     * }
     */
    public static MemorySegment glad_debug_glInvalidateFramebuffer$segment() {
        return glad_debug_glInvalidateFramebuffer$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATEFRAMEBUFFERPROC glad_debug_glInvalidateFramebuffer
     * }
     */
    public static MemorySegment glad_debug_glInvalidateFramebuffer() {
        return glad_debug_glInvalidateFramebuffer$constants.SEGMENT.get(glad_debug_glInvalidateFramebuffer$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATEFRAMEBUFFERPROC glad_debug_glInvalidateFramebuffer
     * }
     */
    public static void glad_debug_glInvalidateFramebuffer(MemorySegment varValue) {
        glad_debug_glInvalidateFramebuffer$constants.SEGMENT.set(glad_debug_glInvalidateFramebuffer$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glInvalidateNamedFramebufferData$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glInvalidateNamedFramebufferData").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC glad_glInvalidateNamedFramebufferData
     * }
     */
    public static AddressLayout glad_glInvalidateNamedFramebufferData$layout() {
        return glad_glInvalidateNamedFramebufferData$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC glad_glInvalidateNamedFramebufferData
     * }
     */
    public static MemorySegment glad_glInvalidateNamedFramebufferData$segment() {
        return glad_glInvalidateNamedFramebufferData$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC glad_glInvalidateNamedFramebufferData
     * }
     */
    public static MemorySegment glad_glInvalidateNamedFramebufferData() {
        return glad_glInvalidateNamedFramebufferData$constants.SEGMENT.get(glad_glInvalidateNamedFramebufferData$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC glad_glInvalidateNamedFramebufferData
     * }
     */
    public static void glad_glInvalidateNamedFramebufferData(MemorySegment varValue) {
        glad_glInvalidateNamedFramebufferData$constants.SEGMENT.set(glad_glInvalidateNamedFramebufferData$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glInvalidateNamedFramebufferData$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glInvalidateNamedFramebufferData").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC glad_debug_glInvalidateNamedFramebufferData
     * }
     */
    public static AddressLayout glad_debug_glInvalidateNamedFramebufferData$layout() {
        return glad_debug_glInvalidateNamedFramebufferData$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC glad_debug_glInvalidateNamedFramebufferData
     * }
     */
    public static MemorySegment glad_debug_glInvalidateNamedFramebufferData$segment() {
        return glad_debug_glInvalidateNamedFramebufferData$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC glad_debug_glInvalidateNamedFramebufferData
     * }
     */
    public static MemorySegment glad_debug_glInvalidateNamedFramebufferData() {
        return glad_debug_glInvalidateNamedFramebufferData$constants.SEGMENT.get(glad_debug_glInvalidateNamedFramebufferData$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC glad_debug_glInvalidateNamedFramebufferData
     * }
     */
    public static void glad_debug_glInvalidateNamedFramebufferData(MemorySegment varValue) {
        glad_debug_glInvalidateNamedFramebufferData$constants.SEGMENT.set(glad_debug_glInvalidateNamedFramebufferData$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glInvalidateNamedFramebufferSubData$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glInvalidateNamedFramebufferSubData").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC glad_glInvalidateNamedFramebufferSubData
     * }
     */
    public static AddressLayout glad_glInvalidateNamedFramebufferSubData$layout() {
        return glad_glInvalidateNamedFramebufferSubData$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC glad_glInvalidateNamedFramebufferSubData
     * }
     */
    public static MemorySegment glad_glInvalidateNamedFramebufferSubData$segment() {
        return glad_glInvalidateNamedFramebufferSubData$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC glad_glInvalidateNamedFramebufferSubData
     * }
     */
    public static MemorySegment glad_glInvalidateNamedFramebufferSubData() {
        return glad_glInvalidateNamedFramebufferSubData$constants.SEGMENT.get(glad_glInvalidateNamedFramebufferSubData$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC glad_glInvalidateNamedFramebufferSubData
     * }
     */
    public static void glad_glInvalidateNamedFramebufferSubData(MemorySegment varValue) {
        glad_glInvalidateNamedFramebufferSubData$constants.SEGMENT.set(glad_glInvalidateNamedFramebufferSubData$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glInvalidateNamedFramebufferSubData$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glInvalidateNamedFramebufferSubData").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC glad_debug_glInvalidateNamedFramebufferSubData
     * }
     */
    public static AddressLayout glad_debug_glInvalidateNamedFramebufferSubData$layout() {
        return glad_debug_glInvalidateNamedFramebufferSubData$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC glad_debug_glInvalidateNamedFramebufferSubData
     * }
     */
    public static MemorySegment glad_debug_glInvalidateNamedFramebufferSubData$segment() {
        return glad_debug_glInvalidateNamedFramebufferSubData$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC glad_debug_glInvalidateNamedFramebufferSubData
     * }
     */
    public static MemorySegment glad_debug_glInvalidateNamedFramebufferSubData() {
        return glad_debug_glInvalidateNamedFramebufferSubData$constants.SEGMENT.get(glad_debug_glInvalidateNamedFramebufferSubData$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC glad_debug_glInvalidateNamedFramebufferSubData
     * }
     */
    public static void glad_debug_glInvalidateNamedFramebufferSubData(MemorySegment varValue) {
        glad_debug_glInvalidateNamedFramebufferSubData$constants.SEGMENT.set(glad_debug_glInvalidateNamedFramebufferSubData$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glInvalidateSubFramebuffer$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glInvalidateSubFramebuffer").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATESUBFRAMEBUFFERPROC glad_glInvalidateSubFramebuffer
     * }
     */
    public static AddressLayout glad_glInvalidateSubFramebuffer$layout() {
        return glad_glInvalidateSubFramebuffer$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATESUBFRAMEBUFFERPROC glad_glInvalidateSubFramebuffer
     * }
     */
    public static MemorySegment glad_glInvalidateSubFramebuffer$segment() {
        return glad_glInvalidateSubFramebuffer$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATESUBFRAMEBUFFERPROC glad_glInvalidateSubFramebuffer
     * }
     */
    public static MemorySegment glad_glInvalidateSubFramebuffer() {
        return glad_glInvalidateSubFramebuffer$constants.SEGMENT.get(glad_glInvalidateSubFramebuffer$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATESUBFRAMEBUFFERPROC glad_glInvalidateSubFramebuffer
     * }
     */
    public static void glad_glInvalidateSubFramebuffer(MemorySegment varValue) {
        glad_glInvalidateSubFramebuffer$constants.SEGMENT.set(glad_glInvalidateSubFramebuffer$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glInvalidateSubFramebuffer$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glInvalidateSubFramebuffer").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATESUBFRAMEBUFFERPROC glad_debug_glInvalidateSubFramebuffer
     * }
     */
    public static AddressLayout glad_debug_glInvalidateSubFramebuffer$layout() {
        return glad_debug_glInvalidateSubFramebuffer$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATESUBFRAMEBUFFERPROC glad_debug_glInvalidateSubFramebuffer
     * }
     */
    public static MemorySegment glad_debug_glInvalidateSubFramebuffer$segment() {
        return glad_debug_glInvalidateSubFramebuffer$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATESUBFRAMEBUFFERPROC glad_debug_glInvalidateSubFramebuffer
     * }
     */
    public static MemorySegment glad_debug_glInvalidateSubFramebuffer() {
        return glad_debug_glInvalidateSubFramebuffer$constants.SEGMENT.get(glad_debug_glInvalidateSubFramebuffer$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATESUBFRAMEBUFFERPROC glad_debug_glInvalidateSubFramebuffer
     * }
     */
    public static void glad_debug_glInvalidateSubFramebuffer(MemorySegment varValue) {
        glad_debug_glInvalidateSubFramebuffer$constants.SEGMENT.set(glad_debug_glInvalidateSubFramebuffer$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glInvalidateTexImage$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glInvalidateTexImage").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATETEXIMAGEPROC glad_glInvalidateTexImage
     * }
     */
    public static AddressLayout glad_glInvalidateTexImage$layout() {
        return glad_glInvalidateTexImage$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATETEXIMAGEPROC glad_glInvalidateTexImage
     * }
     */
    public static MemorySegment glad_glInvalidateTexImage$segment() {
        return glad_glInvalidateTexImage$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATETEXIMAGEPROC glad_glInvalidateTexImage
     * }
     */
    public static MemorySegment glad_glInvalidateTexImage() {
        return glad_glInvalidateTexImage$constants.SEGMENT.get(glad_glInvalidateTexImage$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATETEXIMAGEPROC glad_glInvalidateTexImage
     * }
     */
    public static void glad_glInvalidateTexImage(MemorySegment varValue) {
        glad_glInvalidateTexImage$constants.SEGMENT.set(glad_glInvalidateTexImage$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glInvalidateTexImage$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glInvalidateTexImage").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATETEXIMAGEPROC glad_debug_glInvalidateTexImage
     * }
     */
    public static AddressLayout glad_debug_glInvalidateTexImage$layout() {
        return glad_debug_glInvalidateTexImage$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATETEXIMAGEPROC glad_debug_glInvalidateTexImage
     * }
     */
    public static MemorySegment glad_debug_glInvalidateTexImage$segment() {
        return glad_debug_glInvalidateTexImage$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATETEXIMAGEPROC glad_debug_glInvalidateTexImage
     * }
     */
    public static MemorySegment glad_debug_glInvalidateTexImage() {
        return glad_debug_glInvalidateTexImage$constants.SEGMENT.get(glad_debug_glInvalidateTexImage$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATETEXIMAGEPROC glad_debug_glInvalidateTexImage
     * }
     */
    public static void glad_debug_glInvalidateTexImage(MemorySegment varValue) {
        glad_debug_glInvalidateTexImage$constants.SEGMENT.set(glad_debug_glInvalidateTexImage$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glInvalidateTexSubImage$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glInvalidateTexSubImage").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATETEXSUBIMAGEPROC glad_glInvalidateTexSubImage
     * }
     */
    public static AddressLayout glad_glInvalidateTexSubImage$layout() {
        return glad_glInvalidateTexSubImage$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATETEXSUBIMAGEPROC glad_glInvalidateTexSubImage
     * }
     */
    public static MemorySegment glad_glInvalidateTexSubImage$segment() {
        return glad_glInvalidateTexSubImage$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATETEXSUBIMAGEPROC glad_glInvalidateTexSubImage
     * }
     */
    public static MemorySegment glad_glInvalidateTexSubImage() {
        return glad_glInvalidateTexSubImage$constants.SEGMENT.get(glad_glInvalidateTexSubImage$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATETEXSUBIMAGEPROC glad_glInvalidateTexSubImage
     * }
     */
    public static void glad_glInvalidateTexSubImage(MemorySegment varValue) {
        glad_glInvalidateTexSubImage$constants.SEGMENT.set(glad_glInvalidateTexSubImage$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glInvalidateTexSubImage$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glInvalidateTexSubImage").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATETEXSUBIMAGEPROC glad_debug_glInvalidateTexSubImage
     * }
     */
    public static AddressLayout glad_debug_glInvalidateTexSubImage$layout() {
        return glad_debug_glInvalidateTexSubImage$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATETEXSUBIMAGEPROC glad_debug_glInvalidateTexSubImage
     * }
     */
    public static MemorySegment glad_debug_glInvalidateTexSubImage$segment() {
        return glad_debug_glInvalidateTexSubImage$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATETEXSUBIMAGEPROC glad_debug_glInvalidateTexSubImage
     * }
     */
    public static MemorySegment glad_debug_glInvalidateTexSubImage() {
        return glad_debug_glInvalidateTexSubImage$constants.SEGMENT.get(glad_debug_glInvalidateTexSubImage$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLINVALIDATETEXSUBIMAGEPROC glad_debug_glInvalidateTexSubImage
     * }
     */
    public static void glad_debug_glInvalidateTexSubImage(MemorySegment varValue) {
        glad_debug_glInvalidateTexSubImage$constants.SEGMENT.set(glad_debug_glInvalidateTexSubImage$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glIsBuffer$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glIsBuffer").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLISBUFFERPROC glad_glIsBuffer
     * }
     */
    public static AddressLayout glad_glIsBuffer$layout() {
        return glad_glIsBuffer$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLISBUFFERPROC glad_glIsBuffer
     * }
     */
    public static MemorySegment glad_glIsBuffer$segment() {
        return glad_glIsBuffer$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLISBUFFERPROC glad_glIsBuffer
     * }
     */
    public static MemorySegment glad_glIsBuffer() {
        return glad_glIsBuffer$constants.SEGMENT.get(glad_glIsBuffer$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLISBUFFERPROC glad_glIsBuffer
     * }
     */
    public static void glad_glIsBuffer(MemorySegment varValue) {
        glad_glIsBuffer$constants.SEGMENT.set(glad_glIsBuffer$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glIsBuffer$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glIsBuffer").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLISBUFFERPROC glad_debug_glIsBuffer
     * }
     */
    public static AddressLayout glad_debug_glIsBuffer$layout() {
        return glad_debug_glIsBuffer$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLISBUFFERPROC glad_debug_glIsBuffer
     * }
     */
    public static MemorySegment glad_debug_glIsBuffer$segment() {
        return glad_debug_glIsBuffer$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLISBUFFERPROC glad_debug_glIsBuffer
     * }
     */
    public static MemorySegment glad_debug_glIsBuffer() {
        return glad_debug_glIsBuffer$constants.SEGMENT.get(glad_debug_glIsBuffer$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLISBUFFERPROC glad_debug_glIsBuffer
     * }
     */
    public static void glad_debug_glIsBuffer(MemorySegment varValue) {
        glad_debug_glIsBuffer$constants.SEGMENT.set(glad_debug_glIsBuffer$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glIsBufferARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glIsBufferARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLISBUFFERARBPROC glad_glIsBufferARB
     * }
     */
    public static AddressLayout glad_glIsBufferARB$layout() {
        return glad_glIsBufferARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLISBUFFERARBPROC glad_glIsBufferARB
     * }
     */
    public static MemorySegment glad_glIsBufferARB$segment() {
        return glad_glIsBufferARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLISBUFFERARBPROC glad_glIsBufferARB
     * }
     */
    public static MemorySegment glad_glIsBufferARB() {
        return glad_glIsBufferARB$constants.SEGMENT.get(glad_glIsBufferARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLISBUFFERARBPROC glad_glIsBufferARB
     * }
     */
    public static void glad_glIsBufferARB(MemorySegment varValue) {
        glad_glIsBufferARB$constants.SEGMENT.set(glad_glIsBufferARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glIsBufferARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glIsBufferARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLISBUFFERARBPROC glad_debug_glIsBufferARB
     * }
     */
    public static AddressLayout glad_debug_glIsBufferARB$layout() {
        return glad_debug_glIsBufferARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLISBUFFERARBPROC glad_debug_glIsBufferARB
     * }
     */
    public static MemorySegment glad_debug_glIsBufferARB$segment() {
        return glad_debug_glIsBufferARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLISBUFFERARBPROC glad_debug_glIsBufferARB
     * }
     */
    public static MemorySegment glad_debug_glIsBufferARB() {
        return glad_debug_glIsBufferARB$constants.SEGMENT.get(glad_debug_glIsBufferARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLISBUFFERARBPROC glad_debug_glIsBufferARB
     * }
     */
    public static void glad_debug_glIsBufferARB(MemorySegment varValue) {
        glad_debug_glIsBufferARB$constants.SEGMENT.set(glad_debug_glIsBufferARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glIsEnabled$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glIsEnabled").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLISENABLEDPROC glad_glIsEnabled
     * }
     */
    public static AddressLayout glad_glIsEnabled$layout() {
        return glad_glIsEnabled$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLISENABLEDPROC glad_glIsEnabled
     * }
     */
    public static MemorySegment glad_glIsEnabled$segment() {
        return glad_glIsEnabled$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLISENABLEDPROC glad_glIsEnabled
     * }
     */
    public static MemorySegment glad_glIsEnabled() {
        return glad_glIsEnabled$constants.SEGMENT.get(glad_glIsEnabled$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLISENABLEDPROC glad_glIsEnabled
     * }
     */
    public static void glad_glIsEnabled(MemorySegment varValue) {
        glad_glIsEnabled$constants.SEGMENT.set(glad_glIsEnabled$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glIsEnabled$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glIsEnabled").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLISENABLEDPROC glad_debug_glIsEnabled
     * }
     */
    public static AddressLayout glad_debug_glIsEnabled$layout() {
        return glad_debug_glIsEnabled$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLISENABLEDPROC glad_debug_glIsEnabled
     * }
     */
    public static MemorySegment glad_debug_glIsEnabled$segment() {
        return glad_debug_glIsEnabled$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLISENABLEDPROC glad_debug_glIsEnabled
     * }
     */
    public static MemorySegment glad_debug_glIsEnabled() {
        return glad_debug_glIsEnabled$constants.SEGMENT.get(glad_debug_glIsEnabled$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLISENABLEDPROC glad_debug_glIsEnabled
     * }
     */
    public static void glad_debug_glIsEnabled(MemorySegment varValue) {
        glad_debug_glIsEnabled$constants.SEGMENT.set(glad_debug_glIsEnabled$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glIsEnabledIndexedEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glIsEnabledIndexedEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLISENABLEDINDEXEDEXTPROC glad_glIsEnabledIndexedEXT
     * }
     */
    public static AddressLayout glad_glIsEnabledIndexedEXT$layout() {
        return glad_glIsEnabledIndexedEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLISENABLEDINDEXEDEXTPROC glad_glIsEnabledIndexedEXT
     * }
     */
    public static MemorySegment glad_glIsEnabledIndexedEXT$segment() {
        return glad_glIsEnabledIndexedEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLISENABLEDINDEXEDEXTPROC glad_glIsEnabledIndexedEXT
     * }
     */
    public static MemorySegment glad_glIsEnabledIndexedEXT() {
        return glad_glIsEnabledIndexedEXT$constants.SEGMENT.get(glad_glIsEnabledIndexedEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLISENABLEDINDEXEDEXTPROC glad_glIsEnabledIndexedEXT
     * }
     */
    public static void glad_glIsEnabledIndexedEXT(MemorySegment varValue) {
        glad_glIsEnabledIndexedEXT$constants.SEGMENT.set(glad_glIsEnabledIndexedEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glIsEnabledIndexedEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glIsEnabledIndexedEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLISENABLEDINDEXEDEXTPROC glad_debug_glIsEnabledIndexedEXT
     * }
     */
    public static AddressLayout glad_debug_glIsEnabledIndexedEXT$layout() {
        return glad_debug_glIsEnabledIndexedEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLISENABLEDINDEXEDEXTPROC glad_debug_glIsEnabledIndexedEXT
     * }
     */
    public static MemorySegment glad_debug_glIsEnabledIndexedEXT$segment() {
        return glad_debug_glIsEnabledIndexedEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLISENABLEDINDEXEDEXTPROC glad_debug_glIsEnabledIndexedEXT
     * }
     */
    public static MemorySegment glad_debug_glIsEnabledIndexedEXT() {
        return glad_debug_glIsEnabledIndexedEXT$constants.SEGMENT.get(glad_debug_glIsEnabledIndexedEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLISENABLEDINDEXEDEXTPROC glad_debug_glIsEnabledIndexedEXT
     * }
     */
    public static void glad_debug_glIsEnabledIndexedEXT(MemorySegment varValue) {
        glad_debug_glIsEnabledIndexedEXT$constants.SEGMENT.set(glad_debug_glIsEnabledIndexedEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glIsEnabledi$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glIsEnabledi").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLISENABLEDIPROC glad_glIsEnabledi
     * }
     */
    public static AddressLayout glad_glIsEnabledi$layout() {
        return glad_glIsEnabledi$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLISENABLEDIPROC glad_glIsEnabledi
     * }
     */
    public static MemorySegment glad_glIsEnabledi$segment() {
        return glad_glIsEnabledi$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLISENABLEDIPROC glad_glIsEnabledi
     * }
     */
    public static MemorySegment glad_glIsEnabledi() {
        return glad_glIsEnabledi$constants.SEGMENT.get(glad_glIsEnabledi$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLISENABLEDIPROC glad_glIsEnabledi
     * }
     */
    public static void glad_glIsEnabledi(MemorySegment varValue) {
        glad_glIsEnabledi$constants.SEGMENT.set(glad_glIsEnabledi$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glIsEnabledi$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glIsEnabledi").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLISENABLEDIPROC glad_debug_glIsEnabledi
     * }
     */
    public static AddressLayout glad_debug_glIsEnabledi$layout() {
        return glad_debug_glIsEnabledi$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLISENABLEDIPROC glad_debug_glIsEnabledi
     * }
     */
    public static MemorySegment glad_debug_glIsEnabledi$segment() {
        return glad_debug_glIsEnabledi$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLISENABLEDIPROC glad_debug_glIsEnabledi
     * }
     */
    public static MemorySegment glad_debug_glIsEnabledi() {
        return glad_debug_glIsEnabledi$constants.SEGMENT.get(glad_debug_glIsEnabledi$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLISENABLEDIPROC glad_debug_glIsEnabledi
     * }
     */
    public static void glad_debug_glIsEnabledi(MemorySegment varValue) {
        glad_debug_glIsEnabledi$constants.SEGMENT.set(glad_debug_glIsEnabledi$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glIsFramebuffer$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glIsFramebuffer").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLISFRAMEBUFFERPROC glad_glIsFramebuffer
     * }
     */
    public static AddressLayout glad_glIsFramebuffer$layout() {
        return glad_glIsFramebuffer$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLISFRAMEBUFFERPROC glad_glIsFramebuffer
     * }
     */
    public static MemorySegment glad_glIsFramebuffer$segment() {
        return glad_glIsFramebuffer$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLISFRAMEBUFFERPROC glad_glIsFramebuffer
     * }
     */
    public static MemorySegment glad_glIsFramebuffer() {
        return glad_glIsFramebuffer$constants.SEGMENT.get(glad_glIsFramebuffer$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLISFRAMEBUFFERPROC glad_glIsFramebuffer
     * }
     */
    public static void glad_glIsFramebuffer(MemorySegment varValue) {
        glad_glIsFramebuffer$constants.SEGMENT.set(glad_glIsFramebuffer$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glIsFramebuffer$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glIsFramebuffer").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLISFRAMEBUFFERPROC glad_debug_glIsFramebuffer
     * }
     */
    public static AddressLayout glad_debug_glIsFramebuffer$layout() {
        return glad_debug_glIsFramebuffer$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLISFRAMEBUFFERPROC glad_debug_glIsFramebuffer
     * }
     */
    public static MemorySegment glad_debug_glIsFramebuffer$segment() {
        return glad_debug_glIsFramebuffer$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLISFRAMEBUFFERPROC glad_debug_glIsFramebuffer
     * }
     */
    public static MemorySegment glad_debug_glIsFramebuffer() {
        return glad_debug_glIsFramebuffer$constants.SEGMENT.get(glad_debug_glIsFramebuffer$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLISFRAMEBUFFERPROC glad_debug_glIsFramebuffer
     * }
     */
    public static void glad_debug_glIsFramebuffer(MemorySegment varValue) {
        glad_debug_glIsFramebuffer$constants.SEGMENT.set(glad_debug_glIsFramebuffer$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glIsFramebufferEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glIsFramebufferEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLISFRAMEBUFFEREXTPROC glad_glIsFramebufferEXT
     * }
     */
    public static AddressLayout glad_glIsFramebufferEXT$layout() {
        return glad_glIsFramebufferEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLISFRAMEBUFFEREXTPROC glad_glIsFramebufferEXT
     * }
     */
    public static MemorySegment glad_glIsFramebufferEXT$segment() {
        return glad_glIsFramebufferEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLISFRAMEBUFFEREXTPROC glad_glIsFramebufferEXT
     * }
     */
    public static MemorySegment glad_glIsFramebufferEXT() {
        return glad_glIsFramebufferEXT$constants.SEGMENT.get(glad_glIsFramebufferEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLISFRAMEBUFFEREXTPROC glad_glIsFramebufferEXT
     * }
     */
    public static void glad_glIsFramebufferEXT(MemorySegment varValue) {
        glad_glIsFramebufferEXT$constants.SEGMENT.set(glad_glIsFramebufferEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glIsFramebufferEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glIsFramebufferEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLISFRAMEBUFFEREXTPROC glad_debug_glIsFramebufferEXT
     * }
     */
    public static AddressLayout glad_debug_glIsFramebufferEXT$layout() {
        return glad_debug_glIsFramebufferEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLISFRAMEBUFFEREXTPROC glad_debug_glIsFramebufferEXT
     * }
     */
    public static MemorySegment glad_debug_glIsFramebufferEXT$segment() {
        return glad_debug_glIsFramebufferEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLISFRAMEBUFFEREXTPROC glad_debug_glIsFramebufferEXT
     * }
     */
    public static MemorySegment glad_debug_glIsFramebufferEXT() {
        return glad_debug_glIsFramebufferEXT$constants.SEGMENT.get(glad_debug_glIsFramebufferEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLISFRAMEBUFFEREXTPROC glad_debug_glIsFramebufferEXT
     * }
     */
    public static void glad_debug_glIsFramebufferEXT(MemorySegment varValue) {
        glad_debug_glIsFramebufferEXT$constants.SEGMENT.set(glad_debug_glIsFramebufferEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glIsList$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glIsList").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLISLISTPROC glad_glIsList
     * }
     */
    public static AddressLayout glad_glIsList$layout() {
        return glad_glIsList$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLISLISTPROC glad_glIsList
     * }
     */
    public static MemorySegment glad_glIsList$segment() {
        return glad_glIsList$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLISLISTPROC glad_glIsList
     * }
     */
    public static MemorySegment glad_glIsList() {
        return glad_glIsList$constants.SEGMENT.get(glad_glIsList$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLISLISTPROC glad_glIsList
     * }
     */
    public static void glad_glIsList(MemorySegment varValue) {
        glad_glIsList$constants.SEGMENT.set(glad_glIsList$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glIsList$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glIsList").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLISLISTPROC glad_debug_glIsList
     * }
     */
    public static AddressLayout glad_debug_glIsList$layout() {
        return glad_debug_glIsList$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLISLISTPROC glad_debug_glIsList
     * }
     */
    public static MemorySegment glad_debug_glIsList$segment() {
        return glad_debug_glIsList$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLISLISTPROC glad_debug_glIsList
     * }
     */
    public static MemorySegment glad_debug_glIsList() {
        return glad_debug_glIsList$constants.SEGMENT.get(glad_debug_glIsList$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLISLISTPROC glad_debug_glIsList
     * }
     */
    public static void glad_debug_glIsList(MemorySegment varValue) {
        glad_debug_glIsList$constants.SEGMENT.set(glad_debug_glIsList$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glIsProgram$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glIsProgram").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLISPROGRAMPROC glad_glIsProgram
     * }
     */
    public static AddressLayout glad_glIsProgram$layout() {
        return glad_glIsProgram$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLISPROGRAMPROC glad_glIsProgram
     * }
     */
    public static MemorySegment glad_glIsProgram$segment() {
        return glad_glIsProgram$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLISPROGRAMPROC glad_glIsProgram
     * }
     */
    public static MemorySegment glad_glIsProgram() {
        return glad_glIsProgram$constants.SEGMENT.get(glad_glIsProgram$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLISPROGRAMPROC glad_glIsProgram
     * }
     */
    public static void glad_glIsProgram(MemorySegment varValue) {
        glad_glIsProgram$constants.SEGMENT.set(glad_glIsProgram$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glIsProgram$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glIsProgram").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLISPROGRAMPROC glad_debug_glIsProgram
     * }
     */
    public static AddressLayout glad_debug_glIsProgram$layout() {
        return glad_debug_glIsProgram$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLISPROGRAMPROC glad_debug_glIsProgram
     * }
     */
    public static MemorySegment glad_debug_glIsProgram$segment() {
        return glad_debug_glIsProgram$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLISPROGRAMPROC glad_debug_glIsProgram
     * }
     */
    public static MemorySegment glad_debug_glIsProgram() {
        return glad_debug_glIsProgram$constants.SEGMENT.get(glad_debug_glIsProgram$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLISPROGRAMPROC glad_debug_glIsProgram
     * }
     */
    public static void glad_debug_glIsProgram(MemorySegment varValue) {
        glad_debug_glIsProgram$constants.SEGMENT.set(glad_debug_glIsProgram$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glIsProgramARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glIsProgramARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLISPROGRAMARBPROC glad_glIsProgramARB
     * }
     */
    public static AddressLayout glad_glIsProgramARB$layout() {
        return glad_glIsProgramARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLISPROGRAMARBPROC glad_glIsProgramARB
     * }
     */
    public static MemorySegment glad_glIsProgramARB$segment() {
        return glad_glIsProgramARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLISPROGRAMARBPROC glad_glIsProgramARB
     * }
     */
    public static MemorySegment glad_glIsProgramARB() {
        return glad_glIsProgramARB$constants.SEGMENT.get(glad_glIsProgramARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLISPROGRAMARBPROC glad_glIsProgramARB
     * }
     */
    public static void glad_glIsProgramARB(MemorySegment varValue) {
        glad_glIsProgramARB$constants.SEGMENT.set(glad_glIsProgramARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glIsProgramARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glIsProgramARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLISPROGRAMARBPROC glad_debug_glIsProgramARB
     * }
     */
    public static AddressLayout glad_debug_glIsProgramARB$layout() {
        return glad_debug_glIsProgramARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLISPROGRAMARBPROC glad_debug_glIsProgramARB
     * }
     */
    public static MemorySegment glad_debug_glIsProgramARB$segment() {
        return glad_debug_glIsProgramARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLISPROGRAMARBPROC glad_debug_glIsProgramARB
     * }
     */
    public static MemorySegment glad_debug_glIsProgramARB() {
        return glad_debug_glIsProgramARB$constants.SEGMENT.get(glad_debug_glIsProgramARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLISPROGRAMARBPROC glad_debug_glIsProgramARB
     * }
     */
    public static void glad_debug_glIsProgramARB(MemorySegment varValue) {
        glad_debug_glIsProgramARB$constants.SEGMENT.set(glad_debug_glIsProgramARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glIsProgramNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glIsProgramNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLISPROGRAMNVPROC glad_glIsProgramNV
     * }
     */
    public static AddressLayout glad_glIsProgramNV$layout() {
        return glad_glIsProgramNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLISPROGRAMNVPROC glad_glIsProgramNV
     * }
     */
    public static MemorySegment glad_glIsProgramNV$segment() {
        return glad_glIsProgramNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLISPROGRAMNVPROC glad_glIsProgramNV
     * }
     */
    public static MemorySegment glad_glIsProgramNV() {
        return glad_glIsProgramNV$constants.SEGMENT.get(glad_glIsProgramNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLISPROGRAMNVPROC glad_glIsProgramNV
     * }
     */
    public static void glad_glIsProgramNV(MemorySegment varValue) {
        glad_glIsProgramNV$constants.SEGMENT.set(glad_glIsProgramNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glIsProgramNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glIsProgramNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLISPROGRAMNVPROC glad_debug_glIsProgramNV
     * }
     */
    public static AddressLayout glad_debug_glIsProgramNV$layout() {
        return glad_debug_glIsProgramNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLISPROGRAMNVPROC glad_debug_glIsProgramNV
     * }
     */
    public static MemorySegment glad_debug_glIsProgramNV$segment() {
        return glad_debug_glIsProgramNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLISPROGRAMNVPROC glad_debug_glIsProgramNV
     * }
     */
    public static MemorySegment glad_debug_glIsProgramNV() {
        return glad_debug_glIsProgramNV$constants.SEGMENT.get(glad_debug_glIsProgramNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLISPROGRAMNVPROC glad_debug_glIsProgramNV
     * }
     */
    public static void glad_debug_glIsProgramNV(MemorySegment varValue) {
        glad_debug_glIsProgramNV$constants.SEGMENT.set(glad_debug_glIsProgramNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glIsProgramPipeline$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glIsProgramPipeline").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLISPROGRAMPIPELINEPROC glad_glIsProgramPipeline
     * }
     */
    public static AddressLayout glad_glIsProgramPipeline$layout() {
        return glad_glIsProgramPipeline$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLISPROGRAMPIPELINEPROC glad_glIsProgramPipeline
     * }
     */
    public static MemorySegment glad_glIsProgramPipeline$segment() {
        return glad_glIsProgramPipeline$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLISPROGRAMPIPELINEPROC glad_glIsProgramPipeline
     * }
     */
    public static MemorySegment glad_glIsProgramPipeline() {
        return glad_glIsProgramPipeline$constants.SEGMENT.get(glad_glIsProgramPipeline$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLISPROGRAMPIPELINEPROC glad_glIsProgramPipeline
     * }
     */
    public static void glad_glIsProgramPipeline(MemorySegment varValue) {
        glad_glIsProgramPipeline$constants.SEGMENT.set(glad_glIsProgramPipeline$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glIsProgramPipeline$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glIsProgramPipeline").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLISPROGRAMPIPELINEPROC glad_debug_glIsProgramPipeline
     * }
     */
    public static AddressLayout glad_debug_glIsProgramPipeline$layout() {
        return glad_debug_glIsProgramPipeline$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLISPROGRAMPIPELINEPROC glad_debug_glIsProgramPipeline
     * }
     */
    public static MemorySegment glad_debug_glIsProgramPipeline$segment() {
        return glad_debug_glIsProgramPipeline$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLISPROGRAMPIPELINEPROC glad_debug_glIsProgramPipeline
     * }
     */
    public static MemorySegment glad_debug_glIsProgramPipeline() {
        return glad_debug_glIsProgramPipeline$constants.SEGMENT.get(glad_debug_glIsProgramPipeline$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLISPROGRAMPIPELINEPROC glad_debug_glIsProgramPipeline
     * }
     */
    public static void glad_debug_glIsProgramPipeline(MemorySegment varValue) {
        glad_debug_glIsProgramPipeline$constants.SEGMENT.set(glad_debug_glIsProgramPipeline$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glIsQuery$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glIsQuery").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLISQUERYPROC glad_glIsQuery
     * }
     */
    public static AddressLayout glad_glIsQuery$layout() {
        return glad_glIsQuery$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLISQUERYPROC glad_glIsQuery
     * }
     */
    public static MemorySegment glad_glIsQuery$segment() {
        return glad_glIsQuery$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLISQUERYPROC glad_glIsQuery
     * }
     */
    public static MemorySegment glad_glIsQuery() {
        return glad_glIsQuery$constants.SEGMENT.get(glad_glIsQuery$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLISQUERYPROC glad_glIsQuery
     * }
     */
    public static void glad_glIsQuery(MemorySegment varValue) {
        glad_glIsQuery$constants.SEGMENT.set(glad_glIsQuery$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glIsQuery$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glIsQuery").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLISQUERYPROC glad_debug_glIsQuery
     * }
     */
    public static AddressLayout glad_debug_glIsQuery$layout() {
        return glad_debug_glIsQuery$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLISQUERYPROC glad_debug_glIsQuery
     * }
     */
    public static MemorySegment glad_debug_glIsQuery$segment() {
        return glad_debug_glIsQuery$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLISQUERYPROC glad_debug_glIsQuery
     * }
     */
    public static MemorySegment glad_debug_glIsQuery() {
        return glad_debug_glIsQuery$constants.SEGMENT.get(glad_debug_glIsQuery$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLISQUERYPROC glad_debug_glIsQuery
     * }
     */
    public static void glad_debug_glIsQuery(MemorySegment varValue) {
        glad_debug_glIsQuery$constants.SEGMENT.set(glad_debug_glIsQuery$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glIsQueryARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glIsQueryARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLISQUERYARBPROC glad_glIsQueryARB
     * }
     */
    public static AddressLayout glad_glIsQueryARB$layout() {
        return glad_glIsQueryARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLISQUERYARBPROC glad_glIsQueryARB
     * }
     */
    public static MemorySegment glad_glIsQueryARB$segment() {
        return glad_glIsQueryARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLISQUERYARBPROC glad_glIsQueryARB
     * }
     */
    public static MemorySegment glad_glIsQueryARB() {
        return glad_glIsQueryARB$constants.SEGMENT.get(glad_glIsQueryARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLISQUERYARBPROC glad_glIsQueryARB
     * }
     */
    public static void glad_glIsQueryARB(MemorySegment varValue) {
        glad_glIsQueryARB$constants.SEGMENT.set(glad_glIsQueryARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glIsQueryARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glIsQueryARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLISQUERYARBPROC glad_debug_glIsQueryARB
     * }
     */
    public static AddressLayout glad_debug_glIsQueryARB$layout() {
        return glad_debug_glIsQueryARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLISQUERYARBPROC glad_debug_glIsQueryARB
     * }
     */
    public static MemorySegment glad_debug_glIsQueryARB$segment() {
        return glad_debug_glIsQueryARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLISQUERYARBPROC glad_debug_glIsQueryARB
     * }
     */
    public static MemorySegment glad_debug_glIsQueryARB() {
        return glad_debug_glIsQueryARB$constants.SEGMENT.get(glad_debug_glIsQueryARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLISQUERYARBPROC glad_debug_glIsQueryARB
     * }
     */
    public static void glad_debug_glIsQueryARB(MemorySegment varValue) {
        glad_debug_glIsQueryARB$constants.SEGMENT.set(glad_debug_glIsQueryARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glIsRenderbuffer$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glIsRenderbuffer").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLISRENDERBUFFERPROC glad_glIsRenderbuffer
     * }
     */
    public static AddressLayout glad_glIsRenderbuffer$layout() {
        return glad_glIsRenderbuffer$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLISRENDERBUFFERPROC glad_glIsRenderbuffer
     * }
     */
    public static MemorySegment glad_glIsRenderbuffer$segment() {
        return glad_glIsRenderbuffer$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLISRENDERBUFFERPROC glad_glIsRenderbuffer
     * }
     */
    public static MemorySegment glad_glIsRenderbuffer() {
        return glad_glIsRenderbuffer$constants.SEGMENT.get(glad_glIsRenderbuffer$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLISRENDERBUFFERPROC glad_glIsRenderbuffer
     * }
     */
    public static void glad_glIsRenderbuffer(MemorySegment varValue) {
        glad_glIsRenderbuffer$constants.SEGMENT.set(glad_glIsRenderbuffer$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glIsRenderbuffer$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glIsRenderbuffer").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLISRENDERBUFFERPROC glad_debug_glIsRenderbuffer
     * }
     */
    public static AddressLayout glad_debug_glIsRenderbuffer$layout() {
        return glad_debug_glIsRenderbuffer$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLISRENDERBUFFERPROC glad_debug_glIsRenderbuffer
     * }
     */
    public static MemorySegment glad_debug_glIsRenderbuffer$segment() {
        return glad_debug_glIsRenderbuffer$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLISRENDERBUFFERPROC glad_debug_glIsRenderbuffer
     * }
     */
    public static MemorySegment glad_debug_glIsRenderbuffer() {
        return glad_debug_glIsRenderbuffer$constants.SEGMENT.get(glad_debug_glIsRenderbuffer$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLISRENDERBUFFERPROC glad_debug_glIsRenderbuffer
     * }
     */
    public static void glad_debug_glIsRenderbuffer(MemorySegment varValue) {
        glad_debug_glIsRenderbuffer$constants.SEGMENT.set(glad_debug_glIsRenderbuffer$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glIsRenderbufferEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glIsRenderbufferEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLISRENDERBUFFEREXTPROC glad_glIsRenderbufferEXT
     * }
     */
    public static AddressLayout glad_glIsRenderbufferEXT$layout() {
        return glad_glIsRenderbufferEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLISRENDERBUFFEREXTPROC glad_glIsRenderbufferEXT
     * }
     */
    public static MemorySegment glad_glIsRenderbufferEXT$segment() {
        return glad_glIsRenderbufferEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLISRENDERBUFFEREXTPROC glad_glIsRenderbufferEXT
     * }
     */
    public static MemorySegment glad_glIsRenderbufferEXT() {
        return glad_glIsRenderbufferEXT$constants.SEGMENT.get(glad_glIsRenderbufferEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLISRENDERBUFFEREXTPROC glad_glIsRenderbufferEXT
     * }
     */
    public static void glad_glIsRenderbufferEXT(MemorySegment varValue) {
        glad_glIsRenderbufferEXT$constants.SEGMENT.set(glad_glIsRenderbufferEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glIsRenderbufferEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glIsRenderbufferEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLISRENDERBUFFEREXTPROC glad_debug_glIsRenderbufferEXT
     * }
     */
    public static AddressLayout glad_debug_glIsRenderbufferEXT$layout() {
        return glad_debug_glIsRenderbufferEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLISRENDERBUFFEREXTPROC glad_debug_glIsRenderbufferEXT
     * }
     */
    public static MemorySegment glad_debug_glIsRenderbufferEXT$segment() {
        return glad_debug_glIsRenderbufferEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLISRENDERBUFFEREXTPROC glad_debug_glIsRenderbufferEXT
     * }
     */
    public static MemorySegment glad_debug_glIsRenderbufferEXT() {
        return glad_debug_glIsRenderbufferEXT$constants.SEGMENT.get(glad_debug_glIsRenderbufferEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLISRENDERBUFFEREXTPROC glad_debug_glIsRenderbufferEXT
     * }
     */
    public static void glad_debug_glIsRenderbufferEXT(MemorySegment varValue) {
        glad_debug_glIsRenderbufferEXT$constants.SEGMENT.set(glad_debug_glIsRenderbufferEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glIsSampler$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glIsSampler").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLISSAMPLERPROC glad_glIsSampler
     * }
     */
    public static AddressLayout glad_glIsSampler$layout() {
        return glad_glIsSampler$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLISSAMPLERPROC glad_glIsSampler
     * }
     */
    public static MemorySegment glad_glIsSampler$segment() {
        return glad_glIsSampler$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLISSAMPLERPROC glad_glIsSampler
     * }
     */
    public static MemorySegment glad_glIsSampler() {
        return glad_glIsSampler$constants.SEGMENT.get(glad_glIsSampler$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLISSAMPLERPROC glad_glIsSampler
     * }
     */
    public static void glad_glIsSampler(MemorySegment varValue) {
        glad_glIsSampler$constants.SEGMENT.set(glad_glIsSampler$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glIsSampler$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glIsSampler").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLISSAMPLERPROC glad_debug_glIsSampler
     * }
     */
    public static AddressLayout glad_debug_glIsSampler$layout() {
        return glad_debug_glIsSampler$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLISSAMPLERPROC glad_debug_glIsSampler
     * }
     */
    public static MemorySegment glad_debug_glIsSampler$segment() {
        return glad_debug_glIsSampler$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLISSAMPLERPROC glad_debug_glIsSampler
     * }
     */
    public static MemorySegment glad_debug_glIsSampler() {
        return glad_debug_glIsSampler$constants.SEGMENT.get(glad_debug_glIsSampler$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLISSAMPLERPROC glad_debug_glIsSampler
     * }
     */
    public static void glad_debug_glIsSampler(MemorySegment varValue) {
        glad_debug_glIsSampler$constants.SEGMENT.set(glad_debug_glIsSampler$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glIsShader$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glIsShader").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLISSHADERPROC glad_glIsShader
     * }
     */
    public static AddressLayout glad_glIsShader$layout() {
        return glad_glIsShader$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLISSHADERPROC glad_glIsShader
     * }
     */
    public static MemorySegment glad_glIsShader$segment() {
        return glad_glIsShader$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLISSHADERPROC glad_glIsShader
     * }
     */
    public static MemorySegment glad_glIsShader() {
        return glad_glIsShader$constants.SEGMENT.get(glad_glIsShader$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLISSHADERPROC glad_glIsShader
     * }
     */
    public static void glad_glIsShader(MemorySegment varValue) {
        glad_glIsShader$constants.SEGMENT.set(glad_glIsShader$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glIsShader$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glIsShader").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLISSHADERPROC glad_debug_glIsShader
     * }
     */
    public static AddressLayout glad_debug_glIsShader$layout() {
        return glad_debug_glIsShader$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLISSHADERPROC glad_debug_glIsShader
     * }
     */
    public static MemorySegment glad_debug_glIsShader$segment() {
        return glad_debug_glIsShader$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLISSHADERPROC glad_debug_glIsShader
     * }
     */
    public static MemorySegment glad_debug_glIsShader() {
        return glad_debug_glIsShader$constants.SEGMENT.get(glad_debug_glIsShader$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLISSHADERPROC glad_debug_glIsShader
     * }
     */
    public static void glad_debug_glIsShader(MemorySegment varValue) {
        glad_debug_glIsShader$constants.SEGMENT.set(glad_debug_glIsShader$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glIsSync$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glIsSync").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLISSYNCPROC glad_glIsSync
     * }
     */
    public static AddressLayout glad_glIsSync$layout() {
        return glad_glIsSync$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLISSYNCPROC glad_glIsSync
     * }
     */
    public static MemorySegment glad_glIsSync$segment() {
        return glad_glIsSync$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLISSYNCPROC glad_glIsSync
     * }
     */
    public static MemorySegment glad_glIsSync() {
        return glad_glIsSync$constants.SEGMENT.get(glad_glIsSync$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLISSYNCPROC glad_glIsSync
     * }
     */
    public static void glad_glIsSync(MemorySegment varValue) {
        glad_glIsSync$constants.SEGMENT.set(glad_glIsSync$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glIsSync$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glIsSync").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLISSYNCPROC glad_debug_glIsSync
     * }
     */
    public static AddressLayout glad_debug_glIsSync$layout() {
        return glad_debug_glIsSync$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLISSYNCPROC glad_debug_glIsSync
     * }
     */
    public static MemorySegment glad_debug_glIsSync$segment() {
        return glad_debug_glIsSync$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLISSYNCPROC glad_debug_glIsSync
     * }
     */
    public static MemorySegment glad_debug_glIsSync() {
        return glad_debug_glIsSync$constants.SEGMENT.get(glad_debug_glIsSync$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLISSYNCPROC glad_debug_glIsSync
     * }
     */
    public static void glad_debug_glIsSync(MemorySegment varValue) {
        glad_debug_glIsSync$constants.SEGMENT.set(glad_debug_glIsSync$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glIsTexture$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glIsTexture").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLISTEXTUREPROC glad_glIsTexture
     * }
     */
    public static AddressLayout glad_glIsTexture$layout() {
        return glad_glIsTexture$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLISTEXTUREPROC glad_glIsTexture
     * }
     */
    public static MemorySegment glad_glIsTexture$segment() {
        return glad_glIsTexture$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLISTEXTUREPROC glad_glIsTexture
     * }
     */
    public static MemorySegment glad_glIsTexture() {
        return glad_glIsTexture$constants.SEGMENT.get(glad_glIsTexture$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLISTEXTUREPROC glad_glIsTexture
     * }
     */
    public static void glad_glIsTexture(MemorySegment varValue) {
        glad_glIsTexture$constants.SEGMENT.set(glad_glIsTexture$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glIsTexture$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glIsTexture").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLISTEXTUREPROC glad_debug_glIsTexture
     * }
     */
    public static AddressLayout glad_debug_glIsTexture$layout() {
        return glad_debug_glIsTexture$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLISTEXTUREPROC glad_debug_glIsTexture
     * }
     */
    public static MemorySegment glad_debug_glIsTexture$segment() {
        return glad_debug_glIsTexture$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLISTEXTUREPROC glad_debug_glIsTexture
     * }
     */
    public static MemorySegment glad_debug_glIsTexture() {
        return glad_debug_glIsTexture$constants.SEGMENT.get(glad_debug_glIsTexture$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLISTEXTUREPROC glad_debug_glIsTexture
     * }
     */
    public static void glad_debug_glIsTexture(MemorySegment varValue) {
        glad_debug_glIsTexture$constants.SEGMENT.set(glad_debug_glIsTexture$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glIsTextureEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glIsTextureEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLISTEXTUREEXTPROC glad_glIsTextureEXT
     * }
     */
    public static AddressLayout glad_glIsTextureEXT$layout() {
        return glad_glIsTextureEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLISTEXTUREEXTPROC glad_glIsTextureEXT
     * }
     */
    public static MemorySegment glad_glIsTextureEXT$segment() {
        return glad_glIsTextureEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLISTEXTUREEXTPROC glad_glIsTextureEXT
     * }
     */
    public static MemorySegment glad_glIsTextureEXT() {
        return glad_glIsTextureEXT$constants.SEGMENT.get(glad_glIsTextureEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLISTEXTUREEXTPROC glad_glIsTextureEXT
     * }
     */
    public static void glad_glIsTextureEXT(MemorySegment varValue) {
        glad_glIsTextureEXT$constants.SEGMENT.set(glad_glIsTextureEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glIsTextureEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glIsTextureEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLISTEXTUREEXTPROC glad_debug_glIsTextureEXT
     * }
     */
    public static AddressLayout glad_debug_glIsTextureEXT$layout() {
        return glad_debug_glIsTextureEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLISTEXTUREEXTPROC glad_debug_glIsTextureEXT
     * }
     */
    public static MemorySegment glad_debug_glIsTextureEXT$segment() {
        return glad_debug_glIsTextureEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLISTEXTUREEXTPROC glad_debug_glIsTextureEXT
     * }
     */
    public static MemorySegment glad_debug_glIsTextureEXT() {
        return glad_debug_glIsTextureEXT$constants.SEGMENT.get(glad_debug_glIsTextureEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLISTEXTUREEXTPROC glad_debug_glIsTextureEXT
     * }
     */
    public static void glad_debug_glIsTextureEXT(MemorySegment varValue) {
        glad_debug_glIsTextureEXT$constants.SEGMENT.set(glad_debug_glIsTextureEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glIsTransformFeedback$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glIsTransformFeedback").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLISTRANSFORMFEEDBACKPROC glad_glIsTransformFeedback
     * }
     */
    public static AddressLayout glad_glIsTransformFeedback$layout() {
        return glad_glIsTransformFeedback$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLISTRANSFORMFEEDBACKPROC glad_glIsTransformFeedback
     * }
     */
    public static MemorySegment glad_glIsTransformFeedback$segment() {
        return glad_glIsTransformFeedback$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLISTRANSFORMFEEDBACKPROC glad_glIsTransformFeedback
     * }
     */
    public static MemorySegment glad_glIsTransformFeedback() {
        return glad_glIsTransformFeedback$constants.SEGMENT.get(glad_glIsTransformFeedback$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLISTRANSFORMFEEDBACKPROC glad_glIsTransformFeedback
     * }
     */
    public static void glad_glIsTransformFeedback(MemorySegment varValue) {
        glad_glIsTransformFeedback$constants.SEGMENT.set(glad_glIsTransformFeedback$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glIsTransformFeedback$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glIsTransformFeedback").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLISTRANSFORMFEEDBACKPROC glad_debug_glIsTransformFeedback
     * }
     */
    public static AddressLayout glad_debug_glIsTransformFeedback$layout() {
        return glad_debug_glIsTransformFeedback$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLISTRANSFORMFEEDBACKPROC glad_debug_glIsTransformFeedback
     * }
     */
    public static MemorySegment glad_debug_glIsTransformFeedback$segment() {
        return glad_debug_glIsTransformFeedback$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLISTRANSFORMFEEDBACKPROC glad_debug_glIsTransformFeedback
     * }
     */
    public static MemorySegment glad_debug_glIsTransformFeedback() {
        return glad_debug_glIsTransformFeedback$constants.SEGMENT.get(glad_debug_glIsTransformFeedback$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLISTRANSFORMFEEDBACKPROC glad_debug_glIsTransformFeedback
     * }
     */
    public static void glad_debug_glIsTransformFeedback(MemorySegment varValue) {
        glad_debug_glIsTransformFeedback$constants.SEGMENT.set(glad_debug_glIsTransformFeedback$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glIsTransformFeedbackNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glIsTransformFeedbackNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLISTRANSFORMFEEDBACKNVPROC glad_glIsTransformFeedbackNV
     * }
     */
    public static AddressLayout glad_glIsTransformFeedbackNV$layout() {
        return glad_glIsTransformFeedbackNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLISTRANSFORMFEEDBACKNVPROC glad_glIsTransformFeedbackNV
     * }
     */
    public static MemorySegment glad_glIsTransformFeedbackNV$segment() {
        return glad_glIsTransformFeedbackNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLISTRANSFORMFEEDBACKNVPROC glad_glIsTransformFeedbackNV
     * }
     */
    public static MemorySegment glad_glIsTransformFeedbackNV() {
        return glad_glIsTransformFeedbackNV$constants.SEGMENT.get(glad_glIsTransformFeedbackNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLISTRANSFORMFEEDBACKNVPROC glad_glIsTransformFeedbackNV
     * }
     */
    public static void glad_glIsTransformFeedbackNV(MemorySegment varValue) {
        glad_glIsTransformFeedbackNV$constants.SEGMENT.set(glad_glIsTransformFeedbackNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glIsTransformFeedbackNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glIsTransformFeedbackNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLISTRANSFORMFEEDBACKNVPROC glad_debug_glIsTransformFeedbackNV
     * }
     */
    public static AddressLayout glad_debug_glIsTransformFeedbackNV$layout() {
        return glad_debug_glIsTransformFeedbackNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLISTRANSFORMFEEDBACKNVPROC glad_debug_glIsTransformFeedbackNV
     * }
     */
    public static MemorySegment glad_debug_glIsTransformFeedbackNV$segment() {
        return glad_debug_glIsTransformFeedbackNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLISTRANSFORMFEEDBACKNVPROC glad_debug_glIsTransformFeedbackNV
     * }
     */
    public static MemorySegment glad_debug_glIsTransformFeedbackNV() {
        return glad_debug_glIsTransformFeedbackNV$constants.SEGMENT.get(glad_debug_glIsTransformFeedbackNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLISTRANSFORMFEEDBACKNVPROC glad_debug_glIsTransformFeedbackNV
     * }
     */
    public static void glad_debug_glIsTransformFeedbackNV(MemorySegment varValue) {
        glad_debug_glIsTransformFeedbackNV$constants.SEGMENT.set(glad_debug_glIsTransformFeedbackNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glIsVertexArray$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glIsVertexArray").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLISVERTEXARRAYPROC glad_glIsVertexArray
     * }
     */
    public static AddressLayout glad_glIsVertexArray$layout() {
        return glad_glIsVertexArray$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLISVERTEXARRAYPROC glad_glIsVertexArray
     * }
     */
    public static MemorySegment glad_glIsVertexArray$segment() {
        return glad_glIsVertexArray$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLISVERTEXARRAYPROC glad_glIsVertexArray
     * }
     */
    public static MemorySegment glad_glIsVertexArray() {
        return glad_glIsVertexArray$constants.SEGMENT.get(glad_glIsVertexArray$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLISVERTEXARRAYPROC glad_glIsVertexArray
     * }
     */
    public static void glad_glIsVertexArray(MemorySegment varValue) {
        glad_glIsVertexArray$constants.SEGMENT.set(glad_glIsVertexArray$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glIsVertexArray$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glIsVertexArray").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLISVERTEXARRAYPROC glad_debug_glIsVertexArray
     * }
     */
    public static AddressLayout glad_debug_glIsVertexArray$layout() {
        return glad_debug_glIsVertexArray$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLISVERTEXARRAYPROC glad_debug_glIsVertexArray
     * }
     */
    public static MemorySegment glad_debug_glIsVertexArray$segment() {
        return glad_debug_glIsVertexArray$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLISVERTEXARRAYPROC glad_debug_glIsVertexArray
     * }
     */
    public static MemorySegment glad_debug_glIsVertexArray() {
        return glad_debug_glIsVertexArray$constants.SEGMENT.get(glad_debug_glIsVertexArray$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLISVERTEXARRAYPROC glad_debug_glIsVertexArray
     * }
     */
    public static void glad_debug_glIsVertexArray(MemorySegment varValue) {
        glad_debug_glIsVertexArray$constants.SEGMENT.set(glad_debug_glIsVertexArray$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glIsVertexArrayAPPLE$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glIsVertexArrayAPPLE").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLISVERTEXARRAYAPPLEPROC glad_glIsVertexArrayAPPLE
     * }
     */
    public static AddressLayout glad_glIsVertexArrayAPPLE$layout() {
        return glad_glIsVertexArrayAPPLE$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLISVERTEXARRAYAPPLEPROC glad_glIsVertexArrayAPPLE
     * }
     */
    public static MemorySegment glad_glIsVertexArrayAPPLE$segment() {
        return glad_glIsVertexArrayAPPLE$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLISVERTEXARRAYAPPLEPROC glad_glIsVertexArrayAPPLE
     * }
     */
    public static MemorySegment glad_glIsVertexArrayAPPLE() {
        return glad_glIsVertexArrayAPPLE$constants.SEGMENT.get(glad_glIsVertexArrayAPPLE$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLISVERTEXARRAYAPPLEPROC glad_glIsVertexArrayAPPLE
     * }
     */
    public static void glad_glIsVertexArrayAPPLE(MemorySegment varValue) {
        glad_glIsVertexArrayAPPLE$constants.SEGMENT.set(glad_glIsVertexArrayAPPLE$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glIsVertexArrayAPPLE$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glIsVertexArrayAPPLE").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLISVERTEXARRAYAPPLEPROC glad_debug_glIsVertexArrayAPPLE
     * }
     */
    public static AddressLayout glad_debug_glIsVertexArrayAPPLE$layout() {
        return glad_debug_glIsVertexArrayAPPLE$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLISVERTEXARRAYAPPLEPROC glad_debug_glIsVertexArrayAPPLE
     * }
     */
    public static MemorySegment glad_debug_glIsVertexArrayAPPLE$segment() {
        return glad_debug_glIsVertexArrayAPPLE$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLISVERTEXARRAYAPPLEPROC glad_debug_glIsVertexArrayAPPLE
     * }
     */
    public static MemorySegment glad_debug_glIsVertexArrayAPPLE() {
        return glad_debug_glIsVertexArrayAPPLE$constants.SEGMENT.get(glad_debug_glIsVertexArrayAPPLE$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLISVERTEXARRAYAPPLEPROC glad_debug_glIsVertexArrayAPPLE
     * }
     */
    public static void glad_debug_glIsVertexArrayAPPLE(MemorySegment varValue) {
        glad_debug_glIsVertexArrayAPPLE$constants.SEGMENT.set(glad_debug_glIsVertexArrayAPPLE$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glLightModelf$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glLightModelf").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTMODELFPROC glad_glLightModelf
     * }
     */
    public static AddressLayout glad_glLightModelf$layout() {
        return glad_glLightModelf$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTMODELFPROC glad_glLightModelf
     * }
     */
    public static MemorySegment glad_glLightModelf$segment() {
        return glad_glLightModelf$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTMODELFPROC glad_glLightModelf
     * }
     */
    public static MemorySegment glad_glLightModelf() {
        return glad_glLightModelf$constants.SEGMENT.get(glad_glLightModelf$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTMODELFPROC glad_glLightModelf
     * }
     */
    public static void glad_glLightModelf(MemorySegment varValue) {
        glad_glLightModelf$constants.SEGMENT.set(glad_glLightModelf$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glLightModelf$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glLightModelf").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTMODELFPROC glad_debug_glLightModelf
     * }
     */
    public static AddressLayout glad_debug_glLightModelf$layout() {
        return glad_debug_glLightModelf$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTMODELFPROC glad_debug_glLightModelf
     * }
     */
    public static MemorySegment glad_debug_glLightModelf$segment() {
        return glad_debug_glLightModelf$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTMODELFPROC glad_debug_glLightModelf
     * }
     */
    public static MemorySegment glad_debug_glLightModelf() {
        return glad_debug_glLightModelf$constants.SEGMENT.get(glad_debug_glLightModelf$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTMODELFPROC glad_debug_glLightModelf
     * }
     */
    public static void glad_debug_glLightModelf(MemorySegment varValue) {
        glad_debug_glLightModelf$constants.SEGMENT.set(glad_debug_glLightModelf$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glLightModelfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glLightModelfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTMODELFVPROC glad_glLightModelfv
     * }
     */
    public static AddressLayout glad_glLightModelfv$layout() {
        return glad_glLightModelfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTMODELFVPROC glad_glLightModelfv
     * }
     */
    public static MemorySegment glad_glLightModelfv$segment() {
        return glad_glLightModelfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTMODELFVPROC glad_glLightModelfv
     * }
     */
    public static MemorySegment glad_glLightModelfv() {
        return glad_glLightModelfv$constants.SEGMENT.get(glad_glLightModelfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTMODELFVPROC glad_glLightModelfv
     * }
     */
    public static void glad_glLightModelfv(MemorySegment varValue) {
        glad_glLightModelfv$constants.SEGMENT.set(glad_glLightModelfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glLightModelfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glLightModelfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTMODELFVPROC glad_debug_glLightModelfv
     * }
     */
    public static AddressLayout glad_debug_glLightModelfv$layout() {
        return glad_debug_glLightModelfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTMODELFVPROC glad_debug_glLightModelfv
     * }
     */
    public static MemorySegment glad_debug_glLightModelfv$segment() {
        return glad_debug_glLightModelfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTMODELFVPROC glad_debug_glLightModelfv
     * }
     */
    public static MemorySegment glad_debug_glLightModelfv() {
        return glad_debug_glLightModelfv$constants.SEGMENT.get(glad_debug_glLightModelfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTMODELFVPROC glad_debug_glLightModelfv
     * }
     */
    public static void glad_debug_glLightModelfv(MemorySegment varValue) {
        glad_debug_glLightModelfv$constants.SEGMENT.set(glad_debug_glLightModelfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glLightModeli$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glLightModeli").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTMODELIPROC glad_glLightModeli
     * }
     */
    public static AddressLayout glad_glLightModeli$layout() {
        return glad_glLightModeli$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTMODELIPROC glad_glLightModeli
     * }
     */
    public static MemorySegment glad_glLightModeli$segment() {
        return glad_glLightModeli$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTMODELIPROC glad_glLightModeli
     * }
     */
    public static MemorySegment glad_glLightModeli() {
        return glad_glLightModeli$constants.SEGMENT.get(glad_glLightModeli$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTMODELIPROC glad_glLightModeli
     * }
     */
    public static void glad_glLightModeli(MemorySegment varValue) {
        glad_glLightModeli$constants.SEGMENT.set(glad_glLightModeli$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glLightModeli$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glLightModeli").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTMODELIPROC glad_debug_glLightModeli
     * }
     */
    public static AddressLayout glad_debug_glLightModeli$layout() {
        return glad_debug_glLightModeli$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTMODELIPROC glad_debug_glLightModeli
     * }
     */
    public static MemorySegment glad_debug_glLightModeli$segment() {
        return glad_debug_glLightModeli$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTMODELIPROC glad_debug_glLightModeli
     * }
     */
    public static MemorySegment glad_debug_glLightModeli() {
        return glad_debug_glLightModeli$constants.SEGMENT.get(glad_debug_glLightModeli$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTMODELIPROC glad_debug_glLightModeli
     * }
     */
    public static void glad_debug_glLightModeli(MemorySegment varValue) {
        glad_debug_glLightModeli$constants.SEGMENT.set(glad_debug_glLightModeli$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glLightModeliv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glLightModeliv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTMODELIVPROC glad_glLightModeliv
     * }
     */
    public static AddressLayout glad_glLightModeliv$layout() {
        return glad_glLightModeliv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTMODELIVPROC glad_glLightModeliv
     * }
     */
    public static MemorySegment glad_glLightModeliv$segment() {
        return glad_glLightModeliv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTMODELIVPROC glad_glLightModeliv
     * }
     */
    public static MemorySegment glad_glLightModeliv() {
        return glad_glLightModeliv$constants.SEGMENT.get(glad_glLightModeliv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTMODELIVPROC glad_glLightModeliv
     * }
     */
    public static void glad_glLightModeliv(MemorySegment varValue) {
        glad_glLightModeliv$constants.SEGMENT.set(glad_glLightModeliv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glLightModeliv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glLightModeliv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTMODELIVPROC glad_debug_glLightModeliv
     * }
     */
    public static AddressLayout glad_debug_glLightModeliv$layout() {
        return glad_debug_glLightModeliv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTMODELIVPROC glad_debug_glLightModeliv
     * }
     */
    public static MemorySegment glad_debug_glLightModeliv$segment() {
        return glad_debug_glLightModeliv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTMODELIVPROC glad_debug_glLightModeliv
     * }
     */
    public static MemorySegment glad_debug_glLightModeliv() {
        return glad_debug_glLightModeliv$constants.SEGMENT.get(glad_debug_glLightModeliv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTMODELIVPROC glad_debug_glLightModeliv
     * }
     */
    public static void glad_debug_glLightModeliv(MemorySegment varValue) {
        glad_debug_glLightModeliv$constants.SEGMENT.set(glad_debug_glLightModeliv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glLightf$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glLightf").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTFPROC glad_glLightf
     * }
     */
    public static AddressLayout glad_glLightf$layout() {
        return glad_glLightf$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTFPROC glad_glLightf
     * }
     */
    public static MemorySegment glad_glLightf$segment() {
        return glad_glLightf$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTFPROC glad_glLightf
     * }
     */
    public static MemorySegment glad_glLightf() {
        return glad_glLightf$constants.SEGMENT.get(glad_glLightf$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTFPROC glad_glLightf
     * }
     */
    public static void glad_glLightf(MemorySegment varValue) {
        glad_glLightf$constants.SEGMENT.set(glad_glLightf$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glLightf$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glLightf").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTFPROC glad_debug_glLightf
     * }
     */
    public static AddressLayout glad_debug_glLightf$layout() {
        return glad_debug_glLightf$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTFPROC glad_debug_glLightf
     * }
     */
    public static MemorySegment glad_debug_glLightf$segment() {
        return glad_debug_glLightf$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTFPROC glad_debug_glLightf
     * }
     */
    public static MemorySegment glad_debug_glLightf() {
        return glad_debug_glLightf$constants.SEGMENT.get(glad_debug_glLightf$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTFPROC glad_debug_glLightf
     * }
     */
    public static void glad_debug_glLightf(MemorySegment varValue) {
        glad_debug_glLightf$constants.SEGMENT.set(glad_debug_glLightf$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glLightfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glLightfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTFVPROC glad_glLightfv
     * }
     */
    public static AddressLayout glad_glLightfv$layout() {
        return glad_glLightfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTFVPROC glad_glLightfv
     * }
     */
    public static MemorySegment glad_glLightfv$segment() {
        return glad_glLightfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTFVPROC glad_glLightfv
     * }
     */
    public static MemorySegment glad_glLightfv() {
        return glad_glLightfv$constants.SEGMENT.get(glad_glLightfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTFVPROC glad_glLightfv
     * }
     */
    public static void glad_glLightfv(MemorySegment varValue) {
        glad_glLightfv$constants.SEGMENT.set(glad_glLightfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glLightfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glLightfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTFVPROC glad_debug_glLightfv
     * }
     */
    public static AddressLayout glad_debug_glLightfv$layout() {
        return glad_debug_glLightfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTFVPROC glad_debug_glLightfv
     * }
     */
    public static MemorySegment glad_debug_glLightfv$segment() {
        return glad_debug_glLightfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTFVPROC glad_debug_glLightfv
     * }
     */
    public static MemorySegment glad_debug_glLightfv() {
        return glad_debug_glLightfv$constants.SEGMENT.get(glad_debug_glLightfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTFVPROC glad_debug_glLightfv
     * }
     */
    public static void glad_debug_glLightfv(MemorySegment varValue) {
        glad_debug_glLightfv$constants.SEGMENT.set(glad_debug_glLightfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glLighti$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glLighti").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTIPROC glad_glLighti
     * }
     */
    public static AddressLayout glad_glLighti$layout() {
        return glad_glLighti$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTIPROC glad_glLighti
     * }
     */
    public static MemorySegment glad_glLighti$segment() {
        return glad_glLighti$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTIPROC glad_glLighti
     * }
     */
    public static MemorySegment glad_glLighti() {
        return glad_glLighti$constants.SEGMENT.get(glad_glLighti$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTIPROC glad_glLighti
     * }
     */
    public static void glad_glLighti(MemorySegment varValue) {
        glad_glLighti$constants.SEGMENT.set(glad_glLighti$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glLighti$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glLighti").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTIPROC glad_debug_glLighti
     * }
     */
    public static AddressLayout glad_debug_glLighti$layout() {
        return glad_debug_glLighti$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTIPROC glad_debug_glLighti
     * }
     */
    public static MemorySegment glad_debug_glLighti$segment() {
        return glad_debug_glLighti$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTIPROC glad_debug_glLighti
     * }
     */
    public static MemorySegment glad_debug_glLighti() {
        return glad_debug_glLighti$constants.SEGMENT.get(glad_debug_glLighti$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTIPROC glad_debug_glLighti
     * }
     */
    public static void glad_debug_glLighti(MemorySegment varValue) {
        glad_debug_glLighti$constants.SEGMENT.set(glad_debug_glLighti$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glLightiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glLightiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTIVPROC glad_glLightiv
     * }
     */
    public static AddressLayout glad_glLightiv$layout() {
        return glad_glLightiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTIVPROC glad_glLightiv
     * }
     */
    public static MemorySegment glad_glLightiv$segment() {
        return glad_glLightiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTIVPROC glad_glLightiv
     * }
     */
    public static MemorySegment glad_glLightiv() {
        return glad_glLightiv$constants.SEGMENT.get(glad_glLightiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTIVPROC glad_glLightiv
     * }
     */
    public static void glad_glLightiv(MemorySegment varValue) {
        glad_glLightiv$constants.SEGMENT.set(glad_glLightiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glLightiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glLightiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTIVPROC glad_debug_glLightiv
     * }
     */
    public static AddressLayout glad_debug_glLightiv$layout() {
        return glad_debug_glLightiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTIVPROC glad_debug_glLightiv
     * }
     */
    public static MemorySegment glad_debug_glLightiv$segment() {
        return glad_debug_glLightiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTIVPROC glad_debug_glLightiv
     * }
     */
    public static MemorySegment glad_debug_glLightiv() {
        return glad_debug_glLightiv$constants.SEGMENT.get(glad_debug_glLightiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLLIGHTIVPROC glad_debug_glLightiv
     * }
     */
    public static void glad_debug_glLightiv(MemorySegment varValue) {
        glad_debug_glLightiv$constants.SEGMENT.set(glad_debug_glLightiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glLineStipple$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glLineStipple").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLLINESTIPPLEPROC glad_glLineStipple
     * }
     */
    public static AddressLayout glad_glLineStipple$layout() {
        return glad_glLineStipple$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLLINESTIPPLEPROC glad_glLineStipple
     * }
     */
    public static MemorySegment glad_glLineStipple$segment() {
        return glad_glLineStipple$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLLINESTIPPLEPROC glad_glLineStipple
     * }
     */
    public static MemorySegment glad_glLineStipple() {
        return glad_glLineStipple$constants.SEGMENT.get(glad_glLineStipple$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLLINESTIPPLEPROC glad_glLineStipple
     * }
     */
    public static void glad_glLineStipple(MemorySegment varValue) {
        glad_glLineStipple$constants.SEGMENT.set(glad_glLineStipple$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glLineStipple$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glLineStipple").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLLINESTIPPLEPROC glad_debug_glLineStipple
     * }
     */
    public static AddressLayout glad_debug_glLineStipple$layout() {
        return glad_debug_glLineStipple$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLLINESTIPPLEPROC glad_debug_glLineStipple
     * }
     */
    public static MemorySegment glad_debug_glLineStipple$segment() {
        return glad_debug_glLineStipple$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLLINESTIPPLEPROC glad_debug_glLineStipple
     * }
     */
    public static MemorySegment glad_debug_glLineStipple() {
        return glad_debug_glLineStipple$constants.SEGMENT.get(glad_debug_glLineStipple$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLLINESTIPPLEPROC glad_debug_glLineStipple
     * }
     */
    public static void glad_debug_glLineStipple(MemorySegment varValue) {
        glad_debug_glLineStipple$constants.SEGMENT.set(glad_debug_glLineStipple$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glLineWidth$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glLineWidth").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLLINEWIDTHPROC glad_glLineWidth
     * }
     */
    public static AddressLayout glad_glLineWidth$layout() {
        return glad_glLineWidth$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLLINEWIDTHPROC glad_glLineWidth
     * }
     */
    public static MemorySegment glad_glLineWidth$segment() {
        return glad_glLineWidth$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLLINEWIDTHPROC glad_glLineWidth
     * }
     */
    public static MemorySegment glad_glLineWidth() {
        return glad_glLineWidth$constants.SEGMENT.get(glad_glLineWidth$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLLINEWIDTHPROC glad_glLineWidth
     * }
     */
    public static void glad_glLineWidth(MemorySegment varValue) {
        glad_glLineWidth$constants.SEGMENT.set(glad_glLineWidth$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glLineWidth$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glLineWidth").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLLINEWIDTHPROC glad_debug_glLineWidth
     * }
     */
    public static AddressLayout glad_debug_glLineWidth$layout() {
        return glad_debug_glLineWidth$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLLINEWIDTHPROC glad_debug_glLineWidth
     * }
     */
    public static MemorySegment glad_debug_glLineWidth$segment() {
        return glad_debug_glLineWidth$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLLINEWIDTHPROC glad_debug_glLineWidth
     * }
     */
    public static MemorySegment glad_debug_glLineWidth() {
        return glad_debug_glLineWidth$constants.SEGMENT.get(glad_debug_glLineWidth$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLLINEWIDTHPROC glad_debug_glLineWidth
     * }
     */
    public static void glad_debug_glLineWidth(MemorySegment varValue) {
        glad_debug_glLineWidth$constants.SEGMENT.set(glad_debug_glLineWidth$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glLinkProgram$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glLinkProgram").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLLINKPROGRAMPROC glad_glLinkProgram
     * }
     */
    public static AddressLayout glad_glLinkProgram$layout() {
        return glad_glLinkProgram$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLLINKPROGRAMPROC glad_glLinkProgram
     * }
     */
    public static MemorySegment glad_glLinkProgram$segment() {
        return glad_glLinkProgram$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLLINKPROGRAMPROC glad_glLinkProgram
     * }
     */
    public static MemorySegment glad_glLinkProgram() {
        return glad_glLinkProgram$constants.SEGMENT.get(glad_glLinkProgram$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLLINKPROGRAMPROC glad_glLinkProgram
     * }
     */
    public static void glad_glLinkProgram(MemorySegment varValue) {
        glad_glLinkProgram$constants.SEGMENT.set(glad_glLinkProgram$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glLinkProgram$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glLinkProgram").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLLINKPROGRAMPROC glad_debug_glLinkProgram
     * }
     */
    public static AddressLayout glad_debug_glLinkProgram$layout() {
        return glad_debug_glLinkProgram$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLLINKPROGRAMPROC glad_debug_glLinkProgram
     * }
     */
    public static MemorySegment glad_debug_glLinkProgram$segment() {
        return glad_debug_glLinkProgram$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLLINKPROGRAMPROC glad_debug_glLinkProgram
     * }
     */
    public static MemorySegment glad_debug_glLinkProgram() {
        return glad_debug_glLinkProgram$constants.SEGMENT.get(glad_debug_glLinkProgram$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLLINKPROGRAMPROC glad_debug_glLinkProgram
     * }
     */
    public static void glad_debug_glLinkProgram(MemorySegment varValue) {
        glad_debug_glLinkProgram$constants.SEGMENT.set(glad_debug_glLinkProgram$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glLinkProgramARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glLinkProgramARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLLINKPROGRAMARBPROC glad_glLinkProgramARB
     * }
     */
    public static AddressLayout glad_glLinkProgramARB$layout() {
        return glad_glLinkProgramARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLLINKPROGRAMARBPROC glad_glLinkProgramARB
     * }
     */
    public static MemorySegment glad_glLinkProgramARB$segment() {
        return glad_glLinkProgramARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLLINKPROGRAMARBPROC glad_glLinkProgramARB
     * }
     */
    public static MemorySegment glad_glLinkProgramARB() {
        return glad_glLinkProgramARB$constants.SEGMENT.get(glad_glLinkProgramARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLLINKPROGRAMARBPROC glad_glLinkProgramARB
     * }
     */
    public static void glad_glLinkProgramARB(MemorySegment varValue) {
        glad_glLinkProgramARB$constants.SEGMENT.set(glad_glLinkProgramARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glLinkProgramARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glLinkProgramARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLLINKPROGRAMARBPROC glad_debug_glLinkProgramARB
     * }
     */
    public static AddressLayout glad_debug_glLinkProgramARB$layout() {
        return glad_debug_glLinkProgramARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLLINKPROGRAMARBPROC glad_debug_glLinkProgramARB
     * }
     */
    public static MemorySegment glad_debug_glLinkProgramARB$segment() {
        return glad_debug_glLinkProgramARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLLINKPROGRAMARBPROC glad_debug_glLinkProgramARB
     * }
     */
    public static MemorySegment glad_debug_glLinkProgramARB() {
        return glad_debug_glLinkProgramARB$constants.SEGMENT.get(glad_debug_glLinkProgramARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLLINKPROGRAMARBPROC glad_debug_glLinkProgramARB
     * }
     */
    public static void glad_debug_glLinkProgramARB(MemorySegment varValue) {
        glad_debug_glLinkProgramARB$constants.SEGMENT.set(glad_debug_glLinkProgramARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glListBase$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glListBase").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLLISTBASEPROC glad_glListBase
     * }
     */
    public static AddressLayout glad_glListBase$layout() {
        return glad_glListBase$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLLISTBASEPROC glad_glListBase
     * }
     */
    public static MemorySegment glad_glListBase$segment() {
        return glad_glListBase$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLLISTBASEPROC glad_glListBase
     * }
     */
    public static MemorySegment glad_glListBase() {
        return glad_glListBase$constants.SEGMENT.get(glad_glListBase$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLLISTBASEPROC glad_glListBase
     * }
     */
    public static void glad_glListBase(MemorySegment varValue) {
        glad_glListBase$constants.SEGMENT.set(glad_glListBase$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glListBase$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glListBase").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLLISTBASEPROC glad_debug_glListBase
     * }
     */
    public static AddressLayout glad_debug_glListBase$layout() {
        return glad_debug_glListBase$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLLISTBASEPROC glad_debug_glListBase
     * }
     */
    public static MemorySegment glad_debug_glListBase$segment() {
        return glad_debug_glListBase$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLLISTBASEPROC glad_debug_glListBase
     * }
     */
    public static MemorySegment glad_debug_glListBase() {
        return glad_debug_glListBase$constants.SEGMENT.get(glad_debug_glListBase$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLLISTBASEPROC glad_debug_glListBase
     * }
     */
    public static void glad_debug_glListBase(MemorySegment varValue) {
        glad_debug_glListBase$constants.SEGMENT.set(glad_debug_glListBase$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glLoadIdentity$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glLoadIdentity").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADIDENTITYPROC glad_glLoadIdentity
     * }
     */
    public static AddressLayout glad_glLoadIdentity$layout() {
        return glad_glLoadIdentity$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADIDENTITYPROC glad_glLoadIdentity
     * }
     */
    public static MemorySegment glad_glLoadIdentity$segment() {
        return glad_glLoadIdentity$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADIDENTITYPROC glad_glLoadIdentity
     * }
     */
    public static MemorySegment glad_glLoadIdentity() {
        return glad_glLoadIdentity$constants.SEGMENT.get(glad_glLoadIdentity$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADIDENTITYPROC glad_glLoadIdentity
     * }
     */
    public static void glad_glLoadIdentity(MemorySegment varValue) {
        glad_glLoadIdentity$constants.SEGMENT.set(glad_glLoadIdentity$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glLoadIdentity$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glLoadIdentity").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADIDENTITYPROC glad_debug_glLoadIdentity
     * }
     */
    public static AddressLayout glad_debug_glLoadIdentity$layout() {
        return glad_debug_glLoadIdentity$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADIDENTITYPROC glad_debug_glLoadIdentity
     * }
     */
    public static MemorySegment glad_debug_glLoadIdentity$segment() {
        return glad_debug_glLoadIdentity$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADIDENTITYPROC glad_debug_glLoadIdentity
     * }
     */
    public static MemorySegment glad_debug_glLoadIdentity() {
        return glad_debug_glLoadIdentity$constants.SEGMENT.get(glad_debug_glLoadIdentity$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADIDENTITYPROC glad_debug_glLoadIdentity
     * }
     */
    public static void glad_debug_glLoadIdentity(MemorySegment varValue) {
        glad_debug_glLoadIdentity$constants.SEGMENT.set(glad_debug_glLoadIdentity$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glLoadMatrixd$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glLoadMatrixd").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADMATRIXDPROC glad_glLoadMatrixd
     * }
     */
    public static AddressLayout glad_glLoadMatrixd$layout() {
        return glad_glLoadMatrixd$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADMATRIXDPROC glad_glLoadMatrixd
     * }
     */
    public static MemorySegment glad_glLoadMatrixd$segment() {
        return glad_glLoadMatrixd$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADMATRIXDPROC glad_glLoadMatrixd
     * }
     */
    public static MemorySegment glad_glLoadMatrixd() {
        return glad_glLoadMatrixd$constants.SEGMENT.get(glad_glLoadMatrixd$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADMATRIXDPROC glad_glLoadMatrixd
     * }
     */
    public static void glad_glLoadMatrixd(MemorySegment varValue) {
        glad_glLoadMatrixd$constants.SEGMENT.set(glad_glLoadMatrixd$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glLoadMatrixd$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glLoadMatrixd").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADMATRIXDPROC glad_debug_glLoadMatrixd
     * }
     */
    public static AddressLayout glad_debug_glLoadMatrixd$layout() {
        return glad_debug_glLoadMatrixd$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADMATRIXDPROC glad_debug_glLoadMatrixd
     * }
     */
    public static MemorySegment glad_debug_glLoadMatrixd$segment() {
        return glad_debug_glLoadMatrixd$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADMATRIXDPROC glad_debug_glLoadMatrixd
     * }
     */
    public static MemorySegment glad_debug_glLoadMatrixd() {
        return glad_debug_glLoadMatrixd$constants.SEGMENT.get(glad_debug_glLoadMatrixd$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADMATRIXDPROC glad_debug_glLoadMatrixd
     * }
     */
    public static void glad_debug_glLoadMatrixd(MemorySegment varValue) {
        glad_debug_glLoadMatrixd$constants.SEGMENT.set(glad_debug_glLoadMatrixd$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glLoadMatrixf$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glLoadMatrixf").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADMATRIXFPROC glad_glLoadMatrixf
     * }
     */
    public static AddressLayout glad_glLoadMatrixf$layout() {
        return glad_glLoadMatrixf$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADMATRIXFPROC glad_glLoadMatrixf
     * }
     */
    public static MemorySegment glad_glLoadMatrixf$segment() {
        return glad_glLoadMatrixf$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADMATRIXFPROC glad_glLoadMatrixf
     * }
     */
    public static MemorySegment glad_glLoadMatrixf() {
        return glad_glLoadMatrixf$constants.SEGMENT.get(glad_glLoadMatrixf$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADMATRIXFPROC glad_glLoadMatrixf
     * }
     */
    public static void glad_glLoadMatrixf(MemorySegment varValue) {
        glad_glLoadMatrixf$constants.SEGMENT.set(glad_glLoadMatrixf$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glLoadMatrixf$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glLoadMatrixf").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADMATRIXFPROC glad_debug_glLoadMatrixf
     * }
     */
    public static AddressLayout glad_debug_glLoadMatrixf$layout() {
        return glad_debug_glLoadMatrixf$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADMATRIXFPROC glad_debug_glLoadMatrixf
     * }
     */
    public static MemorySegment glad_debug_glLoadMatrixf$segment() {
        return glad_debug_glLoadMatrixf$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADMATRIXFPROC glad_debug_glLoadMatrixf
     * }
     */
    public static MemorySegment glad_debug_glLoadMatrixf() {
        return glad_debug_glLoadMatrixf$constants.SEGMENT.get(glad_debug_glLoadMatrixf$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADMATRIXFPROC glad_debug_glLoadMatrixf
     * }
     */
    public static void glad_debug_glLoadMatrixf(MemorySegment varValue) {
        glad_debug_glLoadMatrixf$constants.SEGMENT.set(glad_debug_glLoadMatrixf$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glLoadName$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glLoadName").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADNAMEPROC glad_glLoadName
     * }
     */
    public static AddressLayout glad_glLoadName$layout() {
        return glad_glLoadName$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADNAMEPROC glad_glLoadName
     * }
     */
    public static MemorySegment glad_glLoadName$segment() {
        return glad_glLoadName$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADNAMEPROC glad_glLoadName
     * }
     */
    public static MemorySegment glad_glLoadName() {
        return glad_glLoadName$constants.SEGMENT.get(glad_glLoadName$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADNAMEPROC glad_glLoadName
     * }
     */
    public static void glad_glLoadName(MemorySegment varValue) {
        glad_glLoadName$constants.SEGMENT.set(glad_glLoadName$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glLoadName$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glLoadName").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADNAMEPROC glad_debug_glLoadName
     * }
     */
    public static AddressLayout glad_debug_glLoadName$layout() {
        return glad_debug_glLoadName$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADNAMEPROC glad_debug_glLoadName
     * }
     */
    public static MemorySegment glad_debug_glLoadName$segment() {
        return glad_debug_glLoadName$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADNAMEPROC glad_debug_glLoadName
     * }
     */
    public static MemorySegment glad_debug_glLoadName() {
        return glad_debug_glLoadName$constants.SEGMENT.get(glad_debug_glLoadName$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADNAMEPROC glad_debug_glLoadName
     * }
     */
    public static void glad_debug_glLoadName(MemorySegment varValue) {
        glad_debug_glLoadName$constants.SEGMENT.set(glad_debug_glLoadName$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glLoadProgramNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glLoadProgramNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADPROGRAMNVPROC glad_glLoadProgramNV
     * }
     */
    public static AddressLayout glad_glLoadProgramNV$layout() {
        return glad_glLoadProgramNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADPROGRAMNVPROC glad_glLoadProgramNV
     * }
     */
    public static MemorySegment glad_glLoadProgramNV$segment() {
        return glad_glLoadProgramNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADPROGRAMNVPROC glad_glLoadProgramNV
     * }
     */
    public static MemorySegment glad_glLoadProgramNV() {
        return glad_glLoadProgramNV$constants.SEGMENT.get(glad_glLoadProgramNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADPROGRAMNVPROC glad_glLoadProgramNV
     * }
     */
    public static void glad_glLoadProgramNV(MemorySegment varValue) {
        glad_glLoadProgramNV$constants.SEGMENT.set(glad_glLoadProgramNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glLoadProgramNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glLoadProgramNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADPROGRAMNVPROC glad_debug_glLoadProgramNV
     * }
     */
    public static AddressLayout glad_debug_glLoadProgramNV$layout() {
        return glad_debug_glLoadProgramNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADPROGRAMNVPROC glad_debug_glLoadProgramNV
     * }
     */
    public static MemorySegment glad_debug_glLoadProgramNV$segment() {
        return glad_debug_glLoadProgramNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADPROGRAMNVPROC glad_debug_glLoadProgramNV
     * }
     */
    public static MemorySegment glad_debug_glLoadProgramNV() {
        return glad_debug_glLoadProgramNV$constants.SEGMENT.get(glad_debug_glLoadProgramNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADPROGRAMNVPROC glad_debug_glLoadProgramNV
     * }
     */
    public static void glad_debug_glLoadProgramNV(MemorySegment varValue) {
        glad_debug_glLoadProgramNV$constants.SEGMENT.set(glad_debug_glLoadProgramNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glLoadTransposeMatrixd$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glLoadTransposeMatrixd").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADTRANSPOSEMATRIXDPROC glad_glLoadTransposeMatrixd
     * }
     */
    public static AddressLayout glad_glLoadTransposeMatrixd$layout() {
        return glad_glLoadTransposeMatrixd$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADTRANSPOSEMATRIXDPROC glad_glLoadTransposeMatrixd
     * }
     */
    public static MemorySegment glad_glLoadTransposeMatrixd$segment() {
        return glad_glLoadTransposeMatrixd$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADTRANSPOSEMATRIXDPROC glad_glLoadTransposeMatrixd
     * }
     */
    public static MemorySegment glad_glLoadTransposeMatrixd() {
        return glad_glLoadTransposeMatrixd$constants.SEGMENT.get(glad_glLoadTransposeMatrixd$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADTRANSPOSEMATRIXDPROC glad_glLoadTransposeMatrixd
     * }
     */
    public static void glad_glLoadTransposeMatrixd(MemorySegment varValue) {
        glad_glLoadTransposeMatrixd$constants.SEGMENT.set(glad_glLoadTransposeMatrixd$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glLoadTransposeMatrixd$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glLoadTransposeMatrixd").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADTRANSPOSEMATRIXDPROC glad_debug_glLoadTransposeMatrixd
     * }
     */
    public static AddressLayout glad_debug_glLoadTransposeMatrixd$layout() {
        return glad_debug_glLoadTransposeMatrixd$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADTRANSPOSEMATRIXDPROC glad_debug_glLoadTransposeMatrixd
     * }
     */
    public static MemorySegment glad_debug_glLoadTransposeMatrixd$segment() {
        return glad_debug_glLoadTransposeMatrixd$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADTRANSPOSEMATRIXDPROC glad_debug_glLoadTransposeMatrixd
     * }
     */
    public static MemorySegment glad_debug_glLoadTransposeMatrixd() {
        return glad_debug_glLoadTransposeMatrixd$constants.SEGMENT.get(glad_debug_glLoadTransposeMatrixd$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADTRANSPOSEMATRIXDPROC glad_debug_glLoadTransposeMatrixd
     * }
     */
    public static void glad_debug_glLoadTransposeMatrixd(MemorySegment varValue) {
        glad_debug_glLoadTransposeMatrixd$constants.SEGMENT.set(glad_debug_glLoadTransposeMatrixd$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glLoadTransposeMatrixdARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glLoadTransposeMatrixdARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADTRANSPOSEMATRIXDARBPROC glad_glLoadTransposeMatrixdARB
     * }
     */
    public static AddressLayout glad_glLoadTransposeMatrixdARB$layout() {
        return glad_glLoadTransposeMatrixdARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADTRANSPOSEMATRIXDARBPROC glad_glLoadTransposeMatrixdARB
     * }
     */
    public static MemorySegment glad_glLoadTransposeMatrixdARB$segment() {
        return glad_glLoadTransposeMatrixdARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADTRANSPOSEMATRIXDARBPROC glad_glLoadTransposeMatrixdARB
     * }
     */
    public static MemorySegment glad_glLoadTransposeMatrixdARB() {
        return glad_glLoadTransposeMatrixdARB$constants.SEGMENT.get(glad_glLoadTransposeMatrixdARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADTRANSPOSEMATRIXDARBPROC glad_glLoadTransposeMatrixdARB
     * }
     */
    public static void glad_glLoadTransposeMatrixdARB(MemorySegment varValue) {
        glad_glLoadTransposeMatrixdARB$constants.SEGMENT.set(glad_glLoadTransposeMatrixdARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glLoadTransposeMatrixdARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glLoadTransposeMatrixdARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADTRANSPOSEMATRIXDARBPROC glad_debug_glLoadTransposeMatrixdARB
     * }
     */
    public static AddressLayout glad_debug_glLoadTransposeMatrixdARB$layout() {
        return glad_debug_glLoadTransposeMatrixdARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADTRANSPOSEMATRIXDARBPROC glad_debug_glLoadTransposeMatrixdARB
     * }
     */
    public static MemorySegment glad_debug_glLoadTransposeMatrixdARB$segment() {
        return glad_debug_glLoadTransposeMatrixdARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADTRANSPOSEMATRIXDARBPROC glad_debug_glLoadTransposeMatrixdARB
     * }
     */
    public static MemorySegment glad_debug_glLoadTransposeMatrixdARB() {
        return glad_debug_glLoadTransposeMatrixdARB$constants.SEGMENT.get(glad_debug_glLoadTransposeMatrixdARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADTRANSPOSEMATRIXDARBPROC glad_debug_glLoadTransposeMatrixdARB
     * }
     */
    public static void glad_debug_glLoadTransposeMatrixdARB(MemorySegment varValue) {
        glad_debug_glLoadTransposeMatrixdARB$constants.SEGMENT.set(glad_debug_glLoadTransposeMatrixdARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glLoadTransposeMatrixf$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glLoadTransposeMatrixf").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADTRANSPOSEMATRIXFPROC glad_glLoadTransposeMatrixf
     * }
     */
    public static AddressLayout glad_glLoadTransposeMatrixf$layout() {
        return glad_glLoadTransposeMatrixf$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADTRANSPOSEMATRIXFPROC glad_glLoadTransposeMatrixf
     * }
     */
    public static MemorySegment glad_glLoadTransposeMatrixf$segment() {
        return glad_glLoadTransposeMatrixf$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADTRANSPOSEMATRIXFPROC glad_glLoadTransposeMatrixf
     * }
     */
    public static MemorySegment glad_glLoadTransposeMatrixf() {
        return glad_glLoadTransposeMatrixf$constants.SEGMENT.get(glad_glLoadTransposeMatrixf$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADTRANSPOSEMATRIXFPROC glad_glLoadTransposeMatrixf
     * }
     */
    public static void glad_glLoadTransposeMatrixf(MemorySegment varValue) {
        glad_glLoadTransposeMatrixf$constants.SEGMENT.set(glad_glLoadTransposeMatrixf$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glLoadTransposeMatrixf$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glLoadTransposeMatrixf").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADTRANSPOSEMATRIXFPROC glad_debug_glLoadTransposeMatrixf
     * }
     */
    public static AddressLayout glad_debug_glLoadTransposeMatrixf$layout() {
        return glad_debug_glLoadTransposeMatrixf$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADTRANSPOSEMATRIXFPROC glad_debug_glLoadTransposeMatrixf
     * }
     */
    public static MemorySegment glad_debug_glLoadTransposeMatrixf$segment() {
        return glad_debug_glLoadTransposeMatrixf$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADTRANSPOSEMATRIXFPROC glad_debug_glLoadTransposeMatrixf
     * }
     */
    public static MemorySegment glad_debug_glLoadTransposeMatrixf() {
        return glad_debug_glLoadTransposeMatrixf$constants.SEGMENT.get(glad_debug_glLoadTransposeMatrixf$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADTRANSPOSEMATRIXFPROC glad_debug_glLoadTransposeMatrixf
     * }
     */
    public static void glad_debug_glLoadTransposeMatrixf(MemorySegment varValue) {
        glad_debug_glLoadTransposeMatrixf$constants.SEGMENT.set(glad_debug_glLoadTransposeMatrixf$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glLoadTransposeMatrixfARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glLoadTransposeMatrixfARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADTRANSPOSEMATRIXFARBPROC glad_glLoadTransposeMatrixfARB
     * }
     */
    public static AddressLayout glad_glLoadTransposeMatrixfARB$layout() {
        return glad_glLoadTransposeMatrixfARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADTRANSPOSEMATRIXFARBPROC glad_glLoadTransposeMatrixfARB
     * }
     */
    public static MemorySegment glad_glLoadTransposeMatrixfARB$segment() {
        return glad_glLoadTransposeMatrixfARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADTRANSPOSEMATRIXFARBPROC glad_glLoadTransposeMatrixfARB
     * }
     */
    public static MemorySegment glad_glLoadTransposeMatrixfARB() {
        return glad_glLoadTransposeMatrixfARB$constants.SEGMENT.get(glad_glLoadTransposeMatrixfARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADTRANSPOSEMATRIXFARBPROC glad_glLoadTransposeMatrixfARB
     * }
     */
    public static void glad_glLoadTransposeMatrixfARB(MemorySegment varValue) {
        glad_glLoadTransposeMatrixfARB$constants.SEGMENT.set(glad_glLoadTransposeMatrixfARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glLoadTransposeMatrixfARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glLoadTransposeMatrixfARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADTRANSPOSEMATRIXFARBPROC glad_debug_glLoadTransposeMatrixfARB
     * }
     */
    public static AddressLayout glad_debug_glLoadTransposeMatrixfARB$layout() {
        return glad_debug_glLoadTransposeMatrixfARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADTRANSPOSEMATRIXFARBPROC glad_debug_glLoadTransposeMatrixfARB
     * }
     */
    public static MemorySegment glad_debug_glLoadTransposeMatrixfARB$segment() {
        return glad_debug_glLoadTransposeMatrixfARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADTRANSPOSEMATRIXFARBPROC glad_debug_glLoadTransposeMatrixfARB
     * }
     */
    public static MemorySegment glad_debug_glLoadTransposeMatrixfARB() {
        return glad_debug_glLoadTransposeMatrixfARB$constants.SEGMENT.get(glad_debug_glLoadTransposeMatrixfARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLLOADTRANSPOSEMATRIXFARBPROC glad_debug_glLoadTransposeMatrixfARB
     * }
     */
    public static void glad_debug_glLoadTransposeMatrixfARB(MemorySegment varValue) {
        glad_debug_glLoadTransposeMatrixfARB$constants.SEGMENT.set(glad_debug_glLoadTransposeMatrixfARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glLogicOp$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glLogicOp").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLLOGICOPPROC glad_glLogicOp
     * }
     */
    public static AddressLayout glad_glLogicOp$layout() {
        return glad_glLogicOp$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLLOGICOPPROC glad_glLogicOp
     * }
     */
    public static MemorySegment glad_glLogicOp$segment() {
        return glad_glLogicOp$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLLOGICOPPROC glad_glLogicOp
     * }
     */
    public static MemorySegment glad_glLogicOp() {
        return glad_glLogicOp$constants.SEGMENT.get(glad_glLogicOp$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLLOGICOPPROC glad_glLogicOp
     * }
     */
    public static void glad_glLogicOp(MemorySegment varValue) {
        glad_glLogicOp$constants.SEGMENT.set(glad_glLogicOp$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glLogicOp$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glLogicOp").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLLOGICOPPROC glad_debug_glLogicOp
     * }
     */
    public static AddressLayout glad_debug_glLogicOp$layout() {
        return glad_debug_glLogicOp$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLLOGICOPPROC glad_debug_glLogicOp
     * }
     */
    public static MemorySegment glad_debug_glLogicOp$segment() {
        return glad_debug_glLogicOp$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLLOGICOPPROC glad_debug_glLogicOp
     * }
     */
    public static MemorySegment glad_debug_glLogicOp() {
        return glad_debug_glLogicOp$constants.SEGMENT.get(glad_debug_glLogicOp$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLLOGICOPPROC glad_debug_glLogicOp
     * }
     */
    public static void glad_debug_glLogicOp(MemorySegment varValue) {
        glad_debug_glLogicOp$constants.SEGMENT.set(glad_debug_glLogicOp$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMap1d$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMap1d").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMAP1DPROC glad_glMap1d
     * }
     */
    public static AddressLayout glad_glMap1d$layout() {
        return glad_glMap1d$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMAP1DPROC glad_glMap1d
     * }
     */
    public static MemorySegment glad_glMap1d$segment() {
        return glad_glMap1d$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAP1DPROC glad_glMap1d
     * }
     */
    public static MemorySegment glad_glMap1d() {
        return glad_glMap1d$constants.SEGMENT.get(glad_glMap1d$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAP1DPROC glad_glMap1d
     * }
     */
    public static void glad_glMap1d(MemorySegment varValue) {
        glad_glMap1d$constants.SEGMENT.set(glad_glMap1d$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMap1d$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMap1d").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMAP1DPROC glad_debug_glMap1d
     * }
     */
    public static AddressLayout glad_debug_glMap1d$layout() {
        return glad_debug_glMap1d$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMAP1DPROC glad_debug_glMap1d
     * }
     */
    public static MemorySegment glad_debug_glMap1d$segment() {
        return glad_debug_glMap1d$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAP1DPROC glad_debug_glMap1d
     * }
     */
    public static MemorySegment glad_debug_glMap1d() {
        return glad_debug_glMap1d$constants.SEGMENT.get(glad_debug_glMap1d$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAP1DPROC glad_debug_glMap1d
     * }
     */
    public static void glad_debug_glMap1d(MemorySegment varValue) {
        glad_debug_glMap1d$constants.SEGMENT.set(glad_debug_glMap1d$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMap1f$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMap1f").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMAP1FPROC glad_glMap1f
     * }
     */
    public static AddressLayout glad_glMap1f$layout() {
        return glad_glMap1f$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMAP1FPROC glad_glMap1f
     * }
     */
    public static MemorySegment glad_glMap1f$segment() {
        return glad_glMap1f$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAP1FPROC glad_glMap1f
     * }
     */
    public static MemorySegment glad_glMap1f() {
        return glad_glMap1f$constants.SEGMENT.get(glad_glMap1f$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAP1FPROC glad_glMap1f
     * }
     */
    public static void glad_glMap1f(MemorySegment varValue) {
        glad_glMap1f$constants.SEGMENT.set(glad_glMap1f$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMap1f$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMap1f").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMAP1FPROC glad_debug_glMap1f
     * }
     */
    public static AddressLayout glad_debug_glMap1f$layout() {
        return glad_debug_glMap1f$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMAP1FPROC glad_debug_glMap1f
     * }
     */
    public static MemorySegment glad_debug_glMap1f$segment() {
        return glad_debug_glMap1f$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAP1FPROC glad_debug_glMap1f
     * }
     */
    public static MemorySegment glad_debug_glMap1f() {
        return glad_debug_glMap1f$constants.SEGMENT.get(glad_debug_glMap1f$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAP1FPROC glad_debug_glMap1f
     * }
     */
    public static void glad_debug_glMap1f(MemorySegment varValue) {
        glad_debug_glMap1f$constants.SEGMENT.set(glad_debug_glMap1f$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMap2d$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMap2d").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMAP2DPROC glad_glMap2d
     * }
     */
    public static AddressLayout glad_glMap2d$layout() {
        return glad_glMap2d$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMAP2DPROC glad_glMap2d
     * }
     */
    public static MemorySegment glad_glMap2d$segment() {
        return glad_glMap2d$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAP2DPROC glad_glMap2d
     * }
     */
    public static MemorySegment glad_glMap2d() {
        return glad_glMap2d$constants.SEGMENT.get(glad_glMap2d$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAP2DPROC glad_glMap2d
     * }
     */
    public static void glad_glMap2d(MemorySegment varValue) {
        glad_glMap2d$constants.SEGMENT.set(glad_glMap2d$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMap2d$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMap2d").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMAP2DPROC glad_debug_glMap2d
     * }
     */
    public static AddressLayout glad_debug_glMap2d$layout() {
        return glad_debug_glMap2d$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMAP2DPROC glad_debug_glMap2d
     * }
     */
    public static MemorySegment glad_debug_glMap2d$segment() {
        return glad_debug_glMap2d$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAP2DPROC glad_debug_glMap2d
     * }
     */
    public static MemorySegment glad_debug_glMap2d() {
        return glad_debug_glMap2d$constants.SEGMENT.get(glad_debug_glMap2d$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAP2DPROC glad_debug_glMap2d
     * }
     */
    public static void glad_debug_glMap2d(MemorySegment varValue) {
        glad_debug_glMap2d$constants.SEGMENT.set(glad_debug_glMap2d$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMap2f$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMap2f").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMAP2FPROC glad_glMap2f
     * }
     */
    public static AddressLayout glad_glMap2f$layout() {
        return glad_glMap2f$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMAP2FPROC glad_glMap2f
     * }
     */
    public static MemorySegment glad_glMap2f$segment() {
        return glad_glMap2f$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAP2FPROC glad_glMap2f
     * }
     */
    public static MemorySegment glad_glMap2f() {
        return glad_glMap2f$constants.SEGMENT.get(glad_glMap2f$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAP2FPROC glad_glMap2f
     * }
     */
    public static void glad_glMap2f(MemorySegment varValue) {
        glad_glMap2f$constants.SEGMENT.set(glad_glMap2f$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMap2f$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMap2f").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMAP2FPROC glad_debug_glMap2f
     * }
     */
    public static AddressLayout glad_debug_glMap2f$layout() {
        return glad_debug_glMap2f$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMAP2FPROC glad_debug_glMap2f
     * }
     */
    public static MemorySegment glad_debug_glMap2f$segment() {
        return glad_debug_glMap2f$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAP2FPROC glad_debug_glMap2f
     * }
     */
    public static MemorySegment glad_debug_glMap2f() {
        return glad_debug_glMap2f$constants.SEGMENT.get(glad_debug_glMap2f$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAP2FPROC glad_debug_glMap2f
     * }
     */
    public static void glad_debug_glMap2f(MemorySegment varValue) {
        glad_debug_glMap2f$constants.SEGMENT.set(glad_debug_glMap2f$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMapBuffer$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMapBuffer").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPBUFFERPROC glad_glMapBuffer
     * }
     */
    public static AddressLayout glad_glMapBuffer$layout() {
        return glad_glMapBuffer$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPBUFFERPROC glad_glMapBuffer
     * }
     */
    public static MemorySegment glad_glMapBuffer$segment() {
        return glad_glMapBuffer$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPBUFFERPROC glad_glMapBuffer
     * }
     */
    public static MemorySegment glad_glMapBuffer() {
        return glad_glMapBuffer$constants.SEGMENT.get(glad_glMapBuffer$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPBUFFERPROC glad_glMapBuffer
     * }
     */
    public static void glad_glMapBuffer(MemorySegment varValue) {
        glad_glMapBuffer$constants.SEGMENT.set(glad_glMapBuffer$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMapBuffer$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMapBuffer").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPBUFFERPROC glad_debug_glMapBuffer
     * }
     */
    public static AddressLayout glad_debug_glMapBuffer$layout() {
        return glad_debug_glMapBuffer$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPBUFFERPROC glad_debug_glMapBuffer
     * }
     */
    public static MemorySegment glad_debug_glMapBuffer$segment() {
        return glad_debug_glMapBuffer$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPBUFFERPROC glad_debug_glMapBuffer
     * }
     */
    public static MemorySegment glad_debug_glMapBuffer() {
        return glad_debug_glMapBuffer$constants.SEGMENT.get(glad_debug_glMapBuffer$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPBUFFERPROC glad_debug_glMapBuffer
     * }
     */
    public static void glad_debug_glMapBuffer(MemorySegment varValue) {
        glad_debug_glMapBuffer$constants.SEGMENT.set(glad_debug_glMapBuffer$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMapBufferARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMapBufferARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPBUFFERARBPROC glad_glMapBufferARB
     * }
     */
    public static AddressLayout glad_glMapBufferARB$layout() {
        return glad_glMapBufferARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPBUFFERARBPROC glad_glMapBufferARB
     * }
     */
    public static MemorySegment glad_glMapBufferARB$segment() {
        return glad_glMapBufferARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPBUFFERARBPROC glad_glMapBufferARB
     * }
     */
    public static MemorySegment glad_glMapBufferARB() {
        return glad_glMapBufferARB$constants.SEGMENT.get(glad_glMapBufferARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPBUFFERARBPROC glad_glMapBufferARB
     * }
     */
    public static void glad_glMapBufferARB(MemorySegment varValue) {
        glad_glMapBufferARB$constants.SEGMENT.set(glad_glMapBufferARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMapBufferARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMapBufferARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPBUFFERARBPROC glad_debug_glMapBufferARB
     * }
     */
    public static AddressLayout glad_debug_glMapBufferARB$layout() {
        return glad_debug_glMapBufferARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPBUFFERARBPROC glad_debug_glMapBufferARB
     * }
     */
    public static MemorySegment glad_debug_glMapBufferARB$segment() {
        return glad_debug_glMapBufferARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPBUFFERARBPROC glad_debug_glMapBufferARB
     * }
     */
    public static MemorySegment glad_debug_glMapBufferARB() {
        return glad_debug_glMapBufferARB$constants.SEGMENT.get(glad_debug_glMapBufferARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPBUFFERARBPROC glad_debug_glMapBufferARB
     * }
     */
    public static void glad_debug_glMapBufferARB(MemorySegment varValue) {
        glad_debug_glMapBufferARB$constants.SEGMENT.set(glad_debug_glMapBufferARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMapBufferRange$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMapBufferRange").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPBUFFERRANGEPROC glad_glMapBufferRange
     * }
     */
    public static AddressLayout glad_glMapBufferRange$layout() {
        return glad_glMapBufferRange$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPBUFFERRANGEPROC glad_glMapBufferRange
     * }
     */
    public static MemorySegment glad_glMapBufferRange$segment() {
        return glad_glMapBufferRange$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPBUFFERRANGEPROC glad_glMapBufferRange
     * }
     */
    public static MemorySegment glad_glMapBufferRange() {
        return glad_glMapBufferRange$constants.SEGMENT.get(glad_glMapBufferRange$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPBUFFERRANGEPROC glad_glMapBufferRange
     * }
     */
    public static void glad_glMapBufferRange(MemorySegment varValue) {
        glad_glMapBufferRange$constants.SEGMENT.set(glad_glMapBufferRange$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMapBufferRange$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMapBufferRange").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPBUFFERRANGEPROC glad_debug_glMapBufferRange
     * }
     */
    public static AddressLayout glad_debug_glMapBufferRange$layout() {
        return glad_debug_glMapBufferRange$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPBUFFERRANGEPROC glad_debug_glMapBufferRange
     * }
     */
    public static MemorySegment glad_debug_glMapBufferRange$segment() {
        return glad_debug_glMapBufferRange$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPBUFFERRANGEPROC glad_debug_glMapBufferRange
     * }
     */
    public static MemorySegment glad_debug_glMapBufferRange() {
        return glad_debug_glMapBufferRange$constants.SEGMENT.get(glad_debug_glMapBufferRange$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPBUFFERRANGEPROC glad_debug_glMapBufferRange
     * }
     */
    public static void glad_debug_glMapBufferRange(MemorySegment varValue) {
        glad_debug_glMapBufferRange$constants.SEGMENT.set(glad_debug_glMapBufferRange$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMapGrid1d$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMapGrid1d").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPGRID1DPROC glad_glMapGrid1d
     * }
     */
    public static AddressLayout glad_glMapGrid1d$layout() {
        return glad_glMapGrid1d$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPGRID1DPROC glad_glMapGrid1d
     * }
     */
    public static MemorySegment glad_glMapGrid1d$segment() {
        return glad_glMapGrid1d$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPGRID1DPROC glad_glMapGrid1d
     * }
     */
    public static MemorySegment glad_glMapGrid1d() {
        return glad_glMapGrid1d$constants.SEGMENT.get(glad_glMapGrid1d$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPGRID1DPROC glad_glMapGrid1d
     * }
     */
    public static void glad_glMapGrid1d(MemorySegment varValue) {
        glad_glMapGrid1d$constants.SEGMENT.set(glad_glMapGrid1d$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMapGrid1d$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMapGrid1d").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPGRID1DPROC glad_debug_glMapGrid1d
     * }
     */
    public static AddressLayout glad_debug_glMapGrid1d$layout() {
        return glad_debug_glMapGrid1d$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPGRID1DPROC glad_debug_glMapGrid1d
     * }
     */
    public static MemorySegment glad_debug_glMapGrid1d$segment() {
        return glad_debug_glMapGrid1d$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPGRID1DPROC glad_debug_glMapGrid1d
     * }
     */
    public static MemorySegment glad_debug_glMapGrid1d() {
        return glad_debug_glMapGrid1d$constants.SEGMENT.get(glad_debug_glMapGrid1d$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPGRID1DPROC glad_debug_glMapGrid1d
     * }
     */
    public static void glad_debug_glMapGrid1d(MemorySegment varValue) {
        glad_debug_glMapGrid1d$constants.SEGMENT.set(glad_debug_glMapGrid1d$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMapGrid1f$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMapGrid1f").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPGRID1FPROC glad_glMapGrid1f
     * }
     */
    public static AddressLayout glad_glMapGrid1f$layout() {
        return glad_glMapGrid1f$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPGRID1FPROC glad_glMapGrid1f
     * }
     */
    public static MemorySegment glad_glMapGrid1f$segment() {
        return glad_glMapGrid1f$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPGRID1FPROC glad_glMapGrid1f
     * }
     */
    public static MemorySegment glad_glMapGrid1f() {
        return glad_glMapGrid1f$constants.SEGMENT.get(glad_glMapGrid1f$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPGRID1FPROC glad_glMapGrid1f
     * }
     */
    public static void glad_glMapGrid1f(MemorySegment varValue) {
        glad_glMapGrid1f$constants.SEGMENT.set(glad_glMapGrid1f$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMapGrid1f$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMapGrid1f").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPGRID1FPROC glad_debug_glMapGrid1f
     * }
     */
    public static AddressLayout glad_debug_glMapGrid1f$layout() {
        return glad_debug_glMapGrid1f$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPGRID1FPROC glad_debug_glMapGrid1f
     * }
     */
    public static MemorySegment glad_debug_glMapGrid1f$segment() {
        return glad_debug_glMapGrid1f$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPGRID1FPROC glad_debug_glMapGrid1f
     * }
     */
    public static MemorySegment glad_debug_glMapGrid1f() {
        return glad_debug_glMapGrid1f$constants.SEGMENT.get(glad_debug_glMapGrid1f$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPGRID1FPROC glad_debug_glMapGrid1f
     * }
     */
    public static void glad_debug_glMapGrid1f(MemorySegment varValue) {
        glad_debug_glMapGrid1f$constants.SEGMENT.set(glad_debug_glMapGrid1f$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMapGrid2d$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMapGrid2d").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPGRID2DPROC glad_glMapGrid2d
     * }
     */
    public static AddressLayout glad_glMapGrid2d$layout() {
        return glad_glMapGrid2d$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPGRID2DPROC glad_glMapGrid2d
     * }
     */
    public static MemorySegment glad_glMapGrid2d$segment() {
        return glad_glMapGrid2d$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPGRID2DPROC glad_glMapGrid2d
     * }
     */
    public static MemorySegment glad_glMapGrid2d() {
        return glad_glMapGrid2d$constants.SEGMENT.get(glad_glMapGrid2d$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPGRID2DPROC glad_glMapGrid2d
     * }
     */
    public static void glad_glMapGrid2d(MemorySegment varValue) {
        glad_glMapGrid2d$constants.SEGMENT.set(glad_glMapGrid2d$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMapGrid2d$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMapGrid2d").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPGRID2DPROC glad_debug_glMapGrid2d
     * }
     */
    public static AddressLayout glad_debug_glMapGrid2d$layout() {
        return glad_debug_glMapGrid2d$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPGRID2DPROC glad_debug_glMapGrid2d
     * }
     */
    public static MemorySegment glad_debug_glMapGrid2d$segment() {
        return glad_debug_glMapGrid2d$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPGRID2DPROC glad_debug_glMapGrid2d
     * }
     */
    public static MemorySegment glad_debug_glMapGrid2d() {
        return glad_debug_glMapGrid2d$constants.SEGMENT.get(glad_debug_glMapGrid2d$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPGRID2DPROC glad_debug_glMapGrid2d
     * }
     */
    public static void glad_debug_glMapGrid2d(MemorySegment varValue) {
        glad_debug_glMapGrid2d$constants.SEGMENT.set(glad_debug_glMapGrid2d$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMapGrid2f$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMapGrid2f").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPGRID2FPROC glad_glMapGrid2f
     * }
     */
    public static AddressLayout glad_glMapGrid2f$layout() {
        return glad_glMapGrid2f$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPGRID2FPROC glad_glMapGrid2f
     * }
     */
    public static MemorySegment glad_glMapGrid2f$segment() {
        return glad_glMapGrid2f$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPGRID2FPROC glad_glMapGrid2f
     * }
     */
    public static MemorySegment glad_glMapGrid2f() {
        return glad_glMapGrid2f$constants.SEGMENT.get(glad_glMapGrid2f$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPGRID2FPROC glad_glMapGrid2f
     * }
     */
    public static void glad_glMapGrid2f(MemorySegment varValue) {
        glad_glMapGrid2f$constants.SEGMENT.set(glad_glMapGrid2f$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMapGrid2f$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMapGrid2f").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPGRID2FPROC glad_debug_glMapGrid2f
     * }
     */
    public static AddressLayout glad_debug_glMapGrid2f$layout() {
        return glad_debug_glMapGrid2f$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPGRID2FPROC glad_debug_glMapGrid2f
     * }
     */
    public static MemorySegment glad_debug_glMapGrid2f$segment() {
        return glad_debug_glMapGrid2f$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPGRID2FPROC glad_debug_glMapGrid2f
     * }
     */
    public static MemorySegment glad_debug_glMapGrid2f() {
        return glad_debug_glMapGrid2f$constants.SEGMENT.get(glad_debug_glMapGrid2f$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPGRID2FPROC glad_debug_glMapGrid2f
     * }
     */
    public static void glad_debug_glMapGrid2f(MemorySegment varValue) {
        glad_debug_glMapGrid2f$constants.SEGMENT.set(glad_debug_glMapGrid2f$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMapNamedBuffer$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMapNamedBuffer").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPNAMEDBUFFERPROC glad_glMapNamedBuffer
     * }
     */
    public static AddressLayout glad_glMapNamedBuffer$layout() {
        return glad_glMapNamedBuffer$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPNAMEDBUFFERPROC glad_glMapNamedBuffer
     * }
     */
    public static MemorySegment glad_glMapNamedBuffer$segment() {
        return glad_glMapNamedBuffer$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPNAMEDBUFFERPROC glad_glMapNamedBuffer
     * }
     */
    public static MemorySegment glad_glMapNamedBuffer() {
        return glad_glMapNamedBuffer$constants.SEGMENT.get(glad_glMapNamedBuffer$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPNAMEDBUFFERPROC glad_glMapNamedBuffer
     * }
     */
    public static void glad_glMapNamedBuffer(MemorySegment varValue) {
        glad_glMapNamedBuffer$constants.SEGMENT.set(glad_glMapNamedBuffer$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMapNamedBuffer$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMapNamedBuffer").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPNAMEDBUFFERPROC glad_debug_glMapNamedBuffer
     * }
     */
    public static AddressLayout glad_debug_glMapNamedBuffer$layout() {
        return glad_debug_glMapNamedBuffer$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPNAMEDBUFFERPROC glad_debug_glMapNamedBuffer
     * }
     */
    public static MemorySegment glad_debug_glMapNamedBuffer$segment() {
        return glad_debug_glMapNamedBuffer$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPNAMEDBUFFERPROC glad_debug_glMapNamedBuffer
     * }
     */
    public static MemorySegment glad_debug_glMapNamedBuffer() {
        return glad_debug_glMapNamedBuffer$constants.SEGMENT.get(glad_debug_glMapNamedBuffer$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPNAMEDBUFFERPROC glad_debug_glMapNamedBuffer
     * }
     */
    public static void glad_debug_glMapNamedBuffer(MemorySegment varValue) {
        glad_debug_glMapNamedBuffer$constants.SEGMENT.set(glad_debug_glMapNamedBuffer$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMapNamedBufferEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMapNamedBufferEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPNAMEDBUFFEREXTPROC glad_glMapNamedBufferEXT
     * }
     */
    public static AddressLayout glad_glMapNamedBufferEXT$layout() {
        return glad_glMapNamedBufferEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPNAMEDBUFFEREXTPROC glad_glMapNamedBufferEXT
     * }
     */
    public static MemorySegment glad_glMapNamedBufferEXT$segment() {
        return glad_glMapNamedBufferEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPNAMEDBUFFEREXTPROC glad_glMapNamedBufferEXT
     * }
     */
    public static MemorySegment glad_glMapNamedBufferEXT() {
        return glad_glMapNamedBufferEXT$constants.SEGMENT.get(glad_glMapNamedBufferEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPNAMEDBUFFEREXTPROC glad_glMapNamedBufferEXT
     * }
     */
    public static void glad_glMapNamedBufferEXT(MemorySegment varValue) {
        glad_glMapNamedBufferEXT$constants.SEGMENT.set(glad_glMapNamedBufferEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMapNamedBufferEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMapNamedBufferEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPNAMEDBUFFEREXTPROC glad_debug_glMapNamedBufferEXT
     * }
     */
    public static AddressLayout glad_debug_glMapNamedBufferEXT$layout() {
        return glad_debug_glMapNamedBufferEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPNAMEDBUFFEREXTPROC glad_debug_glMapNamedBufferEXT
     * }
     */
    public static MemorySegment glad_debug_glMapNamedBufferEXT$segment() {
        return glad_debug_glMapNamedBufferEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPNAMEDBUFFEREXTPROC glad_debug_glMapNamedBufferEXT
     * }
     */
    public static MemorySegment glad_debug_glMapNamedBufferEXT() {
        return glad_debug_glMapNamedBufferEXT$constants.SEGMENT.get(glad_debug_glMapNamedBufferEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPNAMEDBUFFEREXTPROC glad_debug_glMapNamedBufferEXT
     * }
     */
    public static void glad_debug_glMapNamedBufferEXT(MemorySegment varValue) {
        glad_debug_glMapNamedBufferEXT$constants.SEGMENT.set(glad_debug_glMapNamedBufferEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMapNamedBufferRange$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMapNamedBufferRange").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPNAMEDBUFFERRANGEPROC glad_glMapNamedBufferRange
     * }
     */
    public static AddressLayout glad_glMapNamedBufferRange$layout() {
        return glad_glMapNamedBufferRange$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPNAMEDBUFFERRANGEPROC glad_glMapNamedBufferRange
     * }
     */
    public static MemorySegment glad_glMapNamedBufferRange$segment() {
        return glad_glMapNamedBufferRange$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPNAMEDBUFFERRANGEPROC glad_glMapNamedBufferRange
     * }
     */
    public static MemorySegment glad_glMapNamedBufferRange() {
        return glad_glMapNamedBufferRange$constants.SEGMENT.get(glad_glMapNamedBufferRange$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPNAMEDBUFFERRANGEPROC glad_glMapNamedBufferRange
     * }
     */
    public static void glad_glMapNamedBufferRange(MemorySegment varValue) {
        glad_glMapNamedBufferRange$constants.SEGMENT.set(glad_glMapNamedBufferRange$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMapNamedBufferRange$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMapNamedBufferRange").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPNAMEDBUFFERRANGEPROC glad_debug_glMapNamedBufferRange
     * }
     */
    public static AddressLayout glad_debug_glMapNamedBufferRange$layout() {
        return glad_debug_glMapNamedBufferRange$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPNAMEDBUFFERRANGEPROC glad_debug_glMapNamedBufferRange
     * }
     */
    public static MemorySegment glad_debug_glMapNamedBufferRange$segment() {
        return glad_debug_glMapNamedBufferRange$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPNAMEDBUFFERRANGEPROC glad_debug_glMapNamedBufferRange
     * }
     */
    public static MemorySegment glad_debug_glMapNamedBufferRange() {
        return glad_debug_glMapNamedBufferRange$constants.SEGMENT.get(glad_debug_glMapNamedBufferRange$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPNAMEDBUFFERRANGEPROC glad_debug_glMapNamedBufferRange
     * }
     */
    public static void glad_debug_glMapNamedBufferRange(MemorySegment varValue) {
        glad_debug_glMapNamedBufferRange$constants.SEGMENT.set(glad_debug_glMapNamedBufferRange$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMapNamedBufferRangeEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMapNamedBufferRangeEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPNAMEDBUFFERRANGEEXTPROC glad_glMapNamedBufferRangeEXT
     * }
     */
    public static AddressLayout glad_glMapNamedBufferRangeEXT$layout() {
        return glad_glMapNamedBufferRangeEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPNAMEDBUFFERRANGEEXTPROC glad_glMapNamedBufferRangeEXT
     * }
     */
    public static MemorySegment glad_glMapNamedBufferRangeEXT$segment() {
        return glad_glMapNamedBufferRangeEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPNAMEDBUFFERRANGEEXTPROC glad_glMapNamedBufferRangeEXT
     * }
     */
    public static MemorySegment glad_glMapNamedBufferRangeEXT() {
        return glad_glMapNamedBufferRangeEXT$constants.SEGMENT.get(glad_glMapNamedBufferRangeEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPNAMEDBUFFERRANGEEXTPROC glad_glMapNamedBufferRangeEXT
     * }
     */
    public static void glad_glMapNamedBufferRangeEXT(MemorySegment varValue) {
        glad_glMapNamedBufferRangeEXT$constants.SEGMENT.set(glad_glMapNamedBufferRangeEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMapNamedBufferRangeEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMapNamedBufferRangeEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPNAMEDBUFFERRANGEEXTPROC glad_debug_glMapNamedBufferRangeEXT
     * }
     */
    public static AddressLayout glad_debug_glMapNamedBufferRangeEXT$layout() {
        return glad_debug_glMapNamedBufferRangeEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPNAMEDBUFFERRANGEEXTPROC glad_debug_glMapNamedBufferRangeEXT
     * }
     */
    public static MemorySegment glad_debug_glMapNamedBufferRangeEXT$segment() {
        return glad_debug_glMapNamedBufferRangeEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPNAMEDBUFFERRANGEEXTPROC glad_debug_glMapNamedBufferRangeEXT
     * }
     */
    public static MemorySegment glad_debug_glMapNamedBufferRangeEXT() {
        return glad_debug_glMapNamedBufferRangeEXT$constants.SEGMENT.get(glad_debug_glMapNamedBufferRangeEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMAPNAMEDBUFFERRANGEEXTPROC glad_debug_glMapNamedBufferRangeEXT
     * }
     */
    public static void glad_debug_glMapNamedBufferRangeEXT(MemorySegment varValue) {
        glad_debug_glMapNamedBufferRangeEXT$constants.SEGMENT.set(glad_debug_glMapNamedBufferRangeEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMaterialf$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMaterialf").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMATERIALFPROC glad_glMaterialf
     * }
     */
    public static AddressLayout glad_glMaterialf$layout() {
        return glad_glMaterialf$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMATERIALFPROC glad_glMaterialf
     * }
     */
    public static MemorySegment glad_glMaterialf$segment() {
        return glad_glMaterialf$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATERIALFPROC glad_glMaterialf
     * }
     */
    public static MemorySegment glad_glMaterialf() {
        return glad_glMaterialf$constants.SEGMENT.get(glad_glMaterialf$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATERIALFPROC glad_glMaterialf
     * }
     */
    public static void glad_glMaterialf(MemorySegment varValue) {
        glad_glMaterialf$constants.SEGMENT.set(glad_glMaterialf$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMaterialf$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMaterialf").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMATERIALFPROC glad_debug_glMaterialf
     * }
     */
    public static AddressLayout glad_debug_glMaterialf$layout() {
        return glad_debug_glMaterialf$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMATERIALFPROC glad_debug_glMaterialf
     * }
     */
    public static MemorySegment glad_debug_glMaterialf$segment() {
        return glad_debug_glMaterialf$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATERIALFPROC glad_debug_glMaterialf
     * }
     */
    public static MemorySegment glad_debug_glMaterialf() {
        return glad_debug_glMaterialf$constants.SEGMENT.get(glad_debug_glMaterialf$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATERIALFPROC glad_debug_glMaterialf
     * }
     */
    public static void glad_debug_glMaterialf(MemorySegment varValue) {
        glad_debug_glMaterialf$constants.SEGMENT.set(glad_debug_glMaterialf$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMaterialfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMaterialfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMATERIALFVPROC glad_glMaterialfv
     * }
     */
    public static AddressLayout glad_glMaterialfv$layout() {
        return glad_glMaterialfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMATERIALFVPROC glad_glMaterialfv
     * }
     */
    public static MemorySegment glad_glMaterialfv$segment() {
        return glad_glMaterialfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATERIALFVPROC glad_glMaterialfv
     * }
     */
    public static MemorySegment glad_glMaterialfv() {
        return glad_glMaterialfv$constants.SEGMENT.get(glad_glMaterialfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATERIALFVPROC glad_glMaterialfv
     * }
     */
    public static void glad_glMaterialfv(MemorySegment varValue) {
        glad_glMaterialfv$constants.SEGMENT.set(glad_glMaterialfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMaterialfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMaterialfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMATERIALFVPROC glad_debug_glMaterialfv
     * }
     */
    public static AddressLayout glad_debug_glMaterialfv$layout() {
        return glad_debug_glMaterialfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMATERIALFVPROC glad_debug_glMaterialfv
     * }
     */
    public static MemorySegment glad_debug_glMaterialfv$segment() {
        return glad_debug_glMaterialfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATERIALFVPROC glad_debug_glMaterialfv
     * }
     */
    public static MemorySegment glad_debug_glMaterialfv() {
        return glad_debug_glMaterialfv$constants.SEGMENT.get(glad_debug_glMaterialfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATERIALFVPROC glad_debug_glMaterialfv
     * }
     */
    public static void glad_debug_glMaterialfv(MemorySegment varValue) {
        glad_debug_glMaterialfv$constants.SEGMENT.set(glad_debug_glMaterialfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMateriali$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMateriali").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMATERIALIPROC glad_glMateriali
     * }
     */
    public static AddressLayout glad_glMateriali$layout() {
        return glad_glMateriali$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMATERIALIPROC glad_glMateriali
     * }
     */
    public static MemorySegment glad_glMateriali$segment() {
        return glad_glMateriali$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATERIALIPROC glad_glMateriali
     * }
     */
    public static MemorySegment glad_glMateriali() {
        return glad_glMateriali$constants.SEGMENT.get(glad_glMateriali$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATERIALIPROC glad_glMateriali
     * }
     */
    public static void glad_glMateriali(MemorySegment varValue) {
        glad_glMateriali$constants.SEGMENT.set(glad_glMateriali$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMateriali$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMateriali").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMATERIALIPROC glad_debug_glMateriali
     * }
     */
    public static AddressLayout glad_debug_glMateriali$layout() {
        return glad_debug_glMateriali$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMATERIALIPROC glad_debug_glMateriali
     * }
     */
    public static MemorySegment glad_debug_glMateriali$segment() {
        return glad_debug_glMateriali$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATERIALIPROC glad_debug_glMateriali
     * }
     */
    public static MemorySegment glad_debug_glMateriali() {
        return glad_debug_glMateriali$constants.SEGMENT.get(glad_debug_glMateriali$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATERIALIPROC glad_debug_glMateriali
     * }
     */
    public static void glad_debug_glMateriali(MemorySegment varValue) {
        glad_debug_glMateriali$constants.SEGMENT.set(glad_debug_glMateriali$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMaterialiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMaterialiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMATERIALIVPROC glad_glMaterialiv
     * }
     */
    public static AddressLayout glad_glMaterialiv$layout() {
        return glad_glMaterialiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMATERIALIVPROC glad_glMaterialiv
     * }
     */
    public static MemorySegment glad_glMaterialiv$segment() {
        return glad_glMaterialiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATERIALIVPROC glad_glMaterialiv
     * }
     */
    public static MemorySegment glad_glMaterialiv() {
        return glad_glMaterialiv$constants.SEGMENT.get(glad_glMaterialiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATERIALIVPROC glad_glMaterialiv
     * }
     */
    public static void glad_glMaterialiv(MemorySegment varValue) {
        glad_glMaterialiv$constants.SEGMENT.set(glad_glMaterialiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMaterialiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMaterialiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMATERIALIVPROC glad_debug_glMaterialiv
     * }
     */
    public static AddressLayout glad_debug_glMaterialiv$layout() {
        return glad_debug_glMaterialiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMATERIALIVPROC glad_debug_glMaterialiv
     * }
     */
    public static MemorySegment glad_debug_glMaterialiv$segment() {
        return glad_debug_glMaterialiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATERIALIVPROC glad_debug_glMaterialiv
     * }
     */
    public static MemorySegment glad_debug_glMaterialiv() {
        return glad_debug_glMaterialiv$constants.SEGMENT.get(glad_debug_glMaterialiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATERIALIVPROC glad_debug_glMaterialiv
     * }
     */
    public static void glad_debug_glMaterialiv(MemorySegment varValue) {
        glad_debug_glMaterialiv$constants.SEGMENT.set(glad_debug_glMaterialiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMatrixFrustumEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMatrixFrustumEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXFRUSTUMEXTPROC glad_glMatrixFrustumEXT
     * }
     */
    public static AddressLayout glad_glMatrixFrustumEXT$layout() {
        return glad_glMatrixFrustumEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXFRUSTUMEXTPROC glad_glMatrixFrustumEXT
     * }
     */
    public static MemorySegment glad_glMatrixFrustumEXT$segment() {
        return glad_glMatrixFrustumEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXFRUSTUMEXTPROC glad_glMatrixFrustumEXT
     * }
     */
    public static MemorySegment glad_glMatrixFrustumEXT() {
        return glad_glMatrixFrustumEXT$constants.SEGMENT.get(glad_glMatrixFrustumEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXFRUSTUMEXTPROC glad_glMatrixFrustumEXT
     * }
     */
    public static void glad_glMatrixFrustumEXT(MemorySegment varValue) {
        glad_glMatrixFrustumEXT$constants.SEGMENT.set(glad_glMatrixFrustumEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMatrixFrustumEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMatrixFrustumEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXFRUSTUMEXTPROC glad_debug_glMatrixFrustumEXT
     * }
     */
    public static AddressLayout glad_debug_glMatrixFrustumEXT$layout() {
        return glad_debug_glMatrixFrustumEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXFRUSTUMEXTPROC glad_debug_glMatrixFrustumEXT
     * }
     */
    public static MemorySegment glad_debug_glMatrixFrustumEXT$segment() {
        return glad_debug_glMatrixFrustumEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXFRUSTUMEXTPROC glad_debug_glMatrixFrustumEXT
     * }
     */
    public static MemorySegment glad_debug_glMatrixFrustumEXT() {
        return glad_debug_glMatrixFrustumEXT$constants.SEGMENT.get(glad_debug_glMatrixFrustumEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXFRUSTUMEXTPROC glad_debug_glMatrixFrustumEXT
     * }
     */
    public static void glad_debug_glMatrixFrustumEXT(MemorySegment varValue) {
        glad_debug_glMatrixFrustumEXT$constants.SEGMENT.set(glad_debug_glMatrixFrustumEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMatrixLoadIdentityEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMatrixLoadIdentityEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXLOADIDENTITYEXTPROC glad_glMatrixLoadIdentityEXT
     * }
     */
    public static AddressLayout glad_glMatrixLoadIdentityEXT$layout() {
        return glad_glMatrixLoadIdentityEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXLOADIDENTITYEXTPROC glad_glMatrixLoadIdentityEXT
     * }
     */
    public static MemorySegment glad_glMatrixLoadIdentityEXT$segment() {
        return glad_glMatrixLoadIdentityEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXLOADIDENTITYEXTPROC glad_glMatrixLoadIdentityEXT
     * }
     */
    public static MemorySegment glad_glMatrixLoadIdentityEXT() {
        return glad_glMatrixLoadIdentityEXT$constants.SEGMENT.get(glad_glMatrixLoadIdentityEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXLOADIDENTITYEXTPROC glad_glMatrixLoadIdentityEXT
     * }
     */
    public static void glad_glMatrixLoadIdentityEXT(MemorySegment varValue) {
        glad_glMatrixLoadIdentityEXT$constants.SEGMENT.set(glad_glMatrixLoadIdentityEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMatrixLoadIdentityEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMatrixLoadIdentityEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXLOADIDENTITYEXTPROC glad_debug_glMatrixLoadIdentityEXT
     * }
     */
    public static AddressLayout glad_debug_glMatrixLoadIdentityEXT$layout() {
        return glad_debug_glMatrixLoadIdentityEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXLOADIDENTITYEXTPROC glad_debug_glMatrixLoadIdentityEXT
     * }
     */
    public static MemorySegment glad_debug_glMatrixLoadIdentityEXT$segment() {
        return glad_debug_glMatrixLoadIdentityEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXLOADIDENTITYEXTPROC glad_debug_glMatrixLoadIdentityEXT
     * }
     */
    public static MemorySegment glad_debug_glMatrixLoadIdentityEXT() {
        return glad_debug_glMatrixLoadIdentityEXT$constants.SEGMENT.get(glad_debug_glMatrixLoadIdentityEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXLOADIDENTITYEXTPROC glad_debug_glMatrixLoadIdentityEXT
     * }
     */
    public static void glad_debug_glMatrixLoadIdentityEXT(MemorySegment varValue) {
        glad_debug_glMatrixLoadIdentityEXT$constants.SEGMENT.set(glad_debug_glMatrixLoadIdentityEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMatrixLoadTransposedEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMatrixLoadTransposedEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXLOADTRANSPOSEDEXTPROC glad_glMatrixLoadTransposedEXT
     * }
     */
    public static AddressLayout glad_glMatrixLoadTransposedEXT$layout() {
        return glad_glMatrixLoadTransposedEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXLOADTRANSPOSEDEXTPROC glad_glMatrixLoadTransposedEXT
     * }
     */
    public static MemorySegment glad_glMatrixLoadTransposedEXT$segment() {
        return glad_glMatrixLoadTransposedEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXLOADTRANSPOSEDEXTPROC glad_glMatrixLoadTransposedEXT
     * }
     */
    public static MemorySegment glad_glMatrixLoadTransposedEXT() {
        return glad_glMatrixLoadTransposedEXT$constants.SEGMENT.get(glad_glMatrixLoadTransposedEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXLOADTRANSPOSEDEXTPROC glad_glMatrixLoadTransposedEXT
     * }
     */
    public static void glad_glMatrixLoadTransposedEXT(MemorySegment varValue) {
        glad_glMatrixLoadTransposedEXT$constants.SEGMENT.set(glad_glMatrixLoadTransposedEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMatrixLoadTransposedEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMatrixLoadTransposedEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXLOADTRANSPOSEDEXTPROC glad_debug_glMatrixLoadTransposedEXT
     * }
     */
    public static AddressLayout glad_debug_glMatrixLoadTransposedEXT$layout() {
        return glad_debug_glMatrixLoadTransposedEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXLOADTRANSPOSEDEXTPROC glad_debug_glMatrixLoadTransposedEXT
     * }
     */
    public static MemorySegment glad_debug_glMatrixLoadTransposedEXT$segment() {
        return glad_debug_glMatrixLoadTransposedEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXLOADTRANSPOSEDEXTPROC glad_debug_glMatrixLoadTransposedEXT
     * }
     */
    public static MemorySegment glad_debug_glMatrixLoadTransposedEXT() {
        return glad_debug_glMatrixLoadTransposedEXT$constants.SEGMENT.get(glad_debug_glMatrixLoadTransposedEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXLOADTRANSPOSEDEXTPROC glad_debug_glMatrixLoadTransposedEXT
     * }
     */
    public static void glad_debug_glMatrixLoadTransposedEXT(MemorySegment varValue) {
        glad_debug_glMatrixLoadTransposedEXT$constants.SEGMENT.set(glad_debug_glMatrixLoadTransposedEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMatrixLoadTransposefEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMatrixLoadTransposefEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXLOADTRANSPOSEFEXTPROC glad_glMatrixLoadTransposefEXT
     * }
     */
    public static AddressLayout glad_glMatrixLoadTransposefEXT$layout() {
        return glad_glMatrixLoadTransposefEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXLOADTRANSPOSEFEXTPROC glad_glMatrixLoadTransposefEXT
     * }
     */
    public static MemorySegment glad_glMatrixLoadTransposefEXT$segment() {
        return glad_glMatrixLoadTransposefEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXLOADTRANSPOSEFEXTPROC glad_glMatrixLoadTransposefEXT
     * }
     */
    public static MemorySegment glad_glMatrixLoadTransposefEXT() {
        return glad_glMatrixLoadTransposefEXT$constants.SEGMENT.get(glad_glMatrixLoadTransposefEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXLOADTRANSPOSEFEXTPROC glad_glMatrixLoadTransposefEXT
     * }
     */
    public static void glad_glMatrixLoadTransposefEXT(MemorySegment varValue) {
        glad_glMatrixLoadTransposefEXT$constants.SEGMENT.set(glad_glMatrixLoadTransposefEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMatrixLoadTransposefEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMatrixLoadTransposefEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXLOADTRANSPOSEFEXTPROC glad_debug_glMatrixLoadTransposefEXT
     * }
     */
    public static AddressLayout glad_debug_glMatrixLoadTransposefEXT$layout() {
        return glad_debug_glMatrixLoadTransposefEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXLOADTRANSPOSEFEXTPROC glad_debug_glMatrixLoadTransposefEXT
     * }
     */
    public static MemorySegment glad_debug_glMatrixLoadTransposefEXT$segment() {
        return glad_debug_glMatrixLoadTransposefEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXLOADTRANSPOSEFEXTPROC glad_debug_glMatrixLoadTransposefEXT
     * }
     */
    public static MemorySegment glad_debug_glMatrixLoadTransposefEXT() {
        return glad_debug_glMatrixLoadTransposefEXT$constants.SEGMENT.get(glad_debug_glMatrixLoadTransposefEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXLOADTRANSPOSEFEXTPROC glad_debug_glMatrixLoadTransposefEXT
     * }
     */
    public static void glad_debug_glMatrixLoadTransposefEXT(MemorySegment varValue) {
        glad_debug_glMatrixLoadTransposefEXT$constants.SEGMENT.set(glad_debug_glMatrixLoadTransposefEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMatrixLoaddEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMatrixLoaddEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXLOADDEXTPROC glad_glMatrixLoaddEXT
     * }
     */
    public static AddressLayout glad_glMatrixLoaddEXT$layout() {
        return glad_glMatrixLoaddEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXLOADDEXTPROC glad_glMatrixLoaddEXT
     * }
     */
    public static MemorySegment glad_glMatrixLoaddEXT$segment() {
        return glad_glMatrixLoaddEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXLOADDEXTPROC glad_glMatrixLoaddEXT
     * }
     */
    public static MemorySegment glad_glMatrixLoaddEXT() {
        return glad_glMatrixLoaddEXT$constants.SEGMENT.get(glad_glMatrixLoaddEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXLOADDEXTPROC glad_glMatrixLoaddEXT
     * }
     */
    public static void glad_glMatrixLoaddEXT(MemorySegment varValue) {
        glad_glMatrixLoaddEXT$constants.SEGMENT.set(glad_glMatrixLoaddEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMatrixLoaddEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMatrixLoaddEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXLOADDEXTPROC glad_debug_glMatrixLoaddEXT
     * }
     */
    public static AddressLayout glad_debug_glMatrixLoaddEXT$layout() {
        return glad_debug_glMatrixLoaddEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXLOADDEXTPROC glad_debug_glMatrixLoaddEXT
     * }
     */
    public static MemorySegment glad_debug_glMatrixLoaddEXT$segment() {
        return glad_debug_glMatrixLoaddEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXLOADDEXTPROC glad_debug_glMatrixLoaddEXT
     * }
     */
    public static MemorySegment glad_debug_glMatrixLoaddEXT() {
        return glad_debug_glMatrixLoaddEXT$constants.SEGMENT.get(glad_debug_glMatrixLoaddEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXLOADDEXTPROC glad_debug_glMatrixLoaddEXT
     * }
     */
    public static void glad_debug_glMatrixLoaddEXT(MemorySegment varValue) {
        glad_debug_glMatrixLoaddEXT$constants.SEGMENT.set(glad_debug_glMatrixLoaddEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMatrixLoadfEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMatrixLoadfEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXLOADFEXTPROC glad_glMatrixLoadfEXT
     * }
     */
    public static AddressLayout glad_glMatrixLoadfEXT$layout() {
        return glad_glMatrixLoadfEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXLOADFEXTPROC glad_glMatrixLoadfEXT
     * }
     */
    public static MemorySegment glad_glMatrixLoadfEXT$segment() {
        return glad_glMatrixLoadfEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXLOADFEXTPROC glad_glMatrixLoadfEXT
     * }
     */
    public static MemorySegment glad_glMatrixLoadfEXT() {
        return glad_glMatrixLoadfEXT$constants.SEGMENT.get(glad_glMatrixLoadfEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXLOADFEXTPROC glad_glMatrixLoadfEXT
     * }
     */
    public static void glad_glMatrixLoadfEXT(MemorySegment varValue) {
        glad_glMatrixLoadfEXT$constants.SEGMENT.set(glad_glMatrixLoadfEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMatrixLoadfEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMatrixLoadfEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXLOADFEXTPROC glad_debug_glMatrixLoadfEXT
     * }
     */
    public static AddressLayout glad_debug_glMatrixLoadfEXT$layout() {
        return glad_debug_glMatrixLoadfEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXLOADFEXTPROC glad_debug_glMatrixLoadfEXT
     * }
     */
    public static MemorySegment glad_debug_glMatrixLoadfEXT$segment() {
        return glad_debug_glMatrixLoadfEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXLOADFEXTPROC glad_debug_glMatrixLoadfEXT
     * }
     */
    public static MemorySegment glad_debug_glMatrixLoadfEXT() {
        return glad_debug_glMatrixLoadfEXT$constants.SEGMENT.get(glad_debug_glMatrixLoadfEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXLOADFEXTPROC glad_debug_glMatrixLoadfEXT
     * }
     */
    public static void glad_debug_glMatrixLoadfEXT(MemorySegment varValue) {
        glad_debug_glMatrixLoadfEXT$constants.SEGMENT.set(glad_debug_glMatrixLoadfEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMatrixMode$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMatrixMode").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXMODEPROC glad_glMatrixMode
     * }
     */
    public static AddressLayout glad_glMatrixMode$layout() {
        return glad_glMatrixMode$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXMODEPROC glad_glMatrixMode
     * }
     */
    public static MemorySegment glad_glMatrixMode$segment() {
        return glad_glMatrixMode$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXMODEPROC glad_glMatrixMode
     * }
     */
    public static MemorySegment glad_glMatrixMode() {
        return glad_glMatrixMode$constants.SEGMENT.get(glad_glMatrixMode$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXMODEPROC glad_glMatrixMode
     * }
     */
    public static void glad_glMatrixMode(MemorySegment varValue) {
        glad_glMatrixMode$constants.SEGMENT.set(glad_glMatrixMode$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMatrixMode$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMatrixMode").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXMODEPROC glad_debug_glMatrixMode
     * }
     */
    public static AddressLayout glad_debug_glMatrixMode$layout() {
        return glad_debug_glMatrixMode$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXMODEPROC glad_debug_glMatrixMode
     * }
     */
    public static MemorySegment glad_debug_glMatrixMode$segment() {
        return glad_debug_glMatrixMode$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXMODEPROC glad_debug_glMatrixMode
     * }
     */
    public static MemorySegment glad_debug_glMatrixMode() {
        return glad_debug_glMatrixMode$constants.SEGMENT.get(glad_debug_glMatrixMode$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXMODEPROC glad_debug_glMatrixMode
     * }
     */
    public static void glad_debug_glMatrixMode(MemorySegment varValue) {
        glad_debug_glMatrixMode$constants.SEGMENT.set(glad_debug_glMatrixMode$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMatrixMultTransposedEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMatrixMultTransposedEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXMULTTRANSPOSEDEXTPROC glad_glMatrixMultTransposedEXT
     * }
     */
    public static AddressLayout glad_glMatrixMultTransposedEXT$layout() {
        return glad_glMatrixMultTransposedEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXMULTTRANSPOSEDEXTPROC glad_glMatrixMultTransposedEXT
     * }
     */
    public static MemorySegment glad_glMatrixMultTransposedEXT$segment() {
        return glad_glMatrixMultTransposedEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXMULTTRANSPOSEDEXTPROC glad_glMatrixMultTransposedEXT
     * }
     */
    public static MemorySegment glad_glMatrixMultTransposedEXT() {
        return glad_glMatrixMultTransposedEXT$constants.SEGMENT.get(glad_glMatrixMultTransposedEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXMULTTRANSPOSEDEXTPROC glad_glMatrixMultTransposedEXT
     * }
     */
    public static void glad_glMatrixMultTransposedEXT(MemorySegment varValue) {
        glad_glMatrixMultTransposedEXT$constants.SEGMENT.set(glad_glMatrixMultTransposedEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMatrixMultTransposedEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMatrixMultTransposedEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXMULTTRANSPOSEDEXTPROC glad_debug_glMatrixMultTransposedEXT
     * }
     */
    public static AddressLayout glad_debug_glMatrixMultTransposedEXT$layout() {
        return glad_debug_glMatrixMultTransposedEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXMULTTRANSPOSEDEXTPROC glad_debug_glMatrixMultTransposedEXT
     * }
     */
    public static MemorySegment glad_debug_glMatrixMultTransposedEXT$segment() {
        return glad_debug_glMatrixMultTransposedEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXMULTTRANSPOSEDEXTPROC glad_debug_glMatrixMultTransposedEXT
     * }
     */
    public static MemorySegment glad_debug_glMatrixMultTransposedEXT() {
        return glad_debug_glMatrixMultTransposedEXT$constants.SEGMENT.get(glad_debug_glMatrixMultTransposedEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXMULTTRANSPOSEDEXTPROC glad_debug_glMatrixMultTransposedEXT
     * }
     */
    public static void glad_debug_glMatrixMultTransposedEXT(MemorySegment varValue) {
        glad_debug_glMatrixMultTransposedEXT$constants.SEGMENT.set(glad_debug_glMatrixMultTransposedEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMatrixMultTransposefEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMatrixMultTransposefEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXMULTTRANSPOSEFEXTPROC glad_glMatrixMultTransposefEXT
     * }
     */
    public static AddressLayout glad_glMatrixMultTransposefEXT$layout() {
        return glad_glMatrixMultTransposefEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXMULTTRANSPOSEFEXTPROC glad_glMatrixMultTransposefEXT
     * }
     */
    public static MemorySegment glad_glMatrixMultTransposefEXT$segment() {
        return glad_glMatrixMultTransposefEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXMULTTRANSPOSEFEXTPROC glad_glMatrixMultTransposefEXT
     * }
     */
    public static MemorySegment glad_glMatrixMultTransposefEXT() {
        return glad_glMatrixMultTransposefEXT$constants.SEGMENT.get(glad_glMatrixMultTransposefEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXMULTTRANSPOSEFEXTPROC glad_glMatrixMultTransposefEXT
     * }
     */
    public static void glad_glMatrixMultTransposefEXT(MemorySegment varValue) {
        glad_glMatrixMultTransposefEXT$constants.SEGMENT.set(glad_glMatrixMultTransposefEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMatrixMultTransposefEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMatrixMultTransposefEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXMULTTRANSPOSEFEXTPROC glad_debug_glMatrixMultTransposefEXT
     * }
     */
    public static AddressLayout glad_debug_glMatrixMultTransposefEXT$layout() {
        return glad_debug_glMatrixMultTransposefEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXMULTTRANSPOSEFEXTPROC glad_debug_glMatrixMultTransposefEXT
     * }
     */
    public static MemorySegment glad_debug_glMatrixMultTransposefEXT$segment() {
        return glad_debug_glMatrixMultTransposefEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXMULTTRANSPOSEFEXTPROC glad_debug_glMatrixMultTransposefEXT
     * }
     */
    public static MemorySegment glad_debug_glMatrixMultTransposefEXT() {
        return glad_debug_glMatrixMultTransposefEXT$constants.SEGMENT.get(glad_debug_glMatrixMultTransposefEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXMULTTRANSPOSEFEXTPROC glad_debug_glMatrixMultTransposefEXT
     * }
     */
    public static void glad_debug_glMatrixMultTransposefEXT(MemorySegment varValue) {
        glad_debug_glMatrixMultTransposefEXT$constants.SEGMENT.set(glad_debug_glMatrixMultTransposefEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMatrixMultdEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMatrixMultdEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXMULTDEXTPROC glad_glMatrixMultdEXT
     * }
     */
    public static AddressLayout glad_glMatrixMultdEXT$layout() {
        return glad_glMatrixMultdEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXMULTDEXTPROC glad_glMatrixMultdEXT
     * }
     */
    public static MemorySegment glad_glMatrixMultdEXT$segment() {
        return glad_glMatrixMultdEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXMULTDEXTPROC glad_glMatrixMultdEXT
     * }
     */
    public static MemorySegment glad_glMatrixMultdEXT() {
        return glad_glMatrixMultdEXT$constants.SEGMENT.get(glad_glMatrixMultdEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXMULTDEXTPROC glad_glMatrixMultdEXT
     * }
     */
    public static void glad_glMatrixMultdEXT(MemorySegment varValue) {
        glad_glMatrixMultdEXT$constants.SEGMENT.set(glad_glMatrixMultdEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMatrixMultdEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMatrixMultdEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXMULTDEXTPROC glad_debug_glMatrixMultdEXT
     * }
     */
    public static AddressLayout glad_debug_glMatrixMultdEXT$layout() {
        return glad_debug_glMatrixMultdEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXMULTDEXTPROC glad_debug_glMatrixMultdEXT
     * }
     */
    public static MemorySegment glad_debug_glMatrixMultdEXT$segment() {
        return glad_debug_glMatrixMultdEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXMULTDEXTPROC glad_debug_glMatrixMultdEXT
     * }
     */
    public static MemorySegment glad_debug_glMatrixMultdEXT() {
        return glad_debug_glMatrixMultdEXT$constants.SEGMENT.get(glad_debug_glMatrixMultdEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXMULTDEXTPROC glad_debug_glMatrixMultdEXT
     * }
     */
    public static void glad_debug_glMatrixMultdEXT(MemorySegment varValue) {
        glad_debug_glMatrixMultdEXT$constants.SEGMENT.set(glad_debug_glMatrixMultdEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMatrixMultfEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMatrixMultfEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXMULTFEXTPROC glad_glMatrixMultfEXT
     * }
     */
    public static AddressLayout glad_glMatrixMultfEXT$layout() {
        return glad_glMatrixMultfEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXMULTFEXTPROC glad_glMatrixMultfEXT
     * }
     */
    public static MemorySegment glad_glMatrixMultfEXT$segment() {
        return glad_glMatrixMultfEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXMULTFEXTPROC glad_glMatrixMultfEXT
     * }
     */
    public static MemorySegment glad_glMatrixMultfEXT() {
        return glad_glMatrixMultfEXT$constants.SEGMENT.get(glad_glMatrixMultfEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXMULTFEXTPROC glad_glMatrixMultfEXT
     * }
     */
    public static void glad_glMatrixMultfEXT(MemorySegment varValue) {
        glad_glMatrixMultfEXT$constants.SEGMENT.set(glad_glMatrixMultfEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMatrixMultfEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMatrixMultfEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXMULTFEXTPROC glad_debug_glMatrixMultfEXT
     * }
     */
    public static AddressLayout glad_debug_glMatrixMultfEXT$layout() {
        return glad_debug_glMatrixMultfEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXMULTFEXTPROC glad_debug_glMatrixMultfEXT
     * }
     */
    public static MemorySegment glad_debug_glMatrixMultfEXT$segment() {
        return glad_debug_glMatrixMultfEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXMULTFEXTPROC glad_debug_glMatrixMultfEXT
     * }
     */
    public static MemorySegment glad_debug_glMatrixMultfEXT() {
        return glad_debug_glMatrixMultfEXT$constants.SEGMENT.get(glad_debug_glMatrixMultfEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXMULTFEXTPROC glad_debug_glMatrixMultfEXT
     * }
     */
    public static void glad_debug_glMatrixMultfEXT(MemorySegment varValue) {
        glad_debug_glMatrixMultfEXT$constants.SEGMENT.set(glad_debug_glMatrixMultfEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMatrixOrthoEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMatrixOrthoEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXORTHOEXTPROC glad_glMatrixOrthoEXT
     * }
     */
    public static AddressLayout glad_glMatrixOrthoEXT$layout() {
        return glad_glMatrixOrthoEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXORTHOEXTPROC glad_glMatrixOrthoEXT
     * }
     */
    public static MemorySegment glad_glMatrixOrthoEXT$segment() {
        return glad_glMatrixOrthoEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXORTHOEXTPROC glad_glMatrixOrthoEXT
     * }
     */
    public static MemorySegment glad_glMatrixOrthoEXT() {
        return glad_glMatrixOrthoEXT$constants.SEGMENT.get(glad_glMatrixOrthoEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXORTHOEXTPROC glad_glMatrixOrthoEXT
     * }
     */
    public static void glad_glMatrixOrthoEXT(MemorySegment varValue) {
        glad_glMatrixOrthoEXT$constants.SEGMENT.set(glad_glMatrixOrthoEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMatrixOrthoEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMatrixOrthoEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXORTHOEXTPROC glad_debug_glMatrixOrthoEXT
     * }
     */
    public static AddressLayout glad_debug_glMatrixOrthoEXT$layout() {
        return glad_debug_glMatrixOrthoEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXORTHOEXTPROC glad_debug_glMatrixOrthoEXT
     * }
     */
    public static MemorySegment glad_debug_glMatrixOrthoEXT$segment() {
        return glad_debug_glMatrixOrthoEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXORTHOEXTPROC glad_debug_glMatrixOrthoEXT
     * }
     */
    public static MemorySegment glad_debug_glMatrixOrthoEXT() {
        return glad_debug_glMatrixOrthoEXT$constants.SEGMENT.get(glad_debug_glMatrixOrthoEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXORTHOEXTPROC glad_debug_glMatrixOrthoEXT
     * }
     */
    public static void glad_debug_glMatrixOrthoEXT(MemorySegment varValue) {
        glad_debug_glMatrixOrthoEXT$constants.SEGMENT.set(glad_debug_glMatrixOrthoEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMatrixPopEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMatrixPopEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXPOPEXTPROC glad_glMatrixPopEXT
     * }
     */
    public static AddressLayout glad_glMatrixPopEXT$layout() {
        return glad_glMatrixPopEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXPOPEXTPROC glad_glMatrixPopEXT
     * }
     */
    public static MemorySegment glad_glMatrixPopEXT$segment() {
        return glad_glMatrixPopEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXPOPEXTPROC glad_glMatrixPopEXT
     * }
     */
    public static MemorySegment glad_glMatrixPopEXT() {
        return glad_glMatrixPopEXT$constants.SEGMENT.get(glad_glMatrixPopEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXPOPEXTPROC glad_glMatrixPopEXT
     * }
     */
    public static void glad_glMatrixPopEXT(MemorySegment varValue) {
        glad_glMatrixPopEXT$constants.SEGMENT.set(glad_glMatrixPopEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMatrixPopEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMatrixPopEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXPOPEXTPROC glad_debug_glMatrixPopEXT
     * }
     */
    public static AddressLayout glad_debug_glMatrixPopEXT$layout() {
        return glad_debug_glMatrixPopEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXPOPEXTPROC glad_debug_glMatrixPopEXT
     * }
     */
    public static MemorySegment glad_debug_glMatrixPopEXT$segment() {
        return glad_debug_glMatrixPopEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXPOPEXTPROC glad_debug_glMatrixPopEXT
     * }
     */
    public static MemorySegment glad_debug_glMatrixPopEXT() {
        return glad_debug_glMatrixPopEXT$constants.SEGMENT.get(glad_debug_glMatrixPopEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXPOPEXTPROC glad_debug_glMatrixPopEXT
     * }
     */
    public static void glad_debug_glMatrixPopEXT(MemorySegment varValue) {
        glad_debug_glMatrixPopEXT$constants.SEGMENT.set(glad_debug_glMatrixPopEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMatrixPushEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMatrixPushEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXPUSHEXTPROC glad_glMatrixPushEXT
     * }
     */
    public static AddressLayout glad_glMatrixPushEXT$layout() {
        return glad_glMatrixPushEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXPUSHEXTPROC glad_glMatrixPushEXT
     * }
     */
    public static MemorySegment glad_glMatrixPushEXT$segment() {
        return glad_glMatrixPushEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXPUSHEXTPROC glad_glMatrixPushEXT
     * }
     */
    public static MemorySegment glad_glMatrixPushEXT() {
        return glad_glMatrixPushEXT$constants.SEGMENT.get(glad_glMatrixPushEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXPUSHEXTPROC glad_glMatrixPushEXT
     * }
     */
    public static void glad_glMatrixPushEXT(MemorySegment varValue) {
        glad_glMatrixPushEXT$constants.SEGMENT.set(glad_glMatrixPushEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMatrixPushEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMatrixPushEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXPUSHEXTPROC glad_debug_glMatrixPushEXT
     * }
     */
    public static AddressLayout glad_debug_glMatrixPushEXT$layout() {
        return glad_debug_glMatrixPushEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXPUSHEXTPROC glad_debug_glMatrixPushEXT
     * }
     */
    public static MemorySegment glad_debug_glMatrixPushEXT$segment() {
        return glad_debug_glMatrixPushEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXPUSHEXTPROC glad_debug_glMatrixPushEXT
     * }
     */
    public static MemorySegment glad_debug_glMatrixPushEXT() {
        return glad_debug_glMatrixPushEXT$constants.SEGMENT.get(glad_debug_glMatrixPushEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXPUSHEXTPROC glad_debug_glMatrixPushEXT
     * }
     */
    public static void glad_debug_glMatrixPushEXT(MemorySegment varValue) {
        glad_debug_glMatrixPushEXT$constants.SEGMENT.set(glad_debug_glMatrixPushEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMatrixRotatedEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMatrixRotatedEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXROTATEDEXTPROC glad_glMatrixRotatedEXT
     * }
     */
    public static AddressLayout glad_glMatrixRotatedEXT$layout() {
        return glad_glMatrixRotatedEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXROTATEDEXTPROC glad_glMatrixRotatedEXT
     * }
     */
    public static MemorySegment glad_glMatrixRotatedEXT$segment() {
        return glad_glMatrixRotatedEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXROTATEDEXTPROC glad_glMatrixRotatedEXT
     * }
     */
    public static MemorySegment glad_glMatrixRotatedEXT() {
        return glad_glMatrixRotatedEXT$constants.SEGMENT.get(glad_glMatrixRotatedEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXROTATEDEXTPROC glad_glMatrixRotatedEXT
     * }
     */
    public static void glad_glMatrixRotatedEXT(MemorySegment varValue) {
        glad_glMatrixRotatedEXT$constants.SEGMENT.set(glad_glMatrixRotatedEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMatrixRotatedEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMatrixRotatedEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXROTATEDEXTPROC glad_debug_glMatrixRotatedEXT
     * }
     */
    public static AddressLayout glad_debug_glMatrixRotatedEXT$layout() {
        return glad_debug_glMatrixRotatedEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXROTATEDEXTPROC glad_debug_glMatrixRotatedEXT
     * }
     */
    public static MemorySegment glad_debug_glMatrixRotatedEXT$segment() {
        return glad_debug_glMatrixRotatedEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXROTATEDEXTPROC glad_debug_glMatrixRotatedEXT
     * }
     */
    public static MemorySegment glad_debug_glMatrixRotatedEXT() {
        return glad_debug_glMatrixRotatedEXT$constants.SEGMENT.get(glad_debug_glMatrixRotatedEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXROTATEDEXTPROC glad_debug_glMatrixRotatedEXT
     * }
     */
    public static void glad_debug_glMatrixRotatedEXT(MemorySegment varValue) {
        glad_debug_glMatrixRotatedEXT$constants.SEGMENT.set(glad_debug_glMatrixRotatedEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMatrixRotatefEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMatrixRotatefEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXROTATEFEXTPROC glad_glMatrixRotatefEXT
     * }
     */
    public static AddressLayout glad_glMatrixRotatefEXT$layout() {
        return glad_glMatrixRotatefEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXROTATEFEXTPROC glad_glMatrixRotatefEXT
     * }
     */
    public static MemorySegment glad_glMatrixRotatefEXT$segment() {
        return glad_glMatrixRotatefEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXROTATEFEXTPROC glad_glMatrixRotatefEXT
     * }
     */
    public static MemorySegment glad_glMatrixRotatefEXT() {
        return glad_glMatrixRotatefEXT$constants.SEGMENT.get(glad_glMatrixRotatefEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXROTATEFEXTPROC glad_glMatrixRotatefEXT
     * }
     */
    public static void glad_glMatrixRotatefEXT(MemorySegment varValue) {
        glad_glMatrixRotatefEXT$constants.SEGMENT.set(glad_glMatrixRotatefEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMatrixRotatefEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMatrixRotatefEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXROTATEFEXTPROC glad_debug_glMatrixRotatefEXT
     * }
     */
    public static AddressLayout glad_debug_glMatrixRotatefEXT$layout() {
        return glad_debug_glMatrixRotatefEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXROTATEFEXTPROC glad_debug_glMatrixRotatefEXT
     * }
     */
    public static MemorySegment glad_debug_glMatrixRotatefEXT$segment() {
        return glad_debug_glMatrixRotatefEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXROTATEFEXTPROC glad_debug_glMatrixRotatefEXT
     * }
     */
    public static MemorySegment glad_debug_glMatrixRotatefEXT() {
        return glad_debug_glMatrixRotatefEXT$constants.SEGMENT.get(glad_debug_glMatrixRotatefEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXROTATEFEXTPROC glad_debug_glMatrixRotatefEXT
     * }
     */
    public static void glad_debug_glMatrixRotatefEXT(MemorySegment varValue) {
        glad_debug_glMatrixRotatefEXT$constants.SEGMENT.set(glad_debug_glMatrixRotatefEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMatrixScaledEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMatrixScaledEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXSCALEDEXTPROC glad_glMatrixScaledEXT
     * }
     */
    public static AddressLayout glad_glMatrixScaledEXT$layout() {
        return glad_glMatrixScaledEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXSCALEDEXTPROC glad_glMatrixScaledEXT
     * }
     */
    public static MemorySegment glad_glMatrixScaledEXT$segment() {
        return glad_glMatrixScaledEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXSCALEDEXTPROC glad_glMatrixScaledEXT
     * }
     */
    public static MemorySegment glad_glMatrixScaledEXT() {
        return glad_glMatrixScaledEXT$constants.SEGMENT.get(glad_glMatrixScaledEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXSCALEDEXTPROC glad_glMatrixScaledEXT
     * }
     */
    public static void glad_glMatrixScaledEXT(MemorySegment varValue) {
        glad_glMatrixScaledEXT$constants.SEGMENT.set(glad_glMatrixScaledEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMatrixScaledEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMatrixScaledEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXSCALEDEXTPROC glad_debug_glMatrixScaledEXT
     * }
     */
    public static AddressLayout glad_debug_glMatrixScaledEXT$layout() {
        return glad_debug_glMatrixScaledEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXSCALEDEXTPROC glad_debug_glMatrixScaledEXT
     * }
     */
    public static MemorySegment glad_debug_glMatrixScaledEXT$segment() {
        return glad_debug_glMatrixScaledEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXSCALEDEXTPROC glad_debug_glMatrixScaledEXT
     * }
     */
    public static MemorySegment glad_debug_glMatrixScaledEXT() {
        return glad_debug_glMatrixScaledEXT$constants.SEGMENT.get(glad_debug_glMatrixScaledEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXSCALEDEXTPROC glad_debug_glMatrixScaledEXT
     * }
     */
    public static void glad_debug_glMatrixScaledEXT(MemorySegment varValue) {
        glad_debug_glMatrixScaledEXT$constants.SEGMENT.set(glad_debug_glMatrixScaledEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMatrixScalefEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMatrixScalefEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXSCALEFEXTPROC glad_glMatrixScalefEXT
     * }
     */
    public static AddressLayout glad_glMatrixScalefEXT$layout() {
        return glad_glMatrixScalefEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXSCALEFEXTPROC glad_glMatrixScalefEXT
     * }
     */
    public static MemorySegment glad_glMatrixScalefEXT$segment() {
        return glad_glMatrixScalefEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXSCALEFEXTPROC glad_glMatrixScalefEXT
     * }
     */
    public static MemorySegment glad_glMatrixScalefEXT() {
        return glad_glMatrixScalefEXT$constants.SEGMENT.get(glad_glMatrixScalefEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXSCALEFEXTPROC glad_glMatrixScalefEXT
     * }
     */
    public static void glad_glMatrixScalefEXT(MemorySegment varValue) {
        glad_glMatrixScalefEXT$constants.SEGMENT.set(glad_glMatrixScalefEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMatrixScalefEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMatrixScalefEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXSCALEFEXTPROC glad_debug_glMatrixScalefEXT
     * }
     */
    public static AddressLayout glad_debug_glMatrixScalefEXT$layout() {
        return glad_debug_glMatrixScalefEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXSCALEFEXTPROC glad_debug_glMatrixScalefEXT
     * }
     */
    public static MemorySegment glad_debug_glMatrixScalefEXT$segment() {
        return glad_debug_glMatrixScalefEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXSCALEFEXTPROC glad_debug_glMatrixScalefEXT
     * }
     */
    public static MemorySegment glad_debug_glMatrixScalefEXT() {
        return glad_debug_glMatrixScalefEXT$constants.SEGMENT.get(glad_debug_glMatrixScalefEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXSCALEFEXTPROC glad_debug_glMatrixScalefEXT
     * }
     */
    public static void glad_debug_glMatrixScalefEXT(MemorySegment varValue) {
        glad_debug_glMatrixScalefEXT$constants.SEGMENT.set(glad_debug_glMatrixScalefEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMatrixTranslatedEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMatrixTranslatedEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXTRANSLATEDEXTPROC glad_glMatrixTranslatedEXT
     * }
     */
    public static AddressLayout glad_glMatrixTranslatedEXT$layout() {
        return glad_glMatrixTranslatedEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXTRANSLATEDEXTPROC glad_glMatrixTranslatedEXT
     * }
     */
    public static MemorySegment glad_glMatrixTranslatedEXT$segment() {
        return glad_glMatrixTranslatedEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXTRANSLATEDEXTPROC glad_glMatrixTranslatedEXT
     * }
     */
    public static MemorySegment glad_glMatrixTranslatedEXT() {
        return glad_glMatrixTranslatedEXT$constants.SEGMENT.get(glad_glMatrixTranslatedEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXTRANSLATEDEXTPROC glad_glMatrixTranslatedEXT
     * }
     */
    public static void glad_glMatrixTranslatedEXT(MemorySegment varValue) {
        glad_glMatrixTranslatedEXT$constants.SEGMENT.set(glad_glMatrixTranslatedEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMatrixTranslatedEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMatrixTranslatedEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXTRANSLATEDEXTPROC glad_debug_glMatrixTranslatedEXT
     * }
     */
    public static AddressLayout glad_debug_glMatrixTranslatedEXT$layout() {
        return glad_debug_glMatrixTranslatedEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXTRANSLATEDEXTPROC glad_debug_glMatrixTranslatedEXT
     * }
     */
    public static MemorySegment glad_debug_glMatrixTranslatedEXT$segment() {
        return glad_debug_glMatrixTranslatedEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXTRANSLATEDEXTPROC glad_debug_glMatrixTranslatedEXT
     * }
     */
    public static MemorySegment glad_debug_glMatrixTranslatedEXT() {
        return glad_debug_glMatrixTranslatedEXT$constants.SEGMENT.get(glad_debug_glMatrixTranslatedEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXTRANSLATEDEXTPROC glad_debug_glMatrixTranslatedEXT
     * }
     */
    public static void glad_debug_glMatrixTranslatedEXT(MemorySegment varValue) {
        glad_debug_glMatrixTranslatedEXT$constants.SEGMENT.set(glad_debug_glMatrixTranslatedEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMatrixTranslatefEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMatrixTranslatefEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXTRANSLATEFEXTPROC glad_glMatrixTranslatefEXT
     * }
     */
    public static AddressLayout glad_glMatrixTranslatefEXT$layout() {
        return glad_glMatrixTranslatefEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXTRANSLATEFEXTPROC glad_glMatrixTranslatefEXT
     * }
     */
    public static MemorySegment glad_glMatrixTranslatefEXT$segment() {
        return glad_glMatrixTranslatefEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXTRANSLATEFEXTPROC glad_glMatrixTranslatefEXT
     * }
     */
    public static MemorySegment glad_glMatrixTranslatefEXT() {
        return glad_glMatrixTranslatefEXT$constants.SEGMENT.get(glad_glMatrixTranslatefEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXTRANSLATEFEXTPROC glad_glMatrixTranslatefEXT
     * }
     */
    public static void glad_glMatrixTranslatefEXT(MemorySegment varValue) {
        glad_glMatrixTranslatefEXT$constants.SEGMENT.set(glad_glMatrixTranslatefEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMatrixTranslatefEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMatrixTranslatefEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXTRANSLATEFEXTPROC glad_debug_glMatrixTranslatefEXT
     * }
     */
    public static AddressLayout glad_debug_glMatrixTranslatefEXT$layout() {
        return glad_debug_glMatrixTranslatefEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXTRANSLATEFEXTPROC glad_debug_glMatrixTranslatefEXT
     * }
     */
    public static MemorySegment glad_debug_glMatrixTranslatefEXT$segment() {
        return glad_debug_glMatrixTranslatefEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXTRANSLATEFEXTPROC glad_debug_glMatrixTranslatefEXT
     * }
     */
    public static MemorySegment glad_debug_glMatrixTranslatefEXT() {
        return glad_debug_glMatrixTranslatefEXT$constants.SEGMENT.get(glad_debug_glMatrixTranslatefEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMATRIXTRANSLATEFEXTPROC glad_debug_glMatrixTranslatefEXT
     * }
     */
    public static void glad_debug_glMatrixTranslatefEXT(MemorySegment varValue) {
        glad_debug_glMatrixTranslatefEXT$constants.SEGMENT.set(glad_debug_glMatrixTranslatefEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMemoryBarrier$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMemoryBarrier").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMEMORYBARRIERPROC glad_glMemoryBarrier
     * }
     */
    public static AddressLayout glad_glMemoryBarrier$layout() {
        return glad_glMemoryBarrier$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMEMORYBARRIERPROC glad_glMemoryBarrier
     * }
     */
    public static MemorySegment glad_glMemoryBarrier$segment() {
        return glad_glMemoryBarrier$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMEMORYBARRIERPROC glad_glMemoryBarrier
     * }
     */
    public static MemorySegment glad_glMemoryBarrier() {
        return glad_glMemoryBarrier$constants.SEGMENT.get(glad_glMemoryBarrier$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMEMORYBARRIERPROC glad_glMemoryBarrier
     * }
     */
    public static void glad_glMemoryBarrier(MemorySegment varValue) {
        glad_glMemoryBarrier$constants.SEGMENT.set(glad_glMemoryBarrier$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMemoryBarrier$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMemoryBarrier").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMEMORYBARRIERPROC glad_debug_glMemoryBarrier
     * }
     */
    public static AddressLayout glad_debug_glMemoryBarrier$layout() {
        return glad_debug_glMemoryBarrier$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMEMORYBARRIERPROC glad_debug_glMemoryBarrier
     * }
     */
    public static MemorySegment glad_debug_glMemoryBarrier$segment() {
        return glad_debug_glMemoryBarrier$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMEMORYBARRIERPROC glad_debug_glMemoryBarrier
     * }
     */
    public static MemorySegment glad_debug_glMemoryBarrier() {
        return glad_debug_glMemoryBarrier$constants.SEGMENT.get(glad_debug_glMemoryBarrier$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMEMORYBARRIERPROC glad_debug_glMemoryBarrier
     * }
     */
    public static void glad_debug_glMemoryBarrier(MemorySegment varValue) {
        glad_debug_glMemoryBarrier$constants.SEGMENT.set(glad_debug_glMemoryBarrier$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMemoryBarrierByRegion$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMemoryBarrierByRegion").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMEMORYBARRIERBYREGIONPROC glad_glMemoryBarrierByRegion
     * }
     */
    public static AddressLayout glad_glMemoryBarrierByRegion$layout() {
        return glad_glMemoryBarrierByRegion$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMEMORYBARRIERBYREGIONPROC glad_glMemoryBarrierByRegion
     * }
     */
    public static MemorySegment glad_glMemoryBarrierByRegion$segment() {
        return glad_glMemoryBarrierByRegion$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMEMORYBARRIERBYREGIONPROC glad_glMemoryBarrierByRegion
     * }
     */
    public static MemorySegment glad_glMemoryBarrierByRegion() {
        return glad_glMemoryBarrierByRegion$constants.SEGMENT.get(glad_glMemoryBarrierByRegion$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMEMORYBARRIERBYREGIONPROC glad_glMemoryBarrierByRegion
     * }
     */
    public static void glad_glMemoryBarrierByRegion(MemorySegment varValue) {
        glad_glMemoryBarrierByRegion$constants.SEGMENT.set(glad_glMemoryBarrierByRegion$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMemoryBarrierByRegion$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMemoryBarrierByRegion").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMEMORYBARRIERBYREGIONPROC glad_debug_glMemoryBarrierByRegion
     * }
     */
    public static AddressLayout glad_debug_glMemoryBarrierByRegion$layout() {
        return glad_debug_glMemoryBarrierByRegion$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMEMORYBARRIERBYREGIONPROC glad_debug_glMemoryBarrierByRegion
     * }
     */
    public static MemorySegment glad_debug_glMemoryBarrierByRegion$segment() {
        return glad_debug_glMemoryBarrierByRegion$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMEMORYBARRIERBYREGIONPROC glad_debug_glMemoryBarrierByRegion
     * }
     */
    public static MemorySegment glad_debug_glMemoryBarrierByRegion() {
        return glad_debug_glMemoryBarrierByRegion$constants.SEGMENT.get(glad_debug_glMemoryBarrierByRegion$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMEMORYBARRIERBYREGIONPROC glad_debug_glMemoryBarrierByRegion
     * }
     */
    public static void glad_debug_glMemoryBarrierByRegion(MemorySegment varValue) {
        glad_debug_glMemoryBarrierByRegion$constants.SEGMENT.set(glad_debug_glMemoryBarrierByRegion$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMemoryBarrierEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMemoryBarrierEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMEMORYBARRIEREXTPROC glad_glMemoryBarrierEXT
     * }
     */
    public static AddressLayout glad_glMemoryBarrierEXT$layout() {
        return glad_glMemoryBarrierEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMEMORYBARRIEREXTPROC glad_glMemoryBarrierEXT
     * }
     */
    public static MemorySegment glad_glMemoryBarrierEXT$segment() {
        return glad_glMemoryBarrierEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMEMORYBARRIEREXTPROC glad_glMemoryBarrierEXT
     * }
     */
    public static MemorySegment glad_glMemoryBarrierEXT() {
        return glad_glMemoryBarrierEXT$constants.SEGMENT.get(glad_glMemoryBarrierEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMEMORYBARRIEREXTPROC glad_glMemoryBarrierEXT
     * }
     */
    public static void glad_glMemoryBarrierEXT(MemorySegment varValue) {
        glad_glMemoryBarrierEXT$constants.SEGMENT.set(glad_glMemoryBarrierEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMemoryBarrierEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMemoryBarrierEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMEMORYBARRIEREXTPROC glad_debug_glMemoryBarrierEXT
     * }
     */
    public static AddressLayout glad_debug_glMemoryBarrierEXT$layout() {
        return glad_debug_glMemoryBarrierEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMEMORYBARRIEREXTPROC glad_debug_glMemoryBarrierEXT
     * }
     */
    public static MemorySegment glad_debug_glMemoryBarrierEXT$segment() {
        return glad_debug_glMemoryBarrierEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMEMORYBARRIEREXTPROC glad_debug_glMemoryBarrierEXT
     * }
     */
    public static MemorySegment glad_debug_glMemoryBarrierEXT() {
        return glad_debug_glMemoryBarrierEXT$constants.SEGMENT.get(glad_debug_glMemoryBarrierEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMEMORYBARRIEREXTPROC glad_debug_glMemoryBarrierEXT
     * }
     */
    public static void glad_debug_glMemoryBarrierEXT(MemorySegment varValue) {
        glad_debug_glMemoryBarrierEXT$constants.SEGMENT.set(glad_debug_glMemoryBarrierEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMinSampleShading$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMinSampleShading").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMINSAMPLESHADINGPROC glad_glMinSampleShading
     * }
     */
    public static AddressLayout glad_glMinSampleShading$layout() {
        return glad_glMinSampleShading$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMINSAMPLESHADINGPROC glad_glMinSampleShading
     * }
     */
    public static MemorySegment glad_glMinSampleShading$segment() {
        return glad_glMinSampleShading$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMINSAMPLESHADINGPROC glad_glMinSampleShading
     * }
     */
    public static MemorySegment glad_glMinSampleShading() {
        return glad_glMinSampleShading$constants.SEGMENT.get(glad_glMinSampleShading$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMINSAMPLESHADINGPROC glad_glMinSampleShading
     * }
     */
    public static void glad_glMinSampleShading(MemorySegment varValue) {
        glad_glMinSampleShading$constants.SEGMENT.set(glad_glMinSampleShading$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMinSampleShading$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMinSampleShading").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMINSAMPLESHADINGPROC glad_debug_glMinSampleShading
     * }
     */
    public static AddressLayout glad_debug_glMinSampleShading$layout() {
        return glad_debug_glMinSampleShading$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMINSAMPLESHADINGPROC glad_debug_glMinSampleShading
     * }
     */
    public static MemorySegment glad_debug_glMinSampleShading$segment() {
        return glad_debug_glMinSampleShading$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMINSAMPLESHADINGPROC glad_debug_glMinSampleShading
     * }
     */
    public static MemorySegment glad_debug_glMinSampleShading() {
        return glad_debug_glMinSampleShading$constants.SEGMENT.get(glad_debug_glMinSampleShading$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMINSAMPLESHADINGPROC glad_debug_glMinSampleShading
     * }
     */
    public static void glad_debug_glMinSampleShading(MemorySegment varValue) {
        glad_debug_glMinSampleShading$constants.SEGMENT.set(glad_debug_glMinSampleShading$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMinSampleShadingARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMinSampleShadingARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMINSAMPLESHADINGARBPROC glad_glMinSampleShadingARB
     * }
     */
    public static AddressLayout glad_glMinSampleShadingARB$layout() {
        return glad_glMinSampleShadingARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMINSAMPLESHADINGARBPROC glad_glMinSampleShadingARB
     * }
     */
    public static MemorySegment glad_glMinSampleShadingARB$segment() {
        return glad_glMinSampleShadingARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMINSAMPLESHADINGARBPROC glad_glMinSampleShadingARB
     * }
     */
    public static MemorySegment glad_glMinSampleShadingARB() {
        return glad_glMinSampleShadingARB$constants.SEGMENT.get(glad_glMinSampleShadingARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMINSAMPLESHADINGARBPROC glad_glMinSampleShadingARB
     * }
     */
    public static void glad_glMinSampleShadingARB(MemorySegment varValue) {
        glad_glMinSampleShadingARB$constants.SEGMENT.set(glad_glMinSampleShadingARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMinSampleShadingARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMinSampleShadingARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMINSAMPLESHADINGARBPROC glad_debug_glMinSampleShadingARB
     * }
     */
    public static AddressLayout glad_debug_glMinSampleShadingARB$layout() {
        return glad_debug_glMinSampleShadingARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMINSAMPLESHADINGARBPROC glad_debug_glMinSampleShadingARB
     * }
     */
    public static MemorySegment glad_debug_glMinSampleShadingARB$segment() {
        return glad_debug_glMinSampleShadingARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMINSAMPLESHADINGARBPROC glad_debug_glMinSampleShadingARB
     * }
     */
    public static MemorySegment glad_debug_glMinSampleShadingARB() {
        return glad_debug_glMinSampleShadingARB$constants.SEGMENT.get(glad_debug_glMinSampleShadingARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMINSAMPLESHADINGARBPROC glad_debug_glMinSampleShadingARB
     * }
     */
    public static void glad_debug_glMinSampleShadingARB(MemorySegment varValue) {
        glad_debug_glMinSampleShadingARB$constants.SEGMENT.set(glad_debug_glMinSampleShadingARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMinmax$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMinmax").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMINMAXPROC glad_glMinmax
     * }
     */
    public static AddressLayout glad_glMinmax$layout() {
        return glad_glMinmax$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMINMAXPROC glad_glMinmax
     * }
     */
    public static MemorySegment glad_glMinmax$segment() {
        return glad_glMinmax$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMINMAXPROC glad_glMinmax
     * }
     */
    public static MemorySegment glad_glMinmax() {
        return glad_glMinmax$constants.SEGMENT.get(glad_glMinmax$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMINMAXPROC glad_glMinmax
     * }
     */
    public static void glad_glMinmax(MemorySegment varValue) {
        glad_glMinmax$constants.SEGMENT.set(glad_glMinmax$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMinmax$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMinmax").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMINMAXPROC glad_debug_glMinmax
     * }
     */
    public static AddressLayout glad_debug_glMinmax$layout() {
        return glad_debug_glMinmax$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMINMAXPROC glad_debug_glMinmax
     * }
     */
    public static MemorySegment glad_debug_glMinmax$segment() {
        return glad_debug_glMinmax$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMINMAXPROC glad_debug_glMinmax
     * }
     */
    public static MemorySegment glad_debug_glMinmax() {
        return glad_debug_glMinmax$constants.SEGMENT.get(glad_debug_glMinmax$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMINMAXPROC glad_debug_glMinmax
     * }
     */
    public static void glad_debug_glMinmax(MemorySegment varValue) {
        glad_debug_glMinmax$constants.SEGMENT.set(glad_debug_glMinmax$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultMatrixd$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultMatrixd").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTMATRIXDPROC glad_glMultMatrixd
     * }
     */
    public static AddressLayout glad_glMultMatrixd$layout() {
        return glad_glMultMatrixd$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTMATRIXDPROC glad_glMultMatrixd
     * }
     */
    public static MemorySegment glad_glMultMatrixd$segment() {
        return glad_glMultMatrixd$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTMATRIXDPROC glad_glMultMatrixd
     * }
     */
    public static MemorySegment glad_glMultMatrixd() {
        return glad_glMultMatrixd$constants.SEGMENT.get(glad_glMultMatrixd$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTMATRIXDPROC glad_glMultMatrixd
     * }
     */
    public static void glad_glMultMatrixd(MemorySegment varValue) {
        glad_glMultMatrixd$constants.SEGMENT.set(glad_glMultMatrixd$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultMatrixd$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultMatrixd").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTMATRIXDPROC glad_debug_glMultMatrixd
     * }
     */
    public static AddressLayout glad_debug_glMultMatrixd$layout() {
        return glad_debug_glMultMatrixd$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTMATRIXDPROC glad_debug_glMultMatrixd
     * }
     */
    public static MemorySegment glad_debug_glMultMatrixd$segment() {
        return glad_debug_glMultMatrixd$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTMATRIXDPROC glad_debug_glMultMatrixd
     * }
     */
    public static MemorySegment glad_debug_glMultMatrixd() {
        return glad_debug_glMultMatrixd$constants.SEGMENT.get(glad_debug_glMultMatrixd$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTMATRIXDPROC glad_debug_glMultMatrixd
     * }
     */
    public static void glad_debug_glMultMatrixd(MemorySegment varValue) {
        glad_debug_glMultMatrixd$constants.SEGMENT.set(glad_debug_glMultMatrixd$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultMatrixf$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultMatrixf").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTMATRIXFPROC glad_glMultMatrixf
     * }
     */
    public static AddressLayout glad_glMultMatrixf$layout() {
        return glad_glMultMatrixf$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTMATRIXFPROC glad_glMultMatrixf
     * }
     */
    public static MemorySegment glad_glMultMatrixf$segment() {
        return glad_glMultMatrixf$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTMATRIXFPROC glad_glMultMatrixf
     * }
     */
    public static MemorySegment glad_glMultMatrixf() {
        return glad_glMultMatrixf$constants.SEGMENT.get(glad_glMultMatrixf$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTMATRIXFPROC glad_glMultMatrixf
     * }
     */
    public static void glad_glMultMatrixf(MemorySegment varValue) {
        glad_glMultMatrixf$constants.SEGMENT.set(glad_glMultMatrixf$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultMatrixf$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultMatrixf").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTMATRIXFPROC glad_debug_glMultMatrixf
     * }
     */
    public static AddressLayout glad_debug_glMultMatrixf$layout() {
        return glad_debug_glMultMatrixf$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTMATRIXFPROC glad_debug_glMultMatrixf
     * }
     */
    public static MemorySegment glad_debug_glMultMatrixf$segment() {
        return glad_debug_glMultMatrixf$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTMATRIXFPROC glad_debug_glMultMatrixf
     * }
     */
    public static MemorySegment glad_debug_glMultMatrixf() {
        return glad_debug_glMultMatrixf$constants.SEGMENT.get(glad_debug_glMultMatrixf$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTMATRIXFPROC glad_debug_glMultMatrixf
     * }
     */
    public static void glad_debug_glMultMatrixf(MemorySegment varValue) {
        glad_debug_glMultMatrixf$constants.SEGMENT.set(glad_debug_glMultMatrixf$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultTransposeMatrixd$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultTransposeMatrixd").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTTRANSPOSEMATRIXDPROC glad_glMultTransposeMatrixd
     * }
     */
    public static AddressLayout glad_glMultTransposeMatrixd$layout() {
        return glad_glMultTransposeMatrixd$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTTRANSPOSEMATRIXDPROC glad_glMultTransposeMatrixd
     * }
     */
    public static MemorySegment glad_glMultTransposeMatrixd$segment() {
        return glad_glMultTransposeMatrixd$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTTRANSPOSEMATRIXDPROC glad_glMultTransposeMatrixd
     * }
     */
    public static MemorySegment glad_glMultTransposeMatrixd() {
        return glad_glMultTransposeMatrixd$constants.SEGMENT.get(glad_glMultTransposeMatrixd$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTTRANSPOSEMATRIXDPROC glad_glMultTransposeMatrixd
     * }
     */
    public static void glad_glMultTransposeMatrixd(MemorySegment varValue) {
        glad_glMultTransposeMatrixd$constants.SEGMENT.set(glad_glMultTransposeMatrixd$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultTransposeMatrixd$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultTransposeMatrixd").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTTRANSPOSEMATRIXDPROC glad_debug_glMultTransposeMatrixd
     * }
     */
    public static AddressLayout glad_debug_glMultTransposeMatrixd$layout() {
        return glad_debug_glMultTransposeMatrixd$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTTRANSPOSEMATRIXDPROC glad_debug_glMultTransposeMatrixd
     * }
     */
    public static MemorySegment glad_debug_glMultTransposeMatrixd$segment() {
        return glad_debug_glMultTransposeMatrixd$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTTRANSPOSEMATRIXDPROC glad_debug_glMultTransposeMatrixd
     * }
     */
    public static MemorySegment glad_debug_glMultTransposeMatrixd() {
        return glad_debug_glMultTransposeMatrixd$constants.SEGMENT.get(glad_debug_glMultTransposeMatrixd$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTTRANSPOSEMATRIXDPROC glad_debug_glMultTransposeMatrixd
     * }
     */
    public static void glad_debug_glMultTransposeMatrixd(MemorySegment varValue) {
        glad_debug_glMultTransposeMatrixd$constants.SEGMENT.set(glad_debug_glMultTransposeMatrixd$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultTransposeMatrixdARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultTransposeMatrixdARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTTRANSPOSEMATRIXDARBPROC glad_glMultTransposeMatrixdARB
     * }
     */
    public static AddressLayout glad_glMultTransposeMatrixdARB$layout() {
        return glad_glMultTransposeMatrixdARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTTRANSPOSEMATRIXDARBPROC glad_glMultTransposeMatrixdARB
     * }
     */
    public static MemorySegment glad_glMultTransposeMatrixdARB$segment() {
        return glad_glMultTransposeMatrixdARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTTRANSPOSEMATRIXDARBPROC glad_glMultTransposeMatrixdARB
     * }
     */
    public static MemorySegment glad_glMultTransposeMatrixdARB() {
        return glad_glMultTransposeMatrixdARB$constants.SEGMENT.get(glad_glMultTransposeMatrixdARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTTRANSPOSEMATRIXDARBPROC glad_glMultTransposeMatrixdARB
     * }
     */
    public static void glad_glMultTransposeMatrixdARB(MemorySegment varValue) {
        glad_glMultTransposeMatrixdARB$constants.SEGMENT.set(glad_glMultTransposeMatrixdARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultTransposeMatrixdARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultTransposeMatrixdARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTTRANSPOSEMATRIXDARBPROC glad_debug_glMultTransposeMatrixdARB
     * }
     */
    public static AddressLayout glad_debug_glMultTransposeMatrixdARB$layout() {
        return glad_debug_glMultTransposeMatrixdARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTTRANSPOSEMATRIXDARBPROC glad_debug_glMultTransposeMatrixdARB
     * }
     */
    public static MemorySegment glad_debug_glMultTransposeMatrixdARB$segment() {
        return glad_debug_glMultTransposeMatrixdARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTTRANSPOSEMATRIXDARBPROC glad_debug_glMultTransposeMatrixdARB
     * }
     */
    public static MemorySegment glad_debug_glMultTransposeMatrixdARB() {
        return glad_debug_glMultTransposeMatrixdARB$constants.SEGMENT.get(glad_debug_glMultTransposeMatrixdARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTTRANSPOSEMATRIXDARBPROC glad_debug_glMultTransposeMatrixdARB
     * }
     */
    public static void glad_debug_glMultTransposeMatrixdARB(MemorySegment varValue) {
        glad_debug_glMultTransposeMatrixdARB$constants.SEGMENT.set(glad_debug_glMultTransposeMatrixdARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultTransposeMatrixf$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultTransposeMatrixf").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTTRANSPOSEMATRIXFPROC glad_glMultTransposeMatrixf
     * }
     */
    public static AddressLayout glad_glMultTransposeMatrixf$layout() {
        return glad_glMultTransposeMatrixf$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTTRANSPOSEMATRIXFPROC glad_glMultTransposeMatrixf
     * }
     */
    public static MemorySegment glad_glMultTransposeMatrixf$segment() {
        return glad_glMultTransposeMatrixf$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTTRANSPOSEMATRIXFPROC glad_glMultTransposeMatrixf
     * }
     */
    public static MemorySegment glad_glMultTransposeMatrixf() {
        return glad_glMultTransposeMatrixf$constants.SEGMENT.get(glad_glMultTransposeMatrixf$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTTRANSPOSEMATRIXFPROC glad_glMultTransposeMatrixf
     * }
     */
    public static void glad_glMultTransposeMatrixf(MemorySegment varValue) {
        glad_glMultTransposeMatrixf$constants.SEGMENT.set(glad_glMultTransposeMatrixf$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultTransposeMatrixf$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultTransposeMatrixf").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTTRANSPOSEMATRIXFPROC glad_debug_glMultTransposeMatrixf
     * }
     */
    public static AddressLayout glad_debug_glMultTransposeMatrixf$layout() {
        return glad_debug_glMultTransposeMatrixf$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTTRANSPOSEMATRIXFPROC glad_debug_glMultTransposeMatrixf
     * }
     */
    public static MemorySegment glad_debug_glMultTransposeMatrixf$segment() {
        return glad_debug_glMultTransposeMatrixf$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTTRANSPOSEMATRIXFPROC glad_debug_glMultTransposeMatrixf
     * }
     */
    public static MemorySegment glad_debug_glMultTransposeMatrixf() {
        return glad_debug_glMultTransposeMatrixf$constants.SEGMENT.get(glad_debug_glMultTransposeMatrixf$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTTRANSPOSEMATRIXFPROC glad_debug_glMultTransposeMatrixf
     * }
     */
    public static void glad_debug_glMultTransposeMatrixf(MemorySegment varValue) {
        glad_debug_glMultTransposeMatrixf$constants.SEGMENT.set(glad_debug_glMultTransposeMatrixf$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultTransposeMatrixfARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultTransposeMatrixfARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTTRANSPOSEMATRIXFARBPROC glad_glMultTransposeMatrixfARB
     * }
     */
    public static AddressLayout glad_glMultTransposeMatrixfARB$layout() {
        return glad_glMultTransposeMatrixfARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTTRANSPOSEMATRIXFARBPROC glad_glMultTransposeMatrixfARB
     * }
     */
    public static MemorySegment glad_glMultTransposeMatrixfARB$segment() {
        return glad_glMultTransposeMatrixfARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTTRANSPOSEMATRIXFARBPROC glad_glMultTransposeMatrixfARB
     * }
     */
    public static MemorySegment glad_glMultTransposeMatrixfARB() {
        return glad_glMultTransposeMatrixfARB$constants.SEGMENT.get(glad_glMultTransposeMatrixfARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTTRANSPOSEMATRIXFARBPROC glad_glMultTransposeMatrixfARB
     * }
     */
    public static void glad_glMultTransposeMatrixfARB(MemorySegment varValue) {
        glad_glMultTransposeMatrixfARB$constants.SEGMENT.set(glad_glMultTransposeMatrixfARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultTransposeMatrixfARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultTransposeMatrixfARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTTRANSPOSEMATRIXFARBPROC glad_debug_glMultTransposeMatrixfARB
     * }
     */
    public static AddressLayout glad_debug_glMultTransposeMatrixfARB$layout() {
        return glad_debug_glMultTransposeMatrixfARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTTRANSPOSEMATRIXFARBPROC glad_debug_glMultTransposeMatrixfARB
     * }
     */
    public static MemorySegment glad_debug_glMultTransposeMatrixfARB$segment() {
        return glad_debug_glMultTransposeMatrixfARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTTRANSPOSEMATRIXFARBPROC glad_debug_glMultTransposeMatrixfARB
     * }
     */
    public static MemorySegment glad_debug_glMultTransposeMatrixfARB() {
        return glad_debug_glMultTransposeMatrixfARB$constants.SEGMENT.get(glad_debug_glMultTransposeMatrixfARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTTRANSPOSEMATRIXFARBPROC glad_debug_glMultTransposeMatrixfARB
     * }
     */
    public static void glad_debug_glMultTransposeMatrixfARB(MemorySegment varValue) {
        glad_debug_glMultTransposeMatrixfARB$constants.SEGMENT.set(glad_debug_glMultTransposeMatrixfARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiDrawArrays$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiDrawArrays").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWARRAYSPROC glad_glMultiDrawArrays
     * }
     */
    public static AddressLayout glad_glMultiDrawArrays$layout() {
        return glad_glMultiDrawArrays$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWARRAYSPROC glad_glMultiDrawArrays
     * }
     */
    public static MemorySegment glad_glMultiDrawArrays$segment() {
        return glad_glMultiDrawArrays$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWARRAYSPROC glad_glMultiDrawArrays
     * }
     */
    public static MemorySegment glad_glMultiDrawArrays() {
        return glad_glMultiDrawArrays$constants.SEGMENT.get(glad_glMultiDrawArrays$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWARRAYSPROC glad_glMultiDrawArrays
     * }
     */
    public static void glad_glMultiDrawArrays(MemorySegment varValue) {
        glad_glMultiDrawArrays$constants.SEGMENT.set(glad_glMultiDrawArrays$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiDrawArrays$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiDrawArrays").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWARRAYSPROC glad_debug_glMultiDrawArrays
     * }
     */
    public static AddressLayout glad_debug_glMultiDrawArrays$layout() {
        return glad_debug_glMultiDrawArrays$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWARRAYSPROC glad_debug_glMultiDrawArrays
     * }
     */
    public static MemorySegment glad_debug_glMultiDrawArrays$segment() {
        return glad_debug_glMultiDrawArrays$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWARRAYSPROC glad_debug_glMultiDrawArrays
     * }
     */
    public static MemorySegment glad_debug_glMultiDrawArrays() {
        return glad_debug_glMultiDrawArrays$constants.SEGMENT.get(glad_debug_glMultiDrawArrays$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWARRAYSPROC glad_debug_glMultiDrawArrays
     * }
     */
    public static void glad_debug_glMultiDrawArrays(MemorySegment varValue) {
        glad_debug_glMultiDrawArrays$constants.SEGMENT.set(glad_debug_glMultiDrawArrays$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiDrawArraysEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiDrawArraysEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWARRAYSEXTPROC glad_glMultiDrawArraysEXT
     * }
     */
    public static AddressLayout glad_glMultiDrawArraysEXT$layout() {
        return glad_glMultiDrawArraysEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWARRAYSEXTPROC glad_glMultiDrawArraysEXT
     * }
     */
    public static MemorySegment glad_glMultiDrawArraysEXT$segment() {
        return glad_glMultiDrawArraysEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWARRAYSEXTPROC glad_glMultiDrawArraysEXT
     * }
     */
    public static MemorySegment glad_glMultiDrawArraysEXT() {
        return glad_glMultiDrawArraysEXT$constants.SEGMENT.get(glad_glMultiDrawArraysEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWARRAYSEXTPROC glad_glMultiDrawArraysEXT
     * }
     */
    public static void glad_glMultiDrawArraysEXT(MemorySegment varValue) {
        glad_glMultiDrawArraysEXT$constants.SEGMENT.set(glad_glMultiDrawArraysEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiDrawArraysEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiDrawArraysEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWARRAYSEXTPROC glad_debug_glMultiDrawArraysEXT
     * }
     */
    public static AddressLayout glad_debug_glMultiDrawArraysEXT$layout() {
        return glad_debug_glMultiDrawArraysEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWARRAYSEXTPROC glad_debug_glMultiDrawArraysEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiDrawArraysEXT$segment() {
        return glad_debug_glMultiDrawArraysEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWARRAYSEXTPROC glad_debug_glMultiDrawArraysEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiDrawArraysEXT() {
        return glad_debug_glMultiDrawArraysEXT$constants.SEGMENT.get(glad_debug_glMultiDrawArraysEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWARRAYSEXTPROC glad_debug_glMultiDrawArraysEXT
     * }
     */
    public static void glad_debug_glMultiDrawArraysEXT(MemorySegment varValue) {
        glad_debug_glMultiDrawArraysEXT$constants.SEGMENT.set(glad_debug_glMultiDrawArraysEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiDrawArraysIndirect$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiDrawArraysIndirect").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWARRAYSINDIRECTPROC glad_glMultiDrawArraysIndirect
     * }
     */
    public static AddressLayout glad_glMultiDrawArraysIndirect$layout() {
        return glad_glMultiDrawArraysIndirect$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWARRAYSINDIRECTPROC glad_glMultiDrawArraysIndirect
     * }
     */
    public static MemorySegment glad_glMultiDrawArraysIndirect$segment() {
        return glad_glMultiDrawArraysIndirect$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWARRAYSINDIRECTPROC glad_glMultiDrawArraysIndirect
     * }
     */
    public static MemorySegment glad_glMultiDrawArraysIndirect() {
        return glad_glMultiDrawArraysIndirect$constants.SEGMENT.get(glad_glMultiDrawArraysIndirect$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWARRAYSINDIRECTPROC glad_glMultiDrawArraysIndirect
     * }
     */
    public static void glad_glMultiDrawArraysIndirect(MemorySegment varValue) {
        glad_glMultiDrawArraysIndirect$constants.SEGMENT.set(glad_glMultiDrawArraysIndirect$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiDrawArraysIndirect$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiDrawArraysIndirect").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWARRAYSINDIRECTPROC glad_debug_glMultiDrawArraysIndirect
     * }
     */
    public static AddressLayout glad_debug_glMultiDrawArraysIndirect$layout() {
        return glad_debug_glMultiDrawArraysIndirect$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWARRAYSINDIRECTPROC glad_debug_glMultiDrawArraysIndirect
     * }
     */
    public static MemorySegment glad_debug_glMultiDrawArraysIndirect$segment() {
        return glad_debug_glMultiDrawArraysIndirect$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWARRAYSINDIRECTPROC glad_debug_glMultiDrawArraysIndirect
     * }
     */
    public static MemorySegment glad_debug_glMultiDrawArraysIndirect() {
        return glad_debug_glMultiDrawArraysIndirect$constants.SEGMENT.get(glad_debug_glMultiDrawArraysIndirect$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWARRAYSINDIRECTPROC glad_debug_glMultiDrawArraysIndirect
     * }
     */
    public static void glad_debug_glMultiDrawArraysIndirect(MemorySegment varValue) {
        glad_debug_glMultiDrawArraysIndirect$constants.SEGMENT.set(glad_debug_glMultiDrawArraysIndirect$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiDrawArraysIndirectAMD$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiDrawArraysIndirectAMD").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC glad_glMultiDrawArraysIndirectAMD
     * }
     */
    public static AddressLayout glad_glMultiDrawArraysIndirectAMD$layout() {
        return glad_glMultiDrawArraysIndirectAMD$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC glad_glMultiDrawArraysIndirectAMD
     * }
     */
    public static MemorySegment glad_glMultiDrawArraysIndirectAMD$segment() {
        return glad_glMultiDrawArraysIndirectAMD$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC glad_glMultiDrawArraysIndirectAMD
     * }
     */
    public static MemorySegment glad_glMultiDrawArraysIndirectAMD() {
        return glad_glMultiDrawArraysIndirectAMD$constants.SEGMENT.get(glad_glMultiDrawArraysIndirectAMD$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC glad_glMultiDrawArraysIndirectAMD
     * }
     */
    public static void glad_glMultiDrawArraysIndirectAMD(MemorySegment varValue) {
        glad_glMultiDrawArraysIndirectAMD$constants.SEGMENT.set(glad_glMultiDrawArraysIndirectAMD$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiDrawArraysIndirectAMD$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiDrawArraysIndirectAMD").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC glad_debug_glMultiDrawArraysIndirectAMD
     * }
     */
    public static AddressLayout glad_debug_glMultiDrawArraysIndirectAMD$layout() {
        return glad_debug_glMultiDrawArraysIndirectAMD$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC glad_debug_glMultiDrawArraysIndirectAMD
     * }
     */
    public static MemorySegment glad_debug_glMultiDrawArraysIndirectAMD$segment() {
        return glad_debug_glMultiDrawArraysIndirectAMD$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC glad_debug_glMultiDrawArraysIndirectAMD
     * }
     */
    public static MemorySegment glad_debug_glMultiDrawArraysIndirectAMD() {
        return glad_debug_glMultiDrawArraysIndirectAMD$constants.SEGMENT.get(glad_debug_glMultiDrawArraysIndirectAMD$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC glad_debug_glMultiDrawArraysIndirectAMD
     * }
     */
    public static void glad_debug_glMultiDrawArraysIndirectAMD(MemorySegment varValue) {
        glad_debug_glMultiDrawArraysIndirectAMD$constants.SEGMENT.set(glad_debug_glMultiDrawArraysIndirectAMD$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiDrawArraysIndirectCount$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiDrawArraysIndirectCount").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC glad_glMultiDrawArraysIndirectCount
     * }
     */
    public static AddressLayout glad_glMultiDrawArraysIndirectCount$layout() {
        return glad_glMultiDrawArraysIndirectCount$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC glad_glMultiDrawArraysIndirectCount
     * }
     */
    public static MemorySegment glad_glMultiDrawArraysIndirectCount$segment() {
        return glad_glMultiDrawArraysIndirectCount$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC glad_glMultiDrawArraysIndirectCount
     * }
     */
    public static MemorySegment glad_glMultiDrawArraysIndirectCount() {
        return glad_glMultiDrawArraysIndirectCount$constants.SEGMENT.get(glad_glMultiDrawArraysIndirectCount$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC glad_glMultiDrawArraysIndirectCount
     * }
     */
    public static void glad_glMultiDrawArraysIndirectCount(MemorySegment varValue) {
        glad_glMultiDrawArraysIndirectCount$constants.SEGMENT.set(glad_glMultiDrawArraysIndirectCount$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiDrawArraysIndirectCount$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiDrawArraysIndirectCount").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC glad_debug_glMultiDrawArraysIndirectCount
     * }
     */
    public static AddressLayout glad_debug_glMultiDrawArraysIndirectCount$layout() {
        return glad_debug_glMultiDrawArraysIndirectCount$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC glad_debug_glMultiDrawArraysIndirectCount
     * }
     */
    public static MemorySegment glad_debug_glMultiDrawArraysIndirectCount$segment() {
        return glad_debug_glMultiDrawArraysIndirectCount$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC glad_debug_glMultiDrawArraysIndirectCount
     * }
     */
    public static MemorySegment glad_debug_glMultiDrawArraysIndirectCount() {
        return glad_debug_glMultiDrawArraysIndirectCount$constants.SEGMENT.get(glad_debug_glMultiDrawArraysIndirectCount$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC glad_debug_glMultiDrawArraysIndirectCount
     * }
     */
    public static void glad_debug_glMultiDrawArraysIndirectCount(MemorySegment varValue) {
        glad_debug_glMultiDrawArraysIndirectCount$constants.SEGMENT.set(glad_debug_glMultiDrawArraysIndirectCount$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiDrawArraysIndirectCountARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiDrawArraysIndirectCountARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC glad_glMultiDrawArraysIndirectCountARB
     * }
     */
    public static AddressLayout glad_glMultiDrawArraysIndirectCountARB$layout() {
        return glad_glMultiDrawArraysIndirectCountARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC glad_glMultiDrawArraysIndirectCountARB
     * }
     */
    public static MemorySegment glad_glMultiDrawArraysIndirectCountARB$segment() {
        return glad_glMultiDrawArraysIndirectCountARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC glad_glMultiDrawArraysIndirectCountARB
     * }
     */
    public static MemorySegment glad_glMultiDrawArraysIndirectCountARB() {
        return glad_glMultiDrawArraysIndirectCountARB$constants.SEGMENT.get(glad_glMultiDrawArraysIndirectCountARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC glad_glMultiDrawArraysIndirectCountARB
     * }
     */
    public static void glad_glMultiDrawArraysIndirectCountARB(MemorySegment varValue) {
        glad_glMultiDrawArraysIndirectCountARB$constants.SEGMENT.set(glad_glMultiDrawArraysIndirectCountARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiDrawArraysIndirectCountARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiDrawArraysIndirectCountARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC glad_debug_glMultiDrawArraysIndirectCountARB
     * }
     */
    public static AddressLayout glad_debug_glMultiDrawArraysIndirectCountARB$layout() {
        return glad_debug_glMultiDrawArraysIndirectCountARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC glad_debug_glMultiDrawArraysIndirectCountARB
     * }
     */
    public static MemorySegment glad_debug_glMultiDrawArraysIndirectCountARB$segment() {
        return glad_debug_glMultiDrawArraysIndirectCountARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC glad_debug_glMultiDrawArraysIndirectCountARB
     * }
     */
    public static MemorySegment glad_debug_glMultiDrawArraysIndirectCountARB() {
        return glad_debug_glMultiDrawArraysIndirectCountARB$constants.SEGMENT.get(glad_debug_glMultiDrawArraysIndirectCountARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC glad_debug_glMultiDrawArraysIndirectCountARB
     * }
     */
    public static void glad_debug_glMultiDrawArraysIndirectCountARB(MemorySegment varValue) {
        glad_debug_glMultiDrawArraysIndirectCountARB$constants.SEGMENT.set(glad_debug_glMultiDrawArraysIndirectCountARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiDrawElements$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiDrawElements").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSPROC glad_glMultiDrawElements
     * }
     */
    public static AddressLayout glad_glMultiDrawElements$layout() {
        return glad_glMultiDrawElements$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSPROC glad_glMultiDrawElements
     * }
     */
    public static MemorySegment glad_glMultiDrawElements$segment() {
        return glad_glMultiDrawElements$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSPROC glad_glMultiDrawElements
     * }
     */
    public static MemorySegment glad_glMultiDrawElements() {
        return glad_glMultiDrawElements$constants.SEGMENT.get(glad_glMultiDrawElements$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSPROC glad_glMultiDrawElements
     * }
     */
    public static void glad_glMultiDrawElements(MemorySegment varValue) {
        glad_glMultiDrawElements$constants.SEGMENT.set(glad_glMultiDrawElements$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiDrawElements$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiDrawElements").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSPROC glad_debug_glMultiDrawElements
     * }
     */
    public static AddressLayout glad_debug_glMultiDrawElements$layout() {
        return glad_debug_glMultiDrawElements$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSPROC glad_debug_glMultiDrawElements
     * }
     */
    public static MemorySegment glad_debug_glMultiDrawElements$segment() {
        return glad_debug_glMultiDrawElements$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSPROC glad_debug_glMultiDrawElements
     * }
     */
    public static MemorySegment glad_debug_glMultiDrawElements() {
        return glad_debug_glMultiDrawElements$constants.SEGMENT.get(glad_debug_glMultiDrawElements$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSPROC glad_debug_glMultiDrawElements
     * }
     */
    public static void glad_debug_glMultiDrawElements(MemorySegment varValue) {
        glad_debug_glMultiDrawElements$constants.SEGMENT.set(glad_debug_glMultiDrawElements$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiDrawElementsBaseVertex$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiDrawElementsBaseVertex").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC glad_glMultiDrawElementsBaseVertex
     * }
     */
    public static AddressLayout glad_glMultiDrawElementsBaseVertex$layout() {
        return glad_glMultiDrawElementsBaseVertex$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC glad_glMultiDrawElementsBaseVertex
     * }
     */
    public static MemorySegment glad_glMultiDrawElementsBaseVertex$segment() {
        return glad_glMultiDrawElementsBaseVertex$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC glad_glMultiDrawElementsBaseVertex
     * }
     */
    public static MemorySegment glad_glMultiDrawElementsBaseVertex() {
        return glad_glMultiDrawElementsBaseVertex$constants.SEGMENT.get(glad_glMultiDrawElementsBaseVertex$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC glad_glMultiDrawElementsBaseVertex
     * }
     */
    public static void glad_glMultiDrawElementsBaseVertex(MemorySegment varValue) {
        glad_glMultiDrawElementsBaseVertex$constants.SEGMENT.set(glad_glMultiDrawElementsBaseVertex$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiDrawElementsBaseVertex$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiDrawElementsBaseVertex").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC glad_debug_glMultiDrawElementsBaseVertex
     * }
     */
    public static AddressLayout glad_debug_glMultiDrawElementsBaseVertex$layout() {
        return glad_debug_glMultiDrawElementsBaseVertex$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC glad_debug_glMultiDrawElementsBaseVertex
     * }
     */
    public static MemorySegment glad_debug_glMultiDrawElementsBaseVertex$segment() {
        return glad_debug_glMultiDrawElementsBaseVertex$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC glad_debug_glMultiDrawElementsBaseVertex
     * }
     */
    public static MemorySegment glad_debug_glMultiDrawElementsBaseVertex() {
        return glad_debug_glMultiDrawElementsBaseVertex$constants.SEGMENT.get(glad_debug_glMultiDrawElementsBaseVertex$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC glad_debug_glMultiDrawElementsBaseVertex
     * }
     */
    public static void glad_debug_glMultiDrawElementsBaseVertex(MemorySegment varValue) {
        glad_debug_glMultiDrawElementsBaseVertex$constants.SEGMENT.set(glad_debug_glMultiDrawElementsBaseVertex$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiDrawElementsEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiDrawElementsEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSEXTPROC glad_glMultiDrawElementsEXT
     * }
     */
    public static AddressLayout glad_glMultiDrawElementsEXT$layout() {
        return glad_glMultiDrawElementsEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSEXTPROC glad_glMultiDrawElementsEXT
     * }
     */
    public static MemorySegment glad_glMultiDrawElementsEXT$segment() {
        return glad_glMultiDrawElementsEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSEXTPROC glad_glMultiDrawElementsEXT
     * }
     */
    public static MemorySegment glad_glMultiDrawElementsEXT() {
        return glad_glMultiDrawElementsEXT$constants.SEGMENT.get(glad_glMultiDrawElementsEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSEXTPROC glad_glMultiDrawElementsEXT
     * }
     */
    public static void glad_glMultiDrawElementsEXT(MemorySegment varValue) {
        glad_glMultiDrawElementsEXT$constants.SEGMENT.set(glad_glMultiDrawElementsEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiDrawElementsEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiDrawElementsEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSEXTPROC glad_debug_glMultiDrawElementsEXT
     * }
     */
    public static AddressLayout glad_debug_glMultiDrawElementsEXT$layout() {
        return glad_debug_glMultiDrawElementsEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSEXTPROC glad_debug_glMultiDrawElementsEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiDrawElementsEXT$segment() {
        return glad_debug_glMultiDrawElementsEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSEXTPROC glad_debug_glMultiDrawElementsEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiDrawElementsEXT() {
        return glad_debug_glMultiDrawElementsEXT$constants.SEGMENT.get(glad_debug_glMultiDrawElementsEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSEXTPROC glad_debug_glMultiDrawElementsEXT
     * }
     */
    public static void glad_debug_glMultiDrawElementsEXT(MemorySegment varValue) {
        glad_debug_glMultiDrawElementsEXT$constants.SEGMENT.set(glad_debug_glMultiDrawElementsEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiDrawElementsIndirect$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiDrawElementsIndirect").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSINDIRECTPROC glad_glMultiDrawElementsIndirect
     * }
     */
    public static AddressLayout glad_glMultiDrawElementsIndirect$layout() {
        return glad_glMultiDrawElementsIndirect$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSINDIRECTPROC glad_glMultiDrawElementsIndirect
     * }
     */
    public static MemorySegment glad_glMultiDrawElementsIndirect$segment() {
        return glad_glMultiDrawElementsIndirect$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSINDIRECTPROC glad_glMultiDrawElementsIndirect
     * }
     */
    public static MemorySegment glad_glMultiDrawElementsIndirect() {
        return glad_glMultiDrawElementsIndirect$constants.SEGMENT.get(glad_glMultiDrawElementsIndirect$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSINDIRECTPROC glad_glMultiDrawElementsIndirect
     * }
     */
    public static void glad_glMultiDrawElementsIndirect(MemorySegment varValue) {
        glad_glMultiDrawElementsIndirect$constants.SEGMENT.set(glad_glMultiDrawElementsIndirect$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiDrawElementsIndirect$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiDrawElementsIndirect").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSINDIRECTPROC glad_debug_glMultiDrawElementsIndirect
     * }
     */
    public static AddressLayout glad_debug_glMultiDrawElementsIndirect$layout() {
        return glad_debug_glMultiDrawElementsIndirect$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSINDIRECTPROC glad_debug_glMultiDrawElementsIndirect
     * }
     */
    public static MemorySegment glad_debug_glMultiDrawElementsIndirect$segment() {
        return glad_debug_glMultiDrawElementsIndirect$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSINDIRECTPROC glad_debug_glMultiDrawElementsIndirect
     * }
     */
    public static MemorySegment glad_debug_glMultiDrawElementsIndirect() {
        return glad_debug_glMultiDrawElementsIndirect$constants.SEGMENT.get(glad_debug_glMultiDrawElementsIndirect$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSINDIRECTPROC glad_debug_glMultiDrawElementsIndirect
     * }
     */
    public static void glad_debug_glMultiDrawElementsIndirect(MemorySegment varValue) {
        glad_debug_glMultiDrawElementsIndirect$constants.SEGMENT.set(glad_debug_glMultiDrawElementsIndirect$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiDrawElementsIndirectAMD$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiDrawElementsIndirectAMD").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC glad_glMultiDrawElementsIndirectAMD
     * }
     */
    public static AddressLayout glad_glMultiDrawElementsIndirectAMD$layout() {
        return glad_glMultiDrawElementsIndirectAMD$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC glad_glMultiDrawElementsIndirectAMD
     * }
     */
    public static MemorySegment glad_glMultiDrawElementsIndirectAMD$segment() {
        return glad_glMultiDrawElementsIndirectAMD$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC glad_glMultiDrawElementsIndirectAMD
     * }
     */
    public static MemorySegment glad_glMultiDrawElementsIndirectAMD() {
        return glad_glMultiDrawElementsIndirectAMD$constants.SEGMENT.get(glad_glMultiDrawElementsIndirectAMD$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC glad_glMultiDrawElementsIndirectAMD
     * }
     */
    public static void glad_glMultiDrawElementsIndirectAMD(MemorySegment varValue) {
        glad_glMultiDrawElementsIndirectAMD$constants.SEGMENT.set(glad_glMultiDrawElementsIndirectAMD$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiDrawElementsIndirectAMD$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiDrawElementsIndirectAMD").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC glad_debug_glMultiDrawElementsIndirectAMD
     * }
     */
    public static AddressLayout glad_debug_glMultiDrawElementsIndirectAMD$layout() {
        return glad_debug_glMultiDrawElementsIndirectAMD$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC glad_debug_glMultiDrawElementsIndirectAMD
     * }
     */
    public static MemorySegment glad_debug_glMultiDrawElementsIndirectAMD$segment() {
        return glad_debug_glMultiDrawElementsIndirectAMD$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC glad_debug_glMultiDrawElementsIndirectAMD
     * }
     */
    public static MemorySegment glad_debug_glMultiDrawElementsIndirectAMD() {
        return glad_debug_glMultiDrawElementsIndirectAMD$constants.SEGMENT.get(glad_debug_glMultiDrawElementsIndirectAMD$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC glad_debug_glMultiDrawElementsIndirectAMD
     * }
     */
    public static void glad_debug_glMultiDrawElementsIndirectAMD(MemorySegment varValue) {
        glad_debug_glMultiDrawElementsIndirectAMD$constants.SEGMENT.set(glad_debug_glMultiDrawElementsIndirectAMD$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiDrawElementsIndirectCount$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiDrawElementsIndirectCount").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC glad_glMultiDrawElementsIndirectCount
     * }
     */
    public static AddressLayout glad_glMultiDrawElementsIndirectCount$layout() {
        return glad_glMultiDrawElementsIndirectCount$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC glad_glMultiDrawElementsIndirectCount
     * }
     */
    public static MemorySegment glad_glMultiDrawElementsIndirectCount$segment() {
        return glad_glMultiDrawElementsIndirectCount$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC glad_glMultiDrawElementsIndirectCount
     * }
     */
    public static MemorySegment glad_glMultiDrawElementsIndirectCount() {
        return glad_glMultiDrawElementsIndirectCount$constants.SEGMENT.get(glad_glMultiDrawElementsIndirectCount$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC glad_glMultiDrawElementsIndirectCount
     * }
     */
    public static void glad_glMultiDrawElementsIndirectCount(MemorySegment varValue) {
        glad_glMultiDrawElementsIndirectCount$constants.SEGMENT.set(glad_glMultiDrawElementsIndirectCount$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiDrawElementsIndirectCount$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiDrawElementsIndirectCount").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC glad_debug_glMultiDrawElementsIndirectCount
     * }
     */
    public static AddressLayout glad_debug_glMultiDrawElementsIndirectCount$layout() {
        return glad_debug_glMultiDrawElementsIndirectCount$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC glad_debug_glMultiDrawElementsIndirectCount
     * }
     */
    public static MemorySegment glad_debug_glMultiDrawElementsIndirectCount$segment() {
        return glad_debug_glMultiDrawElementsIndirectCount$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC glad_debug_glMultiDrawElementsIndirectCount
     * }
     */
    public static MemorySegment glad_debug_glMultiDrawElementsIndirectCount() {
        return glad_debug_glMultiDrawElementsIndirectCount$constants.SEGMENT.get(glad_debug_glMultiDrawElementsIndirectCount$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC glad_debug_glMultiDrawElementsIndirectCount
     * }
     */
    public static void glad_debug_glMultiDrawElementsIndirectCount(MemorySegment varValue) {
        glad_debug_glMultiDrawElementsIndirectCount$constants.SEGMENT.set(glad_debug_glMultiDrawElementsIndirectCount$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiDrawElementsIndirectCountARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiDrawElementsIndirectCountARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC glad_glMultiDrawElementsIndirectCountARB
     * }
     */
    public static AddressLayout glad_glMultiDrawElementsIndirectCountARB$layout() {
        return glad_glMultiDrawElementsIndirectCountARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC glad_glMultiDrawElementsIndirectCountARB
     * }
     */
    public static MemorySegment glad_glMultiDrawElementsIndirectCountARB$segment() {
        return glad_glMultiDrawElementsIndirectCountARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC glad_glMultiDrawElementsIndirectCountARB
     * }
     */
    public static MemorySegment glad_glMultiDrawElementsIndirectCountARB() {
        return glad_glMultiDrawElementsIndirectCountARB$constants.SEGMENT.get(glad_glMultiDrawElementsIndirectCountARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC glad_glMultiDrawElementsIndirectCountARB
     * }
     */
    public static void glad_glMultiDrawElementsIndirectCountARB(MemorySegment varValue) {
        glad_glMultiDrawElementsIndirectCountARB$constants.SEGMENT.set(glad_glMultiDrawElementsIndirectCountARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiDrawElementsIndirectCountARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiDrawElementsIndirectCountARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC glad_debug_glMultiDrawElementsIndirectCountARB
     * }
     */
    public static AddressLayout glad_debug_glMultiDrawElementsIndirectCountARB$layout() {
        return glad_debug_glMultiDrawElementsIndirectCountARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC glad_debug_glMultiDrawElementsIndirectCountARB
     * }
     */
    public static MemorySegment glad_debug_glMultiDrawElementsIndirectCountARB$segment() {
        return glad_debug_glMultiDrawElementsIndirectCountARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC glad_debug_glMultiDrawElementsIndirectCountARB
     * }
     */
    public static MemorySegment glad_debug_glMultiDrawElementsIndirectCountARB() {
        return glad_debug_glMultiDrawElementsIndirectCountARB$constants.SEGMENT.get(glad_debug_glMultiDrawElementsIndirectCountARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC glad_debug_glMultiDrawElementsIndirectCountARB
     * }
     */
    public static void glad_debug_glMultiDrawElementsIndirectCountARB(MemorySegment varValue) {
        glad_debug_glMultiDrawElementsIndirectCountARB$constants.SEGMENT.set(glad_debug_glMultiDrawElementsIndirectCountARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexBufferEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexBufferEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXBUFFEREXTPROC glad_glMultiTexBufferEXT
     * }
     */
    public static AddressLayout glad_glMultiTexBufferEXT$layout() {
        return glad_glMultiTexBufferEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXBUFFEREXTPROC glad_glMultiTexBufferEXT
     * }
     */
    public static MemorySegment glad_glMultiTexBufferEXT$segment() {
        return glad_glMultiTexBufferEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXBUFFEREXTPROC glad_glMultiTexBufferEXT
     * }
     */
    public static MemorySegment glad_glMultiTexBufferEXT() {
        return glad_glMultiTexBufferEXT$constants.SEGMENT.get(glad_glMultiTexBufferEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXBUFFEREXTPROC glad_glMultiTexBufferEXT
     * }
     */
    public static void glad_glMultiTexBufferEXT(MemorySegment varValue) {
        glad_glMultiTexBufferEXT$constants.SEGMENT.set(glad_glMultiTexBufferEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexBufferEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexBufferEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXBUFFEREXTPROC glad_debug_glMultiTexBufferEXT
     * }
     */
    public static AddressLayout glad_debug_glMultiTexBufferEXT$layout() {
        return glad_debug_glMultiTexBufferEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXBUFFEREXTPROC glad_debug_glMultiTexBufferEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiTexBufferEXT$segment() {
        return glad_debug_glMultiTexBufferEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXBUFFEREXTPROC glad_debug_glMultiTexBufferEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiTexBufferEXT() {
        return glad_debug_glMultiTexBufferEXT$constants.SEGMENT.get(glad_debug_glMultiTexBufferEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXBUFFEREXTPROC glad_debug_glMultiTexBufferEXT
     * }
     */
    public static void glad_debug_glMultiTexBufferEXT(MemorySegment varValue) {
        glad_debug_glMultiTexBufferEXT$constants.SEGMENT.set(glad_debug_glMultiTexBufferEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord1d$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord1d").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1DPROC glad_glMultiTexCoord1d
     * }
     */
    public static AddressLayout glad_glMultiTexCoord1d$layout() {
        return glad_glMultiTexCoord1d$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1DPROC glad_glMultiTexCoord1d
     * }
     */
    public static MemorySegment glad_glMultiTexCoord1d$segment() {
        return glad_glMultiTexCoord1d$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1DPROC glad_glMultiTexCoord1d
     * }
     */
    public static MemorySegment glad_glMultiTexCoord1d() {
        return glad_glMultiTexCoord1d$constants.SEGMENT.get(glad_glMultiTexCoord1d$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1DPROC glad_glMultiTexCoord1d
     * }
     */
    public static void glad_glMultiTexCoord1d(MemorySegment varValue) {
        glad_glMultiTexCoord1d$constants.SEGMENT.set(glad_glMultiTexCoord1d$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord1d$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord1d").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1DPROC glad_debug_glMultiTexCoord1d
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord1d$layout() {
        return glad_debug_glMultiTexCoord1d$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1DPROC glad_debug_glMultiTexCoord1d
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord1d$segment() {
        return glad_debug_glMultiTexCoord1d$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1DPROC glad_debug_glMultiTexCoord1d
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord1d() {
        return glad_debug_glMultiTexCoord1d$constants.SEGMENT.get(glad_debug_glMultiTexCoord1d$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1DPROC glad_debug_glMultiTexCoord1d
     * }
     */
    public static void glad_debug_glMultiTexCoord1d(MemorySegment varValue) {
        glad_debug_glMultiTexCoord1d$constants.SEGMENT.set(glad_debug_glMultiTexCoord1d$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord1dARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord1dARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1DARBPROC glad_glMultiTexCoord1dARB
     * }
     */
    public static AddressLayout glad_glMultiTexCoord1dARB$layout() {
        return glad_glMultiTexCoord1dARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1DARBPROC glad_glMultiTexCoord1dARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord1dARB$segment() {
        return glad_glMultiTexCoord1dARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1DARBPROC glad_glMultiTexCoord1dARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord1dARB() {
        return glad_glMultiTexCoord1dARB$constants.SEGMENT.get(glad_glMultiTexCoord1dARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1DARBPROC glad_glMultiTexCoord1dARB
     * }
     */
    public static void glad_glMultiTexCoord1dARB(MemorySegment varValue) {
        glad_glMultiTexCoord1dARB$constants.SEGMENT.set(glad_glMultiTexCoord1dARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord1dARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord1dARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1DARBPROC glad_debug_glMultiTexCoord1dARB
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord1dARB$layout() {
        return glad_debug_glMultiTexCoord1dARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1DARBPROC glad_debug_glMultiTexCoord1dARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord1dARB$segment() {
        return glad_debug_glMultiTexCoord1dARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1DARBPROC glad_debug_glMultiTexCoord1dARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord1dARB() {
        return glad_debug_glMultiTexCoord1dARB$constants.SEGMENT.get(glad_debug_glMultiTexCoord1dARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1DARBPROC glad_debug_glMultiTexCoord1dARB
     * }
     */
    public static void glad_debug_glMultiTexCoord1dARB(MemorySegment varValue) {
        glad_debug_glMultiTexCoord1dARB$constants.SEGMENT.set(glad_debug_glMultiTexCoord1dARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord1dv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord1dv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1DVPROC glad_glMultiTexCoord1dv
     * }
     */
    public static AddressLayout glad_glMultiTexCoord1dv$layout() {
        return glad_glMultiTexCoord1dv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1DVPROC glad_glMultiTexCoord1dv
     * }
     */
    public static MemorySegment glad_glMultiTexCoord1dv$segment() {
        return glad_glMultiTexCoord1dv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1DVPROC glad_glMultiTexCoord1dv
     * }
     */
    public static MemorySegment glad_glMultiTexCoord1dv() {
        return glad_glMultiTexCoord1dv$constants.SEGMENT.get(glad_glMultiTexCoord1dv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1DVPROC glad_glMultiTexCoord1dv
     * }
     */
    public static void glad_glMultiTexCoord1dv(MemorySegment varValue) {
        glad_glMultiTexCoord1dv$constants.SEGMENT.set(glad_glMultiTexCoord1dv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord1dv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord1dv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1DVPROC glad_debug_glMultiTexCoord1dv
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord1dv$layout() {
        return glad_debug_glMultiTexCoord1dv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1DVPROC glad_debug_glMultiTexCoord1dv
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord1dv$segment() {
        return glad_debug_glMultiTexCoord1dv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1DVPROC glad_debug_glMultiTexCoord1dv
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord1dv() {
        return glad_debug_glMultiTexCoord1dv$constants.SEGMENT.get(glad_debug_glMultiTexCoord1dv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1DVPROC glad_debug_glMultiTexCoord1dv
     * }
     */
    public static void glad_debug_glMultiTexCoord1dv(MemorySegment varValue) {
        glad_debug_glMultiTexCoord1dv$constants.SEGMENT.set(glad_debug_glMultiTexCoord1dv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord1dvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord1dvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1DVARBPROC glad_glMultiTexCoord1dvARB
     * }
     */
    public static AddressLayout glad_glMultiTexCoord1dvARB$layout() {
        return glad_glMultiTexCoord1dvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1DVARBPROC glad_glMultiTexCoord1dvARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord1dvARB$segment() {
        return glad_glMultiTexCoord1dvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1DVARBPROC glad_glMultiTexCoord1dvARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord1dvARB() {
        return glad_glMultiTexCoord1dvARB$constants.SEGMENT.get(glad_glMultiTexCoord1dvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1DVARBPROC glad_glMultiTexCoord1dvARB
     * }
     */
    public static void glad_glMultiTexCoord1dvARB(MemorySegment varValue) {
        glad_glMultiTexCoord1dvARB$constants.SEGMENT.set(glad_glMultiTexCoord1dvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord1dvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord1dvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1DVARBPROC glad_debug_glMultiTexCoord1dvARB
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord1dvARB$layout() {
        return glad_debug_glMultiTexCoord1dvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1DVARBPROC glad_debug_glMultiTexCoord1dvARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord1dvARB$segment() {
        return glad_debug_glMultiTexCoord1dvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1DVARBPROC glad_debug_glMultiTexCoord1dvARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord1dvARB() {
        return glad_debug_glMultiTexCoord1dvARB$constants.SEGMENT.get(glad_debug_glMultiTexCoord1dvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1DVARBPROC glad_debug_glMultiTexCoord1dvARB
     * }
     */
    public static void glad_debug_glMultiTexCoord1dvARB(MemorySegment varValue) {
        glad_debug_glMultiTexCoord1dvARB$constants.SEGMENT.set(glad_debug_glMultiTexCoord1dvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord1f$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord1f").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1FPROC glad_glMultiTexCoord1f
     * }
     */
    public static AddressLayout glad_glMultiTexCoord1f$layout() {
        return glad_glMultiTexCoord1f$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1FPROC glad_glMultiTexCoord1f
     * }
     */
    public static MemorySegment glad_glMultiTexCoord1f$segment() {
        return glad_glMultiTexCoord1f$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1FPROC glad_glMultiTexCoord1f
     * }
     */
    public static MemorySegment glad_glMultiTexCoord1f() {
        return glad_glMultiTexCoord1f$constants.SEGMENT.get(glad_glMultiTexCoord1f$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1FPROC glad_glMultiTexCoord1f
     * }
     */
    public static void glad_glMultiTexCoord1f(MemorySegment varValue) {
        glad_glMultiTexCoord1f$constants.SEGMENT.set(glad_glMultiTexCoord1f$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord1f$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord1f").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1FPROC glad_debug_glMultiTexCoord1f
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord1f$layout() {
        return glad_debug_glMultiTexCoord1f$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1FPROC glad_debug_glMultiTexCoord1f
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord1f$segment() {
        return glad_debug_glMultiTexCoord1f$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1FPROC glad_debug_glMultiTexCoord1f
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord1f() {
        return glad_debug_glMultiTexCoord1f$constants.SEGMENT.get(glad_debug_glMultiTexCoord1f$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1FPROC glad_debug_glMultiTexCoord1f
     * }
     */
    public static void glad_debug_glMultiTexCoord1f(MemorySegment varValue) {
        glad_debug_glMultiTexCoord1f$constants.SEGMENT.set(glad_debug_glMultiTexCoord1f$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord1fARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord1fARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1FARBPROC glad_glMultiTexCoord1fARB
     * }
     */
    public static AddressLayout glad_glMultiTexCoord1fARB$layout() {
        return glad_glMultiTexCoord1fARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1FARBPROC glad_glMultiTexCoord1fARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord1fARB$segment() {
        return glad_glMultiTexCoord1fARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1FARBPROC glad_glMultiTexCoord1fARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord1fARB() {
        return glad_glMultiTexCoord1fARB$constants.SEGMENT.get(glad_glMultiTexCoord1fARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1FARBPROC glad_glMultiTexCoord1fARB
     * }
     */
    public static void glad_glMultiTexCoord1fARB(MemorySegment varValue) {
        glad_glMultiTexCoord1fARB$constants.SEGMENT.set(glad_glMultiTexCoord1fARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord1fARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord1fARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1FARBPROC glad_debug_glMultiTexCoord1fARB
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord1fARB$layout() {
        return glad_debug_glMultiTexCoord1fARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1FARBPROC glad_debug_glMultiTexCoord1fARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord1fARB$segment() {
        return glad_debug_glMultiTexCoord1fARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1FARBPROC glad_debug_glMultiTexCoord1fARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord1fARB() {
        return glad_debug_glMultiTexCoord1fARB$constants.SEGMENT.get(glad_debug_glMultiTexCoord1fARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1FARBPROC glad_debug_glMultiTexCoord1fARB
     * }
     */
    public static void glad_debug_glMultiTexCoord1fARB(MemorySegment varValue) {
        glad_debug_glMultiTexCoord1fARB$constants.SEGMENT.set(glad_debug_glMultiTexCoord1fARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord1fv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord1fv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1FVPROC glad_glMultiTexCoord1fv
     * }
     */
    public static AddressLayout glad_glMultiTexCoord1fv$layout() {
        return glad_glMultiTexCoord1fv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1FVPROC glad_glMultiTexCoord1fv
     * }
     */
    public static MemorySegment glad_glMultiTexCoord1fv$segment() {
        return glad_glMultiTexCoord1fv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1FVPROC glad_glMultiTexCoord1fv
     * }
     */
    public static MemorySegment glad_glMultiTexCoord1fv() {
        return glad_glMultiTexCoord1fv$constants.SEGMENT.get(glad_glMultiTexCoord1fv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1FVPROC glad_glMultiTexCoord1fv
     * }
     */
    public static void glad_glMultiTexCoord1fv(MemorySegment varValue) {
        glad_glMultiTexCoord1fv$constants.SEGMENT.set(glad_glMultiTexCoord1fv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord1fv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord1fv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1FVPROC glad_debug_glMultiTexCoord1fv
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord1fv$layout() {
        return glad_debug_glMultiTexCoord1fv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1FVPROC glad_debug_glMultiTexCoord1fv
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord1fv$segment() {
        return glad_debug_glMultiTexCoord1fv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1FVPROC glad_debug_glMultiTexCoord1fv
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord1fv() {
        return glad_debug_glMultiTexCoord1fv$constants.SEGMENT.get(glad_debug_glMultiTexCoord1fv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1FVPROC glad_debug_glMultiTexCoord1fv
     * }
     */
    public static void glad_debug_glMultiTexCoord1fv(MemorySegment varValue) {
        glad_debug_glMultiTexCoord1fv$constants.SEGMENT.set(glad_debug_glMultiTexCoord1fv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord1fvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord1fvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1FVARBPROC glad_glMultiTexCoord1fvARB
     * }
     */
    public static AddressLayout glad_glMultiTexCoord1fvARB$layout() {
        return glad_glMultiTexCoord1fvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1FVARBPROC glad_glMultiTexCoord1fvARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord1fvARB$segment() {
        return glad_glMultiTexCoord1fvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1FVARBPROC glad_glMultiTexCoord1fvARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord1fvARB() {
        return glad_glMultiTexCoord1fvARB$constants.SEGMENT.get(glad_glMultiTexCoord1fvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1FVARBPROC glad_glMultiTexCoord1fvARB
     * }
     */
    public static void glad_glMultiTexCoord1fvARB(MemorySegment varValue) {
        glad_glMultiTexCoord1fvARB$constants.SEGMENT.set(glad_glMultiTexCoord1fvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord1fvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord1fvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1FVARBPROC glad_debug_glMultiTexCoord1fvARB
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord1fvARB$layout() {
        return glad_debug_glMultiTexCoord1fvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1FVARBPROC glad_debug_glMultiTexCoord1fvARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord1fvARB$segment() {
        return glad_debug_glMultiTexCoord1fvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1FVARBPROC glad_debug_glMultiTexCoord1fvARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord1fvARB() {
        return glad_debug_glMultiTexCoord1fvARB$constants.SEGMENT.get(glad_debug_glMultiTexCoord1fvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1FVARBPROC glad_debug_glMultiTexCoord1fvARB
     * }
     */
    public static void glad_debug_glMultiTexCoord1fvARB(MemorySegment varValue) {
        glad_debug_glMultiTexCoord1fvARB$constants.SEGMENT.set(glad_debug_glMultiTexCoord1fvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord1i$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord1i").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1IPROC glad_glMultiTexCoord1i
     * }
     */
    public static AddressLayout glad_glMultiTexCoord1i$layout() {
        return glad_glMultiTexCoord1i$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1IPROC glad_glMultiTexCoord1i
     * }
     */
    public static MemorySegment glad_glMultiTexCoord1i$segment() {
        return glad_glMultiTexCoord1i$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1IPROC glad_glMultiTexCoord1i
     * }
     */
    public static MemorySegment glad_glMultiTexCoord1i() {
        return glad_glMultiTexCoord1i$constants.SEGMENT.get(glad_glMultiTexCoord1i$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1IPROC glad_glMultiTexCoord1i
     * }
     */
    public static void glad_glMultiTexCoord1i(MemorySegment varValue) {
        glad_glMultiTexCoord1i$constants.SEGMENT.set(glad_glMultiTexCoord1i$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord1i$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord1i").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1IPROC glad_debug_glMultiTexCoord1i
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord1i$layout() {
        return glad_debug_glMultiTexCoord1i$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1IPROC glad_debug_glMultiTexCoord1i
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord1i$segment() {
        return glad_debug_glMultiTexCoord1i$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1IPROC glad_debug_glMultiTexCoord1i
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord1i() {
        return glad_debug_glMultiTexCoord1i$constants.SEGMENT.get(glad_debug_glMultiTexCoord1i$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1IPROC glad_debug_glMultiTexCoord1i
     * }
     */
    public static void glad_debug_glMultiTexCoord1i(MemorySegment varValue) {
        glad_debug_glMultiTexCoord1i$constants.SEGMENT.set(glad_debug_glMultiTexCoord1i$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord1iARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord1iARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1IARBPROC glad_glMultiTexCoord1iARB
     * }
     */
    public static AddressLayout glad_glMultiTexCoord1iARB$layout() {
        return glad_glMultiTexCoord1iARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1IARBPROC glad_glMultiTexCoord1iARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord1iARB$segment() {
        return glad_glMultiTexCoord1iARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1IARBPROC glad_glMultiTexCoord1iARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord1iARB() {
        return glad_glMultiTexCoord1iARB$constants.SEGMENT.get(glad_glMultiTexCoord1iARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1IARBPROC glad_glMultiTexCoord1iARB
     * }
     */
    public static void glad_glMultiTexCoord1iARB(MemorySegment varValue) {
        glad_glMultiTexCoord1iARB$constants.SEGMENT.set(glad_glMultiTexCoord1iARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord1iARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord1iARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1IARBPROC glad_debug_glMultiTexCoord1iARB
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord1iARB$layout() {
        return glad_debug_glMultiTexCoord1iARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1IARBPROC glad_debug_glMultiTexCoord1iARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord1iARB$segment() {
        return glad_debug_glMultiTexCoord1iARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1IARBPROC glad_debug_glMultiTexCoord1iARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord1iARB() {
        return glad_debug_glMultiTexCoord1iARB$constants.SEGMENT.get(glad_debug_glMultiTexCoord1iARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1IARBPROC glad_debug_glMultiTexCoord1iARB
     * }
     */
    public static void glad_debug_glMultiTexCoord1iARB(MemorySegment varValue) {
        glad_debug_glMultiTexCoord1iARB$constants.SEGMENT.set(glad_debug_glMultiTexCoord1iARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord1iv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord1iv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1IVPROC glad_glMultiTexCoord1iv
     * }
     */
    public static AddressLayout glad_glMultiTexCoord1iv$layout() {
        return glad_glMultiTexCoord1iv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1IVPROC glad_glMultiTexCoord1iv
     * }
     */
    public static MemorySegment glad_glMultiTexCoord1iv$segment() {
        return glad_glMultiTexCoord1iv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1IVPROC glad_glMultiTexCoord1iv
     * }
     */
    public static MemorySegment glad_glMultiTexCoord1iv() {
        return glad_glMultiTexCoord1iv$constants.SEGMENT.get(glad_glMultiTexCoord1iv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1IVPROC glad_glMultiTexCoord1iv
     * }
     */
    public static void glad_glMultiTexCoord1iv(MemorySegment varValue) {
        glad_glMultiTexCoord1iv$constants.SEGMENT.set(glad_glMultiTexCoord1iv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord1iv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord1iv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1IVPROC glad_debug_glMultiTexCoord1iv
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord1iv$layout() {
        return glad_debug_glMultiTexCoord1iv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1IVPROC glad_debug_glMultiTexCoord1iv
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord1iv$segment() {
        return glad_debug_glMultiTexCoord1iv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1IVPROC glad_debug_glMultiTexCoord1iv
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord1iv() {
        return glad_debug_glMultiTexCoord1iv$constants.SEGMENT.get(glad_debug_glMultiTexCoord1iv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1IVPROC glad_debug_glMultiTexCoord1iv
     * }
     */
    public static void glad_debug_glMultiTexCoord1iv(MemorySegment varValue) {
        glad_debug_glMultiTexCoord1iv$constants.SEGMENT.set(glad_debug_glMultiTexCoord1iv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord1ivARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord1ivARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1IVARBPROC glad_glMultiTexCoord1ivARB
     * }
     */
    public static AddressLayout glad_glMultiTexCoord1ivARB$layout() {
        return glad_glMultiTexCoord1ivARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1IVARBPROC glad_glMultiTexCoord1ivARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord1ivARB$segment() {
        return glad_glMultiTexCoord1ivARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1IVARBPROC glad_glMultiTexCoord1ivARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord1ivARB() {
        return glad_glMultiTexCoord1ivARB$constants.SEGMENT.get(glad_glMultiTexCoord1ivARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1IVARBPROC glad_glMultiTexCoord1ivARB
     * }
     */
    public static void glad_glMultiTexCoord1ivARB(MemorySegment varValue) {
        glad_glMultiTexCoord1ivARB$constants.SEGMENT.set(glad_glMultiTexCoord1ivARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord1ivARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord1ivARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1IVARBPROC glad_debug_glMultiTexCoord1ivARB
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord1ivARB$layout() {
        return glad_debug_glMultiTexCoord1ivARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1IVARBPROC glad_debug_glMultiTexCoord1ivARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord1ivARB$segment() {
        return glad_debug_glMultiTexCoord1ivARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1IVARBPROC glad_debug_glMultiTexCoord1ivARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord1ivARB() {
        return glad_debug_glMultiTexCoord1ivARB$constants.SEGMENT.get(glad_debug_glMultiTexCoord1ivARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1IVARBPROC glad_debug_glMultiTexCoord1ivARB
     * }
     */
    public static void glad_debug_glMultiTexCoord1ivARB(MemorySegment varValue) {
        glad_debug_glMultiTexCoord1ivARB$constants.SEGMENT.set(glad_debug_glMultiTexCoord1ivARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord1s$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord1s").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1SPROC glad_glMultiTexCoord1s
     * }
     */
    public static AddressLayout glad_glMultiTexCoord1s$layout() {
        return glad_glMultiTexCoord1s$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1SPROC glad_glMultiTexCoord1s
     * }
     */
    public static MemorySegment glad_glMultiTexCoord1s$segment() {
        return glad_glMultiTexCoord1s$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1SPROC glad_glMultiTexCoord1s
     * }
     */
    public static MemorySegment glad_glMultiTexCoord1s() {
        return glad_glMultiTexCoord1s$constants.SEGMENT.get(glad_glMultiTexCoord1s$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1SPROC glad_glMultiTexCoord1s
     * }
     */
    public static void glad_glMultiTexCoord1s(MemorySegment varValue) {
        glad_glMultiTexCoord1s$constants.SEGMENT.set(glad_glMultiTexCoord1s$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord1s$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord1s").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1SPROC glad_debug_glMultiTexCoord1s
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord1s$layout() {
        return glad_debug_glMultiTexCoord1s$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1SPROC glad_debug_glMultiTexCoord1s
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord1s$segment() {
        return glad_debug_glMultiTexCoord1s$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1SPROC glad_debug_glMultiTexCoord1s
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord1s() {
        return glad_debug_glMultiTexCoord1s$constants.SEGMENT.get(glad_debug_glMultiTexCoord1s$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1SPROC glad_debug_glMultiTexCoord1s
     * }
     */
    public static void glad_debug_glMultiTexCoord1s(MemorySegment varValue) {
        glad_debug_glMultiTexCoord1s$constants.SEGMENT.set(glad_debug_glMultiTexCoord1s$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord1sARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord1sARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1SARBPROC glad_glMultiTexCoord1sARB
     * }
     */
    public static AddressLayout glad_glMultiTexCoord1sARB$layout() {
        return glad_glMultiTexCoord1sARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1SARBPROC glad_glMultiTexCoord1sARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord1sARB$segment() {
        return glad_glMultiTexCoord1sARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1SARBPROC glad_glMultiTexCoord1sARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord1sARB() {
        return glad_glMultiTexCoord1sARB$constants.SEGMENT.get(glad_glMultiTexCoord1sARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1SARBPROC glad_glMultiTexCoord1sARB
     * }
     */
    public static void glad_glMultiTexCoord1sARB(MemorySegment varValue) {
        glad_glMultiTexCoord1sARB$constants.SEGMENT.set(glad_glMultiTexCoord1sARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord1sARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord1sARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1SARBPROC glad_debug_glMultiTexCoord1sARB
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord1sARB$layout() {
        return glad_debug_glMultiTexCoord1sARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1SARBPROC glad_debug_glMultiTexCoord1sARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord1sARB$segment() {
        return glad_debug_glMultiTexCoord1sARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1SARBPROC glad_debug_glMultiTexCoord1sARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord1sARB() {
        return glad_debug_glMultiTexCoord1sARB$constants.SEGMENT.get(glad_debug_glMultiTexCoord1sARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1SARBPROC glad_debug_glMultiTexCoord1sARB
     * }
     */
    public static void glad_debug_glMultiTexCoord1sARB(MemorySegment varValue) {
        glad_debug_glMultiTexCoord1sARB$constants.SEGMENT.set(glad_debug_glMultiTexCoord1sARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord1sv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord1sv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1SVPROC glad_glMultiTexCoord1sv
     * }
     */
    public static AddressLayout glad_glMultiTexCoord1sv$layout() {
        return glad_glMultiTexCoord1sv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1SVPROC glad_glMultiTexCoord1sv
     * }
     */
    public static MemorySegment glad_glMultiTexCoord1sv$segment() {
        return glad_glMultiTexCoord1sv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1SVPROC glad_glMultiTexCoord1sv
     * }
     */
    public static MemorySegment glad_glMultiTexCoord1sv() {
        return glad_glMultiTexCoord1sv$constants.SEGMENT.get(glad_glMultiTexCoord1sv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1SVPROC glad_glMultiTexCoord1sv
     * }
     */
    public static void glad_glMultiTexCoord1sv(MemorySegment varValue) {
        glad_glMultiTexCoord1sv$constants.SEGMENT.set(glad_glMultiTexCoord1sv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord1sv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord1sv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1SVPROC glad_debug_glMultiTexCoord1sv
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord1sv$layout() {
        return glad_debug_glMultiTexCoord1sv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1SVPROC glad_debug_glMultiTexCoord1sv
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord1sv$segment() {
        return glad_debug_glMultiTexCoord1sv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1SVPROC glad_debug_glMultiTexCoord1sv
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord1sv() {
        return glad_debug_glMultiTexCoord1sv$constants.SEGMENT.get(glad_debug_glMultiTexCoord1sv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1SVPROC glad_debug_glMultiTexCoord1sv
     * }
     */
    public static void glad_debug_glMultiTexCoord1sv(MemorySegment varValue) {
        glad_debug_glMultiTexCoord1sv$constants.SEGMENT.set(glad_debug_glMultiTexCoord1sv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord1svARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord1svARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1SVARBPROC glad_glMultiTexCoord1svARB
     * }
     */
    public static AddressLayout glad_glMultiTexCoord1svARB$layout() {
        return glad_glMultiTexCoord1svARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1SVARBPROC glad_glMultiTexCoord1svARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord1svARB$segment() {
        return glad_glMultiTexCoord1svARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1SVARBPROC glad_glMultiTexCoord1svARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord1svARB() {
        return glad_glMultiTexCoord1svARB$constants.SEGMENT.get(glad_glMultiTexCoord1svARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1SVARBPROC glad_glMultiTexCoord1svARB
     * }
     */
    public static void glad_glMultiTexCoord1svARB(MemorySegment varValue) {
        glad_glMultiTexCoord1svARB$constants.SEGMENT.set(glad_glMultiTexCoord1svARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord1svARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord1svARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1SVARBPROC glad_debug_glMultiTexCoord1svARB
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord1svARB$layout() {
        return glad_debug_glMultiTexCoord1svARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1SVARBPROC glad_debug_glMultiTexCoord1svARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord1svARB$segment() {
        return glad_debug_glMultiTexCoord1svARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1SVARBPROC glad_debug_glMultiTexCoord1svARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord1svARB() {
        return glad_debug_glMultiTexCoord1svARB$constants.SEGMENT.get(glad_debug_glMultiTexCoord1svARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD1SVARBPROC glad_debug_glMultiTexCoord1svARB
     * }
     */
    public static void glad_debug_glMultiTexCoord1svARB(MemorySegment varValue) {
        glad_debug_glMultiTexCoord1svARB$constants.SEGMENT.set(glad_debug_glMultiTexCoord1svARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord2d$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord2d").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2DPROC glad_glMultiTexCoord2d
     * }
     */
    public static AddressLayout glad_glMultiTexCoord2d$layout() {
        return glad_glMultiTexCoord2d$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2DPROC glad_glMultiTexCoord2d
     * }
     */
    public static MemorySegment glad_glMultiTexCoord2d$segment() {
        return glad_glMultiTexCoord2d$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2DPROC glad_glMultiTexCoord2d
     * }
     */
    public static MemorySegment glad_glMultiTexCoord2d() {
        return glad_glMultiTexCoord2d$constants.SEGMENT.get(glad_glMultiTexCoord2d$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2DPROC glad_glMultiTexCoord2d
     * }
     */
    public static void glad_glMultiTexCoord2d(MemorySegment varValue) {
        glad_glMultiTexCoord2d$constants.SEGMENT.set(glad_glMultiTexCoord2d$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord2d$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord2d").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2DPROC glad_debug_glMultiTexCoord2d
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord2d$layout() {
        return glad_debug_glMultiTexCoord2d$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2DPROC glad_debug_glMultiTexCoord2d
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord2d$segment() {
        return glad_debug_glMultiTexCoord2d$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2DPROC glad_debug_glMultiTexCoord2d
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord2d() {
        return glad_debug_glMultiTexCoord2d$constants.SEGMENT.get(glad_debug_glMultiTexCoord2d$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2DPROC glad_debug_glMultiTexCoord2d
     * }
     */
    public static void glad_debug_glMultiTexCoord2d(MemorySegment varValue) {
        glad_debug_glMultiTexCoord2d$constants.SEGMENT.set(glad_debug_glMultiTexCoord2d$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord2dARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord2dARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2DARBPROC glad_glMultiTexCoord2dARB
     * }
     */
    public static AddressLayout glad_glMultiTexCoord2dARB$layout() {
        return glad_glMultiTexCoord2dARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2DARBPROC glad_glMultiTexCoord2dARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord2dARB$segment() {
        return glad_glMultiTexCoord2dARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2DARBPROC glad_glMultiTexCoord2dARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord2dARB() {
        return glad_glMultiTexCoord2dARB$constants.SEGMENT.get(glad_glMultiTexCoord2dARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2DARBPROC glad_glMultiTexCoord2dARB
     * }
     */
    public static void glad_glMultiTexCoord2dARB(MemorySegment varValue) {
        glad_glMultiTexCoord2dARB$constants.SEGMENT.set(glad_glMultiTexCoord2dARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord2dARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord2dARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2DARBPROC glad_debug_glMultiTexCoord2dARB
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord2dARB$layout() {
        return glad_debug_glMultiTexCoord2dARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2DARBPROC glad_debug_glMultiTexCoord2dARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord2dARB$segment() {
        return glad_debug_glMultiTexCoord2dARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2DARBPROC glad_debug_glMultiTexCoord2dARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord2dARB() {
        return glad_debug_glMultiTexCoord2dARB$constants.SEGMENT.get(glad_debug_glMultiTexCoord2dARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2DARBPROC glad_debug_glMultiTexCoord2dARB
     * }
     */
    public static void glad_debug_glMultiTexCoord2dARB(MemorySegment varValue) {
        glad_debug_glMultiTexCoord2dARB$constants.SEGMENT.set(glad_debug_glMultiTexCoord2dARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord2dv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord2dv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2DVPROC glad_glMultiTexCoord2dv
     * }
     */
    public static AddressLayout glad_glMultiTexCoord2dv$layout() {
        return glad_glMultiTexCoord2dv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2DVPROC glad_glMultiTexCoord2dv
     * }
     */
    public static MemorySegment glad_glMultiTexCoord2dv$segment() {
        return glad_glMultiTexCoord2dv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2DVPROC glad_glMultiTexCoord2dv
     * }
     */
    public static MemorySegment glad_glMultiTexCoord2dv() {
        return glad_glMultiTexCoord2dv$constants.SEGMENT.get(glad_glMultiTexCoord2dv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2DVPROC glad_glMultiTexCoord2dv
     * }
     */
    public static void glad_glMultiTexCoord2dv(MemorySegment varValue) {
        glad_glMultiTexCoord2dv$constants.SEGMENT.set(glad_glMultiTexCoord2dv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord2dv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord2dv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2DVPROC glad_debug_glMultiTexCoord2dv
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord2dv$layout() {
        return glad_debug_glMultiTexCoord2dv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2DVPROC glad_debug_glMultiTexCoord2dv
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord2dv$segment() {
        return glad_debug_glMultiTexCoord2dv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2DVPROC glad_debug_glMultiTexCoord2dv
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord2dv() {
        return glad_debug_glMultiTexCoord2dv$constants.SEGMENT.get(glad_debug_glMultiTexCoord2dv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2DVPROC glad_debug_glMultiTexCoord2dv
     * }
     */
    public static void glad_debug_glMultiTexCoord2dv(MemorySegment varValue) {
        glad_debug_glMultiTexCoord2dv$constants.SEGMENT.set(glad_debug_glMultiTexCoord2dv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord2dvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord2dvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2DVARBPROC glad_glMultiTexCoord2dvARB
     * }
     */
    public static AddressLayout glad_glMultiTexCoord2dvARB$layout() {
        return glad_glMultiTexCoord2dvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2DVARBPROC glad_glMultiTexCoord2dvARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord2dvARB$segment() {
        return glad_glMultiTexCoord2dvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2DVARBPROC glad_glMultiTexCoord2dvARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord2dvARB() {
        return glad_glMultiTexCoord2dvARB$constants.SEGMENT.get(glad_glMultiTexCoord2dvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2DVARBPROC glad_glMultiTexCoord2dvARB
     * }
     */
    public static void glad_glMultiTexCoord2dvARB(MemorySegment varValue) {
        glad_glMultiTexCoord2dvARB$constants.SEGMENT.set(glad_glMultiTexCoord2dvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord2dvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord2dvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2DVARBPROC glad_debug_glMultiTexCoord2dvARB
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord2dvARB$layout() {
        return glad_debug_glMultiTexCoord2dvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2DVARBPROC glad_debug_glMultiTexCoord2dvARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord2dvARB$segment() {
        return glad_debug_glMultiTexCoord2dvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2DVARBPROC glad_debug_glMultiTexCoord2dvARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord2dvARB() {
        return glad_debug_glMultiTexCoord2dvARB$constants.SEGMENT.get(glad_debug_glMultiTexCoord2dvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2DVARBPROC glad_debug_glMultiTexCoord2dvARB
     * }
     */
    public static void glad_debug_glMultiTexCoord2dvARB(MemorySegment varValue) {
        glad_debug_glMultiTexCoord2dvARB$constants.SEGMENT.set(glad_debug_glMultiTexCoord2dvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord2f$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord2f").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2FPROC glad_glMultiTexCoord2f
     * }
     */
    public static AddressLayout glad_glMultiTexCoord2f$layout() {
        return glad_glMultiTexCoord2f$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2FPROC glad_glMultiTexCoord2f
     * }
     */
    public static MemorySegment glad_glMultiTexCoord2f$segment() {
        return glad_glMultiTexCoord2f$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2FPROC glad_glMultiTexCoord2f
     * }
     */
    public static MemorySegment glad_glMultiTexCoord2f() {
        return glad_glMultiTexCoord2f$constants.SEGMENT.get(glad_glMultiTexCoord2f$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2FPROC glad_glMultiTexCoord2f
     * }
     */
    public static void glad_glMultiTexCoord2f(MemorySegment varValue) {
        glad_glMultiTexCoord2f$constants.SEGMENT.set(glad_glMultiTexCoord2f$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord2f$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord2f").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2FPROC glad_debug_glMultiTexCoord2f
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord2f$layout() {
        return glad_debug_glMultiTexCoord2f$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2FPROC glad_debug_glMultiTexCoord2f
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord2f$segment() {
        return glad_debug_glMultiTexCoord2f$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2FPROC glad_debug_glMultiTexCoord2f
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord2f() {
        return glad_debug_glMultiTexCoord2f$constants.SEGMENT.get(glad_debug_glMultiTexCoord2f$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2FPROC glad_debug_glMultiTexCoord2f
     * }
     */
    public static void glad_debug_glMultiTexCoord2f(MemorySegment varValue) {
        glad_debug_glMultiTexCoord2f$constants.SEGMENT.set(glad_debug_glMultiTexCoord2f$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord2fARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord2fARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2FARBPROC glad_glMultiTexCoord2fARB
     * }
     */
    public static AddressLayout glad_glMultiTexCoord2fARB$layout() {
        return glad_glMultiTexCoord2fARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2FARBPROC glad_glMultiTexCoord2fARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord2fARB$segment() {
        return glad_glMultiTexCoord2fARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2FARBPROC glad_glMultiTexCoord2fARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord2fARB() {
        return glad_glMultiTexCoord2fARB$constants.SEGMENT.get(glad_glMultiTexCoord2fARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2FARBPROC glad_glMultiTexCoord2fARB
     * }
     */
    public static void glad_glMultiTexCoord2fARB(MemorySegment varValue) {
        glad_glMultiTexCoord2fARB$constants.SEGMENT.set(glad_glMultiTexCoord2fARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord2fARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord2fARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2FARBPROC glad_debug_glMultiTexCoord2fARB
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord2fARB$layout() {
        return glad_debug_glMultiTexCoord2fARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2FARBPROC glad_debug_glMultiTexCoord2fARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord2fARB$segment() {
        return glad_debug_glMultiTexCoord2fARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2FARBPROC glad_debug_glMultiTexCoord2fARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord2fARB() {
        return glad_debug_glMultiTexCoord2fARB$constants.SEGMENT.get(glad_debug_glMultiTexCoord2fARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2FARBPROC glad_debug_glMultiTexCoord2fARB
     * }
     */
    public static void glad_debug_glMultiTexCoord2fARB(MemorySegment varValue) {
        glad_debug_glMultiTexCoord2fARB$constants.SEGMENT.set(glad_debug_glMultiTexCoord2fARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord2fv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord2fv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2FVPROC glad_glMultiTexCoord2fv
     * }
     */
    public static AddressLayout glad_glMultiTexCoord2fv$layout() {
        return glad_glMultiTexCoord2fv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2FVPROC glad_glMultiTexCoord2fv
     * }
     */
    public static MemorySegment glad_glMultiTexCoord2fv$segment() {
        return glad_glMultiTexCoord2fv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2FVPROC glad_glMultiTexCoord2fv
     * }
     */
    public static MemorySegment glad_glMultiTexCoord2fv() {
        return glad_glMultiTexCoord2fv$constants.SEGMENT.get(glad_glMultiTexCoord2fv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2FVPROC glad_glMultiTexCoord2fv
     * }
     */
    public static void glad_glMultiTexCoord2fv(MemorySegment varValue) {
        glad_glMultiTexCoord2fv$constants.SEGMENT.set(glad_glMultiTexCoord2fv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord2fv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord2fv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2FVPROC glad_debug_glMultiTexCoord2fv
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord2fv$layout() {
        return glad_debug_glMultiTexCoord2fv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2FVPROC glad_debug_glMultiTexCoord2fv
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord2fv$segment() {
        return glad_debug_glMultiTexCoord2fv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2FVPROC glad_debug_glMultiTexCoord2fv
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord2fv() {
        return glad_debug_glMultiTexCoord2fv$constants.SEGMENT.get(glad_debug_glMultiTexCoord2fv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2FVPROC glad_debug_glMultiTexCoord2fv
     * }
     */
    public static void glad_debug_glMultiTexCoord2fv(MemorySegment varValue) {
        glad_debug_glMultiTexCoord2fv$constants.SEGMENT.set(glad_debug_glMultiTexCoord2fv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord2fvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord2fvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2FVARBPROC glad_glMultiTexCoord2fvARB
     * }
     */
    public static AddressLayout glad_glMultiTexCoord2fvARB$layout() {
        return glad_glMultiTexCoord2fvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2FVARBPROC glad_glMultiTexCoord2fvARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord2fvARB$segment() {
        return glad_glMultiTexCoord2fvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2FVARBPROC glad_glMultiTexCoord2fvARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord2fvARB() {
        return glad_glMultiTexCoord2fvARB$constants.SEGMENT.get(glad_glMultiTexCoord2fvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2FVARBPROC glad_glMultiTexCoord2fvARB
     * }
     */
    public static void glad_glMultiTexCoord2fvARB(MemorySegment varValue) {
        glad_glMultiTexCoord2fvARB$constants.SEGMENT.set(glad_glMultiTexCoord2fvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord2fvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord2fvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2FVARBPROC glad_debug_glMultiTexCoord2fvARB
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord2fvARB$layout() {
        return glad_debug_glMultiTexCoord2fvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2FVARBPROC glad_debug_glMultiTexCoord2fvARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord2fvARB$segment() {
        return glad_debug_glMultiTexCoord2fvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2FVARBPROC glad_debug_glMultiTexCoord2fvARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord2fvARB() {
        return glad_debug_glMultiTexCoord2fvARB$constants.SEGMENT.get(glad_debug_glMultiTexCoord2fvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2FVARBPROC glad_debug_glMultiTexCoord2fvARB
     * }
     */
    public static void glad_debug_glMultiTexCoord2fvARB(MemorySegment varValue) {
        glad_debug_glMultiTexCoord2fvARB$constants.SEGMENT.set(glad_debug_glMultiTexCoord2fvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord2i$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord2i").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2IPROC glad_glMultiTexCoord2i
     * }
     */
    public static AddressLayout glad_glMultiTexCoord2i$layout() {
        return glad_glMultiTexCoord2i$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2IPROC glad_glMultiTexCoord2i
     * }
     */
    public static MemorySegment glad_glMultiTexCoord2i$segment() {
        return glad_glMultiTexCoord2i$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2IPROC glad_glMultiTexCoord2i
     * }
     */
    public static MemorySegment glad_glMultiTexCoord2i() {
        return glad_glMultiTexCoord2i$constants.SEGMENT.get(glad_glMultiTexCoord2i$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2IPROC glad_glMultiTexCoord2i
     * }
     */
    public static void glad_glMultiTexCoord2i(MemorySegment varValue) {
        glad_glMultiTexCoord2i$constants.SEGMENT.set(glad_glMultiTexCoord2i$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord2i$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord2i").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2IPROC glad_debug_glMultiTexCoord2i
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord2i$layout() {
        return glad_debug_glMultiTexCoord2i$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2IPROC glad_debug_glMultiTexCoord2i
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord2i$segment() {
        return glad_debug_glMultiTexCoord2i$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2IPROC glad_debug_glMultiTexCoord2i
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord2i() {
        return glad_debug_glMultiTexCoord2i$constants.SEGMENT.get(glad_debug_glMultiTexCoord2i$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2IPROC glad_debug_glMultiTexCoord2i
     * }
     */
    public static void glad_debug_glMultiTexCoord2i(MemorySegment varValue) {
        glad_debug_glMultiTexCoord2i$constants.SEGMENT.set(glad_debug_glMultiTexCoord2i$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord2iARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord2iARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2IARBPROC glad_glMultiTexCoord2iARB
     * }
     */
    public static AddressLayout glad_glMultiTexCoord2iARB$layout() {
        return glad_glMultiTexCoord2iARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2IARBPROC glad_glMultiTexCoord2iARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord2iARB$segment() {
        return glad_glMultiTexCoord2iARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2IARBPROC glad_glMultiTexCoord2iARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord2iARB() {
        return glad_glMultiTexCoord2iARB$constants.SEGMENT.get(glad_glMultiTexCoord2iARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2IARBPROC glad_glMultiTexCoord2iARB
     * }
     */
    public static void glad_glMultiTexCoord2iARB(MemorySegment varValue) {
        glad_glMultiTexCoord2iARB$constants.SEGMENT.set(glad_glMultiTexCoord2iARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord2iARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord2iARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2IARBPROC glad_debug_glMultiTexCoord2iARB
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord2iARB$layout() {
        return glad_debug_glMultiTexCoord2iARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2IARBPROC glad_debug_glMultiTexCoord2iARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord2iARB$segment() {
        return glad_debug_glMultiTexCoord2iARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2IARBPROC glad_debug_glMultiTexCoord2iARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord2iARB() {
        return glad_debug_glMultiTexCoord2iARB$constants.SEGMENT.get(glad_debug_glMultiTexCoord2iARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2IARBPROC glad_debug_glMultiTexCoord2iARB
     * }
     */
    public static void glad_debug_glMultiTexCoord2iARB(MemorySegment varValue) {
        glad_debug_glMultiTexCoord2iARB$constants.SEGMENT.set(glad_debug_glMultiTexCoord2iARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord2iv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord2iv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2IVPROC glad_glMultiTexCoord2iv
     * }
     */
    public static AddressLayout glad_glMultiTexCoord2iv$layout() {
        return glad_glMultiTexCoord2iv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2IVPROC glad_glMultiTexCoord2iv
     * }
     */
    public static MemorySegment glad_glMultiTexCoord2iv$segment() {
        return glad_glMultiTexCoord2iv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2IVPROC glad_glMultiTexCoord2iv
     * }
     */
    public static MemorySegment glad_glMultiTexCoord2iv() {
        return glad_glMultiTexCoord2iv$constants.SEGMENT.get(glad_glMultiTexCoord2iv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2IVPROC glad_glMultiTexCoord2iv
     * }
     */
    public static void glad_glMultiTexCoord2iv(MemorySegment varValue) {
        glad_glMultiTexCoord2iv$constants.SEGMENT.set(glad_glMultiTexCoord2iv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord2iv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord2iv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2IVPROC glad_debug_glMultiTexCoord2iv
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord2iv$layout() {
        return glad_debug_glMultiTexCoord2iv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2IVPROC glad_debug_glMultiTexCoord2iv
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord2iv$segment() {
        return glad_debug_glMultiTexCoord2iv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2IVPROC glad_debug_glMultiTexCoord2iv
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord2iv() {
        return glad_debug_glMultiTexCoord2iv$constants.SEGMENT.get(glad_debug_glMultiTexCoord2iv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2IVPROC glad_debug_glMultiTexCoord2iv
     * }
     */
    public static void glad_debug_glMultiTexCoord2iv(MemorySegment varValue) {
        glad_debug_glMultiTexCoord2iv$constants.SEGMENT.set(glad_debug_glMultiTexCoord2iv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord2ivARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord2ivARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2IVARBPROC glad_glMultiTexCoord2ivARB
     * }
     */
    public static AddressLayout glad_glMultiTexCoord2ivARB$layout() {
        return glad_glMultiTexCoord2ivARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2IVARBPROC glad_glMultiTexCoord2ivARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord2ivARB$segment() {
        return glad_glMultiTexCoord2ivARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2IVARBPROC glad_glMultiTexCoord2ivARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord2ivARB() {
        return glad_glMultiTexCoord2ivARB$constants.SEGMENT.get(glad_glMultiTexCoord2ivARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2IVARBPROC glad_glMultiTexCoord2ivARB
     * }
     */
    public static void glad_glMultiTexCoord2ivARB(MemorySegment varValue) {
        glad_glMultiTexCoord2ivARB$constants.SEGMENT.set(glad_glMultiTexCoord2ivARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord2ivARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord2ivARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2IVARBPROC glad_debug_glMultiTexCoord2ivARB
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord2ivARB$layout() {
        return glad_debug_glMultiTexCoord2ivARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2IVARBPROC glad_debug_glMultiTexCoord2ivARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord2ivARB$segment() {
        return glad_debug_glMultiTexCoord2ivARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2IVARBPROC glad_debug_glMultiTexCoord2ivARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord2ivARB() {
        return glad_debug_glMultiTexCoord2ivARB$constants.SEGMENT.get(glad_debug_glMultiTexCoord2ivARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2IVARBPROC glad_debug_glMultiTexCoord2ivARB
     * }
     */
    public static void glad_debug_glMultiTexCoord2ivARB(MemorySegment varValue) {
        glad_debug_glMultiTexCoord2ivARB$constants.SEGMENT.set(glad_debug_glMultiTexCoord2ivARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord2s$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord2s").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2SPROC glad_glMultiTexCoord2s
     * }
     */
    public static AddressLayout glad_glMultiTexCoord2s$layout() {
        return glad_glMultiTexCoord2s$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2SPROC glad_glMultiTexCoord2s
     * }
     */
    public static MemorySegment glad_glMultiTexCoord2s$segment() {
        return glad_glMultiTexCoord2s$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2SPROC glad_glMultiTexCoord2s
     * }
     */
    public static MemorySegment glad_glMultiTexCoord2s() {
        return glad_glMultiTexCoord2s$constants.SEGMENT.get(glad_glMultiTexCoord2s$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2SPROC glad_glMultiTexCoord2s
     * }
     */
    public static void glad_glMultiTexCoord2s(MemorySegment varValue) {
        glad_glMultiTexCoord2s$constants.SEGMENT.set(glad_glMultiTexCoord2s$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord2s$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord2s").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2SPROC glad_debug_glMultiTexCoord2s
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord2s$layout() {
        return glad_debug_glMultiTexCoord2s$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2SPROC glad_debug_glMultiTexCoord2s
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord2s$segment() {
        return glad_debug_glMultiTexCoord2s$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2SPROC glad_debug_glMultiTexCoord2s
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord2s() {
        return glad_debug_glMultiTexCoord2s$constants.SEGMENT.get(glad_debug_glMultiTexCoord2s$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2SPROC glad_debug_glMultiTexCoord2s
     * }
     */
    public static void glad_debug_glMultiTexCoord2s(MemorySegment varValue) {
        glad_debug_glMultiTexCoord2s$constants.SEGMENT.set(glad_debug_glMultiTexCoord2s$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord2sARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord2sARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2SARBPROC glad_glMultiTexCoord2sARB
     * }
     */
    public static AddressLayout glad_glMultiTexCoord2sARB$layout() {
        return glad_glMultiTexCoord2sARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2SARBPROC glad_glMultiTexCoord2sARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord2sARB$segment() {
        return glad_glMultiTexCoord2sARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2SARBPROC glad_glMultiTexCoord2sARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord2sARB() {
        return glad_glMultiTexCoord2sARB$constants.SEGMENT.get(glad_glMultiTexCoord2sARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2SARBPROC glad_glMultiTexCoord2sARB
     * }
     */
    public static void glad_glMultiTexCoord2sARB(MemorySegment varValue) {
        glad_glMultiTexCoord2sARB$constants.SEGMENT.set(glad_glMultiTexCoord2sARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord2sARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord2sARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2SARBPROC glad_debug_glMultiTexCoord2sARB
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord2sARB$layout() {
        return glad_debug_glMultiTexCoord2sARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2SARBPROC glad_debug_glMultiTexCoord2sARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord2sARB$segment() {
        return glad_debug_glMultiTexCoord2sARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2SARBPROC glad_debug_glMultiTexCoord2sARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord2sARB() {
        return glad_debug_glMultiTexCoord2sARB$constants.SEGMENT.get(glad_debug_glMultiTexCoord2sARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2SARBPROC glad_debug_glMultiTexCoord2sARB
     * }
     */
    public static void glad_debug_glMultiTexCoord2sARB(MemorySegment varValue) {
        glad_debug_glMultiTexCoord2sARB$constants.SEGMENT.set(glad_debug_glMultiTexCoord2sARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord2sv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord2sv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2SVPROC glad_glMultiTexCoord2sv
     * }
     */
    public static AddressLayout glad_glMultiTexCoord2sv$layout() {
        return glad_glMultiTexCoord2sv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2SVPROC glad_glMultiTexCoord2sv
     * }
     */
    public static MemorySegment glad_glMultiTexCoord2sv$segment() {
        return glad_glMultiTexCoord2sv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2SVPROC glad_glMultiTexCoord2sv
     * }
     */
    public static MemorySegment glad_glMultiTexCoord2sv() {
        return glad_glMultiTexCoord2sv$constants.SEGMENT.get(glad_glMultiTexCoord2sv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2SVPROC glad_glMultiTexCoord2sv
     * }
     */
    public static void glad_glMultiTexCoord2sv(MemorySegment varValue) {
        glad_glMultiTexCoord2sv$constants.SEGMENT.set(glad_glMultiTexCoord2sv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord2sv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord2sv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2SVPROC glad_debug_glMultiTexCoord2sv
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord2sv$layout() {
        return glad_debug_glMultiTexCoord2sv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2SVPROC glad_debug_glMultiTexCoord2sv
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord2sv$segment() {
        return glad_debug_glMultiTexCoord2sv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2SVPROC glad_debug_glMultiTexCoord2sv
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord2sv() {
        return glad_debug_glMultiTexCoord2sv$constants.SEGMENT.get(glad_debug_glMultiTexCoord2sv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2SVPROC glad_debug_glMultiTexCoord2sv
     * }
     */
    public static void glad_debug_glMultiTexCoord2sv(MemorySegment varValue) {
        glad_debug_glMultiTexCoord2sv$constants.SEGMENT.set(glad_debug_glMultiTexCoord2sv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord2svARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord2svARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2SVARBPROC glad_glMultiTexCoord2svARB
     * }
     */
    public static AddressLayout glad_glMultiTexCoord2svARB$layout() {
        return glad_glMultiTexCoord2svARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2SVARBPROC glad_glMultiTexCoord2svARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord2svARB$segment() {
        return glad_glMultiTexCoord2svARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2SVARBPROC glad_glMultiTexCoord2svARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord2svARB() {
        return glad_glMultiTexCoord2svARB$constants.SEGMENT.get(glad_glMultiTexCoord2svARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2SVARBPROC glad_glMultiTexCoord2svARB
     * }
     */
    public static void glad_glMultiTexCoord2svARB(MemorySegment varValue) {
        glad_glMultiTexCoord2svARB$constants.SEGMENT.set(glad_glMultiTexCoord2svARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord2svARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord2svARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2SVARBPROC glad_debug_glMultiTexCoord2svARB
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord2svARB$layout() {
        return glad_debug_glMultiTexCoord2svARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2SVARBPROC glad_debug_glMultiTexCoord2svARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord2svARB$segment() {
        return glad_debug_glMultiTexCoord2svARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2SVARBPROC glad_debug_glMultiTexCoord2svARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord2svARB() {
        return glad_debug_glMultiTexCoord2svARB$constants.SEGMENT.get(glad_debug_glMultiTexCoord2svARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD2SVARBPROC glad_debug_glMultiTexCoord2svARB
     * }
     */
    public static void glad_debug_glMultiTexCoord2svARB(MemorySegment varValue) {
        glad_debug_glMultiTexCoord2svARB$constants.SEGMENT.set(glad_debug_glMultiTexCoord2svARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord3d$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord3d").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3DPROC glad_glMultiTexCoord3d
     * }
     */
    public static AddressLayout glad_glMultiTexCoord3d$layout() {
        return glad_glMultiTexCoord3d$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3DPROC glad_glMultiTexCoord3d
     * }
     */
    public static MemorySegment glad_glMultiTexCoord3d$segment() {
        return glad_glMultiTexCoord3d$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3DPROC glad_glMultiTexCoord3d
     * }
     */
    public static MemorySegment glad_glMultiTexCoord3d() {
        return glad_glMultiTexCoord3d$constants.SEGMENT.get(glad_glMultiTexCoord3d$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3DPROC glad_glMultiTexCoord3d
     * }
     */
    public static void glad_glMultiTexCoord3d(MemorySegment varValue) {
        glad_glMultiTexCoord3d$constants.SEGMENT.set(glad_glMultiTexCoord3d$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord3d$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord3d").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3DPROC glad_debug_glMultiTexCoord3d
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord3d$layout() {
        return glad_debug_glMultiTexCoord3d$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3DPROC glad_debug_glMultiTexCoord3d
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord3d$segment() {
        return glad_debug_glMultiTexCoord3d$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3DPROC glad_debug_glMultiTexCoord3d
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord3d() {
        return glad_debug_glMultiTexCoord3d$constants.SEGMENT.get(glad_debug_glMultiTexCoord3d$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3DPROC glad_debug_glMultiTexCoord3d
     * }
     */
    public static void glad_debug_glMultiTexCoord3d(MemorySegment varValue) {
        glad_debug_glMultiTexCoord3d$constants.SEGMENT.set(glad_debug_glMultiTexCoord3d$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord3dARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord3dARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3DARBPROC glad_glMultiTexCoord3dARB
     * }
     */
    public static AddressLayout glad_glMultiTexCoord3dARB$layout() {
        return glad_glMultiTexCoord3dARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3DARBPROC glad_glMultiTexCoord3dARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord3dARB$segment() {
        return glad_glMultiTexCoord3dARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3DARBPROC glad_glMultiTexCoord3dARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord3dARB() {
        return glad_glMultiTexCoord3dARB$constants.SEGMENT.get(glad_glMultiTexCoord3dARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3DARBPROC glad_glMultiTexCoord3dARB
     * }
     */
    public static void glad_glMultiTexCoord3dARB(MemorySegment varValue) {
        glad_glMultiTexCoord3dARB$constants.SEGMENT.set(glad_glMultiTexCoord3dARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord3dARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord3dARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3DARBPROC glad_debug_glMultiTexCoord3dARB
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord3dARB$layout() {
        return glad_debug_glMultiTexCoord3dARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3DARBPROC glad_debug_glMultiTexCoord3dARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord3dARB$segment() {
        return glad_debug_glMultiTexCoord3dARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3DARBPROC glad_debug_glMultiTexCoord3dARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord3dARB() {
        return glad_debug_glMultiTexCoord3dARB$constants.SEGMENT.get(glad_debug_glMultiTexCoord3dARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3DARBPROC glad_debug_glMultiTexCoord3dARB
     * }
     */
    public static void glad_debug_glMultiTexCoord3dARB(MemorySegment varValue) {
        glad_debug_glMultiTexCoord3dARB$constants.SEGMENT.set(glad_debug_glMultiTexCoord3dARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord3dv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord3dv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3DVPROC glad_glMultiTexCoord3dv
     * }
     */
    public static AddressLayout glad_glMultiTexCoord3dv$layout() {
        return glad_glMultiTexCoord3dv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3DVPROC glad_glMultiTexCoord3dv
     * }
     */
    public static MemorySegment glad_glMultiTexCoord3dv$segment() {
        return glad_glMultiTexCoord3dv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3DVPROC glad_glMultiTexCoord3dv
     * }
     */
    public static MemorySegment glad_glMultiTexCoord3dv() {
        return glad_glMultiTexCoord3dv$constants.SEGMENT.get(glad_glMultiTexCoord3dv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3DVPROC glad_glMultiTexCoord3dv
     * }
     */
    public static void glad_glMultiTexCoord3dv(MemorySegment varValue) {
        glad_glMultiTexCoord3dv$constants.SEGMENT.set(glad_glMultiTexCoord3dv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord3dv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord3dv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3DVPROC glad_debug_glMultiTexCoord3dv
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord3dv$layout() {
        return glad_debug_glMultiTexCoord3dv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3DVPROC glad_debug_glMultiTexCoord3dv
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord3dv$segment() {
        return glad_debug_glMultiTexCoord3dv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3DVPROC glad_debug_glMultiTexCoord3dv
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord3dv() {
        return glad_debug_glMultiTexCoord3dv$constants.SEGMENT.get(glad_debug_glMultiTexCoord3dv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3DVPROC glad_debug_glMultiTexCoord3dv
     * }
     */
    public static void glad_debug_glMultiTexCoord3dv(MemorySegment varValue) {
        glad_debug_glMultiTexCoord3dv$constants.SEGMENT.set(glad_debug_glMultiTexCoord3dv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord3dvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord3dvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3DVARBPROC glad_glMultiTexCoord3dvARB
     * }
     */
    public static AddressLayout glad_glMultiTexCoord3dvARB$layout() {
        return glad_glMultiTexCoord3dvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3DVARBPROC glad_glMultiTexCoord3dvARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord3dvARB$segment() {
        return glad_glMultiTexCoord3dvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3DVARBPROC glad_glMultiTexCoord3dvARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord3dvARB() {
        return glad_glMultiTexCoord3dvARB$constants.SEGMENT.get(glad_glMultiTexCoord3dvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3DVARBPROC glad_glMultiTexCoord3dvARB
     * }
     */
    public static void glad_glMultiTexCoord3dvARB(MemorySegment varValue) {
        glad_glMultiTexCoord3dvARB$constants.SEGMENT.set(glad_glMultiTexCoord3dvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord3dvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord3dvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3DVARBPROC glad_debug_glMultiTexCoord3dvARB
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord3dvARB$layout() {
        return glad_debug_glMultiTexCoord3dvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3DVARBPROC glad_debug_glMultiTexCoord3dvARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord3dvARB$segment() {
        return glad_debug_glMultiTexCoord3dvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3DVARBPROC glad_debug_glMultiTexCoord3dvARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord3dvARB() {
        return glad_debug_glMultiTexCoord3dvARB$constants.SEGMENT.get(glad_debug_glMultiTexCoord3dvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3DVARBPROC glad_debug_glMultiTexCoord3dvARB
     * }
     */
    public static void glad_debug_glMultiTexCoord3dvARB(MemorySegment varValue) {
        glad_debug_glMultiTexCoord3dvARB$constants.SEGMENT.set(glad_debug_glMultiTexCoord3dvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord3f$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord3f").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3FPROC glad_glMultiTexCoord3f
     * }
     */
    public static AddressLayout glad_glMultiTexCoord3f$layout() {
        return glad_glMultiTexCoord3f$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3FPROC glad_glMultiTexCoord3f
     * }
     */
    public static MemorySegment glad_glMultiTexCoord3f$segment() {
        return glad_glMultiTexCoord3f$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3FPROC glad_glMultiTexCoord3f
     * }
     */
    public static MemorySegment glad_glMultiTexCoord3f() {
        return glad_glMultiTexCoord3f$constants.SEGMENT.get(glad_glMultiTexCoord3f$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3FPROC glad_glMultiTexCoord3f
     * }
     */
    public static void glad_glMultiTexCoord3f(MemorySegment varValue) {
        glad_glMultiTexCoord3f$constants.SEGMENT.set(glad_glMultiTexCoord3f$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord3f$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord3f").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3FPROC glad_debug_glMultiTexCoord3f
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord3f$layout() {
        return glad_debug_glMultiTexCoord3f$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3FPROC glad_debug_glMultiTexCoord3f
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord3f$segment() {
        return glad_debug_glMultiTexCoord3f$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3FPROC glad_debug_glMultiTexCoord3f
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord3f() {
        return glad_debug_glMultiTexCoord3f$constants.SEGMENT.get(glad_debug_glMultiTexCoord3f$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3FPROC glad_debug_glMultiTexCoord3f
     * }
     */
    public static void glad_debug_glMultiTexCoord3f(MemorySegment varValue) {
        glad_debug_glMultiTexCoord3f$constants.SEGMENT.set(glad_debug_glMultiTexCoord3f$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord3fARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord3fARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3FARBPROC glad_glMultiTexCoord3fARB
     * }
     */
    public static AddressLayout glad_glMultiTexCoord3fARB$layout() {
        return glad_glMultiTexCoord3fARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3FARBPROC glad_glMultiTexCoord3fARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord3fARB$segment() {
        return glad_glMultiTexCoord3fARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3FARBPROC glad_glMultiTexCoord3fARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord3fARB() {
        return glad_glMultiTexCoord3fARB$constants.SEGMENT.get(glad_glMultiTexCoord3fARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3FARBPROC glad_glMultiTexCoord3fARB
     * }
     */
    public static void glad_glMultiTexCoord3fARB(MemorySegment varValue) {
        glad_glMultiTexCoord3fARB$constants.SEGMENT.set(glad_glMultiTexCoord3fARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord3fARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord3fARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3FARBPROC glad_debug_glMultiTexCoord3fARB
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord3fARB$layout() {
        return glad_debug_glMultiTexCoord3fARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3FARBPROC glad_debug_glMultiTexCoord3fARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord3fARB$segment() {
        return glad_debug_glMultiTexCoord3fARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3FARBPROC glad_debug_glMultiTexCoord3fARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord3fARB() {
        return glad_debug_glMultiTexCoord3fARB$constants.SEGMENT.get(glad_debug_glMultiTexCoord3fARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3FARBPROC glad_debug_glMultiTexCoord3fARB
     * }
     */
    public static void glad_debug_glMultiTexCoord3fARB(MemorySegment varValue) {
        glad_debug_glMultiTexCoord3fARB$constants.SEGMENT.set(glad_debug_glMultiTexCoord3fARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord3fv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord3fv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3FVPROC glad_glMultiTexCoord3fv
     * }
     */
    public static AddressLayout glad_glMultiTexCoord3fv$layout() {
        return glad_glMultiTexCoord3fv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3FVPROC glad_glMultiTexCoord3fv
     * }
     */
    public static MemorySegment glad_glMultiTexCoord3fv$segment() {
        return glad_glMultiTexCoord3fv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3FVPROC glad_glMultiTexCoord3fv
     * }
     */
    public static MemorySegment glad_glMultiTexCoord3fv() {
        return glad_glMultiTexCoord3fv$constants.SEGMENT.get(glad_glMultiTexCoord3fv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3FVPROC glad_glMultiTexCoord3fv
     * }
     */
    public static void glad_glMultiTexCoord3fv(MemorySegment varValue) {
        glad_glMultiTexCoord3fv$constants.SEGMENT.set(glad_glMultiTexCoord3fv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord3fv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord3fv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3FVPROC glad_debug_glMultiTexCoord3fv
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord3fv$layout() {
        return glad_debug_glMultiTexCoord3fv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3FVPROC glad_debug_glMultiTexCoord3fv
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord3fv$segment() {
        return glad_debug_glMultiTexCoord3fv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3FVPROC glad_debug_glMultiTexCoord3fv
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord3fv() {
        return glad_debug_glMultiTexCoord3fv$constants.SEGMENT.get(glad_debug_glMultiTexCoord3fv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3FVPROC glad_debug_glMultiTexCoord3fv
     * }
     */
    public static void glad_debug_glMultiTexCoord3fv(MemorySegment varValue) {
        glad_debug_glMultiTexCoord3fv$constants.SEGMENT.set(glad_debug_glMultiTexCoord3fv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord3fvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord3fvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3FVARBPROC glad_glMultiTexCoord3fvARB
     * }
     */
    public static AddressLayout glad_glMultiTexCoord3fvARB$layout() {
        return glad_glMultiTexCoord3fvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3FVARBPROC glad_glMultiTexCoord3fvARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord3fvARB$segment() {
        return glad_glMultiTexCoord3fvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3FVARBPROC glad_glMultiTexCoord3fvARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord3fvARB() {
        return glad_glMultiTexCoord3fvARB$constants.SEGMENT.get(glad_glMultiTexCoord3fvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3FVARBPROC glad_glMultiTexCoord3fvARB
     * }
     */
    public static void glad_glMultiTexCoord3fvARB(MemorySegment varValue) {
        glad_glMultiTexCoord3fvARB$constants.SEGMENT.set(glad_glMultiTexCoord3fvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord3fvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord3fvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3FVARBPROC glad_debug_glMultiTexCoord3fvARB
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord3fvARB$layout() {
        return glad_debug_glMultiTexCoord3fvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3FVARBPROC glad_debug_glMultiTexCoord3fvARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord3fvARB$segment() {
        return glad_debug_glMultiTexCoord3fvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3FVARBPROC glad_debug_glMultiTexCoord3fvARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord3fvARB() {
        return glad_debug_glMultiTexCoord3fvARB$constants.SEGMENT.get(glad_debug_glMultiTexCoord3fvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3FVARBPROC glad_debug_glMultiTexCoord3fvARB
     * }
     */
    public static void glad_debug_glMultiTexCoord3fvARB(MemorySegment varValue) {
        glad_debug_glMultiTexCoord3fvARB$constants.SEGMENT.set(glad_debug_glMultiTexCoord3fvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord3i$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord3i").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3IPROC glad_glMultiTexCoord3i
     * }
     */
    public static AddressLayout glad_glMultiTexCoord3i$layout() {
        return glad_glMultiTexCoord3i$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3IPROC glad_glMultiTexCoord3i
     * }
     */
    public static MemorySegment glad_glMultiTexCoord3i$segment() {
        return glad_glMultiTexCoord3i$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3IPROC glad_glMultiTexCoord3i
     * }
     */
    public static MemorySegment glad_glMultiTexCoord3i() {
        return glad_glMultiTexCoord3i$constants.SEGMENT.get(glad_glMultiTexCoord3i$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3IPROC glad_glMultiTexCoord3i
     * }
     */
    public static void glad_glMultiTexCoord3i(MemorySegment varValue) {
        glad_glMultiTexCoord3i$constants.SEGMENT.set(glad_glMultiTexCoord3i$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord3i$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord3i").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3IPROC glad_debug_glMultiTexCoord3i
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord3i$layout() {
        return glad_debug_glMultiTexCoord3i$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3IPROC glad_debug_glMultiTexCoord3i
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord3i$segment() {
        return glad_debug_glMultiTexCoord3i$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3IPROC glad_debug_glMultiTexCoord3i
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord3i() {
        return glad_debug_glMultiTexCoord3i$constants.SEGMENT.get(glad_debug_glMultiTexCoord3i$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3IPROC glad_debug_glMultiTexCoord3i
     * }
     */
    public static void glad_debug_glMultiTexCoord3i(MemorySegment varValue) {
        glad_debug_glMultiTexCoord3i$constants.SEGMENT.set(glad_debug_glMultiTexCoord3i$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord3iARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord3iARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3IARBPROC glad_glMultiTexCoord3iARB
     * }
     */
    public static AddressLayout glad_glMultiTexCoord3iARB$layout() {
        return glad_glMultiTexCoord3iARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3IARBPROC glad_glMultiTexCoord3iARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord3iARB$segment() {
        return glad_glMultiTexCoord3iARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3IARBPROC glad_glMultiTexCoord3iARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord3iARB() {
        return glad_glMultiTexCoord3iARB$constants.SEGMENT.get(glad_glMultiTexCoord3iARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3IARBPROC glad_glMultiTexCoord3iARB
     * }
     */
    public static void glad_glMultiTexCoord3iARB(MemorySegment varValue) {
        glad_glMultiTexCoord3iARB$constants.SEGMENT.set(glad_glMultiTexCoord3iARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord3iARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord3iARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3IARBPROC glad_debug_glMultiTexCoord3iARB
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord3iARB$layout() {
        return glad_debug_glMultiTexCoord3iARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3IARBPROC glad_debug_glMultiTexCoord3iARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord3iARB$segment() {
        return glad_debug_glMultiTexCoord3iARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3IARBPROC glad_debug_glMultiTexCoord3iARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord3iARB() {
        return glad_debug_glMultiTexCoord3iARB$constants.SEGMENT.get(glad_debug_glMultiTexCoord3iARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3IARBPROC glad_debug_glMultiTexCoord3iARB
     * }
     */
    public static void glad_debug_glMultiTexCoord3iARB(MemorySegment varValue) {
        glad_debug_glMultiTexCoord3iARB$constants.SEGMENT.set(glad_debug_glMultiTexCoord3iARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord3iv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord3iv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3IVPROC glad_glMultiTexCoord3iv
     * }
     */
    public static AddressLayout glad_glMultiTexCoord3iv$layout() {
        return glad_glMultiTexCoord3iv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3IVPROC glad_glMultiTexCoord3iv
     * }
     */
    public static MemorySegment glad_glMultiTexCoord3iv$segment() {
        return glad_glMultiTexCoord3iv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3IVPROC glad_glMultiTexCoord3iv
     * }
     */
    public static MemorySegment glad_glMultiTexCoord3iv() {
        return glad_glMultiTexCoord3iv$constants.SEGMENT.get(glad_glMultiTexCoord3iv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3IVPROC glad_glMultiTexCoord3iv
     * }
     */
    public static void glad_glMultiTexCoord3iv(MemorySegment varValue) {
        glad_glMultiTexCoord3iv$constants.SEGMENT.set(glad_glMultiTexCoord3iv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord3iv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord3iv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3IVPROC glad_debug_glMultiTexCoord3iv
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord3iv$layout() {
        return glad_debug_glMultiTexCoord3iv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3IVPROC glad_debug_glMultiTexCoord3iv
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord3iv$segment() {
        return glad_debug_glMultiTexCoord3iv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3IVPROC glad_debug_glMultiTexCoord3iv
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord3iv() {
        return glad_debug_glMultiTexCoord3iv$constants.SEGMENT.get(glad_debug_glMultiTexCoord3iv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3IVPROC glad_debug_glMultiTexCoord3iv
     * }
     */
    public static void glad_debug_glMultiTexCoord3iv(MemorySegment varValue) {
        glad_debug_glMultiTexCoord3iv$constants.SEGMENT.set(glad_debug_glMultiTexCoord3iv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord3ivARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord3ivARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3IVARBPROC glad_glMultiTexCoord3ivARB
     * }
     */
    public static AddressLayout glad_glMultiTexCoord3ivARB$layout() {
        return glad_glMultiTexCoord3ivARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3IVARBPROC glad_glMultiTexCoord3ivARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord3ivARB$segment() {
        return glad_glMultiTexCoord3ivARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3IVARBPROC glad_glMultiTexCoord3ivARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord3ivARB() {
        return glad_glMultiTexCoord3ivARB$constants.SEGMENT.get(glad_glMultiTexCoord3ivARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3IVARBPROC glad_glMultiTexCoord3ivARB
     * }
     */
    public static void glad_glMultiTexCoord3ivARB(MemorySegment varValue) {
        glad_glMultiTexCoord3ivARB$constants.SEGMENT.set(glad_glMultiTexCoord3ivARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord3ivARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord3ivARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3IVARBPROC glad_debug_glMultiTexCoord3ivARB
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord3ivARB$layout() {
        return glad_debug_glMultiTexCoord3ivARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3IVARBPROC glad_debug_glMultiTexCoord3ivARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord3ivARB$segment() {
        return glad_debug_glMultiTexCoord3ivARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3IVARBPROC glad_debug_glMultiTexCoord3ivARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord3ivARB() {
        return glad_debug_glMultiTexCoord3ivARB$constants.SEGMENT.get(glad_debug_glMultiTexCoord3ivARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3IVARBPROC glad_debug_glMultiTexCoord3ivARB
     * }
     */
    public static void glad_debug_glMultiTexCoord3ivARB(MemorySegment varValue) {
        glad_debug_glMultiTexCoord3ivARB$constants.SEGMENT.set(glad_debug_glMultiTexCoord3ivARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord3s$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord3s").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3SPROC glad_glMultiTexCoord3s
     * }
     */
    public static AddressLayout glad_glMultiTexCoord3s$layout() {
        return glad_glMultiTexCoord3s$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3SPROC glad_glMultiTexCoord3s
     * }
     */
    public static MemorySegment glad_glMultiTexCoord3s$segment() {
        return glad_glMultiTexCoord3s$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3SPROC glad_glMultiTexCoord3s
     * }
     */
    public static MemorySegment glad_glMultiTexCoord3s() {
        return glad_glMultiTexCoord3s$constants.SEGMENT.get(glad_glMultiTexCoord3s$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3SPROC glad_glMultiTexCoord3s
     * }
     */
    public static void glad_glMultiTexCoord3s(MemorySegment varValue) {
        glad_glMultiTexCoord3s$constants.SEGMENT.set(glad_glMultiTexCoord3s$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord3s$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord3s").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3SPROC glad_debug_glMultiTexCoord3s
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord3s$layout() {
        return glad_debug_glMultiTexCoord3s$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3SPROC glad_debug_glMultiTexCoord3s
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord3s$segment() {
        return glad_debug_glMultiTexCoord3s$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3SPROC glad_debug_glMultiTexCoord3s
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord3s() {
        return glad_debug_glMultiTexCoord3s$constants.SEGMENT.get(glad_debug_glMultiTexCoord3s$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3SPROC glad_debug_glMultiTexCoord3s
     * }
     */
    public static void glad_debug_glMultiTexCoord3s(MemorySegment varValue) {
        glad_debug_glMultiTexCoord3s$constants.SEGMENT.set(glad_debug_glMultiTexCoord3s$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord3sARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord3sARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3SARBPROC glad_glMultiTexCoord3sARB
     * }
     */
    public static AddressLayout glad_glMultiTexCoord3sARB$layout() {
        return glad_glMultiTexCoord3sARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3SARBPROC glad_glMultiTexCoord3sARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord3sARB$segment() {
        return glad_glMultiTexCoord3sARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3SARBPROC glad_glMultiTexCoord3sARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord3sARB() {
        return glad_glMultiTexCoord3sARB$constants.SEGMENT.get(glad_glMultiTexCoord3sARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3SARBPROC glad_glMultiTexCoord3sARB
     * }
     */
    public static void glad_glMultiTexCoord3sARB(MemorySegment varValue) {
        glad_glMultiTexCoord3sARB$constants.SEGMENT.set(glad_glMultiTexCoord3sARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord3sARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord3sARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3SARBPROC glad_debug_glMultiTexCoord3sARB
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord3sARB$layout() {
        return glad_debug_glMultiTexCoord3sARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3SARBPROC glad_debug_glMultiTexCoord3sARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord3sARB$segment() {
        return glad_debug_glMultiTexCoord3sARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3SARBPROC glad_debug_glMultiTexCoord3sARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord3sARB() {
        return glad_debug_glMultiTexCoord3sARB$constants.SEGMENT.get(glad_debug_glMultiTexCoord3sARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3SARBPROC glad_debug_glMultiTexCoord3sARB
     * }
     */
    public static void glad_debug_glMultiTexCoord3sARB(MemorySegment varValue) {
        glad_debug_glMultiTexCoord3sARB$constants.SEGMENT.set(glad_debug_glMultiTexCoord3sARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord3sv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord3sv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3SVPROC glad_glMultiTexCoord3sv
     * }
     */
    public static AddressLayout glad_glMultiTexCoord3sv$layout() {
        return glad_glMultiTexCoord3sv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3SVPROC glad_glMultiTexCoord3sv
     * }
     */
    public static MemorySegment glad_glMultiTexCoord3sv$segment() {
        return glad_glMultiTexCoord3sv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3SVPROC glad_glMultiTexCoord3sv
     * }
     */
    public static MemorySegment glad_glMultiTexCoord3sv() {
        return glad_glMultiTexCoord3sv$constants.SEGMENT.get(glad_glMultiTexCoord3sv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3SVPROC glad_glMultiTexCoord3sv
     * }
     */
    public static void glad_glMultiTexCoord3sv(MemorySegment varValue) {
        glad_glMultiTexCoord3sv$constants.SEGMENT.set(glad_glMultiTexCoord3sv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord3sv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord3sv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3SVPROC glad_debug_glMultiTexCoord3sv
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord3sv$layout() {
        return glad_debug_glMultiTexCoord3sv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3SVPROC glad_debug_glMultiTexCoord3sv
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord3sv$segment() {
        return glad_debug_glMultiTexCoord3sv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3SVPROC glad_debug_glMultiTexCoord3sv
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord3sv() {
        return glad_debug_glMultiTexCoord3sv$constants.SEGMENT.get(glad_debug_glMultiTexCoord3sv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3SVPROC glad_debug_glMultiTexCoord3sv
     * }
     */
    public static void glad_debug_glMultiTexCoord3sv(MemorySegment varValue) {
        glad_debug_glMultiTexCoord3sv$constants.SEGMENT.set(glad_debug_glMultiTexCoord3sv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord3svARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord3svARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3SVARBPROC glad_glMultiTexCoord3svARB
     * }
     */
    public static AddressLayout glad_glMultiTexCoord3svARB$layout() {
        return glad_glMultiTexCoord3svARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3SVARBPROC glad_glMultiTexCoord3svARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord3svARB$segment() {
        return glad_glMultiTexCoord3svARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3SVARBPROC glad_glMultiTexCoord3svARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord3svARB() {
        return glad_glMultiTexCoord3svARB$constants.SEGMENT.get(glad_glMultiTexCoord3svARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3SVARBPROC glad_glMultiTexCoord3svARB
     * }
     */
    public static void glad_glMultiTexCoord3svARB(MemorySegment varValue) {
        glad_glMultiTexCoord3svARB$constants.SEGMENT.set(glad_glMultiTexCoord3svARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord3svARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord3svARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3SVARBPROC glad_debug_glMultiTexCoord3svARB
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord3svARB$layout() {
        return glad_debug_glMultiTexCoord3svARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3SVARBPROC glad_debug_glMultiTexCoord3svARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord3svARB$segment() {
        return glad_debug_glMultiTexCoord3svARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3SVARBPROC glad_debug_glMultiTexCoord3svARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord3svARB() {
        return glad_debug_glMultiTexCoord3svARB$constants.SEGMENT.get(glad_debug_glMultiTexCoord3svARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD3SVARBPROC glad_debug_glMultiTexCoord3svARB
     * }
     */
    public static void glad_debug_glMultiTexCoord3svARB(MemorySegment varValue) {
        glad_debug_glMultiTexCoord3svARB$constants.SEGMENT.set(glad_debug_glMultiTexCoord3svARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord4d$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord4d").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4DPROC glad_glMultiTexCoord4d
     * }
     */
    public static AddressLayout glad_glMultiTexCoord4d$layout() {
        return glad_glMultiTexCoord4d$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4DPROC glad_glMultiTexCoord4d
     * }
     */
    public static MemorySegment glad_glMultiTexCoord4d$segment() {
        return glad_glMultiTexCoord4d$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4DPROC glad_glMultiTexCoord4d
     * }
     */
    public static MemorySegment glad_glMultiTexCoord4d() {
        return glad_glMultiTexCoord4d$constants.SEGMENT.get(glad_glMultiTexCoord4d$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4DPROC glad_glMultiTexCoord4d
     * }
     */
    public static void glad_glMultiTexCoord4d(MemorySegment varValue) {
        glad_glMultiTexCoord4d$constants.SEGMENT.set(glad_glMultiTexCoord4d$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord4d$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord4d").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4DPROC glad_debug_glMultiTexCoord4d
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord4d$layout() {
        return glad_debug_glMultiTexCoord4d$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4DPROC glad_debug_glMultiTexCoord4d
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord4d$segment() {
        return glad_debug_glMultiTexCoord4d$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4DPROC glad_debug_glMultiTexCoord4d
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord4d() {
        return glad_debug_glMultiTexCoord4d$constants.SEGMENT.get(glad_debug_glMultiTexCoord4d$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4DPROC glad_debug_glMultiTexCoord4d
     * }
     */
    public static void glad_debug_glMultiTexCoord4d(MemorySegment varValue) {
        glad_debug_glMultiTexCoord4d$constants.SEGMENT.set(glad_debug_glMultiTexCoord4d$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord4dARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord4dARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4DARBPROC glad_glMultiTexCoord4dARB
     * }
     */
    public static AddressLayout glad_glMultiTexCoord4dARB$layout() {
        return glad_glMultiTexCoord4dARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4DARBPROC glad_glMultiTexCoord4dARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord4dARB$segment() {
        return glad_glMultiTexCoord4dARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4DARBPROC glad_glMultiTexCoord4dARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord4dARB() {
        return glad_glMultiTexCoord4dARB$constants.SEGMENT.get(glad_glMultiTexCoord4dARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4DARBPROC glad_glMultiTexCoord4dARB
     * }
     */
    public static void glad_glMultiTexCoord4dARB(MemorySegment varValue) {
        glad_glMultiTexCoord4dARB$constants.SEGMENT.set(glad_glMultiTexCoord4dARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord4dARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord4dARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4DARBPROC glad_debug_glMultiTexCoord4dARB
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord4dARB$layout() {
        return glad_debug_glMultiTexCoord4dARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4DARBPROC glad_debug_glMultiTexCoord4dARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord4dARB$segment() {
        return glad_debug_glMultiTexCoord4dARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4DARBPROC glad_debug_glMultiTexCoord4dARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord4dARB() {
        return glad_debug_glMultiTexCoord4dARB$constants.SEGMENT.get(glad_debug_glMultiTexCoord4dARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4DARBPROC glad_debug_glMultiTexCoord4dARB
     * }
     */
    public static void glad_debug_glMultiTexCoord4dARB(MemorySegment varValue) {
        glad_debug_glMultiTexCoord4dARB$constants.SEGMENT.set(glad_debug_glMultiTexCoord4dARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord4dv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord4dv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4DVPROC glad_glMultiTexCoord4dv
     * }
     */
    public static AddressLayout glad_glMultiTexCoord4dv$layout() {
        return glad_glMultiTexCoord4dv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4DVPROC glad_glMultiTexCoord4dv
     * }
     */
    public static MemorySegment glad_glMultiTexCoord4dv$segment() {
        return glad_glMultiTexCoord4dv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4DVPROC glad_glMultiTexCoord4dv
     * }
     */
    public static MemorySegment glad_glMultiTexCoord4dv() {
        return glad_glMultiTexCoord4dv$constants.SEGMENT.get(glad_glMultiTexCoord4dv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4DVPROC glad_glMultiTexCoord4dv
     * }
     */
    public static void glad_glMultiTexCoord4dv(MemorySegment varValue) {
        glad_glMultiTexCoord4dv$constants.SEGMENT.set(glad_glMultiTexCoord4dv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord4dv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord4dv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4DVPROC glad_debug_glMultiTexCoord4dv
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord4dv$layout() {
        return glad_debug_glMultiTexCoord4dv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4DVPROC glad_debug_glMultiTexCoord4dv
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord4dv$segment() {
        return glad_debug_glMultiTexCoord4dv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4DVPROC glad_debug_glMultiTexCoord4dv
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord4dv() {
        return glad_debug_glMultiTexCoord4dv$constants.SEGMENT.get(glad_debug_glMultiTexCoord4dv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4DVPROC glad_debug_glMultiTexCoord4dv
     * }
     */
    public static void glad_debug_glMultiTexCoord4dv(MemorySegment varValue) {
        glad_debug_glMultiTexCoord4dv$constants.SEGMENT.set(glad_debug_glMultiTexCoord4dv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord4dvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord4dvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4DVARBPROC glad_glMultiTexCoord4dvARB
     * }
     */
    public static AddressLayout glad_glMultiTexCoord4dvARB$layout() {
        return glad_glMultiTexCoord4dvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4DVARBPROC glad_glMultiTexCoord4dvARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord4dvARB$segment() {
        return glad_glMultiTexCoord4dvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4DVARBPROC glad_glMultiTexCoord4dvARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord4dvARB() {
        return glad_glMultiTexCoord4dvARB$constants.SEGMENT.get(glad_glMultiTexCoord4dvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4DVARBPROC glad_glMultiTexCoord4dvARB
     * }
     */
    public static void glad_glMultiTexCoord4dvARB(MemorySegment varValue) {
        glad_glMultiTexCoord4dvARB$constants.SEGMENT.set(glad_glMultiTexCoord4dvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord4dvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord4dvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4DVARBPROC glad_debug_glMultiTexCoord4dvARB
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord4dvARB$layout() {
        return glad_debug_glMultiTexCoord4dvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4DVARBPROC glad_debug_glMultiTexCoord4dvARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord4dvARB$segment() {
        return glad_debug_glMultiTexCoord4dvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4DVARBPROC glad_debug_glMultiTexCoord4dvARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord4dvARB() {
        return glad_debug_glMultiTexCoord4dvARB$constants.SEGMENT.get(glad_debug_glMultiTexCoord4dvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4DVARBPROC glad_debug_glMultiTexCoord4dvARB
     * }
     */
    public static void glad_debug_glMultiTexCoord4dvARB(MemorySegment varValue) {
        glad_debug_glMultiTexCoord4dvARB$constants.SEGMENT.set(glad_debug_glMultiTexCoord4dvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord4f$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord4f").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4FPROC glad_glMultiTexCoord4f
     * }
     */
    public static AddressLayout glad_glMultiTexCoord4f$layout() {
        return glad_glMultiTexCoord4f$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4FPROC glad_glMultiTexCoord4f
     * }
     */
    public static MemorySegment glad_glMultiTexCoord4f$segment() {
        return glad_glMultiTexCoord4f$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4FPROC glad_glMultiTexCoord4f
     * }
     */
    public static MemorySegment glad_glMultiTexCoord4f() {
        return glad_glMultiTexCoord4f$constants.SEGMENT.get(glad_glMultiTexCoord4f$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4FPROC glad_glMultiTexCoord4f
     * }
     */
    public static void glad_glMultiTexCoord4f(MemorySegment varValue) {
        glad_glMultiTexCoord4f$constants.SEGMENT.set(glad_glMultiTexCoord4f$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord4f$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord4f").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4FPROC glad_debug_glMultiTexCoord4f
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord4f$layout() {
        return glad_debug_glMultiTexCoord4f$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4FPROC glad_debug_glMultiTexCoord4f
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord4f$segment() {
        return glad_debug_glMultiTexCoord4f$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4FPROC glad_debug_glMultiTexCoord4f
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord4f() {
        return glad_debug_glMultiTexCoord4f$constants.SEGMENT.get(glad_debug_glMultiTexCoord4f$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4FPROC glad_debug_glMultiTexCoord4f
     * }
     */
    public static void glad_debug_glMultiTexCoord4f(MemorySegment varValue) {
        glad_debug_glMultiTexCoord4f$constants.SEGMENT.set(glad_debug_glMultiTexCoord4f$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord4fARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord4fARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4FARBPROC glad_glMultiTexCoord4fARB
     * }
     */
    public static AddressLayout glad_glMultiTexCoord4fARB$layout() {
        return glad_glMultiTexCoord4fARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4FARBPROC glad_glMultiTexCoord4fARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord4fARB$segment() {
        return glad_glMultiTexCoord4fARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4FARBPROC glad_glMultiTexCoord4fARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord4fARB() {
        return glad_glMultiTexCoord4fARB$constants.SEGMENT.get(glad_glMultiTexCoord4fARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4FARBPROC glad_glMultiTexCoord4fARB
     * }
     */
    public static void glad_glMultiTexCoord4fARB(MemorySegment varValue) {
        glad_glMultiTexCoord4fARB$constants.SEGMENT.set(glad_glMultiTexCoord4fARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord4fARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord4fARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4FARBPROC glad_debug_glMultiTexCoord4fARB
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord4fARB$layout() {
        return glad_debug_glMultiTexCoord4fARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4FARBPROC glad_debug_glMultiTexCoord4fARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord4fARB$segment() {
        return glad_debug_glMultiTexCoord4fARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4FARBPROC glad_debug_glMultiTexCoord4fARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord4fARB() {
        return glad_debug_glMultiTexCoord4fARB$constants.SEGMENT.get(glad_debug_glMultiTexCoord4fARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4FARBPROC glad_debug_glMultiTexCoord4fARB
     * }
     */
    public static void glad_debug_glMultiTexCoord4fARB(MemorySegment varValue) {
        glad_debug_glMultiTexCoord4fARB$constants.SEGMENT.set(glad_debug_glMultiTexCoord4fARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord4fv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord4fv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4FVPROC glad_glMultiTexCoord4fv
     * }
     */
    public static AddressLayout glad_glMultiTexCoord4fv$layout() {
        return glad_glMultiTexCoord4fv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4FVPROC glad_glMultiTexCoord4fv
     * }
     */
    public static MemorySegment glad_glMultiTexCoord4fv$segment() {
        return glad_glMultiTexCoord4fv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4FVPROC glad_glMultiTexCoord4fv
     * }
     */
    public static MemorySegment glad_glMultiTexCoord4fv() {
        return glad_glMultiTexCoord4fv$constants.SEGMENT.get(glad_glMultiTexCoord4fv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4FVPROC glad_glMultiTexCoord4fv
     * }
     */
    public static void glad_glMultiTexCoord4fv(MemorySegment varValue) {
        glad_glMultiTexCoord4fv$constants.SEGMENT.set(glad_glMultiTexCoord4fv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord4fv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord4fv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4FVPROC glad_debug_glMultiTexCoord4fv
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord4fv$layout() {
        return glad_debug_glMultiTexCoord4fv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4FVPROC glad_debug_glMultiTexCoord4fv
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord4fv$segment() {
        return glad_debug_glMultiTexCoord4fv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4FVPROC glad_debug_glMultiTexCoord4fv
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord4fv() {
        return glad_debug_glMultiTexCoord4fv$constants.SEGMENT.get(glad_debug_glMultiTexCoord4fv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4FVPROC glad_debug_glMultiTexCoord4fv
     * }
     */
    public static void glad_debug_glMultiTexCoord4fv(MemorySegment varValue) {
        glad_debug_glMultiTexCoord4fv$constants.SEGMENT.set(glad_debug_glMultiTexCoord4fv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord4fvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord4fvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4FVARBPROC glad_glMultiTexCoord4fvARB
     * }
     */
    public static AddressLayout glad_glMultiTexCoord4fvARB$layout() {
        return glad_glMultiTexCoord4fvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4FVARBPROC glad_glMultiTexCoord4fvARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord4fvARB$segment() {
        return glad_glMultiTexCoord4fvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4FVARBPROC glad_glMultiTexCoord4fvARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord4fvARB() {
        return glad_glMultiTexCoord4fvARB$constants.SEGMENT.get(glad_glMultiTexCoord4fvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4FVARBPROC glad_glMultiTexCoord4fvARB
     * }
     */
    public static void glad_glMultiTexCoord4fvARB(MemorySegment varValue) {
        glad_glMultiTexCoord4fvARB$constants.SEGMENT.set(glad_glMultiTexCoord4fvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord4fvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord4fvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4FVARBPROC glad_debug_glMultiTexCoord4fvARB
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord4fvARB$layout() {
        return glad_debug_glMultiTexCoord4fvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4FVARBPROC glad_debug_glMultiTexCoord4fvARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord4fvARB$segment() {
        return glad_debug_glMultiTexCoord4fvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4FVARBPROC glad_debug_glMultiTexCoord4fvARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord4fvARB() {
        return glad_debug_glMultiTexCoord4fvARB$constants.SEGMENT.get(glad_debug_glMultiTexCoord4fvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4FVARBPROC glad_debug_glMultiTexCoord4fvARB
     * }
     */
    public static void glad_debug_glMultiTexCoord4fvARB(MemorySegment varValue) {
        glad_debug_glMultiTexCoord4fvARB$constants.SEGMENT.set(glad_debug_glMultiTexCoord4fvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord4i$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord4i").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4IPROC glad_glMultiTexCoord4i
     * }
     */
    public static AddressLayout glad_glMultiTexCoord4i$layout() {
        return glad_glMultiTexCoord4i$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4IPROC glad_glMultiTexCoord4i
     * }
     */
    public static MemorySegment glad_glMultiTexCoord4i$segment() {
        return glad_glMultiTexCoord4i$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4IPROC glad_glMultiTexCoord4i
     * }
     */
    public static MemorySegment glad_glMultiTexCoord4i() {
        return glad_glMultiTexCoord4i$constants.SEGMENT.get(glad_glMultiTexCoord4i$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4IPROC glad_glMultiTexCoord4i
     * }
     */
    public static void glad_glMultiTexCoord4i(MemorySegment varValue) {
        glad_glMultiTexCoord4i$constants.SEGMENT.set(glad_glMultiTexCoord4i$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord4i$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord4i").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4IPROC glad_debug_glMultiTexCoord4i
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord4i$layout() {
        return glad_debug_glMultiTexCoord4i$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4IPROC glad_debug_glMultiTexCoord4i
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord4i$segment() {
        return glad_debug_glMultiTexCoord4i$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4IPROC glad_debug_glMultiTexCoord4i
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord4i() {
        return glad_debug_glMultiTexCoord4i$constants.SEGMENT.get(glad_debug_glMultiTexCoord4i$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4IPROC glad_debug_glMultiTexCoord4i
     * }
     */
    public static void glad_debug_glMultiTexCoord4i(MemorySegment varValue) {
        glad_debug_glMultiTexCoord4i$constants.SEGMENT.set(glad_debug_glMultiTexCoord4i$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord4iARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord4iARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4IARBPROC glad_glMultiTexCoord4iARB
     * }
     */
    public static AddressLayout glad_glMultiTexCoord4iARB$layout() {
        return glad_glMultiTexCoord4iARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4IARBPROC glad_glMultiTexCoord4iARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord4iARB$segment() {
        return glad_glMultiTexCoord4iARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4IARBPROC glad_glMultiTexCoord4iARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord4iARB() {
        return glad_glMultiTexCoord4iARB$constants.SEGMENT.get(glad_glMultiTexCoord4iARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4IARBPROC glad_glMultiTexCoord4iARB
     * }
     */
    public static void glad_glMultiTexCoord4iARB(MemorySegment varValue) {
        glad_glMultiTexCoord4iARB$constants.SEGMENT.set(glad_glMultiTexCoord4iARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord4iARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord4iARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4IARBPROC glad_debug_glMultiTexCoord4iARB
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord4iARB$layout() {
        return glad_debug_glMultiTexCoord4iARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4IARBPROC glad_debug_glMultiTexCoord4iARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord4iARB$segment() {
        return glad_debug_glMultiTexCoord4iARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4IARBPROC glad_debug_glMultiTexCoord4iARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord4iARB() {
        return glad_debug_glMultiTexCoord4iARB$constants.SEGMENT.get(glad_debug_glMultiTexCoord4iARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4IARBPROC glad_debug_glMultiTexCoord4iARB
     * }
     */
    public static void glad_debug_glMultiTexCoord4iARB(MemorySegment varValue) {
        glad_debug_glMultiTexCoord4iARB$constants.SEGMENT.set(glad_debug_glMultiTexCoord4iARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord4iv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord4iv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4IVPROC glad_glMultiTexCoord4iv
     * }
     */
    public static AddressLayout glad_glMultiTexCoord4iv$layout() {
        return glad_glMultiTexCoord4iv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4IVPROC glad_glMultiTexCoord4iv
     * }
     */
    public static MemorySegment glad_glMultiTexCoord4iv$segment() {
        return glad_glMultiTexCoord4iv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4IVPROC glad_glMultiTexCoord4iv
     * }
     */
    public static MemorySegment glad_glMultiTexCoord4iv() {
        return glad_glMultiTexCoord4iv$constants.SEGMENT.get(glad_glMultiTexCoord4iv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4IVPROC glad_glMultiTexCoord4iv
     * }
     */
    public static void glad_glMultiTexCoord4iv(MemorySegment varValue) {
        glad_glMultiTexCoord4iv$constants.SEGMENT.set(glad_glMultiTexCoord4iv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord4iv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord4iv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4IVPROC glad_debug_glMultiTexCoord4iv
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord4iv$layout() {
        return glad_debug_glMultiTexCoord4iv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4IVPROC glad_debug_glMultiTexCoord4iv
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord4iv$segment() {
        return glad_debug_glMultiTexCoord4iv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4IVPROC glad_debug_glMultiTexCoord4iv
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord4iv() {
        return glad_debug_glMultiTexCoord4iv$constants.SEGMENT.get(glad_debug_glMultiTexCoord4iv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4IVPROC glad_debug_glMultiTexCoord4iv
     * }
     */
    public static void glad_debug_glMultiTexCoord4iv(MemorySegment varValue) {
        glad_debug_glMultiTexCoord4iv$constants.SEGMENT.set(glad_debug_glMultiTexCoord4iv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord4ivARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord4ivARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4IVARBPROC glad_glMultiTexCoord4ivARB
     * }
     */
    public static AddressLayout glad_glMultiTexCoord4ivARB$layout() {
        return glad_glMultiTexCoord4ivARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4IVARBPROC glad_glMultiTexCoord4ivARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord4ivARB$segment() {
        return glad_glMultiTexCoord4ivARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4IVARBPROC glad_glMultiTexCoord4ivARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord4ivARB() {
        return glad_glMultiTexCoord4ivARB$constants.SEGMENT.get(glad_glMultiTexCoord4ivARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4IVARBPROC glad_glMultiTexCoord4ivARB
     * }
     */
    public static void glad_glMultiTexCoord4ivARB(MemorySegment varValue) {
        glad_glMultiTexCoord4ivARB$constants.SEGMENT.set(glad_glMultiTexCoord4ivARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord4ivARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord4ivARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4IVARBPROC glad_debug_glMultiTexCoord4ivARB
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord4ivARB$layout() {
        return glad_debug_glMultiTexCoord4ivARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4IVARBPROC glad_debug_glMultiTexCoord4ivARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord4ivARB$segment() {
        return glad_debug_glMultiTexCoord4ivARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4IVARBPROC glad_debug_glMultiTexCoord4ivARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord4ivARB() {
        return glad_debug_glMultiTexCoord4ivARB$constants.SEGMENT.get(glad_debug_glMultiTexCoord4ivARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4IVARBPROC glad_debug_glMultiTexCoord4ivARB
     * }
     */
    public static void glad_debug_glMultiTexCoord4ivARB(MemorySegment varValue) {
        glad_debug_glMultiTexCoord4ivARB$constants.SEGMENT.set(glad_debug_glMultiTexCoord4ivARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord4s$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord4s").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4SPROC glad_glMultiTexCoord4s
     * }
     */
    public static AddressLayout glad_glMultiTexCoord4s$layout() {
        return glad_glMultiTexCoord4s$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4SPROC glad_glMultiTexCoord4s
     * }
     */
    public static MemorySegment glad_glMultiTexCoord4s$segment() {
        return glad_glMultiTexCoord4s$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4SPROC glad_glMultiTexCoord4s
     * }
     */
    public static MemorySegment glad_glMultiTexCoord4s() {
        return glad_glMultiTexCoord4s$constants.SEGMENT.get(glad_glMultiTexCoord4s$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4SPROC glad_glMultiTexCoord4s
     * }
     */
    public static void glad_glMultiTexCoord4s(MemorySegment varValue) {
        glad_glMultiTexCoord4s$constants.SEGMENT.set(glad_glMultiTexCoord4s$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord4s$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord4s").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4SPROC glad_debug_glMultiTexCoord4s
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord4s$layout() {
        return glad_debug_glMultiTexCoord4s$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4SPROC glad_debug_glMultiTexCoord4s
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord4s$segment() {
        return glad_debug_glMultiTexCoord4s$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4SPROC glad_debug_glMultiTexCoord4s
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord4s() {
        return glad_debug_glMultiTexCoord4s$constants.SEGMENT.get(glad_debug_glMultiTexCoord4s$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4SPROC glad_debug_glMultiTexCoord4s
     * }
     */
    public static void glad_debug_glMultiTexCoord4s(MemorySegment varValue) {
        glad_debug_glMultiTexCoord4s$constants.SEGMENT.set(glad_debug_glMultiTexCoord4s$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord4sARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord4sARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4SARBPROC glad_glMultiTexCoord4sARB
     * }
     */
    public static AddressLayout glad_glMultiTexCoord4sARB$layout() {
        return glad_glMultiTexCoord4sARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4SARBPROC glad_glMultiTexCoord4sARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord4sARB$segment() {
        return glad_glMultiTexCoord4sARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4SARBPROC glad_glMultiTexCoord4sARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord4sARB() {
        return glad_glMultiTexCoord4sARB$constants.SEGMENT.get(glad_glMultiTexCoord4sARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4SARBPROC glad_glMultiTexCoord4sARB
     * }
     */
    public static void glad_glMultiTexCoord4sARB(MemorySegment varValue) {
        glad_glMultiTexCoord4sARB$constants.SEGMENT.set(glad_glMultiTexCoord4sARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord4sARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord4sARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4SARBPROC glad_debug_glMultiTexCoord4sARB
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord4sARB$layout() {
        return glad_debug_glMultiTexCoord4sARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4SARBPROC glad_debug_glMultiTexCoord4sARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord4sARB$segment() {
        return glad_debug_glMultiTexCoord4sARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4SARBPROC glad_debug_glMultiTexCoord4sARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord4sARB() {
        return glad_debug_glMultiTexCoord4sARB$constants.SEGMENT.get(glad_debug_glMultiTexCoord4sARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4SARBPROC glad_debug_glMultiTexCoord4sARB
     * }
     */
    public static void glad_debug_glMultiTexCoord4sARB(MemorySegment varValue) {
        glad_debug_glMultiTexCoord4sARB$constants.SEGMENT.set(glad_debug_glMultiTexCoord4sARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord4sv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord4sv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4SVPROC glad_glMultiTexCoord4sv
     * }
     */
    public static AddressLayout glad_glMultiTexCoord4sv$layout() {
        return glad_glMultiTexCoord4sv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4SVPROC glad_glMultiTexCoord4sv
     * }
     */
    public static MemorySegment glad_glMultiTexCoord4sv$segment() {
        return glad_glMultiTexCoord4sv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4SVPROC glad_glMultiTexCoord4sv
     * }
     */
    public static MemorySegment glad_glMultiTexCoord4sv() {
        return glad_glMultiTexCoord4sv$constants.SEGMENT.get(glad_glMultiTexCoord4sv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4SVPROC glad_glMultiTexCoord4sv
     * }
     */
    public static void glad_glMultiTexCoord4sv(MemorySegment varValue) {
        glad_glMultiTexCoord4sv$constants.SEGMENT.set(glad_glMultiTexCoord4sv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord4sv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord4sv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4SVPROC glad_debug_glMultiTexCoord4sv
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord4sv$layout() {
        return glad_debug_glMultiTexCoord4sv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4SVPROC glad_debug_glMultiTexCoord4sv
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord4sv$segment() {
        return glad_debug_glMultiTexCoord4sv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4SVPROC glad_debug_glMultiTexCoord4sv
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord4sv() {
        return glad_debug_glMultiTexCoord4sv$constants.SEGMENT.get(glad_debug_glMultiTexCoord4sv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4SVPROC glad_debug_glMultiTexCoord4sv
     * }
     */
    public static void glad_debug_glMultiTexCoord4sv(MemorySegment varValue) {
        glad_debug_glMultiTexCoord4sv$constants.SEGMENT.set(glad_debug_glMultiTexCoord4sv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoord4svARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoord4svARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4SVARBPROC glad_glMultiTexCoord4svARB
     * }
     */
    public static AddressLayout glad_glMultiTexCoord4svARB$layout() {
        return glad_glMultiTexCoord4svARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4SVARBPROC glad_glMultiTexCoord4svARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord4svARB$segment() {
        return glad_glMultiTexCoord4svARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4SVARBPROC glad_glMultiTexCoord4svARB
     * }
     */
    public static MemorySegment glad_glMultiTexCoord4svARB() {
        return glad_glMultiTexCoord4svARB$constants.SEGMENT.get(glad_glMultiTexCoord4svARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4SVARBPROC glad_glMultiTexCoord4svARB
     * }
     */
    public static void glad_glMultiTexCoord4svARB(MemorySegment varValue) {
        glad_glMultiTexCoord4svARB$constants.SEGMENT.set(glad_glMultiTexCoord4svARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoord4svARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoord4svARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4SVARBPROC glad_debug_glMultiTexCoord4svARB
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoord4svARB$layout() {
        return glad_debug_glMultiTexCoord4svARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4SVARBPROC glad_debug_glMultiTexCoord4svARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord4svARB$segment() {
        return glad_debug_glMultiTexCoord4svARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4SVARBPROC glad_debug_glMultiTexCoord4svARB
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoord4svARB() {
        return glad_debug_glMultiTexCoord4svARB$constants.SEGMENT.get(glad_debug_glMultiTexCoord4svARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORD4SVARBPROC glad_debug_glMultiTexCoord4svARB
     * }
     */
    public static void glad_debug_glMultiTexCoord4svARB(MemorySegment varValue) {
        glad_debug_glMultiTexCoord4svARB$constants.SEGMENT.set(glad_debug_glMultiTexCoord4svARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoordP1ui$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoordP1ui").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP1UIPROC glad_glMultiTexCoordP1ui
     * }
     */
    public static AddressLayout glad_glMultiTexCoordP1ui$layout() {
        return glad_glMultiTexCoordP1ui$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP1UIPROC glad_glMultiTexCoordP1ui
     * }
     */
    public static MemorySegment glad_glMultiTexCoordP1ui$segment() {
        return glad_glMultiTexCoordP1ui$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP1UIPROC glad_glMultiTexCoordP1ui
     * }
     */
    public static MemorySegment glad_glMultiTexCoordP1ui() {
        return glad_glMultiTexCoordP1ui$constants.SEGMENT.get(glad_glMultiTexCoordP1ui$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP1UIPROC glad_glMultiTexCoordP1ui
     * }
     */
    public static void glad_glMultiTexCoordP1ui(MemorySegment varValue) {
        glad_glMultiTexCoordP1ui$constants.SEGMENT.set(glad_glMultiTexCoordP1ui$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoordP1ui$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoordP1ui").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP1UIPROC glad_debug_glMultiTexCoordP1ui
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoordP1ui$layout() {
        return glad_debug_glMultiTexCoordP1ui$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP1UIPROC glad_debug_glMultiTexCoordP1ui
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoordP1ui$segment() {
        return glad_debug_glMultiTexCoordP1ui$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP1UIPROC glad_debug_glMultiTexCoordP1ui
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoordP1ui() {
        return glad_debug_glMultiTexCoordP1ui$constants.SEGMENT.get(glad_debug_glMultiTexCoordP1ui$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP1UIPROC glad_debug_glMultiTexCoordP1ui
     * }
     */
    public static void glad_debug_glMultiTexCoordP1ui(MemorySegment varValue) {
        glad_debug_glMultiTexCoordP1ui$constants.SEGMENT.set(glad_debug_glMultiTexCoordP1ui$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoordP1uiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoordP1uiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP1UIVPROC glad_glMultiTexCoordP1uiv
     * }
     */
    public static AddressLayout glad_glMultiTexCoordP1uiv$layout() {
        return glad_glMultiTexCoordP1uiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP1UIVPROC glad_glMultiTexCoordP1uiv
     * }
     */
    public static MemorySegment glad_glMultiTexCoordP1uiv$segment() {
        return glad_glMultiTexCoordP1uiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP1UIVPROC glad_glMultiTexCoordP1uiv
     * }
     */
    public static MemorySegment glad_glMultiTexCoordP1uiv() {
        return glad_glMultiTexCoordP1uiv$constants.SEGMENT.get(glad_glMultiTexCoordP1uiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP1UIVPROC glad_glMultiTexCoordP1uiv
     * }
     */
    public static void glad_glMultiTexCoordP1uiv(MemorySegment varValue) {
        glad_glMultiTexCoordP1uiv$constants.SEGMENT.set(glad_glMultiTexCoordP1uiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoordP1uiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoordP1uiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP1UIVPROC glad_debug_glMultiTexCoordP1uiv
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoordP1uiv$layout() {
        return glad_debug_glMultiTexCoordP1uiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP1UIVPROC glad_debug_glMultiTexCoordP1uiv
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoordP1uiv$segment() {
        return glad_debug_glMultiTexCoordP1uiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP1UIVPROC glad_debug_glMultiTexCoordP1uiv
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoordP1uiv() {
        return glad_debug_glMultiTexCoordP1uiv$constants.SEGMENT.get(glad_debug_glMultiTexCoordP1uiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP1UIVPROC glad_debug_glMultiTexCoordP1uiv
     * }
     */
    public static void glad_debug_glMultiTexCoordP1uiv(MemorySegment varValue) {
        glad_debug_glMultiTexCoordP1uiv$constants.SEGMENT.set(glad_debug_glMultiTexCoordP1uiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoordP2ui$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoordP2ui").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP2UIPROC glad_glMultiTexCoordP2ui
     * }
     */
    public static AddressLayout glad_glMultiTexCoordP2ui$layout() {
        return glad_glMultiTexCoordP2ui$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP2UIPROC glad_glMultiTexCoordP2ui
     * }
     */
    public static MemorySegment glad_glMultiTexCoordP2ui$segment() {
        return glad_glMultiTexCoordP2ui$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP2UIPROC glad_glMultiTexCoordP2ui
     * }
     */
    public static MemorySegment glad_glMultiTexCoordP2ui() {
        return glad_glMultiTexCoordP2ui$constants.SEGMENT.get(glad_glMultiTexCoordP2ui$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP2UIPROC glad_glMultiTexCoordP2ui
     * }
     */
    public static void glad_glMultiTexCoordP2ui(MemorySegment varValue) {
        glad_glMultiTexCoordP2ui$constants.SEGMENT.set(glad_glMultiTexCoordP2ui$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoordP2ui$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoordP2ui").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP2UIPROC glad_debug_glMultiTexCoordP2ui
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoordP2ui$layout() {
        return glad_debug_glMultiTexCoordP2ui$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP2UIPROC glad_debug_glMultiTexCoordP2ui
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoordP2ui$segment() {
        return glad_debug_glMultiTexCoordP2ui$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP2UIPROC glad_debug_glMultiTexCoordP2ui
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoordP2ui() {
        return glad_debug_glMultiTexCoordP2ui$constants.SEGMENT.get(glad_debug_glMultiTexCoordP2ui$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP2UIPROC glad_debug_glMultiTexCoordP2ui
     * }
     */
    public static void glad_debug_glMultiTexCoordP2ui(MemorySegment varValue) {
        glad_debug_glMultiTexCoordP2ui$constants.SEGMENT.set(glad_debug_glMultiTexCoordP2ui$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoordP2uiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoordP2uiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP2UIVPROC glad_glMultiTexCoordP2uiv
     * }
     */
    public static AddressLayout glad_glMultiTexCoordP2uiv$layout() {
        return glad_glMultiTexCoordP2uiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP2UIVPROC glad_glMultiTexCoordP2uiv
     * }
     */
    public static MemorySegment glad_glMultiTexCoordP2uiv$segment() {
        return glad_glMultiTexCoordP2uiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP2UIVPROC glad_glMultiTexCoordP2uiv
     * }
     */
    public static MemorySegment glad_glMultiTexCoordP2uiv() {
        return glad_glMultiTexCoordP2uiv$constants.SEGMENT.get(glad_glMultiTexCoordP2uiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP2UIVPROC glad_glMultiTexCoordP2uiv
     * }
     */
    public static void glad_glMultiTexCoordP2uiv(MemorySegment varValue) {
        glad_glMultiTexCoordP2uiv$constants.SEGMENT.set(glad_glMultiTexCoordP2uiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoordP2uiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoordP2uiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP2UIVPROC glad_debug_glMultiTexCoordP2uiv
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoordP2uiv$layout() {
        return glad_debug_glMultiTexCoordP2uiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP2UIVPROC glad_debug_glMultiTexCoordP2uiv
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoordP2uiv$segment() {
        return glad_debug_glMultiTexCoordP2uiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP2UIVPROC glad_debug_glMultiTexCoordP2uiv
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoordP2uiv() {
        return glad_debug_glMultiTexCoordP2uiv$constants.SEGMENT.get(glad_debug_glMultiTexCoordP2uiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP2UIVPROC glad_debug_glMultiTexCoordP2uiv
     * }
     */
    public static void glad_debug_glMultiTexCoordP2uiv(MemorySegment varValue) {
        glad_debug_glMultiTexCoordP2uiv$constants.SEGMENT.set(glad_debug_glMultiTexCoordP2uiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoordP3ui$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoordP3ui").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP3UIPROC glad_glMultiTexCoordP3ui
     * }
     */
    public static AddressLayout glad_glMultiTexCoordP3ui$layout() {
        return glad_glMultiTexCoordP3ui$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP3UIPROC glad_glMultiTexCoordP3ui
     * }
     */
    public static MemorySegment glad_glMultiTexCoordP3ui$segment() {
        return glad_glMultiTexCoordP3ui$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP3UIPROC glad_glMultiTexCoordP3ui
     * }
     */
    public static MemorySegment glad_glMultiTexCoordP3ui() {
        return glad_glMultiTexCoordP3ui$constants.SEGMENT.get(glad_glMultiTexCoordP3ui$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP3UIPROC glad_glMultiTexCoordP3ui
     * }
     */
    public static void glad_glMultiTexCoordP3ui(MemorySegment varValue) {
        glad_glMultiTexCoordP3ui$constants.SEGMENT.set(glad_glMultiTexCoordP3ui$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoordP3ui$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoordP3ui").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP3UIPROC glad_debug_glMultiTexCoordP3ui
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoordP3ui$layout() {
        return glad_debug_glMultiTexCoordP3ui$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP3UIPROC glad_debug_glMultiTexCoordP3ui
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoordP3ui$segment() {
        return glad_debug_glMultiTexCoordP3ui$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP3UIPROC glad_debug_glMultiTexCoordP3ui
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoordP3ui() {
        return glad_debug_glMultiTexCoordP3ui$constants.SEGMENT.get(glad_debug_glMultiTexCoordP3ui$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP3UIPROC glad_debug_glMultiTexCoordP3ui
     * }
     */
    public static void glad_debug_glMultiTexCoordP3ui(MemorySegment varValue) {
        glad_debug_glMultiTexCoordP3ui$constants.SEGMENT.set(glad_debug_glMultiTexCoordP3ui$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoordP3uiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoordP3uiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP3UIVPROC glad_glMultiTexCoordP3uiv
     * }
     */
    public static AddressLayout glad_glMultiTexCoordP3uiv$layout() {
        return glad_glMultiTexCoordP3uiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP3UIVPROC glad_glMultiTexCoordP3uiv
     * }
     */
    public static MemorySegment glad_glMultiTexCoordP3uiv$segment() {
        return glad_glMultiTexCoordP3uiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP3UIVPROC glad_glMultiTexCoordP3uiv
     * }
     */
    public static MemorySegment glad_glMultiTexCoordP3uiv() {
        return glad_glMultiTexCoordP3uiv$constants.SEGMENT.get(glad_glMultiTexCoordP3uiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP3UIVPROC glad_glMultiTexCoordP3uiv
     * }
     */
    public static void glad_glMultiTexCoordP3uiv(MemorySegment varValue) {
        glad_glMultiTexCoordP3uiv$constants.SEGMENT.set(glad_glMultiTexCoordP3uiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoordP3uiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoordP3uiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP3UIVPROC glad_debug_glMultiTexCoordP3uiv
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoordP3uiv$layout() {
        return glad_debug_glMultiTexCoordP3uiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP3UIVPROC glad_debug_glMultiTexCoordP3uiv
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoordP3uiv$segment() {
        return glad_debug_glMultiTexCoordP3uiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP3UIVPROC glad_debug_glMultiTexCoordP3uiv
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoordP3uiv() {
        return glad_debug_glMultiTexCoordP3uiv$constants.SEGMENT.get(glad_debug_glMultiTexCoordP3uiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP3UIVPROC glad_debug_glMultiTexCoordP3uiv
     * }
     */
    public static void glad_debug_glMultiTexCoordP3uiv(MemorySegment varValue) {
        glad_debug_glMultiTexCoordP3uiv$constants.SEGMENT.set(glad_debug_glMultiTexCoordP3uiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoordP4ui$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoordP4ui").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP4UIPROC glad_glMultiTexCoordP4ui
     * }
     */
    public static AddressLayout glad_glMultiTexCoordP4ui$layout() {
        return glad_glMultiTexCoordP4ui$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP4UIPROC glad_glMultiTexCoordP4ui
     * }
     */
    public static MemorySegment glad_glMultiTexCoordP4ui$segment() {
        return glad_glMultiTexCoordP4ui$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP4UIPROC glad_glMultiTexCoordP4ui
     * }
     */
    public static MemorySegment glad_glMultiTexCoordP4ui() {
        return glad_glMultiTexCoordP4ui$constants.SEGMENT.get(glad_glMultiTexCoordP4ui$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP4UIPROC glad_glMultiTexCoordP4ui
     * }
     */
    public static void glad_glMultiTexCoordP4ui(MemorySegment varValue) {
        glad_glMultiTexCoordP4ui$constants.SEGMENT.set(glad_glMultiTexCoordP4ui$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoordP4ui$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoordP4ui").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP4UIPROC glad_debug_glMultiTexCoordP4ui
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoordP4ui$layout() {
        return glad_debug_glMultiTexCoordP4ui$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP4UIPROC glad_debug_glMultiTexCoordP4ui
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoordP4ui$segment() {
        return glad_debug_glMultiTexCoordP4ui$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP4UIPROC glad_debug_glMultiTexCoordP4ui
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoordP4ui() {
        return glad_debug_glMultiTexCoordP4ui$constants.SEGMENT.get(glad_debug_glMultiTexCoordP4ui$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP4UIPROC glad_debug_glMultiTexCoordP4ui
     * }
     */
    public static void glad_debug_glMultiTexCoordP4ui(MemorySegment varValue) {
        glad_debug_glMultiTexCoordP4ui$constants.SEGMENT.set(glad_debug_glMultiTexCoordP4ui$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoordP4uiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoordP4uiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP4UIVPROC glad_glMultiTexCoordP4uiv
     * }
     */
    public static AddressLayout glad_glMultiTexCoordP4uiv$layout() {
        return glad_glMultiTexCoordP4uiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP4UIVPROC glad_glMultiTexCoordP4uiv
     * }
     */
    public static MemorySegment glad_glMultiTexCoordP4uiv$segment() {
        return glad_glMultiTexCoordP4uiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP4UIVPROC glad_glMultiTexCoordP4uiv
     * }
     */
    public static MemorySegment glad_glMultiTexCoordP4uiv() {
        return glad_glMultiTexCoordP4uiv$constants.SEGMENT.get(glad_glMultiTexCoordP4uiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP4UIVPROC glad_glMultiTexCoordP4uiv
     * }
     */
    public static void glad_glMultiTexCoordP4uiv(MemorySegment varValue) {
        glad_glMultiTexCoordP4uiv$constants.SEGMENT.set(glad_glMultiTexCoordP4uiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoordP4uiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoordP4uiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP4UIVPROC glad_debug_glMultiTexCoordP4uiv
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoordP4uiv$layout() {
        return glad_debug_glMultiTexCoordP4uiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP4UIVPROC glad_debug_glMultiTexCoordP4uiv
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoordP4uiv$segment() {
        return glad_debug_glMultiTexCoordP4uiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP4UIVPROC glad_debug_glMultiTexCoordP4uiv
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoordP4uiv() {
        return glad_debug_glMultiTexCoordP4uiv$constants.SEGMENT.get(glad_debug_glMultiTexCoordP4uiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDP4UIVPROC glad_debug_glMultiTexCoordP4uiv
     * }
     */
    public static void glad_debug_glMultiTexCoordP4uiv(MemorySegment varValue) {
        glad_debug_glMultiTexCoordP4uiv$constants.SEGMENT.set(glad_debug_glMultiTexCoordP4uiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexCoordPointerEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexCoordPointerEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDPOINTEREXTPROC glad_glMultiTexCoordPointerEXT
     * }
     */
    public static AddressLayout glad_glMultiTexCoordPointerEXT$layout() {
        return glad_glMultiTexCoordPointerEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDPOINTEREXTPROC glad_glMultiTexCoordPointerEXT
     * }
     */
    public static MemorySegment glad_glMultiTexCoordPointerEXT$segment() {
        return glad_glMultiTexCoordPointerEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDPOINTEREXTPROC glad_glMultiTexCoordPointerEXT
     * }
     */
    public static MemorySegment glad_glMultiTexCoordPointerEXT() {
        return glad_glMultiTexCoordPointerEXT$constants.SEGMENT.get(glad_glMultiTexCoordPointerEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDPOINTEREXTPROC glad_glMultiTexCoordPointerEXT
     * }
     */
    public static void glad_glMultiTexCoordPointerEXT(MemorySegment varValue) {
        glad_glMultiTexCoordPointerEXT$constants.SEGMENT.set(glad_glMultiTexCoordPointerEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexCoordPointerEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexCoordPointerEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDPOINTEREXTPROC glad_debug_glMultiTexCoordPointerEXT
     * }
     */
    public static AddressLayout glad_debug_glMultiTexCoordPointerEXT$layout() {
        return glad_debug_glMultiTexCoordPointerEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDPOINTEREXTPROC glad_debug_glMultiTexCoordPointerEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoordPointerEXT$segment() {
        return glad_debug_glMultiTexCoordPointerEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDPOINTEREXTPROC glad_debug_glMultiTexCoordPointerEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiTexCoordPointerEXT() {
        return glad_debug_glMultiTexCoordPointerEXT$constants.SEGMENT.get(glad_debug_glMultiTexCoordPointerEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXCOORDPOINTEREXTPROC glad_debug_glMultiTexCoordPointerEXT
     * }
     */
    public static void glad_debug_glMultiTexCoordPointerEXT(MemorySegment varValue) {
        glad_debug_glMultiTexCoordPointerEXT$constants.SEGMENT.set(glad_debug_glMultiTexCoordPointerEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexEnvfEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexEnvfEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXENVFEXTPROC glad_glMultiTexEnvfEXT
     * }
     */
    public static AddressLayout glad_glMultiTexEnvfEXT$layout() {
        return glad_glMultiTexEnvfEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXENVFEXTPROC glad_glMultiTexEnvfEXT
     * }
     */
    public static MemorySegment glad_glMultiTexEnvfEXT$segment() {
        return glad_glMultiTexEnvfEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXENVFEXTPROC glad_glMultiTexEnvfEXT
     * }
     */
    public static MemorySegment glad_glMultiTexEnvfEXT() {
        return glad_glMultiTexEnvfEXT$constants.SEGMENT.get(glad_glMultiTexEnvfEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXENVFEXTPROC glad_glMultiTexEnvfEXT
     * }
     */
    public static void glad_glMultiTexEnvfEXT(MemorySegment varValue) {
        glad_glMultiTexEnvfEXT$constants.SEGMENT.set(glad_glMultiTexEnvfEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexEnvfEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexEnvfEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXENVFEXTPROC glad_debug_glMultiTexEnvfEXT
     * }
     */
    public static AddressLayout glad_debug_glMultiTexEnvfEXT$layout() {
        return glad_debug_glMultiTexEnvfEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXENVFEXTPROC glad_debug_glMultiTexEnvfEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiTexEnvfEXT$segment() {
        return glad_debug_glMultiTexEnvfEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXENVFEXTPROC glad_debug_glMultiTexEnvfEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiTexEnvfEXT() {
        return glad_debug_glMultiTexEnvfEXT$constants.SEGMENT.get(glad_debug_glMultiTexEnvfEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXENVFEXTPROC glad_debug_glMultiTexEnvfEXT
     * }
     */
    public static void glad_debug_glMultiTexEnvfEXT(MemorySegment varValue) {
        glad_debug_glMultiTexEnvfEXT$constants.SEGMENT.set(glad_debug_glMultiTexEnvfEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexEnvfvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexEnvfvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXENVFVEXTPROC glad_glMultiTexEnvfvEXT
     * }
     */
    public static AddressLayout glad_glMultiTexEnvfvEXT$layout() {
        return glad_glMultiTexEnvfvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXENVFVEXTPROC glad_glMultiTexEnvfvEXT
     * }
     */
    public static MemorySegment glad_glMultiTexEnvfvEXT$segment() {
        return glad_glMultiTexEnvfvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXENVFVEXTPROC glad_glMultiTexEnvfvEXT
     * }
     */
    public static MemorySegment glad_glMultiTexEnvfvEXT() {
        return glad_glMultiTexEnvfvEXT$constants.SEGMENT.get(glad_glMultiTexEnvfvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXENVFVEXTPROC glad_glMultiTexEnvfvEXT
     * }
     */
    public static void glad_glMultiTexEnvfvEXT(MemorySegment varValue) {
        glad_glMultiTexEnvfvEXT$constants.SEGMENT.set(glad_glMultiTexEnvfvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexEnvfvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexEnvfvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXENVFVEXTPROC glad_debug_glMultiTexEnvfvEXT
     * }
     */
    public static AddressLayout glad_debug_glMultiTexEnvfvEXT$layout() {
        return glad_debug_glMultiTexEnvfvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXENVFVEXTPROC glad_debug_glMultiTexEnvfvEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiTexEnvfvEXT$segment() {
        return glad_debug_glMultiTexEnvfvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXENVFVEXTPROC glad_debug_glMultiTexEnvfvEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiTexEnvfvEXT() {
        return glad_debug_glMultiTexEnvfvEXT$constants.SEGMENT.get(glad_debug_glMultiTexEnvfvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXENVFVEXTPROC glad_debug_glMultiTexEnvfvEXT
     * }
     */
    public static void glad_debug_glMultiTexEnvfvEXT(MemorySegment varValue) {
        glad_debug_glMultiTexEnvfvEXT$constants.SEGMENT.set(glad_debug_glMultiTexEnvfvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexEnviEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexEnviEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXENVIEXTPROC glad_glMultiTexEnviEXT
     * }
     */
    public static AddressLayout glad_glMultiTexEnviEXT$layout() {
        return glad_glMultiTexEnviEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXENVIEXTPROC glad_glMultiTexEnviEXT
     * }
     */
    public static MemorySegment glad_glMultiTexEnviEXT$segment() {
        return glad_glMultiTexEnviEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXENVIEXTPROC glad_glMultiTexEnviEXT
     * }
     */
    public static MemorySegment glad_glMultiTexEnviEXT() {
        return glad_glMultiTexEnviEXT$constants.SEGMENT.get(glad_glMultiTexEnviEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXENVIEXTPROC glad_glMultiTexEnviEXT
     * }
     */
    public static void glad_glMultiTexEnviEXT(MemorySegment varValue) {
        glad_glMultiTexEnviEXT$constants.SEGMENT.set(glad_glMultiTexEnviEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexEnviEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexEnviEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXENVIEXTPROC glad_debug_glMultiTexEnviEXT
     * }
     */
    public static AddressLayout glad_debug_glMultiTexEnviEXT$layout() {
        return glad_debug_glMultiTexEnviEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXENVIEXTPROC glad_debug_glMultiTexEnviEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiTexEnviEXT$segment() {
        return glad_debug_glMultiTexEnviEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXENVIEXTPROC glad_debug_glMultiTexEnviEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiTexEnviEXT() {
        return glad_debug_glMultiTexEnviEXT$constants.SEGMENT.get(glad_debug_glMultiTexEnviEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXENVIEXTPROC glad_debug_glMultiTexEnviEXT
     * }
     */
    public static void glad_debug_glMultiTexEnviEXT(MemorySegment varValue) {
        glad_debug_glMultiTexEnviEXT$constants.SEGMENT.set(glad_debug_glMultiTexEnviEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexEnvivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexEnvivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXENVIVEXTPROC glad_glMultiTexEnvivEXT
     * }
     */
    public static AddressLayout glad_glMultiTexEnvivEXT$layout() {
        return glad_glMultiTexEnvivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXENVIVEXTPROC glad_glMultiTexEnvivEXT
     * }
     */
    public static MemorySegment glad_glMultiTexEnvivEXT$segment() {
        return glad_glMultiTexEnvivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXENVIVEXTPROC glad_glMultiTexEnvivEXT
     * }
     */
    public static MemorySegment glad_glMultiTexEnvivEXT() {
        return glad_glMultiTexEnvivEXT$constants.SEGMENT.get(glad_glMultiTexEnvivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXENVIVEXTPROC glad_glMultiTexEnvivEXT
     * }
     */
    public static void glad_glMultiTexEnvivEXT(MemorySegment varValue) {
        glad_glMultiTexEnvivEXT$constants.SEGMENT.set(glad_glMultiTexEnvivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexEnvivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexEnvivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXENVIVEXTPROC glad_debug_glMultiTexEnvivEXT
     * }
     */
    public static AddressLayout glad_debug_glMultiTexEnvivEXT$layout() {
        return glad_debug_glMultiTexEnvivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXENVIVEXTPROC glad_debug_glMultiTexEnvivEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiTexEnvivEXT$segment() {
        return glad_debug_glMultiTexEnvivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXENVIVEXTPROC glad_debug_glMultiTexEnvivEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiTexEnvivEXT() {
        return glad_debug_glMultiTexEnvivEXT$constants.SEGMENT.get(glad_debug_glMultiTexEnvivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXENVIVEXTPROC glad_debug_glMultiTexEnvivEXT
     * }
     */
    public static void glad_debug_glMultiTexEnvivEXT(MemorySegment varValue) {
        glad_debug_glMultiTexEnvivEXT$constants.SEGMENT.set(glad_debug_glMultiTexEnvivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexGendEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexGendEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXGENDEXTPROC glad_glMultiTexGendEXT
     * }
     */
    public static AddressLayout glad_glMultiTexGendEXT$layout() {
        return glad_glMultiTexGendEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXGENDEXTPROC glad_glMultiTexGendEXT
     * }
     */
    public static MemorySegment glad_glMultiTexGendEXT$segment() {
        return glad_glMultiTexGendEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXGENDEXTPROC glad_glMultiTexGendEXT
     * }
     */
    public static MemorySegment glad_glMultiTexGendEXT() {
        return glad_glMultiTexGendEXT$constants.SEGMENT.get(glad_glMultiTexGendEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXGENDEXTPROC glad_glMultiTexGendEXT
     * }
     */
    public static void glad_glMultiTexGendEXT(MemorySegment varValue) {
        glad_glMultiTexGendEXT$constants.SEGMENT.set(glad_glMultiTexGendEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexGendEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexGendEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXGENDEXTPROC glad_debug_glMultiTexGendEXT
     * }
     */
    public static AddressLayout glad_debug_glMultiTexGendEXT$layout() {
        return glad_debug_glMultiTexGendEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXGENDEXTPROC glad_debug_glMultiTexGendEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiTexGendEXT$segment() {
        return glad_debug_glMultiTexGendEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXGENDEXTPROC glad_debug_glMultiTexGendEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiTexGendEXT() {
        return glad_debug_glMultiTexGendEXT$constants.SEGMENT.get(glad_debug_glMultiTexGendEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXGENDEXTPROC glad_debug_glMultiTexGendEXT
     * }
     */
    public static void glad_debug_glMultiTexGendEXT(MemorySegment varValue) {
        glad_debug_glMultiTexGendEXT$constants.SEGMENT.set(glad_debug_glMultiTexGendEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexGendvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexGendvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXGENDVEXTPROC glad_glMultiTexGendvEXT
     * }
     */
    public static AddressLayout glad_glMultiTexGendvEXT$layout() {
        return glad_glMultiTexGendvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXGENDVEXTPROC glad_glMultiTexGendvEXT
     * }
     */
    public static MemorySegment glad_glMultiTexGendvEXT$segment() {
        return glad_glMultiTexGendvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXGENDVEXTPROC glad_glMultiTexGendvEXT
     * }
     */
    public static MemorySegment glad_glMultiTexGendvEXT() {
        return glad_glMultiTexGendvEXT$constants.SEGMENT.get(glad_glMultiTexGendvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXGENDVEXTPROC glad_glMultiTexGendvEXT
     * }
     */
    public static void glad_glMultiTexGendvEXT(MemorySegment varValue) {
        glad_glMultiTexGendvEXT$constants.SEGMENT.set(glad_glMultiTexGendvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexGendvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexGendvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXGENDVEXTPROC glad_debug_glMultiTexGendvEXT
     * }
     */
    public static AddressLayout glad_debug_glMultiTexGendvEXT$layout() {
        return glad_debug_glMultiTexGendvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXGENDVEXTPROC glad_debug_glMultiTexGendvEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiTexGendvEXT$segment() {
        return glad_debug_glMultiTexGendvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXGENDVEXTPROC glad_debug_glMultiTexGendvEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiTexGendvEXT() {
        return glad_debug_glMultiTexGendvEXT$constants.SEGMENT.get(glad_debug_glMultiTexGendvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXGENDVEXTPROC glad_debug_glMultiTexGendvEXT
     * }
     */
    public static void glad_debug_glMultiTexGendvEXT(MemorySegment varValue) {
        glad_debug_glMultiTexGendvEXT$constants.SEGMENT.set(glad_debug_glMultiTexGendvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexGenfEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexGenfEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXGENFEXTPROC glad_glMultiTexGenfEXT
     * }
     */
    public static AddressLayout glad_glMultiTexGenfEXT$layout() {
        return glad_glMultiTexGenfEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXGENFEXTPROC glad_glMultiTexGenfEXT
     * }
     */
    public static MemorySegment glad_glMultiTexGenfEXT$segment() {
        return glad_glMultiTexGenfEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXGENFEXTPROC glad_glMultiTexGenfEXT
     * }
     */
    public static MemorySegment glad_glMultiTexGenfEXT() {
        return glad_glMultiTexGenfEXT$constants.SEGMENT.get(glad_glMultiTexGenfEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXGENFEXTPROC glad_glMultiTexGenfEXT
     * }
     */
    public static void glad_glMultiTexGenfEXT(MemorySegment varValue) {
        glad_glMultiTexGenfEXT$constants.SEGMENT.set(glad_glMultiTexGenfEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexGenfEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexGenfEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXGENFEXTPROC glad_debug_glMultiTexGenfEXT
     * }
     */
    public static AddressLayout glad_debug_glMultiTexGenfEXT$layout() {
        return glad_debug_glMultiTexGenfEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXGENFEXTPROC glad_debug_glMultiTexGenfEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiTexGenfEXT$segment() {
        return glad_debug_glMultiTexGenfEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXGENFEXTPROC glad_debug_glMultiTexGenfEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiTexGenfEXT() {
        return glad_debug_glMultiTexGenfEXT$constants.SEGMENT.get(glad_debug_glMultiTexGenfEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXGENFEXTPROC glad_debug_glMultiTexGenfEXT
     * }
     */
    public static void glad_debug_glMultiTexGenfEXT(MemorySegment varValue) {
        glad_debug_glMultiTexGenfEXT$constants.SEGMENT.set(glad_debug_glMultiTexGenfEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexGenfvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexGenfvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXGENFVEXTPROC glad_glMultiTexGenfvEXT
     * }
     */
    public static AddressLayout glad_glMultiTexGenfvEXT$layout() {
        return glad_glMultiTexGenfvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXGENFVEXTPROC glad_glMultiTexGenfvEXT
     * }
     */
    public static MemorySegment glad_glMultiTexGenfvEXT$segment() {
        return glad_glMultiTexGenfvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXGENFVEXTPROC glad_glMultiTexGenfvEXT
     * }
     */
    public static MemorySegment glad_glMultiTexGenfvEXT() {
        return glad_glMultiTexGenfvEXT$constants.SEGMENT.get(glad_glMultiTexGenfvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXGENFVEXTPROC glad_glMultiTexGenfvEXT
     * }
     */
    public static void glad_glMultiTexGenfvEXT(MemorySegment varValue) {
        glad_glMultiTexGenfvEXT$constants.SEGMENT.set(glad_glMultiTexGenfvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexGenfvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexGenfvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXGENFVEXTPROC glad_debug_glMultiTexGenfvEXT
     * }
     */
    public static AddressLayout glad_debug_glMultiTexGenfvEXT$layout() {
        return glad_debug_glMultiTexGenfvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXGENFVEXTPROC glad_debug_glMultiTexGenfvEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiTexGenfvEXT$segment() {
        return glad_debug_glMultiTexGenfvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXGENFVEXTPROC glad_debug_glMultiTexGenfvEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiTexGenfvEXT() {
        return glad_debug_glMultiTexGenfvEXT$constants.SEGMENT.get(glad_debug_glMultiTexGenfvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXGENFVEXTPROC glad_debug_glMultiTexGenfvEXT
     * }
     */
    public static void glad_debug_glMultiTexGenfvEXT(MemorySegment varValue) {
        glad_debug_glMultiTexGenfvEXT$constants.SEGMENT.set(glad_debug_glMultiTexGenfvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexGeniEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexGeniEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXGENIEXTPROC glad_glMultiTexGeniEXT
     * }
     */
    public static AddressLayout glad_glMultiTexGeniEXT$layout() {
        return glad_glMultiTexGeniEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXGENIEXTPROC glad_glMultiTexGeniEXT
     * }
     */
    public static MemorySegment glad_glMultiTexGeniEXT$segment() {
        return glad_glMultiTexGeniEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXGENIEXTPROC glad_glMultiTexGeniEXT
     * }
     */
    public static MemorySegment glad_glMultiTexGeniEXT() {
        return glad_glMultiTexGeniEXT$constants.SEGMENT.get(glad_glMultiTexGeniEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXGENIEXTPROC glad_glMultiTexGeniEXT
     * }
     */
    public static void glad_glMultiTexGeniEXT(MemorySegment varValue) {
        glad_glMultiTexGeniEXT$constants.SEGMENT.set(glad_glMultiTexGeniEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexGeniEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexGeniEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXGENIEXTPROC glad_debug_glMultiTexGeniEXT
     * }
     */
    public static AddressLayout glad_debug_glMultiTexGeniEXT$layout() {
        return glad_debug_glMultiTexGeniEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXGENIEXTPROC glad_debug_glMultiTexGeniEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiTexGeniEXT$segment() {
        return glad_debug_glMultiTexGeniEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXGENIEXTPROC glad_debug_glMultiTexGeniEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiTexGeniEXT() {
        return glad_debug_glMultiTexGeniEXT$constants.SEGMENT.get(glad_debug_glMultiTexGeniEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXGENIEXTPROC glad_debug_glMultiTexGeniEXT
     * }
     */
    public static void glad_debug_glMultiTexGeniEXT(MemorySegment varValue) {
        glad_debug_glMultiTexGeniEXT$constants.SEGMENT.set(glad_debug_glMultiTexGeniEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexGenivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexGenivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXGENIVEXTPROC glad_glMultiTexGenivEXT
     * }
     */
    public static AddressLayout glad_glMultiTexGenivEXT$layout() {
        return glad_glMultiTexGenivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXGENIVEXTPROC glad_glMultiTexGenivEXT
     * }
     */
    public static MemorySegment glad_glMultiTexGenivEXT$segment() {
        return glad_glMultiTexGenivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXGENIVEXTPROC glad_glMultiTexGenivEXT
     * }
     */
    public static MemorySegment glad_glMultiTexGenivEXT() {
        return glad_glMultiTexGenivEXT$constants.SEGMENT.get(glad_glMultiTexGenivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXGENIVEXTPROC glad_glMultiTexGenivEXT
     * }
     */
    public static void glad_glMultiTexGenivEXT(MemorySegment varValue) {
        glad_glMultiTexGenivEXT$constants.SEGMENT.set(glad_glMultiTexGenivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexGenivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexGenivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXGENIVEXTPROC glad_debug_glMultiTexGenivEXT
     * }
     */
    public static AddressLayout glad_debug_glMultiTexGenivEXT$layout() {
        return glad_debug_glMultiTexGenivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXGENIVEXTPROC glad_debug_glMultiTexGenivEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiTexGenivEXT$segment() {
        return glad_debug_glMultiTexGenivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXGENIVEXTPROC glad_debug_glMultiTexGenivEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiTexGenivEXT() {
        return glad_debug_glMultiTexGenivEXT$constants.SEGMENT.get(glad_debug_glMultiTexGenivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXGENIVEXTPROC glad_debug_glMultiTexGenivEXT
     * }
     */
    public static void glad_debug_glMultiTexGenivEXT(MemorySegment varValue) {
        glad_debug_glMultiTexGenivEXT$constants.SEGMENT.set(glad_debug_glMultiTexGenivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexImage1DEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexImage1DEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXIMAGE1DEXTPROC glad_glMultiTexImage1DEXT
     * }
     */
    public static AddressLayout glad_glMultiTexImage1DEXT$layout() {
        return glad_glMultiTexImage1DEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXIMAGE1DEXTPROC glad_glMultiTexImage1DEXT
     * }
     */
    public static MemorySegment glad_glMultiTexImage1DEXT$segment() {
        return glad_glMultiTexImage1DEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXIMAGE1DEXTPROC glad_glMultiTexImage1DEXT
     * }
     */
    public static MemorySegment glad_glMultiTexImage1DEXT() {
        return glad_glMultiTexImage1DEXT$constants.SEGMENT.get(glad_glMultiTexImage1DEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXIMAGE1DEXTPROC glad_glMultiTexImage1DEXT
     * }
     */
    public static void glad_glMultiTexImage1DEXT(MemorySegment varValue) {
        glad_glMultiTexImage1DEXT$constants.SEGMENT.set(glad_glMultiTexImage1DEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexImage1DEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexImage1DEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXIMAGE1DEXTPROC glad_debug_glMultiTexImage1DEXT
     * }
     */
    public static AddressLayout glad_debug_glMultiTexImage1DEXT$layout() {
        return glad_debug_glMultiTexImage1DEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXIMAGE1DEXTPROC glad_debug_glMultiTexImage1DEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiTexImage1DEXT$segment() {
        return glad_debug_glMultiTexImage1DEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXIMAGE1DEXTPROC glad_debug_glMultiTexImage1DEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiTexImage1DEXT() {
        return glad_debug_glMultiTexImage1DEXT$constants.SEGMENT.get(glad_debug_glMultiTexImage1DEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXIMAGE1DEXTPROC glad_debug_glMultiTexImage1DEXT
     * }
     */
    public static void glad_debug_glMultiTexImage1DEXT(MemorySegment varValue) {
        glad_debug_glMultiTexImage1DEXT$constants.SEGMENT.set(glad_debug_glMultiTexImage1DEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexImage2DEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexImage2DEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXIMAGE2DEXTPROC glad_glMultiTexImage2DEXT
     * }
     */
    public static AddressLayout glad_glMultiTexImage2DEXT$layout() {
        return glad_glMultiTexImage2DEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXIMAGE2DEXTPROC glad_glMultiTexImage2DEXT
     * }
     */
    public static MemorySegment glad_glMultiTexImage2DEXT$segment() {
        return glad_glMultiTexImage2DEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXIMAGE2DEXTPROC glad_glMultiTexImage2DEXT
     * }
     */
    public static MemorySegment glad_glMultiTexImage2DEXT() {
        return glad_glMultiTexImage2DEXT$constants.SEGMENT.get(glad_glMultiTexImage2DEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXIMAGE2DEXTPROC glad_glMultiTexImage2DEXT
     * }
     */
    public static void glad_glMultiTexImage2DEXT(MemorySegment varValue) {
        glad_glMultiTexImage2DEXT$constants.SEGMENT.set(glad_glMultiTexImage2DEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexImage2DEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexImage2DEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXIMAGE2DEXTPROC glad_debug_glMultiTexImage2DEXT
     * }
     */
    public static AddressLayout glad_debug_glMultiTexImage2DEXT$layout() {
        return glad_debug_glMultiTexImage2DEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXIMAGE2DEXTPROC glad_debug_glMultiTexImage2DEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiTexImage2DEXT$segment() {
        return glad_debug_glMultiTexImage2DEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXIMAGE2DEXTPROC glad_debug_glMultiTexImage2DEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiTexImage2DEXT() {
        return glad_debug_glMultiTexImage2DEXT$constants.SEGMENT.get(glad_debug_glMultiTexImage2DEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXIMAGE2DEXTPROC glad_debug_glMultiTexImage2DEXT
     * }
     */
    public static void glad_debug_glMultiTexImage2DEXT(MemorySegment varValue) {
        glad_debug_glMultiTexImage2DEXT$constants.SEGMENT.set(glad_debug_glMultiTexImage2DEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexImage3DEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexImage3DEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXIMAGE3DEXTPROC glad_glMultiTexImage3DEXT
     * }
     */
    public static AddressLayout glad_glMultiTexImage3DEXT$layout() {
        return glad_glMultiTexImage3DEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXIMAGE3DEXTPROC glad_glMultiTexImage3DEXT
     * }
     */
    public static MemorySegment glad_glMultiTexImage3DEXT$segment() {
        return glad_glMultiTexImage3DEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXIMAGE3DEXTPROC glad_glMultiTexImage3DEXT
     * }
     */
    public static MemorySegment glad_glMultiTexImage3DEXT() {
        return glad_glMultiTexImage3DEXT$constants.SEGMENT.get(glad_glMultiTexImage3DEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXIMAGE3DEXTPROC glad_glMultiTexImage3DEXT
     * }
     */
    public static void glad_glMultiTexImage3DEXT(MemorySegment varValue) {
        glad_glMultiTexImage3DEXT$constants.SEGMENT.set(glad_glMultiTexImage3DEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexImage3DEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexImage3DEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXIMAGE3DEXTPROC glad_debug_glMultiTexImage3DEXT
     * }
     */
    public static AddressLayout glad_debug_glMultiTexImage3DEXT$layout() {
        return glad_debug_glMultiTexImage3DEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXIMAGE3DEXTPROC glad_debug_glMultiTexImage3DEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiTexImage3DEXT$segment() {
        return glad_debug_glMultiTexImage3DEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXIMAGE3DEXTPROC glad_debug_glMultiTexImage3DEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiTexImage3DEXT() {
        return glad_debug_glMultiTexImage3DEXT$constants.SEGMENT.get(glad_debug_glMultiTexImage3DEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXIMAGE3DEXTPROC glad_debug_glMultiTexImage3DEXT
     * }
     */
    public static void glad_debug_glMultiTexImage3DEXT(MemorySegment varValue) {
        glad_debug_glMultiTexImage3DEXT$constants.SEGMENT.set(glad_debug_glMultiTexImage3DEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexParameterIivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexParameterIivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXPARAMETERIIVEXTPROC glad_glMultiTexParameterIivEXT
     * }
     */
    public static AddressLayout glad_glMultiTexParameterIivEXT$layout() {
        return glad_glMultiTexParameterIivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXPARAMETERIIVEXTPROC glad_glMultiTexParameterIivEXT
     * }
     */
    public static MemorySegment glad_glMultiTexParameterIivEXT$segment() {
        return glad_glMultiTexParameterIivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXPARAMETERIIVEXTPROC glad_glMultiTexParameterIivEXT
     * }
     */
    public static MemorySegment glad_glMultiTexParameterIivEXT() {
        return glad_glMultiTexParameterIivEXT$constants.SEGMENT.get(glad_glMultiTexParameterIivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXPARAMETERIIVEXTPROC glad_glMultiTexParameterIivEXT
     * }
     */
    public static void glad_glMultiTexParameterIivEXT(MemorySegment varValue) {
        glad_glMultiTexParameterIivEXT$constants.SEGMENT.set(glad_glMultiTexParameterIivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexParameterIivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexParameterIivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXPARAMETERIIVEXTPROC glad_debug_glMultiTexParameterIivEXT
     * }
     */
    public static AddressLayout glad_debug_glMultiTexParameterIivEXT$layout() {
        return glad_debug_glMultiTexParameterIivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXPARAMETERIIVEXTPROC glad_debug_glMultiTexParameterIivEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiTexParameterIivEXT$segment() {
        return glad_debug_glMultiTexParameterIivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXPARAMETERIIVEXTPROC glad_debug_glMultiTexParameterIivEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiTexParameterIivEXT() {
        return glad_debug_glMultiTexParameterIivEXT$constants.SEGMENT.get(glad_debug_glMultiTexParameterIivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXPARAMETERIIVEXTPROC glad_debug_glMultiTexParameterIivEXT
     * }
     */
    public static void glad_debug_glMultiTexParameterIivEXT(MemorySegment varValue) {
        glad_debug_glMultiTexParameterIivEXT$constants.SEGMENT.set(glad_debug_glMultiTexParameterIivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexParameterIuivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexParameterIuivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXPARAMETERIUIVEXTPROC glad_glMultiTexParameterIuivEXT
     * }
     */
    public static AddressLayout glad_glMultiTexParameterIuivEXT$layout() {
        return glad_glMultiTexParameterIuivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXPARAMETERIUIVEXTPROC glad_glMultiTexParameterIuivEXT
     * }
     */
    public static MemorySegment glad_glMultiTexParameterIuivEXT$segment() {
        return glad_glMultiTexParameterIuivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXPARAMETERIUIVEXTPROC glad_glMultiTexParameterIuivEXT
     * }
     */
    public static MemorySegment glad_glMultiTexParameterIuivEXT() {
        return glad_glMultiTexParameterIuivEXT$constants.SEGMENT.get(glad_glMultiTexParameterIuivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXPARAMETERIUIVEXTPROC glad_glMultiTexParameterIuivEXT
     * }
     */
    public static void glad_glMultiTexParameterIuivEXT(MemorySegment varValue) {
        glad_glMultiTexParameterIuivEXT$constants.SEGMENT.set(glad_glMultiTexParameterIuivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexParameterIuivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexParameterIuivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXPARAMETERIUIVEXTPROC glad_debug_glMultiTexParameterIuivEXT
     * }
     */
    public static AddressLayout glad_debug_glMultiTexParameterIuivEXT$layout() {
        return glad_debug_glMultiTexParameterIuivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXPARAMETERIUIVEXTPROC glad_debug_glMultiTexParameterIuivEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiTexParameterIuivEXT$segment() {
        return glad_debug_glMultiTexParameterIuivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXPARAMETERIUIVEXTPROC glad_debug_glMultiTexParameterIuivEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiTexParameterIuivEXT() {
        return glad_debug_glMultiTexParameterIuivEXT$constants.SEGMENT.get(glad_debug_glMultiTexParameterIuivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXPARAMETERIUIVEXTPROC glad_debug_glMultiTexParameterIuivEXT
     * }
     */
    public static void glad_debug_glMultiTexParameterIuivEXT(MemorySegment varValue) {
        glad_debug_glMultiTexParameterIuivEXT$constants.SEGMENT.set(glad_debug_glMultiTexParameterIuivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexParameterfEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexParameterfEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXPARAMETERFEXTPROC glad_glMultiTexParameterfEXT
     * }
     */
    public static AddressLayout glad_glMultiTexParameterfEXT$layout() {
        return glad_glMultiTexParameterfEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXPARAMETERFEXTPROC glad_glMultiTexParameterfEXT
     * }
     */
    public static MemorySegment glad_glMultiTexParameterfEXT$segment() {
        return glad_glMultiTexParameterfEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXPARAMETERFEXTPROC glad_glMultiTexParameterfEXT
     * }
     */
    public static MemorySegment glad_glMultiTexParameterfEXT() {
        return glad_glMultiTexParameterfEXT$constants.SEGMENT.get(glad_glMultiTexParameterfEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXPARAMETERFEXTPROC glad_glMultiTexParameterfEXT
     * }
     */
    public static void glad_glMultiTexParameterfEXT(MemorySegment varValue) {
        glad_glMultiTexParameterfEXT$constants.SEGMENT.set(glad_glMultiTexParameterfEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexParameterfEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexParameterfEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXPARAMETERFEXTPROC glad_debug_glMultiTexParameterfEXT
     * }
     */
    public static AddressLayout glad_debug_glMultiTexParameterfEXT$layout() {
        return glad_debug_glMultiTexParameterfEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXPARAMETERFEXTPROC glad_debug_glMultiTexParameterfEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiTexParameterfEXT$segment() {
        return glad_debug_glMultiTexParameterfEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXPARAMETERFEXTPROC glad_debug_glMultiTexParameterfEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiTexParameterfEXT() {
        return glad_debug_glMultiTexParameterfEXT$constants.SEGMENT.get(glad_debug_glMultiTexParameterfEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXPARAMETERFEXTPROC glad_debug_glMultiTexParameterfEXT
     * }
     */
    public static void glad_debug_glMultiTexParameterfEXT(MemorySegment varValue) {
        glad_debug_glMultiTexParameterfEXT$constants.SEGMENT.set(glad_debug_glMultiTexParameterfEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexParameterfvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexParameterfvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXPARAMETERFVEXTPROC glad_glMultiTexParameterfvEXT
     * }
     */
    public static AddressLayout glad_glMultiTexParameterfvEXT$layout() {
        return glad_glMultiTexParameterfvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXPARAMETERFVEXTPROC glad_glMultiTexParameterfvEXT
     * }
     */
    public static MemorySegment glad_glMultiTexParameterfvEXT$segment() {
        return glad_glMultiTexParameterfvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXPARAMETERFVEXTPROC glad_glMultiTexParameterfvEXT
     * }
     */
    public static MemorySegment glad_glMultiTexParameterfvEXT() {
        return glad_glMultiTexParameterfvEXT$constants.SEGMENT.get(glad_glMultiTexParameterfvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXPARAMETERFVEXTPROC glad_glMultiTexParameterfvEXT
     * }
     */
    public static void glad_glMultiTexParameterfvEXT(MemorySegment varValue) {
        glad_glMultiTexParameterfvEXT$constants.SEGMENT.set(glad_glMultiTexParameterfvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexParameterfvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexParameterfvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXPARAMETERFVEXTPROC glad_debug_glMultiTexParameterfvEXT
     * }
     */
    public static AddressLayout glad_debug_glMultiTexParameterfvEXT$layout() {
        return glad_debug_glMultiTexParameterfvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXPARAMETERFVEXTPROC glad_debug_glMultiTexParameterfvEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiTexParameterfvEXT$segment() {
        return glad_debug_glMultiTexParameterfvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXPARAMETERFVEXTPROC glad_debug_glMultiTexParameterfvEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiTexParameterfvEXT() {
        return glad_debug_glMultiTexParameterfvEXT$constants.SEGMENT.get(glad_debug_glMultiTexParameterfvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXPARAMETERFVEXTPROC glad_debug_glMultiTexParameterfvEXT
     * }
     */
    public static void glad_debug_glMultiTexParameterfvEXT(MemorySegment varValue) {
        glad_debug_glMultiTexParameterfvEXT$constants.SEGMENT.set(glad_debug_glMultiTexParameterfvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexParameteriEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexParameteriEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXPARAMETERIEXTPROC glad_glMultiTexParameteriEXT
     * }
     */
    public static AddressLayout glad_glMultiTexParameteriEXT$layout() {
        return glad_glMultiTexParameteriEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXPARAMETERIEXTPROC glad_glMultiTexParameteriEXT
     * }
     */
    public static MemorySegment glad_glMultiTexParameteriEXT$segment() {
        return glad_glMultiTexParameteriEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXPARAMETERIEXTPROC glad_glMultiTexParameteriEXT
     * }
     */
    public static MemorySegment glad_glMultiTexParameteriEXT() {
        return glad_glMultiTexParameteriEXT$constants.SEGMENT.get(glad_glMultiTexParameteriEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXPARAMETERIEXTPROC glad_glMultiTexParameteriEXT
     * }
     */
    public static void glad_glMultiTexParameteriEXT(MemorySegment varValue) {
        glad_glMultiTexParameteriEXT$constants.SEGMENT.set(glad_glMultiTexParameteriEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexParameteriEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexParameteriEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXPARAMETERIEXTPROC glad_debug_glMultiTexParameteriEXT
     * }
     */
    public static AddressLayout glad_debug_glMultiTexParameteriEXT$layout() {
        return glad_debug_glMultiTexParameteriEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXPARAMETERIEXTPROC glad_debug_glMultiTexParameteriEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiTexParameteriEXT$segment() {
        return glad_debug_glMultiTexParameteriEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXPARAMETERIEXTPROC glad_debug_glMultiTexParameteriEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiTexParameteriEXT() {
        return glad_debug_glMultiTexParameteriEXT$constants.SEGMENT.get(glad_debug_glMultiTexParameteriEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXPARAMETERIEXTPROC glad_debug_glMultiTexParameteriEXT
     * }
     */
    public static void glad_debug_glMultiTexParameteriEXT(MemorySegment varValue) {
        glad_debug_glMultiTexParameteriEXT$constants.SEGMENT.set(glad_debug_glMultiTexParameteriEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexParameterivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexParameterivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXPARAMETERIVEXTPROC glad_glMultiTexParameterivEXT
     * }
     */
    public static AddressLayout glad_glMultiTexParameterivEXT$layout() {
        return glad_glMultiTexParameterivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXPARAMETERIVEXTPROC glad_glMultiTexParameterivEXT
     * }
     */
    public static MemorySegment glad_glMultiTexParameterivEXT$segment() {
        return glad_glMultiTexParameterivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXPARAMETERIVEXTPROC glad_glMultiTexParameterivEXT
     * }
     */
    public static MemorySegment glad_glMultiTexParameterivEXT() {
        return glad_glMultiTexParameterivEXT$constants.SEGMENT.get(glad_glMultiTexParameterivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXPARAMETERIVEXTPROC glad_glMultiTexParameterivEXT
     * }
     */
    public static void glad_glMultiTexParameterivEXT(MemorySegment varValue) {
        glad_glMultiTexParameterivEXT$constants.SEGMENT.set(glad_glMultiTexParameterivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexParameterivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexParameterivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXPARAMETERIVEXTPROC glad_debug_glMultiTexParameterivEXT
     * }
     */
    public static AddressLayout glad_debug_glMultiTexParameterivEXT$layout() {
        return glad_debug_glMultiTexParameterivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXPARAMETERIVEXTPROC glad_debug_glMultiTexParameterivEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiTexParameterivEXT$segment() {
        return glad_debug_glMultiTexParameterivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXPARAMETERIVEXTPROC glad_debug_glMultiTexParameterivEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiTexParameterivEXT() {
        return glad_debug_glMultiTexParameterivEXT$constants.SEGMENT.get(glad_debug_glMultiTexParameterivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXPARAMETERIVEXTPROC glad_debug_glMultiTexParameterivEXT
     * }
     */
    public static void glad_debug_glMultiTexParameterivEXT(MemorySegment varValue) {
        glad_debug_glMultiTexParameterivEXT$constants.SEGMENT.set(glad_debug_glMultiTexParameterivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexRenderbufferEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexRenderbufferEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXRENDERBUFFEREXTPROC glad_glMultiTexRenderbufferEXT
     * }
     */
    public static AddressLayout glad_glMultiTexRenderbufferEXT$layout() {
        return glad_glMultiTexRenderbufferEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXRENDERBUFFEREXTPROC glad_glMultiTexRenderbufferEXT
     * }
     */
    public static MemorySegment glad_glMultiTexRenderbufferEXT$segment() {
        return glad_glMultiTexRenderbufferEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXRENDERBUFFEREXTPROC glad_glMultiTexRenderbufferEXT
     * }
     */
    public static MemorySegment glad_glMultiTexRenderbufferEXT() {
        return glad_glMultiTexRenderbufferEXT$constants.SEGMENT.get(glad_glMultiTexRenderbufferEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXRENDERBUFFEREXTPROC glad_glMultiTexRenderbufferEXT
     * }
     */
    public static void glad_glMultiTexRenderbufferEXT(MemorySegment varValue) {
        glad_glMultiTexRenderbufferEXT$constants.SEGMENT.set(glad_glMultiTexRenderbufferEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexRenderbufferEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexRenderbufferEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXRENDERBUFFEREXTPROC glad_debug_glMultiTexRenderbufferEXT
     * }
     */
    public static AddressLayout glad_debug_glMultiTexRenderbufferEXT$layout() {
        return glad_debug_glMultiTexRenderbufferEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXRENDERBUFFEREXTPROC glad_debug_glMultiTexRenderbufferEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiTexRenderbufferEXT$segment() {
        return glad_debug_glMultiTexRenderbufferEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXRENDERBUFFEREXTPROC glad_debug_glMultiTexRenderbufferEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiTexRenderbufferEXT() {
        return glad_debug_glMultiTexRenderbufferEXT$constants.SEGMENT.get(glad_debug_glMultiTexRenderbufferEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXRENDERBUFFEREXTPROC glad_debug_glMultiTexRenderbufferEXT
     * }
     */
    public static void glad_debug_glMultiTexRenderbufferEXT(MemorySegment varValue) {
        glad_debug_glMultiTexRenderbufferEXT$constants.SEGMENT.set(glad_debug_glMultiTexRenderbufferEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexSubImage1DEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexSubImage1DEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXSUBIMAGE1DEXTPROC glad_glMultiTexSubImage1DEXT
     * }
     */
    public static AddressLayout glad_glMultiTexSubImage1DEXT$layout() {
        return glad_glMultiTexSubImage1DEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXSUBIMAGE1DEXTPROC glad_glMultiTexSubImage1DEXT
     * }
     */
    public static MemorySegment glad_glMultiTexSubImage1DEXT$segment() {
        return glad_glMultiTexSubImage1DEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXSUBIMAGE1DEXTPROC glad_glMultiTexSubImage1DEXT
     * }
     */
    public static MemorySegment glad_glMultiTexSubImage1DEXT() {
        return glad_glMultiTexSubImage1DEXT$constants.SEGMENT.get(glad_glMultiTexSubImage1DEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXSUBIMAGE1DEXTPROC glad_glMultiTexSubImage1DEXT
     * }
     */
    public static void glad_glMultiTexSubImage1DEXT(MemorySegment varValue) {
        glad_glMultiTexSubImage1DEXT$constants.SEGMENT.set(glad_glMultiTexSubImage1DEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexSubImage1DEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexSubImage1DEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXSUBIMAGE1DEXTPROC glad_debug_glMultiTexSubImage1DEXT
     * }
     */
    public static AddressLayout glad_debug_glMultiTexSubImage1DEXT$layout() {
        return glad_debug_glMultiTexSubImage1DEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXSUBIMAGE1DEXTPROC glad_debug_glMultiTexSubImage1DEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiTexSubImage1DEXT$segment() {
        return glad_debug_glMultiTexSubImage1DEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXSUBIMAGE1DEXTPROC glad_debug_glMultiTexSubImage1DEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiTexSubImage1DEXT() {
        return glad_debug_glMultiTexSubImage1DEXT$constants.SEGMENT.get(glad_debug_glMultiTexSubImage1DEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXSUBIMAGE1DEXTPROC glad_debug_glMultiTexSubImage1DEXT
     * }
     */
    public static void glad_debug_glMultiTexSubImage1DEXT(MemorySegment varValue) {
        glad_debug_glMultiTexSubImage1DEXT$constants.SEGMENT.set(glad_debug_glMultiTexSubImage1DEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexSubImage2DEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexSubImage2DEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXSUBIMAGE2DEXTPROC glad_glMultiTexSubImage2DEXT
     * }
     */
    public static AddressLayout glad_glMultiTexSubImage2DEXT$layout() {
        return glad_glMultiTexSubImage2DEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXSUBIMAGE2DEXTPROC glad_glMultiTexSubImage2DEXT
     * }
     */
    public static MemorySegment glad_glMultiTexSubImage2DEXT$segment() {
        return glad_glMultiTexSubImage2DEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXSUBIMAGE2DEXTPROC glad_glMultiTexSubImage2DEXT
     * }
     */
    public static MemorySegment glad_glMultiTexSubImage2DEXT() {
        return glad_glMultiTexSubImage2DEXT$constants.SEGMENT.get(glad_glMultiTexSubImage2DEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXSUBIMAGE2DEXTPROC glad_glMultiTexSubImage2DEXT
     * }
     */
    public static void glad_glMultiTexSubImage2DEXT(MemorySegment varValue) {
        glad_glMultiTexSubImage2DEXT$constants.SEGMENT.set(glad_glMultiTexSubImage2DEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexSubImage2DEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexSubImage2DEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXSUBIMAGE2DEXTPROC glad_debug_glMultiTexSubImage2DEXT
     * }
     */
    public static AddressLayout glad_debug_glMultiTexSubImage2DEXT$layout() {
        return glad_debug_glMultiTexSubImage2DEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXSUBIMAGE2DEXTPROC glad_debug_glMultiTexSubImage2DEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiTexSubImage2DEXT$segment() {
        return glad_debug_glMultiTexSubImage2DEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXSUBIMAGE2DEXTPROC glad_debug_glMultiTexSubImage2DEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiTexSubImage2DEXT() {
        return glad_debug_glMultiTexSubImage2DEXT$constants.SEGMENT.get(glad_debug_glMultiTexSubImage2DEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXSUBIMAGE2DEXTPROC glad_debug_glMultiTexSubImage2DEXT
     * }
     */
    public static void glad_debug_glMultiTexSubImage2DEXT(MemorySegment varValue) {
        glad_debug_glMultiTexSubImage2DEXT$constants.SEGMENT.set(glad_debug_glMultiTexSubImage2DEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glMultiTexSubImage3DEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glMultiTexSubImage3DEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXSUBIMAGE3DEXTPROC glad_glMultiTexSubImage3DEXT
     * }
     */
    public static AddressLayout glad_glMultiTexSubImage3DEXT$layout() {
        return glad_glMultiTexSubImage3DEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXSUBIMAGE3DEXTPROC glad_glMultiTexSubImage3DEXT
     * }
     */
    public static MemorySegment glad_glMultiTexSubImage3DEXT$segment() {
        return glad_glMultiTexSubImage3DEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXSUBIMAGE3DEXTPROC glad_glMultiTexSubImage3DEXT
     * }
     */
    public static MemorySegment glad_glMultiTexSubImage3DEXT() {
        return glad_glMultiTexSubImage3DEXT$constants.SEGMENT.get(glad_glMultiTexSubImage3DEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXSUBIMAGE3DEXTPROC glad_glMultiTexSubImage3DEXT
     * }
     */
    public static void glad_glMultiTexSubImage3DEXT(MemorySegment varValue) {
        glad_glMultiTexSubImage3DEXT$constants.SEGMENT.set(glad_glMultiTexSubImage3DEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glMultiTexSubImage3DEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glMultiTexSubImage3DEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXSUBIMAGE3DEXTPROC glad_debug_glMultiTexSubImage3DEXT
     * }
     */
    public static AddressLayout glad_debug_glMultiTexSubImage3DEXT$layout() {
        return glad_debug_glMultiTexSubImage3DEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXSUBIMAGE3DEXTPROC glad_debug_glMultiTexSubImage3DEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiTexSubImage3DEXT$segment() {
        return glad_debug_glMultiTexSubImage3DEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXSUBIMAGE3DEXTPROC glad_debug_glMultiTexSubImage3DEXT
     * }
     */
    public static MemorySegment glad_debug_glMultiTexSubImage3DEXT() {
        return glad_debug_glMultiTexSubImage3DEXT$constants.SEGMENT.get(glad_debug_glMultiTexSubImage3DEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLMULTITEXSUBIMAGE3DEXTPROC glad_debug_glMultiTexSubImage3DEXT
     * }
     */
    public static void glad_debug_glMultiTexSubImage3DEXT(MemorySegment varValue) {
        glad_debug_glMultiTexSubImage3DEXT$constants.SEGMENT.set(glad_debug_glMultiTexSubImage3DEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNamedBufferData$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNamedBufferData").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDBUFFERDATAPROC glad_glNamedBufferData
     * }
     */
    public static AddressLayout glad_glNamedBufferData$layout() {
        return glad_glNamedBufferData$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDBUFFERDATAPROC glad_glNamedBufferData
     * }
     */
    public static MemorySegment glad_glNamedBufferData$segment() {
        return glad_glNamedBufferData$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDBUFFERDATAPROC glad_glNamedBufferData
     * }
     */
    public static MemorySegment glad_glNamedBufferData() {
        return glad_glNamedBufferData$constants.SEGMENT.get(glad_glNamedBufferData$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDBUFFERDATAPROC glad_glNamedBufferData
     * }
     */
    public static void glad_glNamedBufferData(MemorySegment varValue) {
        glad_glNamedBufferData$constants.SEGMENT.set(glad_glNamedBufferData$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNamedBufferData$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNamedBufferData").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDBUFFERDATAPROC glad_debug_glNamedBufferData
     * }
     */
    public static AddressLayout glad_debug_glNamedBufferData$layout() {
        return glad_debug_glNamedBufferData$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDBUFFERDATAPROC glad_debug_glNamedBufferData
     * }
     */
    public static MemorySegment glad_debug_glNamedBufferData$segment() {
        return glad_debug_glNamedBufferData$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDBUFFERDATAPROC glad_debug_glNamedBufferData
     * }
     */
    public static MemorySegment glad_debug_glNamedBufferData() {
        return glad_debug_glNamedBufferData$constants.SEGMENT.get(glad_debug_glNamedBufferData$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDBUFFERDATAPROC glad_debug_glNamedBufferData
     * }
     */
    public static void glad_debug_glNamedBufferData(MemorySegment varValue) {
        glad_debug_glNamedBufferData$constants.SEGMENT.set(glad_debug_glNamedBufferData$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNamedBufferDataEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNamedBufferDataEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDBUFFERDATAEXTPROC glad_glNamedBufferDataEXT
     * }
     */
    public static AddressLayout glad_glNamedBufferDataEXT$layout() {
        return glad_glNamedBufferDataEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDBUFFERDATAEXTPROC glad_glNamedBufferDataEXT
     * }
     */
    public static MemorySegment glad_glNamedBufferDataEXT$segment() {
        return glad_glNamedBufferDataEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDBUFFERDATAEXTPROC glad_glNamedBufferDataEXT
     * }
     */
    public static MemorySegment glad_glNamedBufferDataEXT() {
        return glad_glNamedBufferDataEXT$constants.SEGMENT.get(glad_glNamedBufferDataEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDBUFFERDATAEXTPROC glad_glNamedBufferDataEXT
     * }
     */
    public static void glad_glNamedBufferDataEXT(MemorySegment varValue) {
        glad_glNamedBufferDataEXT$constants.SEGMENT.set(glad_glNamedBufferDataEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNamedBufferDataEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNamedBufferDataEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDBUFFERDATAEXTPROC glad_debug_glNamedBufferDataEXT
     * }
     */
    public static AddressLayout glad_debug_glNamedBufferDataEXT$layout() {
        return glad_debug_glNamedBufferDataEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDBUFFERDATAEXTPROC glad_debug_glNamedBufferDataEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedBufferDataEXT$segment() {
        return glad_debug_glNamedBufferDataEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDBUFFERDATAEXTPROC glad_debug_glNamedBufferDataEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedBufferDataEXT() {
        return glad_debug_glNamedBufferDataEXT$constants.SEGMENT.get(glad_debug_glNamedBufferDataEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDBUFFERDATAEXTPROC glad_debug_glNamedBufferDataEXT
     * }
     */
    public static void glad_debug_glNamedBufferDataEXT(MemorySegment varValue) {
        glad_debug_glNamedBufferDataEXT$constants.SEGMENT.set(glad_debug_glNamedBufferDataEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNamedBufferStorage$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNamedBufferStorage").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDBUFFERSTORAGEPROC glad_glNamedBufferStorage
     * }
     */
    public static AddressLayout glad_glNamedBufferStorage$layout() {
        return glad_glNamedBufferStorage$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDBUFFERSTORAGEPROC glad_glNamedBufferStorage
     * }
     */
    public static MemorySegment glad_glNamedBufferStorage$segment() {
        return glad_glNamedBufferStorage$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDBUFFERSTORAGEPROC glad_glNamedBufferStorage
     * }
     */
    public static MemorySegment glad_glNamedBufferStorage() {
        return glad_glNamedBufferStorage$constants.SEGMENT.get(glad_glNamedBufferStorage$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDBUFFERSTORAGEPROC glad_glNamedBufferStorage
     * }
     */
    public static void glad_glNamedBufferStorage(MemorySegment varValue) {
        glad_glNamedBufferStorage$constants.SEGMENT.set(glad_glNamedBufferStorage$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNamedBufferStorage$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNamedBufferStorage").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDBUFFERSTORAGEPROC glad_debug_glNamedBufferStorage
     * }
     */
    public static AddressLayout glad_debug_glNamedBufferStorage$layout() {
        return glad_debug_glNamedBufferStorage$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDBUFFERSTORAGEPROC glad_debug_glNamedBufferStorage
     * }
     */
    public static MemorySegment glad_debug_glNamedBufferStorage$segment() {
        return glad_debug_glNamedBufferStorage$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDBUFFERSTORAGEPROC glad_debug_glNamedBufferStorage
     * }
     */
    public static MemorySegment glad_debug_glNamedBufferStorage() {
        return glad_debug_glNamedBufferStorage$constants.SEGMENT.get(glad_debug_glNamedBufferStorage$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDBUFFERSTORAGEPROC glad_debug_glNamedBufferStorage
     * }
     */
    public static void glad_debug_glNamedBufferStorage(MemorySegment varValue) {
        glad_debug_glNamedBufferStorage$constants.SEGMENT.set(glad_debug_glNamedBufferStorage$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNamedBufferStorageEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNamedBufferStorageEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDBUFFERSTORAGEEXTPROC glad_glNamedBufferStorageEXT
     * }
     */
    public static AddressLayout glad_glNamedBufferStorageEXT$layout() {
        return glad_glNamedBufferStorageEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDBUFFERSTORAGEEXTPROC glad_glNamedBufferStorageEXT
     * }
     */
    public static MemorySegment glad_glNamedBufferStorageEXT$segment() {
        return glad_glNamedBufferStorageEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDBUFFERSTORAGEEXTPROC glad_glNamedBufferStorageEXT
     * }
     */
    public static MemorySegment glad_glNamedBufferStorageEXT() {
        return glad_glNamedBufferStorageEXT$constants.SEGMENT.get(glad_glNamedBufferStorageEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDBUFFERSTORAGEEXTPROC glad_glNamedBufferStorageEXT
     * }
     */
    public static void glad_glNamedBufferStorageEXT(MemorySegment varValue) {
        glad_glNamedBufferStorageEXT$constants.SEGMENT.set(glad_glNamedBufferStorageEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNamedBufferStorageEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNamedBufferStorageEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDBUFFERSTORAGEEXTPROC glad_debug_glNamedBufferStorageEXT
     * }
     */
    public static AddressLayout glad_debug_glNamedBufferStorageEXT$layout() {
        return glad_debug_glNamedBufferStorageEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDBUFFERSTORAGEEXTPROC glad_debug_glNamedBufferStorageEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedBufferStorageEXT$segment() {
        return glad_debug_glNamedBufferStorageEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDBUFFERSTORAGEEXTPROC glad_debug_glNamedBufferStorageEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedBufferStorageEXT() {
        return glad_debug_glNamedBufferStorageEXT$constants.SEGMENT.get(glad_debug_glNamedBufferStorageEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDBUFFERSTORAGEEXTPROC glad_debug_glNamedBufferStorageEXT
     * }
     */
    public static void glad_debug_glNamedBufferStorageEXT(MemorySegment varValue) {
        glad_debug_glNamedBufferStorageEXT$constants.SEGMENT.set(glad_debug_glNamedBufferStorageEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNamedBufferSubData$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNamedBufferSubData").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDBUFFERSUBDATAPROC glad_glNamedBufferSubData
     * }
     */
    public static AddressLayout glad_glNamedBufferSubData$layout() {
        return glad_glNamedBufferSubData$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDBUFFERSUBDATAPROC glad_glNamedBufferSubData
     * }
     */
    public static MemorySegment glad_glNamedBufferSubData$segment() {
        return glad_glNamedBufferSubData$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDBUFFERSUBDATAPROC glad_glNamedBufferSubData
     * }
     */
    public static MemorySegment glad_glNamedBufferSubData() {
        return glad_glNamedBufferSubData$constants.SEGMENT.get(glad_glNamedBufferSubData$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDBUFFERSUBDATAPROC glad_glNamedBufferSubData
     * }
     */
    public static void glad_glNamedBufferSubData(MemorySegment varValue) {
        glad_glNamedBufferSubData$constants.SEGMENT.set(glad_glNamedBufferSubData$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNamedBufferSubData$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNamedBufferSubData").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDBUFFERSUBDATAPROC glad_debug_glNamedBufferSubData
     * }
     */
    public static AddressLayout glad_debug_glNamedBufferSubData$layout() {
        return glad_debug_glNamedBufferSubData$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDBUFFERSUBDATAPROC glad_debug_glNamedBufferSubData
     * }
     */
    public static MemorySegment glad_debug_glNamedBufferSubData$segment() {
        return glad_debug_glNamedBufferSubData$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDBUFFERSUBDATAPROC glad_debug_glNamedBufferSubData
     * }
     */
    public static MemorySegment glad_debug_glNamedBufferSubData() {
        return glad_debug_glNamedBufferSubData$constants.SEGMENT.get(glad_debug_glNamedBufferSubData$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDBUFFERSUBDATAPROC glad_debug_glNamedBufferSubData
     * }
     */
    public static void glad_debug_glNamedBufferSubData(MemorySegment varValue) {
        glad_debug_glNamedBufferSubData$constants.SEGMENT.set(glad_debug_glNamedBufferSubData$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNamedBufferSubDataEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNamedBufferSubDataEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDBUFFERSUBDATAEXTPROC glad_glNamedBufferSubDataEXT
     * }
     */
    public static AddressLayout glad_glNamedBufferSubDataEXT$layout() {
        return glad_glNamedBufferSubDataEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDBUFFERSUBDATAEXTPROC glad_glNamedBufferSubDataEXT
     * }
     */
    public static MemorySegment glad_glNamedBufferSubDataEXT$segment() {
        return glad_glNamedBufferSubDataEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDBUFFERSUBDATAEXTPROC glad_glNamedBufferSubDataEXT
     * }
     */
    public static MemorySegment glad_glNamedBufferSubDataEXT() {
        return glad_glNamedBufferSubDataEXT$constants.SEGMENT.get(glad_glNamedBufferSubDataEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDBUFFERSUBDATAEXTPROC glad_glNamedBufferSubDataEXT
     * }
     */
    public static void glad_glNamedBufferSubDataEXT(MemorySegment varValue) {
        glad_glNamedBufferSubDataEXT$constants.SEGMENT.set(glad_glNamedBufferSubDataEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNamedBufferSubDataEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNamedBufferSubDataEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDBUFFERSUBDATAEXTPROC glad_debug_glNamedBufferSubDataEXT
     * }
     */
    public static AddressLayout glad_debug_glNamedBufferSubDataEXT$layout() {
        return glad_debug_glNamedBufferSubDataEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDBUFFERSUBDATAEXTPROC glad_debug_glNamedBufferSubDataEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedBufferSubDataEXT$segment() {
        return glad_debug_glNamedBufferSubDataEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDBUFFERSUBDATAEXTPROC glad_debug_glNamedBufferSubDataEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedBufferSubDataEXT() {
        return glad_debug_glNamedBufferSubDataEXT$constants.SEGMENT.get(glad_debug_glNamedBufferSubDataEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDBUFFERSUBDATAEXTPROC glad_debug_glNamedBufferSubDataEXT
     * }
     */
    public static void glad_debug_glNamedBufferSubDataEXT(MemorySegment varValue) {
        glad_debug_glNamedBufferSubDataEXT$constants.SEGMENT.set(glad_debug_glNamedBufferSubDataEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNamedCopyBufferSubDataEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNamedCopyBufferSubDataEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC glad_glNamedCopyBufferSubDataEXT
     * }
     */
    public static AddressLayout glad_glNamedCopyBufferSubDataEXT$layout() {
        return glad_glNamedCopyBufferSubDataEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC glad_glNamedCopyBufferSubDataEXT
     * }
     */
    public static MemorySegment glad_glNamedCopyBufferSubDataEXT$segment() {
        return glad_glNamedCopyBufferSubDataEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC glad_glNamedCopyBufferSubDataEXT
     * }
     */
    public static MemorySegment glad_glNamedCopyBufferSubDataEXT() {
        return glad_glNamedCopyBufferSubDataEXT$constants.SEGMENT.get(glad_glNamedCopyBufferSubDataEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC glad_glNamedCopyBufferSubDataEXT
     * }
     */
    public static void glad_glNamedCopyBufferSubDataEXT(MemorySegment varValue) {
        glad_glNamedCopyBufferSubDataEXT$constants.SEGMENT.set(glad_glNamedCopyBufferSubDataEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNamedCopyBufferSubDataEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNamedCopyBufferSubDataEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC glad_debug_glNamedCopyBufferSubDataEXT
     * }
     */
    public static AddressLayout glad_debug_glNamedCopyBufferSubDataEXT$layout() {
        return glad_debug_glNamedCopyBufferSubDataEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC glad_debug_glNamedCopyBufferSubDataEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedCopyBufferSubDataEXT$segment() {
        return glad_debug_glNamedCopyBufferSubDataEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC glad_debug_glNamedCopyBufferSubDataEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedCopyBufferSubDataEXT() {
        return glad_debug_glNamedCopyBufferSubDataEXT$constants.SEGMENT.get(glad_debug_glNamedCopyBufferSubDataEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC glad_debug_glNamedCopyBufferSubDataEXT
     * }
     */
    public static void glad_debug_glNamedCopyBufferSubDataEXT(MemorySegment varValue) {
        glad_debug_glNamedCopyBufferSubDataEXT$constants.SEGMENT.set(glad_debug_glNamedCopyBufferSubDataEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNamedFramebufferDrawBuffer$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNamedFramebufferDrawBuffer").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC glad_glNamedFramebufferDrawBuffer
     * }
     */
    public static AddressLayout glad_glNamedFramebufferDrawBuffer$layout() {
        return glad_glNamedFramebufferDrawBuffer$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC glad_glNamedFramebufferDrawBuffer
     * }
     */
    public static MemorySegment glad_glNamedFramebufferDrawBuffer$segment() {
        return glad_glNamedFramebufferDrawBuffer$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC glad_glNamedFramebufferDrawBuffer
     * }
     */
    public static MemorySegment glad_glNamedFramebufferDrawBuffer() {
        return glad_glNamedFramebufferDrawBuffer$constants.SEGMENT.get(glad_glNamedFramebufferDrawBuffer$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC glad_glNamedFramebufferDrawBuffer
     * }
     */
    public static void glad_glNamedFramebufferDrawBuffer(MemorySegment varValue) {
        glad_glNamedFramebufferDrawBuffer$constants.SEGMENT.set(glad_glNamedFramebufferDrawBuffer$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNamedFramebufferDrawBuffer$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNamedFramebufferDrawBuffer").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC glad_debug_glNamedFramebufferDrawBuffer
     * }
     */
    public static AddressLayout glad_debug_glNamedFramebufferDrawBuffer$layout() {
        return glad_debug_glNamedFramebufferDrawBuffer$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC glad_debug_glNamedFramebufferDrawBuffer
     * }
     */
    public static MemorySegment glad_debug_glNamedFramebufferDrawBuffer$segment() {
        return glad_debug_glNamedFramebufferDrawBuffer$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC glad_debug_glNamedFramebufferDrawBuffer
     * }
     */
    public static MemorySegment glad_debug_glNamedFramebufferDrawBuffer() {
        return glad_debug_glNamedFramebufferDrawBuffer$constants.SEGMENT.get(glad_debug_glNamedFramebufferDrawBuffer$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC glad_debug_glNamedFramebufferDrawBuffer
     * }
     */
    public static void glad_debug_glNamedFramebufferDrawBuffer(MemorySegment varValue) {
        glad_debug_glNamedFramebufferDrawBuffer$constants.SEGMENT.set(glad_debug_glNamedFramebufferDrawBuffer$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNamedFramebufferDrawBuffers$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNamedFramebufferDrawBuffers").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC glad_glNamedFramebufferDrawBuffers
     * }
     */
    public static AddressLayout glad_glNamedFramebufferDrawBuffers$layout() {
        return glad_glNamedFramebufferDrawBuffers$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC glad_glNamedFramebufferDrawBuffers
     * }
     */
    public static MemorySegment glad_glNamedFramebufferDrawBuffers$segment() {
        return glad_glNamedFramebufferDrawBuffers$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC glad_glNamedFramebufferDrawBuffers
     * }
     */
    public static MemorySegment glad_glNamedFramebufferDrawBuffers() {
        return glad_glNamedFramebufferDrawBuffers$constants.SEGMENT.get(glad_glNamedFramebufferDrawBuffers$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC glad_glNamedFramebufferDrawBuffers
     * }
     */
    public static void glad_glNamedFramebufferDrawBuffers(MemorySegment varValue) {
        glad_glNamedFramebufferDrawBuffers$constants.SEGMENT.set(glad_glNamedFramebufferDrawBuffers$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNamedFramebufferDrawBuffers$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNamedFramebufferDrawBuffers").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC glad_debug_glNamedFramebufferDrawBuffers
     * }
     */
    public static AddressLayout glad_debug_glNamedFramebufferDrawBuffers$layout() {
        return glad_debug_glNamedFramebufferDrawBuffers$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC glad_debug_glNamedFramebufferDrawBuffers
     * }
     */
    public static MemorySegment glad_debug_glNamedFramebufferDrawBuffers$segment() {
        return glad_debug_glNamedFramebufferDrawBuffers$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC glad_debug_glNamedFramebufferDrawBuffers
     * }
     */
    public static MemorySegment glad_debug_glNamedFramebufferDrawBuffers() {
        return glad_debug_glNamedFramebufferDrawBuffers$constants.SEGMENT.get(glad_debug_glNamedFramebufferDrawBuffers$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC glad_debug_glNamedFramebufferDrawBuffers
     * }
     */
    public static void glad_debug_glNamedFramebufferDrawBuffers(MemorySegment varValue) {
        glad_debug_glNamedFramebufferDrawBuffers$constants.SEGMENT.set(glad_debug_glNamedFramebufferDrawBuffers$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNamedFramebufferParameteri$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNamedFramebufferParameteri").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC glad_glNamedFramebufferParameteri
     * }
     */
    public static AddressLayout glad_glNamedFramebufferParameteri$layout() {
        return glad_glNamedFramebufferParameteri$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC glad_glNamedFramebufferParameteri
     * }
     */
    public static MemorySegment glad_glNamedFramebufferParameteri$segment() {
        return glad_glNamedFramebufferParameteri$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC glad_glNamedFramebufferParameteri
     * }
     */
    public static MemorySegment glad_glNamedFramebufferParameteri() {
        return glad_glNamedFramebufferParameteri$constants.SEGMENT.get(glad_glNamedFramebufferParameteri$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC glad_glNamedFramebufferParameteri
     * }
     */
    public static void glad_glNamedFramebufferParameteri(MemorySegment varValue) {
        glad_glNamedFramebufferParameteri$constants.SEGMENT.set(glad_glNamedFramebufferParameteri$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNamedFramebufferParameteri$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNamedFramebufferParameteri").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC glad_debug_glNamedFramebufferParameteri
     * }
     */
    public static AddressLayout glad_debug_glNamedFramebufferParameteri$layout() {
        return glad_debug_glNamedFramebufferParameteri$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC glad_debug_glNamedFramebufferParameteri
     * }
     */
    public static MemorySegment glad_debug_glNamedFramebufferParameteri$segment() {
        return glad_debug_glNamedFramebufferParameteri$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC glad_debug_glNamedFramebufferParameteri
     * }
     */
    public static MemorySegment glad_debug_glNamedFramebufferParameteri() {
        return glad_debug_glNamedFramebufferParameteri$constants.SEGMENT.get(glad_debug_glNamedFramebufferParameteri$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC glad_debug_glNamedFramebufferParameteri
     * }
     */
    public static void glad_debug_glNamedFramebufferParameteri(MemorySegment varValue) {
        glad_debug_glNamedFramebufferParameteri$constants.SEGMENT.set(glad_debug_glNamedFramebufferParameteri$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNamedFramebufferParameteriEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNamedFramebufferParameteriEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC glad_glNamedFramebufferParameteriEXT
     * }
     */
    public static AddressLayout glad_glNamedFramebufferParameteriEXT$layout() {
        return glad_glNamedFramebufferParameteriEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC glad_glNamedFramebufferParameteriEXT
     * }
     */
    public static MemorySegment glad_glNamedFramebufferParameteriEXT$segment() {
        return glad_glNamedFramebufferParameteriEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC glad_glNamedFramebufferParameteriEXT
     * }
     */
    public static MemorySegment glad_glNamedFramebufferParameteriEXT() {
        return glad_glNamedFramebufferParameteriEXT$constants.SEGMENT.get(glad_glNamedFramebufferParameteriEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC glad_glNamedFramebufferParameteriEXT
     * }
     */
    public static void glad_glNamedFramebufferParameteriEXT(MemorySegment varValue) {
        glad_glNamedFramebufferParameteriEXT$constants.SEGMENT.set(glad_glNamedFramebufferParameteriEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNamedFramebufferParameteriEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNamedFramebufferParameteriEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC glad_debug_glNamedFramebufferParameteriEXT
     * }
     */
    public static AddressLayout glad_debug_glNamedFramebufferParameteriEXT$layout() {
        return glad_debug_glNamedFramebufferParameteriEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC glad_debug_glNamedFramebufferParameteriEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedFramebufferParameteriEXT$segment() {
        return glad_debug_glNamedFramebufferParameteriEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC glad_debug_glNamedFramebufferParameteriEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedFramebufferParameteriEXT() {
        return glad_debug_glNamedFramebufferParameteriEXT$constants.SEGMENT.get(glad_debug_glNamedFramebufferParameteriEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC glad_debug_glNamedFramebufferParameteriEXT
     * }
     */
    public static void glad_debug_glNamedFramebufferParameteriEXT(MemorySegment varValue) {
        glad_debug_glNamedFramebufferParameteriEXT$constants.SEGMENT.set(glad_debug_glNamedFramebufferParameteriEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNamedFramebufferReadBuffer$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNamedFramebufferReadBuffer").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC glad_glNamedFramebufferReadBuffer
     * }
     */
    public static AddressLayout glad_glNamedFramebufferReadBuffer$layout() {
        return glad_glNamedFramebufferReadBuffer$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC glad_glNamedFramebufferReadBuffer
     * }
     */
    public static MemorySegment glad_glNamedFramebufferReadBuffer$segment() {
        return glad_glNamedFramebufferReadBuffer$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC glad_glNamedFramebufferReadBuffer
     * }
     */
    public static MemorySegment glad_glNamedFramebufferReadBuffer() {
        return glad_glNamedFramebufferReadBuffer$constants.SEGMENT.get(glad_glNamedFramebufferReadBuffer$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC glad_glNamedFramebufferReadBuffer
     * }
     */
    public static void glad_glNamedFramebufferReadBuffer(MemorySegment varValue) {
        glad_glNamedFramebufferReadBuffer$constants.SEGMENT.set(glad_glNamedFramebufferReadBuffer$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNamedFramebufferReadBuffer$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNamedFramebufferReadBuffer").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC glad_debug_glNamedFramebufferReadBuffer
     * }
     */
    public static AddressLayout glad_debug_glNamedFramebufferReadBuffer$layout() {
        return glad_debug_glNamedFramebufferReadBuffer$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC glad_debug_glNamedFramebufferReadBuffer
     * }
     */
    public static MemorySegment glad_debug_glNamedFramebufferReadBuffer$segment() {
        return glad_debug_glNamedFramebufferReadBuffer$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC glad_debug_glNamedFramebufferReadBuffer
     * }
     */
    public static MemorySegment glad_debug_glNamedFramebufferReadBuffer() {
        return glad_debug_glNamedFramebufferReadBuffer$constants.SEGMENT.get(glad_debug_glNamedFramebufferReadBuffer$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC glad_debug_glNamedFramebufferReadBuffer
     * }
     */
    public static void glad_debug_glNamedFramebufferReadBuffer(MemorySegment varValue) {
        glad_debug_glNamedFramebufferReadBuffer$constants.SEGMENT.set(glad_debug_glNamedFramebufferReadBuffer$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNamedFramebufferRenderbuffer$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNamedFramebufferRenderbuffer").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC glad_glNamedFramebufferRenderbuffer
     * }
     */
    public static AddressLayout glad_glNamedFramebufferRenderbuffer$layout() {
        return glad_glNamedFramebufferRenderbuffer$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC glad_glNamedFramebufferRenderbuffer
     * }
     */
    public static MemorySegment glad_glNamedFramebufferRenderbuffer$segment() {
        return glad_glNamedFramebufferRenderbuffer$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC glad_glNamedFramebufferRenderbuffer
     * }
     */
    public static MemorySegment glad_glNamedFramebufferRenderbuffer() {
        return glad_glNamedFramebufferRenderbuffer$constants.SEGMENT.get(glad_glNamedFramebufferRenderbuffer$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC glad_glNamedFramebufferRenderbuffer
     * }
     */
    public static void glad_glNamedFramebufferRenderbuffer(MemorySegment varValue) {
        glad_glNamedFramebufferRenderbuffer$constants.SEGMENT.set(glad_glNamedFramebufferRenderbuffer$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNamedFramebufferRenderbuffer$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNamedFramebufferRenderbuffer").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC glad_debug_glNamedFramebufferRenderbuffer
     * }
     */
    public static AddressLayout glad_debug_glNamedFramebufferRenderbuffer$layout() {
        return glad_debug_glNamedFramebufferRenderbuffer$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC glad_debug_glNamedFramebufferRenderbuffer
     * }
     */
    public static MemorySegment glad_debug_glNamedFramebufferRenderbuffer$segment() {
        return glad_debug_glNamedFramebufferRenderbuffer$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC glad_debug_glNamedFramebufferRenderbuffer
     * }
     */
    public static MemorySegment glad_debug_glNamedFramebufferRenderbuffer() {
        return glad_debug_glNamedFramebufferRenderbuffer$constants.SEGMENT.get(glad_debug_glNamedFramebufferRenderbuffer$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC glad_debug_glNamedFramebufferRenderbuffer
     * }
     */
    public static void glad_debug_glNamedFramebufferRenderbuffer(MemorySegment varValue) {
        glad_debug_glNamedFramebufferRenderbuffer$constants.SEGMENT.set(glad_debug_glNamedFramebufferRenderbuffer$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNamedFramebufferRenderbufferEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNamedFramebufferRenderbufferEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC glad_glNamedFramebufferRenderbufferEXT
     * }
     */
    public static AddressLayout glad_glNamedFramebufferRenderbufferEXT$layout() {
        return glad_glNamedFramebufferRenderbufferEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC glad_glNamedFramebufferRenderbufferEXT
     * }
     */
    public static MemorySegment glad_glNamedFramebufferRenderbufferEXT$segment() {
        return glad_glNamedFramebufferRenderbufferEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC glad_glNamedFramebufferRenderbufferEXT
     * }
     */
    public static MemorySegment glad_glNamedFramebufferRenderbufferEXT() {
        return glad_glNamedFramebufferRenderbufferEXT$constants.SEGMENT.get(glad_glNamedFramebufferRenderbufferEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC glad_glNamedFramebufferRenderbufferEXT
     * }
     */
    public static void glad_glNamedFramebufferRenderbufferEXT(MemorySegment varValue) {
        glad_glNamedFramebufferRenderbufferEXT$constants.SEGMENT.set(glad_glNamedFramebufferRenderbufferEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNamedFramebufferRenderbufferEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNamedFramebufferRenderbufferEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC glad_debug_glNamedFramebufferRenderbufferEXT
     * }
     */
    public static AddressLayout glad_debug_glNamedFramebufferRenderbufferEXT$layout() {
        return glad_debug_glNamedFramebufferRenderbufferEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC glad_debug_glNamedFramebufferRenderbufferEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedFramebufferRenderbufferEXT$segment() {
        return glad_debug_glNamedFramebufferRenderbufferEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC glad_debug_glNamedFramebufferRenderbufferEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedFramebufferRenderbufferEXT() {
        return glad_debug_glNamedFramebufferRenderbufferEXT$constants.SEGMENT.get(glad_debug_glNamedFramebufferRenderbufferEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC glad_debug_glNamedFramebufferRenderbufferEXT
     * }
     */
    public static void glad_debug_glNamedFramebufferRenderbufferEXT(MemorySegment varValue) {
        glad_debug_glNamedFramebufferRenderbufferEXT$constants.SEGMENT.set(glad_debug_glNamedFramebufferRenderbufferEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNamedFramebufferTexture$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNamedFramebufferTexture").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTUREPROC glad_glNamedFramebufferTexture
     * }
     */
    public static AddressLayout glad_glNamedFramebufferTexture$layout() {
        return glad_glNamedFramebufferTexture$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTUREPROC glad_glNamedFramebufferTexture
     * }
     */
    public static MemorySegment glad_glNamedFramebufferTexture$segment() {
        return glad_glNamedFramebufferTexture$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTUREPROC glad_glNamedFramebufferTexture
     * }
     */
    public static MemorySegment glad_glNamedFramebufferTexture() {
        return glad_glNamedFramebufferTexture$constants.SEGMENT.get(glad_glNamedFramebufferTexture$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTUREPROC glad_glNamedFramebufferTexture
     * }
     */
    public static void glad_glNamedFramebufferTexture(MemorySegment varValue) {
        glad_glNamedFramebufferTexture$constants.SEGMENT.set(glad_glNamedFramebufferTexture$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNamedFramebufferTexture$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNamedFramebufferTexture").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTUREPROC glad_debug_glNamedFramebufferTexture
     * }
     */
    public static AddressLayout glad_debug_glNamedFramebufferTexture$layout() {
        return glad_debug_glNamedFramebufferTexture$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTUREPROC glad_debug_glNamedFramebufferTexture
     * }
     */
    public static MemorySegment glad_debug_glNamedFramebufferTexture$segment() {
        return glad_debug_glNamedFramebufferTexture$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTUREPROC glad_debug_glNamedFramebufferTexture
     * }
     */
    public static MemorySegment glad_debug_glNamedFramebufferTexture() {
        return glad_debug_glNamedFramebufferTexture$constants.SEGMENT.get(glad_debug_glNamedFramebufferTexture$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTUREPROC glad_debug_glNamedFramebufferTexture
     * }
     */
    public static void glad_debug_glNamedFramebufferTexture(MemorySegment varValue) {
        glad_debug_glNamedFramebufferTexture$constants.SEGMENT.set(glad_debug_glNamedFramebufferTexture$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNamedFramebufferTexture1DEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNamedFramebufferTexture1DEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC glad_glNamedFramebufferTexture1DEXT
     * }
     */
    public static AddressLayout glad_glNamedFramebufferTexture1DEXT$layout() {
        return glad_glNamedFramebufferTexture1DEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC glad_glNamedFramebufferTexture1DEXT
     * }
     */
    public static MemorySegment glad_glNamedFramebufferTexture1DEXT$segment() {
        return glad_glNamedFramebufferTexture1DEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC glad_glNamedFramebufferTexture1DEXT
     * }
     */
    public static MemorySegment glad_glNamedFramebufferTexture1DEXT() {
        return glad_glNamedFramebufferTexture1DEXT$constants.SEGMENT.get(glad_glNamedFramebufferTexture1DEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC glad_glNamedFramebufferTexture1DEXT
     * }
     */
    public static void glad_glNamedFramebufferTexture1DEXT(MemorySegment varValue) {
        glad_glNamedFramebufferTexture1DEXT$constants.SEGMENT.set(glad_glNamedFramebufferTexture1DEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNamedFramebufferTexture1DEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNamedFramebufferTexture1DEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC glad_debug_glNamedFramebufferTexture1DEXT
     * }
     */
    public static AddressLayout glad_debug_glNamedFramebufferTexture1DEXT$layout() {
        return glad_debug_glNamedFramebufferTexture1DEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC glad_debug_glNamedFramebufferTexture1DEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedFramebufferTexture1DEXT$segment() {
        return glad_debug_glNamedFramebufferTexture1DEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC glad_debug_glNamedFramebufferTexture1DEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedFramebufferTexture1DEXT() {
        return glad_debug_glNamedFramebufferTexture1DEXT$constants.SEGMENT.get(glad_debug_glNamedFramebufferTexture1DEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC glad_debug_glNamedFramebufferTexture1DEXT
     * }
     */
    public static void glad_debug_glNamedFramebufferTexture1DEXT(MemorySegment varValue) {
        glad_debug_glNamedFramebufferTexture1DEXT$constants.SEGMENT.set(glad_debug_glNamedFramebufferTexture1DEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNamedFramebufferTexture2DEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNamedFramebufferTexture2DEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC glad_glNamedFramebufferTexture2DEXT
     * }
     */
    public static AddressLayout glad_glNamedFramebufferTexture2DEXT$layout() {
        return glad_glNamedFramebufferTexture2DEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC glad_glNamedFramebufferTexture2DEXT
     * }
     */
    public static MemorySegment glad_glNamedFramebufferTexture2DEXT$segment() {
        return glad_glNamedFramebufferTexture2DEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC glad_glNamedFramebufferTexture2DEXT
     * }
     */
    public static MemorySegment glad_glNamedFramebufferTexture2DEXT() {
        return glad_glNamedFramebufferTexture2DEXT$constants.SEGMENT.get(glad_glNamedFramebufferTexture2DEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC glad_glNamedFramebufferTexture2DEXT
     * }
     */
    public static void glad_glNamedFramebufferTexture2DEXT(MemorySegment varValue) {
        glad_glNamedFramebufferTexture2DEXT$constants.SEGMENT.set(glad_glNamedFramebufferTexture2DEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNamedFramebufferTexture2DEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNamedFramebufferTexture2DEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC glad_debug_glNamedFramebufferTexture2DEXT
     * }
     */
    public static AddressLayout glad_debug_glNamedFramebufferTexture2DEXT$layout() {
        return glad_debug_glNamedFramebufferTexture2DEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC glad_debug_glNamedFramebufferTexture2DEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedFramebufferTexture2DEXT$segment() {
        return glad_debug_glNamedFramebufferTexture2DEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC glad_debug_glNamedFramebufferTexture2DEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedFramebufferTexture2DEXT() {
        return glad_debug_glNamedFramebufferTexture2DEXT$constants.SEGMENT.get(glad_debug_glNamedFramebufferTexture2DEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC glad_debug_glNamedFramebufferTexture2DEXT
     * }
     */
    public static void glad_debug_glNamedFramebufferTexture2DEXT(MemorySegment varValue) {
        glad_debug_glNamedFramebufferTexture2DEXT$constants.SEGMENT.set(glad_debug_glNamedFramebufferTexture2DEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNamedFramebufferTexture3DEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNamedFramebufferTexture3DEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC glad_glNamedFramebufferTexture3DEXT
     * }
     */
    public static AddressLayout glad_glNamedFramebufferTexture3DEXT$layout() {
        return glad_glNamedFramebufferTexture3DEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC glad_glNamedFramebufferTexture3DEXT
     * }
     */
    public static MemorySegment glad_glNamedFramebufferTexture3DEXT$segment() {
        return glad_glNamedFramebufferTexture3DEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC glad_glNamedFramebufferTexture3DEXT
     * }
     */
    public static MemorySegment glad_glNamedFramebufferTexture3DEXT() {
        return glad_glNamedFramebufferTexture3DEXT$constants.SEGMENT.get(glad_glNamedFramebufferTexture3DEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC glad_glNamedFramebufferTexture3DEXT
     * }
     */
    public static void glad_glNamedFramebufferTexture3DEXT(MemorySegment varValue) {
        glad_glNamedFramebufferTexture3DEXT$constants.SEGMENT.set(glad_glNamedFramebufferTexture3DEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNamedFramebufferTexture3DEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNamedFramebufferTexture3DEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC glad_debug_glNamedFramebufferTexture3DEXT
     * }
     */
    public static AddressLayout glad_debug_glNamedFramebufferTexture3DEXT$layout() {
        return glad_debug_glNamedFramebufferTexture3DEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC glad_debug_glNamedFramebufferTexture3DEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedFramebufferTexture3DEXT$segment() {
        return glad_debug_glNamedFramebufferTexture3DEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC glad_debug_glNamedFramebufferTexture3DEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedFramebufferTexture3DEXT() {
        return glad_debug_glNamedFramebufferTexture3DEXT$constants.SEGMENT.get(glad_debug_glNamedFramebufferTexture3DEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC glad_debug_glNamedFramebufferTexture3DEXT
     * }
     */
    public static void glad_debug_glNamedFramebufferTexture3DEXT(MemorySegment varValue) {
        glad_debug_glNamedFramebufferTexture3DEXT$constants.SEGMENT.set(glad_debug_glNamedFramebufferTexture3DEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNamedFramebufferTextureEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNamedFramebufferTextureEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC glad_glNamedFramebufferTextureEXT
     * }
     */
    public static AddressLayout glad_glNamedFramebufferTextureEXT$layout() {
        return glad_glNamedFramebufferTextureEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC glad_glNamedFramebufferTextureEXT
     * }
     */
    public static MemorySegment glad_glNamedFramebufferTextureEXT$segment() {
        return glad_glNamedFramebufferTextureEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC glad_glNamedFramebufferTextureEXT
     * }
     */
    public static MemorySegment glad_glNamedFramebufferTextureEXT() {
        return glad_glNamedFramebufferTextureEXT$constants.SEGMENT.get(glad_glNamedFramebufferTextureEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC glad_glNamedFramebufferTextureEXT
     * }
     */
    public static void glad_glNamedFramebufferTextureEXT(MemorySegment varValue) {
        glad_glNamedFramebufferTextureEXT$constants.SEGMENT.set(glad_glNamedFramebufferTextureEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNamedFramebufferTextureEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNamedFramebufferTextureEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC glad_debug_glNamedFramebufferTextureEXT
     * }
     */
    public static AddressLayout glad_debug_glNamedFramebufferTextureEXT$layout() {
        return glad_debug_glNamedFramebufferTextureEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC glad_debug_glNamedFramebufferTextureEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedFramebufferTextureEXT$segment() {
        return glad_debug_glNamedFramebufferTextureEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC glad_debug_glNamedFramebufferTextureEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedFramebufferTextureEXT() {
        return glad_debug_glNamedFramebufferTextureEXT$constants.SEGMENT.get(glad_debug_glNamedFramebufferTextureEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC glad_debug_glNamedFramebufferTextureEXT
     * }
     */
    public static void glad_debug_glNamedFramebufferTextureEXT(MemorySegment varValue) {
        glad_debug_glNamedFramebufferTextureEXT$constants.SEGMENT.set(glad_debug_glNamedFramebufferTextureEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNamedFramebufferTextureFaceEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNamedFramebufferTextureFaceEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC glad_glNamedFramebufferTextureFaceEXT
     * }
     */
    public static AddressLayout glad_glNamedFramebufferTextureFaceEXT$layout() {
        return glad_glNamedFramebufferTextureFaceEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC glad_glNamedFramebufferTextureFaceEXT
     * }
     */
    public static MemorySegment glad_glNamedFramebufferTextureFaceEXT$segment() {
        return glad_glNamedFramebufferTextureFaceEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC glad_glNamedFramebufferTextureFaceEXT
     * }
     */
    public static MemorySegment glad_glNamedFramebufferTextureFaceEXT() {
        return glad_glNamedFramebufferTextureFaceEXT$constants.SEGMENT.get(glad_glNamedFramebufferTextureFaceEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC glad_glNamedFramebufferTextureFaceEXT
     * }
     */
    public static void glad_glNamedFramebufferTextureFaceEXT(MemorySegment varValue) {
        glad_glNamedFramebufferTextureFaceEXT$constants.SEGMENT.set(glad_glNamedFramebufferTextureFaceEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNamedFramebufferTextureFaceEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNamedFramebufferTextureFaceEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC glad_debug_glNamedFramebufferTextureFaceEXT
     * }
     */
    public static AddressLayout glad_debug_glNamedFramebufferTextureFaceEXT$layout() {
        return glad_debug_glNamedFramebufferTextureFaceEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC glad_debug_glNamedFramebufferTextureFaceEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedFramebufferTextureFaceEXT$segment() {
        return glad_debug_glNamedFramebufferTextureFaceEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC glad_debug_glNamedFramebufferTextureFaceEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedFramebufferTextureFaceEXT() {
        return glad_debug_glNamedFramebufferTextureFaceEXT$constants.SEGMENT.get(glad_debug_glNamedFramebufferTextureFaceEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC glad_debug_glNamedFramebufferTextureFaceEXT
     * }
     */
    public static void glad_debug_glNamedFramebufferTextureFaceEXT(MemorySegment varValue) {
        glad_debug_glNamedFramebufferTextureFaceEXT$constants.SEGMENT.set(glad_debug_glNamedFramebufferTextureFaceEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNamedFramebufferTextureLayer$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNamedFramebufferTextureLayer").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC glad_glNamedFramebufferTextureLayer
     * }
     */
    public static AddressLayout glad_glNamedFramebufferTextureLayer$layout() {
        return glad_glNamedFramebufferTextureLayer$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC glad_glNamedFramebufferTextureLayer
     * }
     */
    public static MemorySegment glad_glNamedFramebufferTextureLayer$segment() {
        return glad_glNamedFramebufferTextureLayer$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC glad_glNamedFramebufferTextureLayer
     * }
     */
    public static MemorySegment glad_glNamedFramebufferTextureLayer() {
        return glad_glNamedFramebufferTextureLayer$constants.SEGMENT.get(glad_glNamedFramebufferTextureLayer$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC glad_glNamedFramebufferTextureLayer
     * }
     */
    public static void glad_glNamedFramebufferTextureLayer(MemorySegment varValue) {
        glad_glNamedFramebufferTextureLayer$constants.SEGMENT.set(glad_glNamedFramebufferTextureLayer$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNamedFramebufferTextureLayer$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNamedFramebufferTextureLayer").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC glad_debug_glNamedFramebufferTextureLayer
     * }
     */
    public static AddressLayout glad_debug_glNamedFramebufferTextureLayer$layout() {
        return glad_debug_glNamedFramebufferTextureLayer$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC glad_debug_glNamedFramebufferTextureLayer
     * }
     */
    public static MemorySegment glad_debug_glNamedFramebufferTextureLayer$segment() {
        return glad_debug_glNamedFramebufferTextureLayer$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC glad_debug_glNamedFramebufferTextureLayer
     * }
     */
    public static MemorySegment glad_debug_glNamedFramebufferTextureLayer() {
        return glad_debug_glNamedFramebufferTextureLayer$constants.SEGMENT.get(glad_debug_glNamedFramebufferTextureLayer$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC glad_debug_glNamedFramebufferTextureLayer
     * }
     */
    public static void glad_debug_glNamedFramebufferTextureLayer(MemorySegment varValue) {
        glad_debug_glNamedFramebufferTextureLayer$constants.SEGMENT.set(glad_debug_glNamedFramebufferTextureLayer$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNamedFramebufferTextureLayerEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNamedFramebufferTextureLayerEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC glad_glNamedFramebufferTextureLayerEXT
     * }
     */
    public static AddressLayout glad_glNamedFramebufferTextureLayerEXT$layout() {
        return glad_glNamedFramebufferTextureLayerEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC glad_glNamedFramebufferTextureLayerEXT
     * }
     */
    public static MemorySegment glad_glNamedFramebufferTextureLayerEXT$segment() {
        return glad_glNamedFramebufferTextureLayerEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC glad_glNamedFramebufferTextureLayerEXT
     * }
     */
    public static MemorySegment glad_glNamedFramebufferTextureLayerEXT() {
        return glad_glNamedFramebufferTextureLayerEXT$constants.SEGMENT.get(glad_glNamedFramebufferTextureLayerEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC glad_glNamedFramebufferTextureLayerEXT
     * }
     */
    public static void glad_glNamedFramebufferTextureLayerEXT(MemorySegment varValue) {
        glad_glNamedFramebufferTextureLayerEXT$constants.SEGMENT.set(glad_glNamedFramebufferTextureLayerEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNamedFramebufferTextureLayerEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNamedFramebufferTextureLayerEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC glad_debug_glNamedFramebufferTextureLayerEXT
     * }
     */
    public static AddressLayout glad_debug_glNamedFramebufferTextureLayerEXT$layout() {
        return glad_debug_glNamedFramebufferTextureLayerEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC glad_debug_glNamedFramebufferTextureLayerEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedFramebufferTextureLayerEXT$segment() {
        return glad_debug_glNamedFramebufferTextureLayerEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC glad_debug_glNamedFramebufferTextureLayerEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedFramebufferTextureLayerEXT() {
        return glad_debug_glNamedFramebufferTextureLayerEXT$constants.SEGMENT.get(glad_debug_glNamedFramebufferTextureLayerEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC glad_debug_glNamedFramebufferTextureLayerEXT
     * }
     */
    public static void glad_debug_glNamedFramebufferTextureLayerEXT(MemorySegment varValue) {
        glad_debug_glNamedFramebufferTextureLayerEXT$constants.SEGMENT.set(glad_debug_glNamedFramebufferTextureLayerEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNamedProgramLocalParameter4dEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNamedProgramLocalParameter4dEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC glad_glNamedProgramLocalParameter4dEXT
     * }
     */
    public static AddressLayout glad_glNamedProgramLocalParameter4dEXT$layout() {
        return glad_glNamedProgramLocalParameter4dEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC glad_glNamedProgramLocalParameter4dEXT
     * }
     */
    public static MemorySegment glad_glNamedProgramLocalParameter4dEXT$segment() {
        return glad_glNamedProgramLocalParameter4dEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC glad_glNamedProgramLocalParameter4dEXT
     * }
     */
    public static MemorySegment glad_glNamedProgramLocalParameter4dEXT() {
        return glad_glNamedProgramLocalParameter4dEXT$constants.SEGMENT.get(glad_glNamedProgramLocalParameter4dEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC glad_glNamedProgramLocalParameter4dEXT
     * }
     */
    public static void glad_glNamedProgramLocalParameter4dEXT(MemorySegment varValue) {
        glad_glNamedProgramLocalParameter4dEXT$constants.SEGMENT.set(glad_glNamedProgramLocalParameter4dEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNamedProgramLocalParameter4dEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNamedProgramLocalParameter4dEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC glad_debug_glNamedProgramLocalParameter4dEXT
     * }
     */
    public static AddressLayout glad_debug_glNamedProgramLocalParameter4dEXT$layout() {
        return glad_debug_glNamedProgramLocalParameter4dEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC glad_debug_glNamedProgramLocalParameter4dEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedProgramLocalParameter4dEXT$segment() {
        return glad_debug_glNamedProgramLocalParameter4dEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC glad_debug_glNamedProgramLocalParameter4dEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedProgramLocalParameter4dEXT() {
        return glad_debug_glNamedProgramLocalParameter4dEXT$constants.SEGMENT.get(glad_debug_glNamedProgramLocalParameter4dEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC glad_debug_glNamedProgramLocalParameter4dEXT
     * }
     */
    public static void glad_debug_glNamedProgramLocalParameter4dEXT(MemorySegment varValue) {
        glad_debug_glNamedProgramLocalParameter4dEXT$constants.SEGMENT.set(glad_debug_glNamedProgramLocalParameter4dEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNamedProgramLocalParameter4dvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNamedProgramLocalParameter4dvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC glad_glNamedProgramLocalParameter4dvEXT
     * }
     */
    public static AddressLayout glad_glNamedProgramLocalParameter4dvEXT$layout() {
        return glad_glNamedProgramLocalParameter4dvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC glad_glNamedProgramLocalParameter4dvEXT
     * }
     */
    public static MemorySegment glad_glNamedProgramLocalParameter4dvEXT$segment() {
        return glad_glNamedProgramLocalParameter4dvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC glad_glNamedProgramLocalParameter4dvEXT
     * }
     */
    public static MemorySegment glad_glNamedProgramLocalParameter4dvEXT() {
        return glad_glNamedProgramLocalParameter4dvEXT$constants.SEGMENT.get(glad_glNamedProgramLocalParameter4dvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC glad_glNamedProgramLocalParameter4dvEXT
     * }
     */
    public static void glad_glNamedProgramLocalParameter4dvEXT(MemorySegment varValue) {
        glad_glNamedProgramLocalParameter4dvEXT$constants.SEGMENT.set(glad_glNamedProgramLocalParameter4dvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNamedProgramLocalParameter4dvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNamedProgramLocalParameter4dvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC glad_debug_glNamedProgramLocalParameter4dvEXT
     * }
     */
    public static AddressLayout glad_debug_glNamedProgramLocalParameter4dvEXT$layout() {
        return glad_debug_glNamedProgramLocalParameter4dvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC glad_debug_glNamedProgramLocalParameter4dvEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedProgramLocalParameter4dvEXT$segment() {
        return glad_debug_glNamedProgramLocalParameter4dvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC glad_debug_glNamedProgramLocalParameter4dvEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedProgramLocalParameter4dvEXT() {
        return glad_debug_glNamedProgramLocalParameter4dvEXT$constants.SEGMENT.get(glad_debug_glNamedProgramLocalParameter4dvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC glad_debug_glNamedProgramLocalParameter4dvEXT
     * }
     */
    public static void glad_debug_glNamedProgramLocalParameter4dvEXT(MemorySegment varValue) {
        glad_debug_glNamedProgramLocalParameter4dvEXT$constants.SEGMENT.set(glad_debug_glNamedProgramLocalParameter4dvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNamedProgramLocalParameter4fEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNamedProgramLocalParameter4fEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC glad_glNamedProgramLocalParameter4fEXT
     * }
     */
    public static AddressLayout glad_glNamedProgramLocalParameter4fEXT$layout() {
        return glad_glNamedProgramLocalParameter4fEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC glad_glNamedProgramLocalParameter4fEXT
     * }
     */
    public static MemorySegment glad_glNamedProgramLocalParameter4fEXT$segment() {
        return glad_glNamedProgramLocalParameter4fEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC glad_glNamedProgramLocalParameter4fEXT
     * }
     */
    public static MemorySegment glad_glNamedProgramLocalParameter4fEXT() {
        return glad_glNamedProgramLocalParameter4fEXT$constants.SEGMENT.get(glad_glNamedProgramLocalParameter4fEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC glad_glNamedProgramLocalParameter4fEXT
     * }
     */
    public static void glad_glNamedProgramLocalParameter4fEXT(MemorySegment varValue) {
        glad_glNamedProgramLocalParameter4fEXT$constants.SEGMENT.set(glad_glNamedProgramLocalParameter4fEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNamedProgramLocalParameter4fEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNamedProgramLocalParameter4fEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC glad_debug_glNamedProgramLocalParameter4fEXT
     * }
     */
    public static AddressLayout glad_debug_glNamedProgramLocalParameter4fEXT$layout() {
        return glad_debug_glNamedProgramLocalParameter4fEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC glad_debug_glNamedProgramLocalParameter4fEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedProgramLocalParameter4fEXT$segment() {
        return glad_debug_glNamedProgramLocalParameter4fEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC glad_debug_glNamedProgramLocalParameter4fEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedProgramLocalParameter4fEXT() {
        return glad_debug_glNamedProgramLocalParameter4fEXT$constants.SEGMENT.get(glad_debug_glNamedProgramLocalParameter4fEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC glad_debug_glNamedProgramLocalParameter4fEXT
     * }
     */
    public static void glad_debug_glNamedProgramLocalParameter4fEXT(MemorySegment varValue) {
        glad_debug_glNamedProgramLocalParameter4fEXT$constants.SEGMENT.set(glad_debug_glNamedProgramLocalParameter4fEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNamedProgramLocalParameter4fvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNamedProgramLocalParameter4fvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC glad_glNamedProgramLocalParameter4fvEXT
     * }
     */
    public static AddressLayout glad_glNamedProgramLocalParameter4fvEXT$layout() {
        return glad_glNamedProgramLocalParameter4fvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC glad_glNamedProgramLocalParameter4fvEXT
     * }
     */
    public static MemorySegment glad_glNamedProgramLocalParameter4fvEXT$segment() {
        return glad_glNamedProgramLocalParameter4fvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC glad_glNamedProgramLocalParameter4fvEXT
     * }
     */
    public static MemorySegment glad_glNamedProgramLocalParameter4fvEXT() {
        return glad_glNamedProgramLocalParameter4fvEXT$constants.SEGMENT.get(glad_glNamedProgramLocalParameter4fvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC glad_glNamedProgramLocalParameter4fvEXT
     * }
     */
    public static void glad_glNamedProgramLocalParameter4fvEXT(MemorySegment varValue) {
        glad_glNamedProgramLocalParameter4fvEXT$constants.SEGMENT.set(glad_glNamedProgramLocalParameter4fvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNamedProgramLocalParameter4fvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNamedProgramLocalParameter4fvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC glad_debug_glNamedProgramLocalParameter4fvEXT
     * }
     */
    public static AddressLayout glad_debug_glNamedProgramLocalParameter4fvEXT$layout() {
        return glad_debug_glNamedProgramLocalParameter4fvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC glad_debug_glNamedProgramLocalParameter4fvEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedProgramLocalParameter4fvEXT$segment() {
        return glad_debug_glNamedProgramLocalParameter4fvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC glad_debug_glNamedProgramLocalParameter4fvEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedProgramLocalParameter4fvEXT() {
        return glad_debug_glNamedProgramLocalParameter4fvEXT$constants.SEGMENT.get(glad_debug_glNamedProgramLocalParameter4fvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC glad_debug_glNamedProgramLocalParameter4fvEXT
     * }
     */
    public static void glad_debug_glNamedProgramLocalParameter4fvEXT(MemorySegment varValue) {
        glad_debug_glNamedProgramLocalParameter4fvEXT$constants.SEGMENT.set(glad_debug_glNamedProgramLocalParameter4fvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNamedProgramLocalParameterI4iEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNamedProgramLocalParameterI4iEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC glad_glNamedProgramLocalParameterI4iEXT
     * }
     */
    public static AddressLayout glad_glNamedProgramLocalParameterI4iEXT$layout() {
        return glad_glNamedProgramLocalParameterI4iEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC glad_glNamedProgramLocalParameterI4iEXT
     * }
     */
    public static MemorySegment glad_glNamedProgramLocalParameterI4iEXT$segment() {
        return glad_glNamedProgramLocalParameterI4iEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC glad_glNamedProgramLocalParameterI4iEXT
     * }
     */
    public static MemorySegment glad_glNamedProgramLocalParameterI4iEXT() {
        return glad_glNamedProgramLocalParameterI4iEXT$constants.SEGMENT.get(glad_glNamedProgramLocalParameterI4iEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC glad_glNamedProgramLocalParameterI4iEXT
     * }
     */
    public static void glad_glNamedProgramLocalParameterI4iEXT(MemorySegment varValue) {
        glad_glNamedProgramLocalParameterI4iEXT$constants.SEGMENT.set(glad_glNamedProgramLocalParameterI4iEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNamedProgramLocalParameterI4iEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNamedProgramLocalParameterI4iEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC glad_debug_glNamedProgramLocalParameterI4iEXT
     * }
     */
    public static AddressLayout glad_debug_glNamedProgramLocalParameterI4iEXT$layout() {
        return glad_debug_glNamedProgramLocalParameterI4iEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC glad_debug_glNamedProgramLocalParameterI4iEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedProgramLocalParameterI4iEXT$segment() {
        return glad_debug_glNamedProgramLocalParameterI4iEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC glad_debug_glNamedProgramLocalParameterI4iEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedProgramLocalParameterI4iEXT() {
        return glad_debug_glNamedProgramLocalParameterI4iEXT$constants.SEGMENT.get(glad_debug_glNamedProgramLocalParameterI4iEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC glad_debug_glNamedProgramLocalParameterI4iEXT
     * }
     */
    public static void glad_debug_glNamedProgramLocalParameterI4iEXT(MemorySegment varValue) {
        glad_debug_glNamedProgramLocalParameterI4iEXT$constants.SEGMENT.set(glad_debug_glNamedProgramLocalParameterI4iEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNamedProgramLocalParameterI4ivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNamedProgramLocalParameterI4ivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC glad_glNamedProgramLocalParameterI4ivEXT
     * }
     */
    public static AddressLayout glad_glNamedProgramLocalParameterI4ivEXT$layout() {
        return glad_glNamedProgramLocalParameterI4ivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC glad_glNamedProgramLocalParameterI4ivEXT
     * }
     */
    public static MemorySegment glad_glNamedProgramLocalParameterI4ivEXT$segment() {
        return glad_glNamedProgramLocalParameterI4ivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC glad_glNamedProgramLocalParameterI4ivEXT
     * }
     */
    public static MemorySegment glad_glNamedProgramLocalParameterI4ivEXT() {
        return glad_glNamedProgramLocalParameterI4ivEXT$constants.SEGMENT.get(glad_glNamedProgramLocalParameterI4ivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC glad_glNamedProgramLocalParameterI4ivEXT
     * }
     */
    public static void glad_glNamedProgramLocalParameterI4ivEXT(MemorySegment varValue) {
        glad_glNamedProgramLocalParameterI4ivEXT$constants.SEGMENT.set(glad_glNamedProgramLocalParameterI4ivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNamedProgramLocalParameterI4ivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNamedProgramLocalParameterI4ivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC glad_debug_glNamedProgramLocalParameterI4ivEXT
     * }
     */
    public static AddressLayout glad_debug_glNamedProgramLocalParameterI4ivEXT$layout() {
        return glad_debug_glNamedProgramLocalParameterI4ivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC glad_debug_glNamedProgramLocalParameterI4ivEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedProgramLocalParameterI4ivEXT$segment() {
        return glad_debug_glNamedProgramLocalParameterI4ivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC glad_debug_glNamedProgramLocalParameterI4ivEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedProgramLocalParameterI4ivEXT() {
        return glad_debug_glNamedProgramLocalParameterI4ivEXT$constants.SEGMENT.get(glad_debug_glNamedProgramLocalParameterI4ivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC glad_debug_glNamedProgramLocalParameterI4ivEXT
     * }
     */
    public static void glad_debug_glNamedProgramLocalParameterI4ivEXT(MemorySegment varValue) {
        glad_debug_glNamedProgramLocalParameterI4ivEXT$constants.SEGMENT.set(glad_debug_glNamedProgramLocalParameterI4ivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNamedProgramLocalParameterI4uiEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNamedProgramLocalParameterI4uiEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC glad_glNamedProgramLocalParameterI4uiEXT
     * }
     */
    public static AddressLayout glad_glNamedProgramLocalParameterI4uiEXT$layout() {
        return glad_glNamedProgramLocalParameterI4uiEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC glad_glNamedProgramLocalParameterI4uiEXT
     * }
     */
    public static MemorySegment glad_glNamedProgramLocalParameterI4uiEXT$segment() {
        return glad_glNamedProgramLocalParameterI4uiEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC glad_glNamedProgramLocalParameterI4uiEXT
     * }
     */
    public static MemorySegment glad_glNamedProgramLocalParameterI4uiEXT() {
        return glad_glNamedProgramLocalParameterI4uiEXT$constants.SEGMENT.get(glad_glNamedProgramLocalParameterI4uiEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC glad_glNamedProgramLocalParameterI4uiEXT
     * }
     */
    public static void glad_glNamedProgramLocalParameterI4uiEXT(MemorySegment varValue) {
        glad_glNamedProgramLocalParameterI4uiEXT$constants.SEGMENT.set(glad_glNamedProgramLocalParameterI4uiEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNamedProgramLocalParameterI4uiEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNamedProgramLocalParameterI4uiEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC glad_debug_glNamedProgramLocalParameterI4uiEXT
     * }
     */
    public static AddressLayout glad_debug_glNamedProgramLocalParameterI4uiEXT$layout() {
        return glad_debug_glNamedProgramLocalParameterI4uiEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC glad_debug_glNamedProgramLocalParameterI4uiEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedProgramLocalParameterI4uiEXT$segment() {
        return glad_debug_glNamedProgramLocalParameterI4uiEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC glad_debug_glNamedProgramLocalParameterI4uiEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedProgramLocalParameterI4uiEXT() {
        return glad_debug_glNamedProgramLocalParameterI4uiEXT$constants.SEGMENT.get(glad_debug_glNamedProgramLocalParameterI4uiEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC glad_debug_glNamedProgramLocalParameterI4uiEXT
     * }
     */
    public static void glad_debug_glNamedProgramLocalParameterI4uiEXT(MemorySegment varValue) {
        glad_debug_glNamedProgramLocalParameterI4uiEXT$constants.SEGMENT.set(glad_debug_glNamedProgramLocalParameterI4uiEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNamedProgramLocalParameterI4uivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNamedProgramLocalParameterI4uivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC glad_glNamedProgramLocalParameterI4uivEXT
     * }
     */
    public static AddressLayout glad_glNamedProgramLocalParameterI4uivEXT$layout() {
        return glad_glNamedProgramLocalParameterI4uivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC glad_glNamedProgramLocalParameterI4uivEXT
     * }
     */
    public static MemorySegment glad_glNamedProgramLocalParameterI4uivEXT$segment() {
        return glad_glNamedProgramLocalParameterI4uivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC glad_glNamedProgramLocalParameterI4uivEXT
     * }
     */
    public static MemorySegment glad_glNamedProgramLocalParameterI4uivEXT() {
        return glad_glNamedProgramLocalParameterI4uivEXT$constants.SEGMENT.get(glad_glNamedProgramLocalParameterI4uivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC glad_glNamedProgramLocalParameterI4uivEXT
     * }
     */
    public static void glad_glNamedProgramLocalParameterI4uivEXT(MemorySegment varValue) {
        glad_glNamedProgramLocalParameterI4uivEXT$constants.SEGMENT.set(glad_glNamedProgramLocalParameterI4uivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNamedProgramLocalParameterI4uivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNamedProgramLocalParameterI4uivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC glad_debug_glNamedProgramLocalParameterI4uivEXT
     * }
     */
    public static AddressLayout glad_debug_glNamedProgramLocalParameterI4uivEXT$layout() {
        return glad_debug_glNamedProgramLocalParameterI4uivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC glad_debug_glNamedProgramLocalParameterI4uivEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedProgramLocalParameterI4uivEXT$segment() {
        return glad_debug_glNamedProgramLocalParameterI4uivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC glad_debug_glNamedProgramLocalParameterI4uivEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedProgramLocalParameterI4uivEXT() {
        return glad_debug_glNamedProgramLocalParameterI4uivEXT$constants.SEGMENT.get(glad_debug_glNamedProgramLocalParameterI4uivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC glad_debug_glNamedProgramLocalParameterI4uivEXT
     * }
     */
    public static void glad_debug_glNamedProgramLocalParameterI4uivEXT(MemorySegment varValue) {
        glad_debug_glNamedProgramLocalParameterI4uivEXT$constants.SEGMENT.set(glad_debug_glNamedProgramLocalParameterI4uivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNamedProgramLocalParameters4fvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNamedProgramLocalParameters4fvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC glad_glNamedProgramLocalParameters4fvEXT
     * }
     */
    public static AddressLayout glad_glNamedProgramLocalParameters4fvEXT$layout() {
        return glad_glNamedProgramLocalParameters4fvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC glad_glNamedProgramLocalParameters4fvEXT
     * }
     */
    public static MemorySegment glad_glNamedProgramLocalParameters4fvEXT$segment() {
        return glad_glNamedProgramLocalParameters4fvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC glad_glNamedProgramLocalParameters4fvEXT
     * }
     */
    public static MemorySegment glad_glNamedProgramLocalParameters4fvEXT() {
        return glad_glNamedProgramLocalParameters4fvEXT$constants.SEGMENT.get(glad_glNamedProgramLocalParameters4fvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC glad_glNamedProgramLocalParameters4fvEXT
     * }
     */
    public static void glad_glNamedProgramLocalParameters4fvEXT(MemorySegment varValue) {
        glad_glNamedProgramLocalParameters4fvEXT$constants.SEGMENT.set(glad_glNamedProgramLocalParameters4fvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNamedProgramLocalParameters4fvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNamedProgramLocalParameters4fvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC glad_debug_glNamedProgramLocalParameters4fvEXT
     * }
     */
    public static AddressLayout glad_debug_glNamedProgramLocalParameters4fvEXT$layout() {
        return glad_debug_glNamedProgramLocalParameters4fvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC glad_debug_glNamedProgramLocalParameters4fvEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedProgramLocalParameters4fvEXT$segment() {
        return glad_debug_glNamedProgramLocalParameters4fvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC glad_debug_glNamedProgramLocalParameters4fvEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedProgramLocalParameters4fvEXT() {
        return glad_debug_glNamedProgramLocalParameters4fvEXT$constants.SEGMENT.get(glad_debug_glNamedProgramLocalParameters4fvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC glad_debug_glNamedProgramLocalParameters4fvEXT
     * }
     */
    public static void glad_debug_glNamedProgramLocalParameters4fvEXT(MemorySegment varValue) {
        glad_debug_glNamedProgramLocalParameters4fvEXT$constants.SEGMENT.set(glad_debug_glNamedProgramLocalParameters4fvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNamedProgramLocalParametersI4ivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNamedProgramLocalParametersI4ivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC glad_glNamedProgramLocalParametersI4ivEXT
     * }
     */
    public static AddressLayout glad_glNamedProgramLocalParametersI4ivEXT$layout() {
        return glad_glNamedProgramLocalParametersI4ivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC glad_glNamedProgramLocalParametersI4ivEXT
     * }
     */
    public static MemorySegment glad_glNamedProgramLocalParametersI4ivEXT$segment() {
        return glad_glNamedProgramLocalParametersI4ivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC glad_glNamedProgramLocalParametersI4ivEXT
     * }
     */
    public static MemorySegment glad_glNamedProgramLocalParametersI4ivEXT() {
        return glad_glNamedProgramLocalParametersI4ivEXT$constants.SEGMENT.get(glad_glNamedProgramLocalParametersI4ivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC glad_glNamedProgramLocalParametersI4ivEXT
     * }
     */
    public static void glad_glNamedProgramLocalParametersI4ivEXT(MemorySegment varValue) {
        glad_glNamedProgramLocalParametersI4ivEXT$constants.SEGMENT.set(glad_glNamedProgramLocalParametersI4ivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNamedProgramLocalParametersI4ivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNamedProgramLocalParametersI4ivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC glad_debug_glNamedProgramLocalParametersI4ivEXT
     * }
     */
    public static AddressLayout glad_debug_glNamedProgramLocalParametersI4ivEXT$layout() {
        return glad_debug_glNamedProgramLocalParametersI4ivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC glad_debug_glNamedProgramLocalParametersI4ivEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedProgramLocalParametersI4ivEXT$segment() {
        return glad_debug_glNamedProgramLocalParametersI4ivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC glad_debug_glNamedProgramLocalParametersI4ivEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedProgramLocalParametersI4ivEXT() {
        return glad_debug_glNamedProgramLocalParametersI4ivEXT$constants.SEGMENT.get(glad_debug_glNamedProgramLocalParametersI4ivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC glad_debug_glNamedProgramLocalParametersI4ivEXT
     * }
     */
    public static void glad_debug_glNamedProgramLocalParametersI4ivEXT(MemorySegment varValue) {
        glad_debug_glNamedProgramLocalParametersI4ivEXT$constants.SEGMENT.set(glad_debug_glNamedProgramLocalParametersI4ivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNamedProgramLocalParametersI4uivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNamedProgramLocalParametersI4uivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC glad_glNamedProgramLocalParametersI4uivEXT
     * }
     */
    public static AddressLayout glad_glNamedProgramLocalParametersI4uivEXT$layout() {
        return glad_glNamedProgramLocalParametersI4uivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC glad_glNamedProgramLocalParametersI4uivEXT
     * }
     */
    public static MemorySegment glad_glNamedProgramLocalParametersI4uivEXT$segment() {
        return glad_glNamedProgramLocalParametersI4uivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC glad_glNamedProgramLocalParametersI4uivEXT
     * }
     */
    public static MemorySegment glad_glNamedProgramLocalParametersI4uivEXT() {
        return glad_glNamedProgramLocalParametersI4uivEXT$constants.SEGMENT.get(glad_glNamedProgramLocalParametersI4uivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC glad_glNamedProgramLocalParametersI4uivEXT
     * }
     */
    public static void glad_glNamedProgramLocalParametersI4uivEXT(MemorySegment varValue) {
        glad_glNamedProgramLocalParametersI4uivEXT$constants.SEGMENT.set(glad_glNamedProgramLocalParametersI4uivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNamedProgramLocalParametersI4uivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNamedProgramLocalParametersI4uivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC glad_debug_glNamedProgramLocalParametersI4uivEXT
     * }
     */
    public static AddressLayout glad_debug_glNamedProgramLocalParametersI4uivEXT$layout() {
        return glad_debug_glNamedProgramLocalParametersI4uivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC glad_debug_glNamedProgramLocalParametersI4uivEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedProgramLocalParametersI4uivEXT$segment() {
        return glad_debug_glNamedProgramLocalParametersI4uivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC glad_debug_glNamedProgramLocalParametersI4uivEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedProgramLocalParametersI4uivEXT() {
        return glad_debug_glNamedProgramLocalParametersI4uivEXT$constants.SEGMENT.get(glad_debug_glNamedProgramLocalParametersI4uivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC glad_debug_glNamedProgramLocalParametersI4uivEXT
     * }
     */
    public static void glad_debug_glNamedProgramLocalParametersI4uivEXT(MemorySegment varValue) {
        glad_debug_glNamedProgramLocalParametersI4uivEXT$constants.SEGMENT.set(glad_debug_glNamedProgramLocalParametersI4uivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNamedProgramStringEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNamedProgramStringEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMSTRINGEXTPROC glad_glNamedProgramStringEXT
     * }
     */
    public static AddressLayout glad_glNamedProgramStringEXT$layout() {
        return glad_glNamedProgramStringEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMSTRINGEXTPROC glad_glNamedProgramStringEXT
     * }
     */
    public static MemorySegment glad_glNamedProgramStringEXT$segment() {
        return glad_glNamedProgramStringEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMSTRINGEXTPROC glad_glNamedProgramStringEXT
     * }
     */
    public static MemorySegment glad_glNamedProgramStringEXT() {
        return glad_glNamedProgramStringEXT$constants.SEGMENT.get(glad_glNamedProgramStringEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMSTRINGEXTPROC glad_glNamedProgramStringEXT
     * }
     */
    public static void glad_glNamedProgramStringEXT(MemorySegment varValue) {
        glad_glNamedProgramStringEXT$constants.SEGMENT.set(glad_glNamedProgramStringEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNamedProgramStringEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNamedProgramStringEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMSTRINGEXTPROC glad_debug_glNamedProgramStringEXT
     * }
     */
    public static AddressLayout glad_debug_glNamedProgramStringEXT$layout() {
        return glad_debug_glNamedProgramStringEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMSTRINGEXTPROC glad_debug_glNamedProgramStringEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedProgramStringEXT$segment() {
        return glad_debug_glNamedProgramStringEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMSTRINGEXTPROC glad_debug_glNamedProgramStringEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedProgramStringEXT() {
        return glad_debug_glNamedProgramStringEXT$constants.SEGMENT.get(glad_debug_glNamedProgramStringEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDPROGRAMSTRINGEXTPROC glad_debug_glNamedProgramStringEXT
     * }
     */
    public static void glad_debug_glNamedProgramStringEXT(MemorySegment varValue) {
        glad_debug_glNamedProgramStringEXT$constants.SEGMENT.set(glad_debug_glNamedProgramStringEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNamedRenderbufferStorage$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNamedRenderbufferStorage").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDRENDERBUFFERSTORAGEPROC glad_glNamedRenderbufferStorage
     * }
     */
    public static AddressLayout glad_glNamedRenderbufferStorage$layout() {
        return glad_glNamedRenderbufferStorage$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDRENDERBUFFERSTORAGEPROC glad_glNamedRenderbufferStorage
     * }
     */
    public static MemorySegment glad_glNamedRenderbufferStorage$segment() {
        return glad_glNamedRenderbufferStorage$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDRENDERBUFFERSTORAGEPROC glad_glNamedRenderbufferStorage
     * }
     */
    public static MemorySegment glad_glNamedRenderbufferStorage() {
        return glad_glNamedRenderbufferStorage$constants.SEGMENT.get(glad_glNamedRenderbufferStorage$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDRENDERBUFFERSTORAGEPROC glad_glNamedRenderbufferStorage
     * }
     */
    public static void glad_glNamedRenderbufferStorage(MemorySegment varValue) {
        glad_glNamedRenderbufferStorage$constants.SEGMENT.set(glad_glNamedRenderbufferStorage$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNamedRenderbufferStorage$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNamedRenderbufferStorage").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDRENDERBUFFERSTORAGEPROC glad_debug_glNamedRenderbufferStorage
     * }
     */
    public static AddressLayout glad_debug_glNamedRenderbufferStorage$layout() {
        return glad_debug_glNamedRenderbufferStorage$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDRENDERBUFFERSTORAGEPROC glad_debug_glNamedRenderbufferStorage
     * }
     */
    public static MemorySegment glad_debug_glNamedRenderbufferStorage$segment() {
        return glad_debug_glNamedRenderbufferStorage$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDRENDERBUFFERSTORAGEPROC glad_debug_glNamedRenderbufferStorage
     * }
     */
    public static MemorySegment glad_debug_glNamedRenderbufferStorage() {
        return glad_debug_glNamedRenderbufferStorage$constants.SEGMENT.get(glad_debug_glNamedRenderbufferStorage$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDRENDERBUFFERSTORAGEPROC glad_debug_glNamedRenderbufferStorage
     * }
     */
    public static void glad_debug_glNamedRenderbufferStorage(MemorySegment varValue) {
        glad_debug_glNamedRenderbufferStorage$constants.SEGMENT.set(glad_debug_glNamedRenderbufferStorage$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNamedRenderbufferStorageEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNamedRenderbufferStorageEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC glad_glNamedRenderbufferStorageEXT
     * }
     */
    public static AddressLayout glad_glNamedRenderbufferStorageEXT$layout() {
        return glad_glNamedRenderbufferStorageEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC glad_glNamedRenderbufferStorageEXT
     * }
     */
    public static MemorySegment glad_glNamedRenderbufferStorageEXT$segment() {
        return glad_glNamedRenderbufferStorageEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC glad_glNamedRenderbufferStorageEXT
     * }
     */
    public static MemorySegment glad_glNamedRenderbufferStorageEXT() {
        return glad_glNamedRenderbufferStorageEXT$constants.SEGMENT.get(glad_glNamedRenderbufferStorageEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC glad_glNamedRenderbufferStorageEXT
     * }
     */
    public static void glad_glNamedRenderbufferStorageEXT(MemorySegment varValue) {
        glad_glNamedRenderbufferStorageEXT$constants.SEGMENT.set(glad_glNamedRenderbufferStorageEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNamedRenderbufferStorageEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNamedRenderbufferStorageEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC glad_debug_glNamedRenderbufferStorageEXT
     * }
     */
    public static AddressLayout glad_debug_glNamedRenderbufferStorageEXT$layout() {
        return glad_debug_glNamedRenderbufferStorageEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC glad_debug_glNamedRenderbufferStorageEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedRenderbufferStorageEXT$segment() {
        return glad_debug_glNamedRenderbufferStorageEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC glad_debug_glNamedRenderbufferStorageEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedRenderbufferStorageEXT() {
        return glad_debug_glNamedRenderbufferStorageEXT$constants.SEGMENT.get(glad_debug_glNamedRenderbufferStorageEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC glad_debug_glNamedRenderbufferStorageEXT
     * }
     */
    public static void glad_debug_glNamedRenderbufferStorageEXT(MemorySegment varValue) {
        glad_debug_glNamedRenderbufferStorageEXT$constants.SEGMENT.set(glad_debug_glNamedRenderbufferStorageEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNamedRenderbufferStorageMultisample$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNamedRenderbufferStorageMultisample").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC glad_glNamedRenderbufferStorageMultisample
     * }
     */
    public static AddressLayout glad_glNamedRenderbufferStorageMultisample$layout() {
        return glad_glNamedRenderbufferStorageMultisample$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC glad_glNamedRenderbufferStorageMultisample
     * }
     */
    public static MemorySegment glad_glNamedRenderbufferStorageMultisample$segment() {
        return glad_glNamedRenderbufferStorageMultisample$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC glad_glNamedRenderbufferStorageMultisample
     * }
     */
    public static MemorySegment glad_glNamedRenderbufferStorageMultisample() {
        return glad_glNamedRenderbufferStorageMultisample$constants.SEGMENT.get(glad_glNamedRenderbufferStorageMultisample$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC glad_glNamedRenderbufferStorageMultisample
     * }
     */
    public static void glad_glNamedRenderbufferStorageMultisample(MemorySegment varValue) {
        glad_glNamedRenderbufferStorageMultisample$constants.SEGMENT.set(glad_glNamedRenderbufferStorageMultisample$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNamedRenderbufferStorageMultisample$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNamedRenderbufferStorageMultisample").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC glad_debug_glNamedRenderbufferStorageMultisample
     * }
     */
    public static AddressLayout glad_debug_glNamedRenderbufferStorageMultisample$layout() {
        return glad_debug_glNamedRenderbufferStorageMultisample$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC glad_debug_glNamedRenderbufferStorageMultisample
     * }
     */
    public static MemorySegment glad_debug_glNamedRenderbufferStorageMultisample$segment() {
        return glad_debug_glNamedRenderbufferStorageMultisample$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC glad_debug_glNamedRenderbufferStorageMultisample
     * }
     */
    public static MemorySegment glad_debug_glNamedRenderbufferStorageMultisample() {
        return glad_debug_glNamedRenderbufferStorageMultisample$constants.SEGMENT.get(glad_debug_glNamedRenderbufferStorageMultisample$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC glad_debug_glNamedRenderbufferStorageMultisample
     * }
     */
    public static void glad_debug_glNamedRenderbufferStorageMultisample(MemorySegment varValue) {
        glad_debug_glNamedRenderbufferStorageMultisample$constants.SEGMENT.set(glad_debug_glNamedRenderbufferStorageMultisample$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNamedRenderbufferStorageMultisampleCoverageEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNamedRenderbufferStorageMultisampleCoverageEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC glad_glNamedRenderbufferStorageMultisampleCoverageEXT
     * }
     */
    public static AddressLayout glad_glNamedRenderbufferStorageMultisampleCoverageEXT$layout() {
        return glad_glNamedRenderbufferStorageMultisampleCoverageEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC glad_glNamedRenderbufferStorageMultisampleCoverageEXT
     * }
     */
    public static MemorySegment glad_glNamedRenderbufferStorageMultisampleCoverageEXT$segment() {
        return glad_glNamedRenderbufferStorageMultisampleCoverageEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC glad_glNamedRenderbufferStorageMultisampleCoverageEXT
     * }
     */
    public static MemorySegment glad_glNamedRenderbufferStorageMultisampleCoverageEXT() {
        return glad_glNamedRenderbufferStorageMultisampleCoverageEXT$constants.SEGMENT.get(glad_glNamedRenderbufferStorageMultisampleCoverageEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC glad_glNamedRenderbufferStorageMultisampleCoverageEXT
     * }
     */
    public static void glad_glNamedRenderbufferStorageMultisampleCoverageEXT(MemorySegment varValue) {
        glad_glNamedRenderbufferStorageMultisampleCoverageEXT$constants.SEGMENT.set(glad_glNamedRenderbufferStorageMultisampleCoverageEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNamedRenderbufferStorageMultisampleCoverageEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNamedRenderbufferStorageMultisampleCoverageEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC glad_debug_glNamedRenderbufferStorageMultisampleCoverageEXT
     * }
     */
    public static AddressLayout glad_debug_glNamedRenderbufferStorageMultisampleCoverageEXT$layout() {
        return glad_debug_glNamedRenderbufferStorageMultisampleCoverageEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC glad_debug_glNamedRenderbufferStorageMultisampleCoverageEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedRenderbufferStorageMultisampleCoverageEXT$segment() {
        return glad_debug_glNamedRenderbufferStorageMultisampleCoverageEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC glad_debug_glNamedRenderbufferStorageMultisampleCoverageEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedRenderbufferStorageMultisampleCoverageEXT() {
        return glad_debug_glNamedRenderbufferStorageMultisampleCoverageEXT$constants.SEGMENT.get(glad_debug_glNamedRenderbufferStorageMultisampleCoverageEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC glad_debug_glNamedRenderbufferStorageMultisampleCoverageEXT
     * }
     */
    public static void glad_debug_glNamedRenderbufferStorageMultisampleCoverageEXT(MemorySegment varValue) {
        glad_debug_glNamedRenderbufferStorageMultisampleCoverageEXT$constants.SEGMENT.set(glad_debug_glNamedRenderbufferStorageMultisampleCoverageEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNamedRenderbufferStorageMultisampleEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNamedRenderbufferStorageMultisampleEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC glad_glNamedRenderbufferStorageMultisampleEXT
     * }
     */
    public static AddressLayout glad_glNamedRenderbufferStorageMultisampleEXT$layout() {
        return glad_glNamedRenderbufferStorageMultisampleEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC glad_glNamedRenderbufferStorageMultisampleEXT
     * }
     */
    public static MemorySegment glad_glNamedRenderbufferStorageMultisampleEXT$segment() {
        return glad_glNamedRenderbufferStorageMultisampleEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC glad_glNamedRenderbufferStorageMultisampleEXT
     * }
     */
    public static MemorySegment glad_glNamedRenderbufferStorageMultisampleEXT() {
        return glad_glNamedRenderbufferStorageMultisampleEXT$constants.SEGMENT.get(glad_glNamedRenderbufferStorageMultisampleEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC glad_glNamedRenderbufferStorageMultisampleEXT
     * }
     */
    public static void glad_glNamedRenderbufferStorageMultisampleEXT(MemorySegment varValue) {
        glad_glNamedRenderbufferStorageMultisampleEXT$constants.SEGMENT.set(glad_glNamedRenderbufferStorageMultisampleEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNamedRenderbufferStorageMultisampleEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNamedRenderbufferStorageMultisampleEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC glad_debug_glNamedRenderbufferStorageMultisampleEXT
     * }
     */
    public static AddressLayout glad_debug_glNamedRenderbufferStorageMultisampleEXT$layout() {
        return glad_debug_glNamedRenderbufferStorageMultisampleEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC glad_debug_glNamedRenderbufferStorageMultisampleEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedRenderbufferStorageMultisampleEXT$segment() {
        return glad_debug_glNamedRenderbufferStorageMultisampleEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC glad_debug_glNamedRenderbufferStorageMultisampleEXT
     * }
     */
    public static MemorySegment glad_debug_glNamedRenderbufferStorageMultisampleEXT() {
        return glad_debug_glNamedRenderbufferStorageMultisampleEXT$constants.SEGMENT.get(glad_debug_glNamedRenderbufferStorageMultisampleEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC glad_debug_glNamedRenderbufferStorageMultisampleEXT
     * }
     */
    public static void glad_debug_glNamedRenderbufferStorageMultisampleEXT(MemorySegment varValue) {
        glad_debug_glNamedRenderbufferStorageMultisampleEXT$constants.SEGMENT.set(glad_debug_glNamedRenderbufferStorageMultisampleEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNewList$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNewList").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNEWLISTPROC glad_glNewList
     * }
     */
    public static AddressLayout glad_glNewList$layout() {
        return glad_glNewList$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNEWLISTPROC glad_glNewList
     * }
     */
    public static MemorySegment glad_glNewList$segment() {
        return glad_glNewList$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNEWLISTPROC glad_glNewList
     * }
     */
    public static MemorySegment glad_glNewList() {
        return glad_glNewList$constants.SEGMENT.get(glad_glNewList$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNEWLISTPROC glad_glNewList
     * }
     */
    public static void glad_glNewList(MemorySegment varValue) {
        glad_glNewList$constants.SEGMENT.set(glad_glNewList$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNewList$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNewList").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNEWLISTPROC glad_debug_glNewList
     * }
     */
    public static AddressLayout glad_debug_glNewList$layout() {
        return glad_debug_glNewList$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNEWLISTPROC glad_debug_glNewList
     * }
     */
    public static MemorySegment glad_debug_glNewList$segment() {
        return glad_debug_glNewList$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNEWLISTPROC glad_debug_glNewList
     * }
     */
    public static MemorySegment glad_debug_glNewList() {
        return glad_debug_glNewList$constants.SEGMENT.get(glad_debug_glNewList$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNEWLISTPROC glad_debug_glNewList
     * }
     */
    public static void glad_debug_glNewList(MemorySegment varValue) {
        glad_debug_glNewList$constants.SEGMENT.set(glad_debug_glNewList$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNormal3b$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNormal3b").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3BPROC glad_glNormal3b
     * }
     */
    public static AddressLayout glad_glNormal3b$layout() {
        return glad_glNormal3b$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3BPROC glad_glNormal3b
     * }
     */
    public static MemorySegment glad_glNormal3b$segment() {
        return glad_glNormal3b$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3BPROC glad_glNormal3b
     * }
     */
    public static MemorySegment glad_glNormal3b() {
        return glad_glNormal3b$constants.SEGMENT.get(glad_glNormal3b$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3BPROC glad_glNormal3b
     * }
     */
    public static void glad_glNormal3b(MemorySegment varValue) {
        glad_glNormal3b$constants.SEGMENT.set(glad_glNormal3b$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNormal3b$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNormal3b").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3BPROC glad_debug_glNormal3b
     * }
     */
    public static AddressLayout glad_debug_glNormal3b$layout() {
        return glad_debug_glNormal3b$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3BPROC glad_debug_glNormal3b
     * }
     */
    public static MemorySegment glad_debug_glNormal3b$segment() {
        return glad_debug_glNormal3b$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3BPROC glad_debug_glNormal3b
     * }
     */
    public static MemorySegment glad_debug_glNormal3b() {
        return glad_debug_glNormal3b$constants.SEGMENT.get(glad_debug_glNormal3b$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3BPROC glad_debug_glNormal3b
     * }
     */
    public static void glad_debug_glNormal3b(MemorySegment varValue) {
        glad_debug_glNormal3b$constants.SEGMENT.set(glad_debug_glNormal3b$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNormal3bv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNormal3bv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3BVPROC glad_glNormal3bv
     * }
     */
    public static AddressLayout glad_glNormal3bv$layout() {
        return glad_glNormal3bv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3BVPROC glad_glNormal3bv
     * }
     */
    public static MemorySegment glad_glNormal3bv$segment() {
        return glad_glNormal3bv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3BVPROC glad_glNormal3bv
     * }
     */
    public static MemorySegment glad_glNormal3bv() {
        return glad_glNormal3bv$constants.SEGMENT.get(glad_glNormal3bv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3BVPROC glad_glNormal3bv
     * }
     */
    public static void glad_glNormal3bv(MemorySegment varValue) {
        glad_glNormal3bv$constants.SEGMENT.set(glad_glNormal3bv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNormal3bv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNormal3bv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3BVPROC glad_debug_glNormal3bv
     * }
     */
    public static AddressLayout glad_debug_glNormal3bv$layout() {
        return glad_debug_glNormal3bv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3BVPROC glad_debug_glNormal3bv
     * }
     */
    public static MemorySegment glad_debug_glNormal3bv$segment() {
        return glad_debug_glNormal3bv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3BVPROC glad_debug_glNormal3bv
     * }
     */
    public static MemorySegment glad_debug_glNormal3bv() {
        return glad_debug_glNormal3bv$constants.SEGMENT.get(glad_debug_glNormal3bv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3BVPROC glad_debug_glNormal3bv
     * }
     */
    public static void glad_debug_glNormal3bv(MemorySegment varValue) {
        glad_debug_glNormal3bv$constants.SEGMENT.set(glad_debug_glNormal3bv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNormal3d$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNormal3d").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3DPROC glad_glNormal3d
     * }
     */
    public static AddressLayout glad_glNormal3d$layout() {
        return glad_glNormal3d$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3DPROC glad_glNormal3d
     * }
     */
    public static MemorySegment glad_glNormal3d$segment() {
        return glad_glNormal3d$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3DPROC glad_glNormal3d
     * }
     */
    public static MemorySegment glad_glNormal3d() {
        return glad_glNormal3d$constants.SEGMENT.get(glad_glNormal3d$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3DPROC glad_glNormal3d
     * }
     */
    public static void glad_glNormal3d(MemorySegment varValue) {
        glad_glNormal3d$constants.SEGMENT.set(glad_glNormal3d$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNormal3d$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNormal3d").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3DPROC glad_debug_glNormal3d
     * }
     */
    public static AddressLayout glad_debug_glNormal3d$layout() {
        return glad_debug_glNormal3d$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3DPROC glad_debug_glNormal3d
     * }
     */
    public static MemorySegment glad_debug_glNormal3d$segment() {
        return glad_debug_glNormal3d$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3DPROC glad_debug_glNormal3d
     * }
     */
    public static MemorySegment glad_debug_glNormal3d() {
        return glad_debug_glNormal3d$constants.SEGMENT.get(glad_debug_glNormal3d$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3DPROC glad_debug_glNormal3d
     * }
     */
    public static void glad_debug_glNormal3d(MemorySegment varValue) {
        glad_debug_glNormal3d$constants.SEGMENT.set(glad_debug_glNormal3d$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNormal3dv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNormal3dv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3DVPROC glad_glNormal3dv
     * }
     */
    public static AddressLayout glad_glNormal3dv$layout() {
        return glad_glNormal3dv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3DVPROC glad_glNormal3dv
     * }
     */
    public static MemorySegment glad_glNormal3dv$segment() {
        return glad_glNormal3dv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3DVPROC glad_glNormal3dv
     * }
     */
    public static MemorySegment glad_glNormal3dv() {
        return glad_glNormal3dv$constants.SEGMENT.get(glad_glNormal3dv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3DVPROC glad_glNormal3dv
     * }
     */
    public static void glad_glNormal3dv(MemorySegment varValue) {
        glad_glNormal3dv$constants.SEGMENT.set(glad_glNormal3dv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNormal3dv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNormal3dv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3DVPROC glad_debug_glNormal3dv
     * }
     */
    public static AddressLayout glad_debug_glNormal3dv$layout() {
        return glad_debug_glNormal3dv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3DVPROC glad_debug_glNormal3dv
     * }
     */
    public static MemorySegment glad_debug_glNormal3dv$segment() {
        return glad_debug_glNormal3dv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3DVPROC glad_debug_glNormal3dv
     * }
     */
    public static MemorySegment glad_debug_glNormal3dv() {
        return glad_debug_glNormal3dv$constants.SEGMENT.get(glad_debug_glNormal3dv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3DVPROC glad_debug_glNormal3dv
     * }
     */
    public static void glad_debug_glNormal3dv(MemorySegment varValue) {
        glad_debug_glNormal3dv$constants.SEGMENT.set(glad_debug_glNormal3dv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNormal3f$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNormal3f").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3FPROC glad_glNormal3f
     * }
     */
    public static AddressLayout glad_glNormal3f$layout() {
        return glad_glNormal3f$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3FPROC glad_glNormal3f
     * }
     */
    public static MemorySegment glad_glNormal3f$segment() {
        return glad_glNormal3f$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3FPROC glad_glNormal3f
     * }
     */
    public static MemorySegment glad_glNormal3f() {
        return glad_glNormal3f$constants.SEGMENT.get(glad_glNormal3f$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3FPROC glad_glNormal3f
     * }
     */
    public static void glad_glNormal3f(MemorySegment varValue) {
        glad_glNormal3f$constants.SEGMENT.set(glad_glNormal3f$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNormal3f$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNormal3f").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3FPROC glad_debug_glNormal3f
     * }
     */
    public static AddressLayout glad_debug_glNormal3f$layout() {
        return glad_debug_glNormal3f$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3FPROC glad_debug_glNormal3f
     * }
     */
    public static MemorySegment glad_debug_glNormal3f$segment() {
        return glad_debug_glNormal3f$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3FPROC glad_debug_glNormal3f
     * }
     */
    public static MemorySegment glad_debug_glNormal3f() {
        return glad_debug_glNormal3f$constants.SEGMENT.get(glad_debug_glNormal3f$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3FPROC glad_debug_glNormal3f
     * }
     */
    public static void glad_debug_glNormal3f(MemorySegment varValue) {
        glad_debug_glNormal3f$constants.SEGMENT.set(glad_debug_glNormal3f$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNormal3fv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNormal3fv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3FVPROC glad_glNormal3fv
     * }
     */
    public static AddressLayout glad_glNormal3fv$layout() {
        return glad_glNormal3fv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3FVPROC glad_glNormal3fv
     * }
     */
    public static MemorySegment glad_glNormal3fv$segment() {
        return glad_glNormal3fv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3FVPROC glad_glNormal3fv
     * }
     */
    public static MemorySegment glad_glNormal3fv() {
        return glad_glNormal3fv$constants.SEGMENT.get(glad_glNormal3fv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3FVPROC glad_glNormal3fv
     * }
     */
    public static void glad_glNormal3fv(MemorySegment varValue) {
        glad_glNormal3fv$constants.SEGMENT.set(glad_glNormal3fv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNormal3fv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNormal3fv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3FVPROC glad_debug_glNormal3fv
     * }
     */
    public static AddressLayout glad_debug_glNormal3fv$layout() {
        return glad_debug_glNormal3fv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3FVPROC glad_debug_glNormal3fv
     * }
     */
    public static MemorySegment glad_debug_glNormal3fv$segment() {
        return glad_debug_glNormal3fv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3FVPROC glad_debug_glNormal3fv
     * }
     */
    public static MemorySegment glad_debug_glNormal3fv() {
        return glad_debug_glNormal3fv$constants.SEGMENT.get(glad_debug_glNormal3fv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3FVPROC glad_debug_glNormal3fv
     * }
     */
    public static void glad_debug_glNormal3fv(MemorySegment varValue) {
        glad_debug_glNormal3fv$constants.SEGMENT.set(glad_debug_glNormal3fv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNormal3i$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNormal3i").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3IPROC glad_glNormal3i
     * }
     */
    public static AddressLayout glad_glNormal3i$layout() {
        return glad_glNormal3i$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3IPROC glad_glNormal3i
     * }
     */
    public static MemorySegment glad_glNormal3i$segment() {
        return glad_glNormal3i$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3IPROC glad_glNormal3i
     * }
     */
    public static MemorySegment glad_glNormal3i() {
        return glad_glNormal3i$constants.SEGMENT.get(glad_glNormal3i$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3IPROC glad_glNormal3i
     * }
     */
    public static void glad_glNormal3i(MemorySegment varValue) {
        glad_glNormal3i$constants.SEGMENT.set(glad_glNormal3i$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNormal3i$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNormal3i").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3IPROC glad_debug_glNormal3i
     * }
     */
    public static AddressLayout glad_debug_glNormal3i$layout() {
        return glad_debug_glNormal3i$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3IPROC glad_debug_glNormal3i
     * }
     */
    public static MemorySegment glad_debug_glNormal3i$segment() {
        return glad_debug_glNormal3i$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3IPROC glad_debug_glNormal3i
     * }
     */
    public static MemorySegment glad_debug_glNormal3i() {
        return glad_debug_glNormal3i$constants.SEGMENT.get(glad_debug_glNormal3i$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3IPROC glad_debug_glNormal3i
     * }
     */
    public static void glad_debug_glNormal3i(MemorySegment varValue) {
        glad_debug_glNormal3i$constants.SEGMENT.set(glad_debug_glNormal3i$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNormal3iv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNormal3iv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3IVPROC glad_glNormal3iv
     * }
     */
    public static AddressLayout glad_glNormal3iv$layout() {
        return glad_glNormal3iv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3IVPROC glad_glNormal3iv
     * }
     */
    public static MemorySegment glad_glNormal3iv$segment() {
        return glad_glNormal3iv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3IVPROC glad_glNormal3iv
     * }
     */
    public static MemorySegment glad_glNormal3iv() {
        return glad_glNormal3iv$constants.SEGMENT.get(glad_glNormal3iv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3IVPROC glad_glNormal3iv
     * }
     */
    public static void glad_glNormal3iv(MemorySegment varValue) {
        glad_glNormal3iv$constants.SEGMENT.set(glad_glNormal3iv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNormal3iv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNormal3iv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3IVPROC glad_debug_glNormal3iv
     * }
     */
    public static AddressLayout glad_debug_glNormal3iv$layout() {
        return glad_debug_glNormal3iv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3IVPROC glad_debug_glNormal3iv
     * }
     */
    public static MemorySegment glad_debug_glNormal3iv$segment() {
        return glad_debug_glNormal3iv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3IVPROC glad_debug_glNormal3iv
     * }
     */
    public static MemorySegment glad_debug_glNormal3iv() {
        return glad_debug_glNormal3iv$constants.SEGMENT.get(glad_debug_glNormal3iv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3IVPROC glad_debug_glNormal3iv
     * }
     */
    public static void glad_debug_glNormal3iv(MemorySegment varValue) {
        glad_debug_glNormal3iv$constants.SEGMENT.set(glad_debug_glNormal3iv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNormal3s$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNormal3s").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3SPROC glad_glNormal3s
     * }
     */
    public static AddressLayout glad_glNormal3s$layout() {
        return glad_glNormal3s$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3SPROC glad_glNormal3s
     * }
     */
    public static MemorySegment glad_glNormal3s$segment() {
        return glad_glNormal3s$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3SPROC glad_glNormal3s
     * }
     */
    public static MemorySegment glad_glNormal3s() {
        return glad_glNormal3s$constants.SEGMENT.get(glad_glNormal3s$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3SPROC glad_glNormal3s
     * }
     */
    public static void glad_glNormal3s(MemorySegment varValue) {
        glad_glNormal3s$constants.SEGMENT.set(glad_glNormal3s$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNormal3s$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNormal3s").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3SPROC glad_debug_glNormal3s
     * }
     */
    public static AddressLayout glad_debug_glNormal3s$layout() {
        return glad_debug_glNormal3s$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3SPROC glad_debug_glNormal3s
     * }
     */
    public static MemorySegment glad_debug_glNormal3s$segment() {
        return glad_debug_glNormal3s$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3SPROC glad_debug_glNormal3s
     * }
     */
    public static MemorySegment glad_debug_glNormal3s() {
        return glad_debug_glNormal3s$constants.SEGMENT.get(glad_debug_glNormal3s$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3SPROC glad_debug_glNormal3s
     * }
     */
    public static void glad_debug_glNormal3s(MemorySegment varValue) {
        glad_debug_glNormal3s$constants.SEGMENT.set(glad_debug_glNormal3s$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNormal3sv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNormal3sv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3SVPROC glad_glNormal3sv
     * }
     */
    public static AddressLayout glad_glNormal3sv$layout() {
        return glad_glNormal3sv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3SVPROC glad_glNormal3sv
     * }
     */
    public static MemorySegment glad_glNormal3sv$segment() {
        return glad_glNormal3sv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3SVPROC glad_glNormal3sv
     * }
     */
    public static MemorySegment glad_glNormal3sv() {
        return glad_glNormal3sv$constants.SEGMENT.get(glad_glNormal3sv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3SVPROC glad_glNormal3sv
     * }
     */
    public static void glad_glNormal3sv(MemorySegment varValue) {
        glad_glNormal3sv$constants.SEGMENT.set(glad_glNormal3sv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNormal3sv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNormal3sv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3SVPROC glad_debug_glNormal3sv
     * }
     */
    public static AddressLayout glad_debug_glNormal3sv$layout() {
        return glad_debug_glNormal3sv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3SVPROC glad_debug_glNormal3sv
     * }
     */
    public static MemorySegment glad_debug_glNormal3sv$segment() {
        return glad_debug_glNormal3sv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3SVPROC glad_debug_glNormal3sv
     * }
     */
    public static MemorySegment glad_debug_glNormal3sv() {
        return glad_debug_glNormal3sv$constants.SEGMENT.get(glad_debug_glNormal3sv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMAL3SVPROC glad_debug_glNormal3sv
     * }
     */
    public static void glad_debug_glNormal3sv(MemorySegment varValue) {
        glad_debug_glNormal3sv$constants.SEGMENT.set(glad_debug_glNormal3sv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNormalP3ui$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNormalP3ui").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMALP3UIPROC glad_glNormalP3ui
     * }
     */
    public static AddressLayout glad_glNormalP3ui$layout() {
        return glad_glNormalP3ui$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMALP3UIPROC glad_glNormalP3ui
     * }
     */
    public static MemorySegment glad_glNormalP3ui$segment() {
        return glad_glNormalP3ui$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMALP3UIPROC glad_glNormalP3ui
     * }
     */
    public static MemorySegment glad_glNormalP3ui() {
        return glad_glNormalP3ui$constants.SEGMENT.get(glad_glNormalP3ui$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMALP3UIPROC glad_glNormalP3ui
     * }
     */
    public static void glad_glNormalP3ui(MemorySegment varValue) {
        glad_glNormalP3ui$constants.SEGMENT.set(glad_glNormalP3ui$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNormalP3ui$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNormalP3ui").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMALP3UIPROC glad_debug_glNormalP3ui
     * }
     */
    public static AddressLayout glad_debug_glNormalP3ui$layout() {
        return glad_debug_glNormalP3ui$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMALP3UIPROC glad_debug_glNormalP3ui
     * }
     */
    public static MemorySegment glad_debug_glNormalP3ui$segment() {
        return glad_debug_glNormalP3ui$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMALP3UIPROC glad_debug_glNormalP3ui
     * }
     */
    public static MemorySegment glad_debug_glNormalP3ui() {
        return glad_debug_glNormalP3ui$constants.SEGMENT.get(glad_debug_glNormalP3ui$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMALP3UIPROC glad_debug_glNormalP3ui
     * }
     */
    public static void glad_debug_glNormalP3ui(MemorySegment varValue) {
        glad_debug_glNormalP3ui$constants.SEGMENT.set(glad_debug_glNormalP3ui$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNormalP3uiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNormalP3uiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMALP3UIVPROC glad_glNormalP3uiv
     * }
     */
    public static AddressLayout glad_glNormalP3uiv$layout() {
        return glad_glNormalP3uiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMALP3UIVPROC glad_glNormalP3uiv
     * }
     */
    public static MemorySegment glad_glNormalP3uiv$segment() {
        return glad_glNormalP3uiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMALP3UIVPROC glad_glNormalP3uiv
     * }
     */
    public static MemorySegment glad_glNormalP3uiv() {
        return glad_glNormalP3uiv$constants.SEGMENT.get(glad_glNormalP3uiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMALP3UIVPROC glad_glNormalP3uiv
     * }
     */
    public static void glad_glNormalP3uiv(MemorySegment varValue) {
        glad_glNormalP3uiv$constants.SEGMENT.set(glad_glNormalP3uiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNormalP3uiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNormalP3uiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMALP3UIVPROC glad_debug_glNormalP3uiv
     * }
     */
    public static AddressLayout glad_debug_glNormalP3uiv$layout() {
        return glad_debug_glNormalP3uiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMALP3UIVPROC glad_debug_glNormalP3uiv
     * }
     */
    public static MemorySegment glad_debug_glNormalP3uiv$segment() {
        return glad_debug_glNormalP3uiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMALP3UIVPROC glad_debug_glNormalP3uiv
     * }
     */
    public static MemorySegment glad_debug_glNormalP3uiv() {
        return glad_debug_glNormalP3uiv$constants.SEGMENT.get(glad_debug_glNormalP3uiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMALP3UIVPROC glad_debug_glNormalP3uiv
     * }
     */
    public static void glad_debug_glNormalP3uiv(MemorySegment varValue) {
        glad_debug_glNormalP3uiv$constants.SEGMENT.set(glad_debug_glNormalP3uiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNormalPointer$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNormalPointer").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMALPOINTERPROC glad_glNormalPointer
     * }
     */
    public static AddressLayout glad_glNormalPointer$layout() {
        return glad_glNormalPointer$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMALPOINTERPROC glad_glNormalPointer
     * }
     */
    public static MemorySegment glad_glNormalPointer$segment() {
        return glad_glNormalPointer$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMALPOINTERPROC glad_glNormalPointer
     * }
     */
    public static MemorySegment glad_glNormalPointer() {
        return glad_glNormalPointer$constants.SEGMENT.get(glad_glNormalPointer$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMALPOINTERPROC glad_glNormalPointer
     * }
     */
    public static void glad_glNormalPointer(MemorySegment varValue) {
        glad_glNormalPointer$constants.SEGMENT.set(glad_glNormalPointer$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNormalPointer$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNormalPointer").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMALPOINTERPROC glad_debug_glNormalPointer
     * }
     */
    public static AddressLayout glad_debug_glNormalPointer$layout() {
        return glad_debug_glNormalPointer$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMALPOINTERPROC glad_debug_glNormalPointer
     * }
     */
    public static MemorySegment glad_debug_glNormalPointer$segment() {
        return glad_debug_glNormalPointer$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMALPOINTERPROC glad_debug_glNormalPointer
     * }
     */
    public static MemorySegment glad_debug_glNormalPointer() {
        return glad_debug_glNormalPointer$constants.SEGMENT.get(glad_debug_glNormalPointer$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMALPOINTERPROC glad_debug_glNormalPointer
     * }
     */
    public static void glad_debug_glNormalPointer(MemorySegment varValue) {
        glad_debug_glNormalPointer$constants.SEGMENT.set(glad_debug_glNormalPointer$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glNormalPointerEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glNormalPointerEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMALPOINTEREXTPROC glad_glNormalPointerEXT
     * }
     */
    public static AddressLayout glad_glNormalPointerEXT$layout() {
        return glad_glNormalPointerEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMALPOINTEREXTPROC glad_glNormalPointerEXT
     * }
     */
    public static MemorySegment glad_glNormalPointerEXT$segment() {
        return glad_glNormalPointerEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMALPOINTEREXTPROC glad_glNormalPointerEXT
     * }
     */
    public static MemorySegment glad_glNormalPointerEXT() {
        return glad_glNormalPointerEXT$constants.SEGMENT.get(glad_glNormalPointerEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMALPOINTEREXTPROC glad_glNormalPointerEXT
     * }
     */
    public static void glad_glNormalPointerEXT(MemorySegment varValue) {
        glad_glNormalPointerEXT$constants.SEGMENT.set(glad_glNormalPointerEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glNormalPointerEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glNormalPointerEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMALPOINTEREXTPROC glad_debug_glNormalPointerEXT
     * }
     */
    public static AddressLayout glad_debug_glNormalPointerEXT$layout() {
        return glad_debug_glNormalPointerEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMALPOINTEREXTPROC glad_debug_glNormalPointerEXT
     * }
     */
    public static MemorySegment glad_debug_glNormalPointerEXT$segment() {
        return glad_debug_glNormalPointerEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMALPOINTEREXTPROC glad_debug_glNormalPointerEXT
     * }
     */
    public static MemorySegment glad_debug_glNormalPointerEXT() {
        return glad_debug_glNormalPointerEXT$constants.SEGMENT.get(glad_debug_glNormalPointerEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLNORMALPOINTEREXTPROC glad_debug_glNormalPointerEXT
     * }
     */
    public static void glad_debug_glNormalPointerEXT(MemorySegment varValue) {
        glad_debug_glNormalPointerEXT$constants.SEGMENT.set(glad_debug_glNormalPointerEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glObjectLabel$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glObjectLabel").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLOBJECTLABELPROC glad_glObjectLabel
     * }
     */
    public static AddressLayout glad_glObjectLabel$layout() {
        return glad_glObjectLabel$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLOBJECTLABELPROC glad_glObjectLabel
     * }
     */
    public static MemorySegment glad_glObjectLabel$segment() {
        return glad_glObjectLabel$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLOBJECTLABELPROC glad_glObjectLabel
     * }
     */
    public static MemorySegment glad_glObjectLabel() {
        return glad_glObjectLabel$constants.SEGMENT.get(glad_glObjectLabel$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLOBJECTLABELPROC glad_glObjectLabel
     * }
     */
    public static void glad_glObjectLabel(MemorySegment varValue) {
        glad_glObjectLabel$constants.SEGMENT.set(glad_glObjectLabel$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glObjectLabel$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glObjectLabel").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLOBJECTLABELPROC glad_debug_glObjectLabel
     * }
     */
    public static AddressLayout glad_debug_glObjectLabel$layout() {
        return glad_debug_glObjectLabel$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLOBJECTLABELPROC glad_debug_glObjectLabel
     * }
     */
    public static MemorySegment glad_debug_glObjectLabel$segment() {
        return glad_debug_glObjectLabel$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLOBJECTLABELPROC glad_debug_glObjectLabel
     * }
     */
    public static MemorySegment glad_debug_glObjectLabel() {
        return glad_debug_glObjectLabel$constants.SEGMENT.get(glad_debug_glObjectLabel$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLOBJECTLABELPROC glad_debug_glObjectLabel
     * }
     */
    public static void glad_debug_glObjectLabel(MemorySegment varValue) {
        glad_debug_glObjectLabel$constants.SEGMENT.set(glad_debug_glObjectLabel$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glObjectPtrLabel$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glObjectPtrLabel").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLOBJECTPTRLABELPROC glad_glObjectPtrLabel
     * }
     */
    public static AddressLayout glad_glObjectPtrLabel$layout() {
        return glad_glObjectPtrLabel$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLOBJECTPTRLABELPROC glad_glObjectPtrLabel
     * }
     */
    public static MemorySegment glad_glObjectPtrLabel$segment() {
        return glad_glObjectPtrLabel$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLOBJECTPTRLABELPROC glad_glObjectPtrLabel
     * }
     */
    public static MemorySegment glad_glObjectPtrLabel() {
        return glad_glObjectPtrLabel$constants.SEGMENT.get(glad_glObjectPtrLabel$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLOBJECTPTRLABELPROC glad_glObjectPtrLabel
     * }
     */
    public static void glad_glObjectPtrLabel(MemorySegment varValue) {
        glad_glObjectPtrLabel$constants.SEGMENT.set(glad_glObjectPtrLabel$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glObjectPtrLabel$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glObjectPtrLabel").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLOBJECTPTRLABELPROC glad_debug_glObjectPtrLabel
     * }
     */
    public static AddressLayout glad_debug_glObjectPtrLabel$layout() {
        return glad_debug_glObjectPtrLabel$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLOBJECTPTRLABELPROC glad_debug_glObjectPtrLabel
     * }
     */
    public static MemorySegment glad_debug_glObjectPtrLabel$segment() {
        return glad_debug_glObjectPtrLabel$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLOBJECTPTRLABELPROC glad_debug_glObjectPtrLabel
     * }
     */
    public static MemorySegment glad_debug_glObjectPtrLabel() {
        return glad_debug_glObjectPtrLabel$constants.SEGMENT.get(glad_debug_glObjectPtrLabel$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLOBJECTPTRLABELPROC glad_debug_glObjectPtrLabel
     * }
     */
    public static void glad_debug_glObjectPtrLabel(MemorySegment varValue) {
        glad_debug_glObjectPtrLabel$constants.SEGMENT.set(glad_debug_glObjectPtrLabel$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glOrtho$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glOrtho").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLORTHOPROC glad_glOrtho
     * }
     */
    public static AddressLayout glad_glOrtho$layout() {
        return glad_glOrtho$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLORTHOPROC glad_glOrtho
     * }
     */
    public static MemorySegment glad_glOrtho$segment() {
        return glad_glOrtho$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLORTHOPROC glad_glOrtho
     * }
     */
    public static MemorySegment glad_glOrtho() {
        return glad_glOrtho$constants.SEGMENT.get(glad_glOrtho$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLORTHOPROC glad_glOrtho
     * }
     */
    public static void glad_glOrtho(MemorySegment varValue) {
        glad_glOrtho$constants.SEGMENT.set(glad_glOrtho$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glOrtho$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glOrtho").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLORTHOPROC glad_debug_glOrtho
     * }
     */
    public static AddressLayout glad_debug_glOrtho$layout() {
        return glad_debug_glOrtho$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLORTHOPROC glad_debug_glOrtho
     * }
     */
    public static MemorySegment glad_debug_glOrtho$segment() {
        return glad_debug_glOrtho$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLORTHOPROC glad_debug_glOrtho
     * }
     */
    public static MemorySegment glad_debug_glOrtho() {
        return glad_debug_glOrtho$constants.SEGMENT.get(glad_debug_glOrtho$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLORTHOPROC glad_debug_glOrtho
     * }
     */
    public static void glad_debug_glOrtho(MemorySegment varValue) {
        glad_debug_glOrtho$constants.SEGMENT.set(glad_debug_glOrtho$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glOrthofOES$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glOrthofOES").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLORTHOFOESPROC glad_glOrthofOES
     * }
     */
    public static AddressLayout glad_glOrthofOES$layout() {
        return glad_glOrthofOES$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLORTHOFOESPROC glad_glOrthofOES
     * }
     */
    public static MemorySegment glad_glOrthofOES$segment() {
        return glad_glOrthofOES$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLORTHOFOESPROC glad_glOrthofOES
     * }
     */
    public static MemorySegment glad_glOrthofOES() {
        return glad_glOrthofOES$constants.SEGMENT.get(glad_glOrthofOES$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLORTHOFOESPROC glad_glOrthofOES
     * }
     */
    public static void glad_glOrthofOES(MemorySegment varValue) {
        glad_glOrthofOES$constants.SEGMENT.set(glad_glOrthofOES$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glOrthofOES$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glOrthofOES").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLORTHOFOESPROC glad_debug_glOrthofOES
     * }
     */
    public static AddressLayout glad_debug_glOrthofOES$layout() {
        return glad_debug_glOrthofOES$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLORTHOFOESPROC glad_debug_glOrthofOES
     * }
     */
    public static MemorySegment glad_debug_glOrthofOES$segment() {
        return glad_debug_glOrthofOES$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLORTHOFOESPROC glad_debug_glOrthofOES
     * }
     */
    public static MemorySegment glad_debug_glOrthofOES() {
        return glad_debug_glOrthofOES$constants.SEGMENT.get(glad_debug_glOrthofOES$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLORTHOFOESPROC glad_debug_glOrthofOES
     * }
     */
    public static void glad_debug_glOrthofOES(MemorySegment varValue) {
        glad_debug_glOrthofOES$constants.SEGMENT.set(glad_debug_glOrthofOES$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glPassThrough$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glPassThrough").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPASSTHROUGHPROC glad_glPassThrough
     * }
     */
    public static AddressLayout glad_glPassThrough$layout() {
        return glad_glPassThrough$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPASSTHROUGHPROC glad_glPassThrough
     * }
     */
    public static MemorySegment glad_glPassThrough$segment() {
        return glad_glPassThrough$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPASSTHROUGHPROC glad_glPassThrough
     * }
     */
    public static MemorySegment glad_glPassThrough() {
        return glad_glPassThrough$constants.SEGMENT.get(glad_glPassThrough$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPASSTHROUGHPROC glad_glPassThrough
     * }
     */
    public static void glad_glPassThrough(MemorySegment varValue) {
        glad_glPassThrough$constants.SEGMENT.set(glad_glPassThrough$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glPassThrough$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glPassThrough").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPASSTHROUGHPROC glad_debug_glPassThrough
     * }
     */
    public static AddressLayout glad_debug_glPassThrough$layout() {
        return glad_debug_glPassThrough$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPASSTHROUGHPROC glad_debug_glPassThrough
     * }
     */
    public static MemorySegment glad_debug_glPassThrough$segment() {
        return glad_debug_glPassThrough$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPASSTHROUGHPROC glad_debug_glPassThrough
     * }
     */
    public static MemorySegment glad_debug_glPassThrough() {
        return glad_debug_glPassThrough$constants.SEGMENT.get(glad_debug_glPassThrough$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPASSTHROUGHPROC glad_debug_glPassThrough
     * }
     */
    public static void glad_debug_glPassThrough(MemorySegment varValue) {
        glad_debug_glPassThrough$constants.SEGMENT.set(glad_debug_glPassThrough$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glPatchParameterfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glPatchParameterfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPATCHPARAMETERFVPROC glad_glPatchParameterfv
     * }
     */
    public static AddressLayout glad_glPatchParameterfv$layout() {
        return glad_glPatchParameterfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPATCHPARAMETERFVPROC glad_glPatchParameterfv
     * }
     */
    public static MemorySegment glad_glPatchParameterfv$segment() {
        return glad_glPatchParameterfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPATCHPARAMETERFVPROC glad_glPatchParameterfv
     * }
     */
    public static MemorySegment glad_glPatchParameterfv() {
        return glad_glPatchParameterfv$constants.SEGMENT.get(glad_glPatchParameterfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPATCHPARAMETERFVPROC glad_glPatchParameterfv
     * }
     */
    public static void glad_glPatchParameterfv(MemorySegment varValue) {
        glad_glPatchParameterfv$constants.SEGMENT.set(glad_glPatchParameterfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glPatchParameterfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glPatchParameterfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPATCHPARAMETERFVPROC glad_debug_glPatchParameterfv
     * }
     */
    public static AddressLayout glad_debug_glPatchParameterfv$layout() {
        return glad_debug_glPatchParameterfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPATCHPARAMETERFVPROC glad_debug_glPatchParameterfv
     * }
     */
    public static MemorySegment glad_debug_glPatchParameterfv$segment() {
        return glad_debug_glPatchParameterfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPATCHPARAMETERFVPROC glad_debug_glPatchParameterfv
     * }
     */
    public static MemorySegment glad_debug_glPatchParameterfv() {
        return glad_debug_glPatchParameterfv$constants.SEGMENT.get(glad_debug_glPatchParameterfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPATCHPARAMETERFVPROC glad_debug_glPatchParameterfv
     * }
     */
    public static void glad_debug_glPatchParameterfv(MemorySegment varValue) {
        glad_debug_glPatchParameterfv$constants.SEGMENT.set(glad_debug_glPatchParameterfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glPatchParameteri$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glPatchParameteri").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPATCHPARAMETERIPROC glad_glPatchParameteri
     * }
     */
    public static AddressLayout glad_glPatchParameteri$layout() {
        return glad_glPatchParameteri$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPATCHPARAMETERIPROC glad_glPatchParameteri
     * }
     */
    public static MemorySegment glad_glPatchParameteri$segment() {
        return glad_glPatchParameteri$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPATCHPARAMETERIPROC glad_glPatchParameteri
     * }
     */
    public static MemorySegment glad_glPatchParameteri() {
        return glad_glPatchParameteri$constants.SEGMENT.get(glad_glPatchParameteri$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPATCHPARAMETERIPROC glad_glPatchParameteri
     * }
     */
    public static void glad_glPatchParameteri(MemorySegment varValue) {
        glad_glPatchParameteri$constants.SEGMENT.set(glad_glPatchParameteri$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glPatchParameteri$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glPatchParameteri").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPATCHPARAMETERIPROC glad_debug_glPatchParameteri
     * }
     */
    public static AddressLayout glad_debug_glPatchParameteri$layout() {
        return glad_debug_glPatchParameteri$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPATCHPARAMETERIPROC glad_debug_glPatchParameteri
     * }
     */
    public static MemorySegment glad_debug_glPatchParameteri$segment() {
        return glad_debug_glPatchParameteri$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPATCHPARAMETERIPROC glad_debug_glPatchParameteri
     * }
     */
    public static MemorySegment glad_debug_glPatchParameteri() {
        return glad_debug_glPatchParameteri$constants.SEGMENT.get(glad_debug_glPatchParameteri$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPATCHPARAMETERIPROC glad_debug_glPatchParameteri
     * }
     */
    public static void glad_debug_glPatchParameteri(MemorySegment varValue) {
        glad_debug_glPatchParameteri$constants.SEGMENT.set(glad_debug_glPatchParameteri$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glPauseTransformFeedback$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glPauseTransformFeedback").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPAUSETRANSFORMFEEDBACKPROC glad_glPauseTransformFeedback
     * }
     */
    public static AddressLayout glad_glPauseTransformFeedback$layout() {
        return glad_glPauseTransformFeedback$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPAUSETRANSFORMFEEDBACKPROC glad_glPauseTransformFeedback
     * }
     */
    public static MemorySegment glad_glPauseTransformFeedback$segment() {
        return glad_glPauseTransformFeedback$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPAUSETRANSFORMFEEDBACKPROC glad_glPauseTransformFeedback
     * }
     */
    public static MemorySegment glad_glPauseTransformFeedback() {
        return glad_glPauseTransformFeedback$constants.SEGMENT.get(glad_glPauseTransformFeedback$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPAUSETRANSFORMFEEDBACKPROC glad_glPauseTransformFeedback
     * }
     */
    public static void glad_glPauseTransformFeedback(MemorySegment varValue) {
        glad_glPauseTransformFeedback$constants.SEGMENT.set(glad_glPauseTransformFeedback$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glPauseTransformFeedback$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glPauseTransformFeedback").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPAUSETRANSFORMFEEDBACKPROC glad_debug_glPauseTransformFeedback
     * }
     */
    public static AddressLayout glad_debug_glPauseTransformFeedback$layout() {
        return glad_debug_glPauseTransformFeedback$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPAUSETRANSFORMFEEDBACKPROC glad_debug_glPauseTransformFeedback
     * }
     */
    public static MemorySegment glad_debug_glPauseTransformFeedback$segment() {
        return glad_debug_glPauseTransformFeedback$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPAUSETRANSFORMFEEDBACKPROC glad_debug_glPauseTransformFeedback
     * }
     */
    public static MemorySegment glad_debug_glPauseTransformFeedback() {
        return glad_debug_glPauseTransformFeedback$constants.SEGMENT.get(glad_debug_glPauseTransformFeedback$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPAUSETRANSFORMFEEDBACKPROC glad_debug_glPauseTransformFeedback
     * }
     */
    public static void glad_debug_glPauseTransformFeedback(MemorySegment varValue) {
        glad_debug_glPauseTransformFeedback$constants.SEGMENT.set(glad_debug_glPauseTransformFeedback$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glPauseTransformFeedbackNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glPauseTransformFeedbackNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPAUSETRANSFORMFEEDBACKNVPROC glad_glPauseTransformFeedbackNV
     * }
     */
    public static AddressLayout glad_glPauseTransformFeedbackNV$layout() {
        return glad_glPauseTransformFeedbackNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPAUSETRANSFORMFEEDBACKNVPROC glad_glPauseTransformFeedbackNV
     * }
     */
    public static MemorySegment glad_glPauseTransformFeedbackNV$segment() {
        return glad_glPauseTransformFeedbackNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPAUSETRANSFORMFEEDBACKNVPROC glad_glPauseTransformFeedbackNV
     * }
     */
    public static MemorySegment glad_glPauseTransformFeedbackNV() {
        return glad_glPauseTransformFeedbackNV$constants.SEGMENT.get(glad_glPauseTransformFeedbackNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPAUSETRANSFORMFEEDBACKNVPROC glad_glPauseTransformFeedbackNV
     * }
     */
    public static void glad_glPauseTransformFeedbackNV(MemorySegment varValue) {
        glad_glPauseTransformFeedbackNV$constants.SEGMENT.set(glad_glPauseTransformFeedbackNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glPauseTransformFeedbackNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glPauseTransformFeedbackNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPAUSETRANSFORMFEEDBACKNVPROC glad_debug_glPauseTransformFeedbackNV
     * }
     */
    public static AddressLayout glad_debug_glPauseTransformFeedbackNV$layout() {
        return glad_debug_glPauseTransformFeedbackNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPAUSETRANSFORMFEEDBACKNVPROC glad_debug_glPauseTransformFeedbackNV
     * }
     */
    public static MemorySegment glad_debug_glPauseTransformFeedbackNV$segment() {
        return glad_debug_glPauseTransformFeedbackNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPAUSETRANSFORMFEEDBACKNVPROC glad_debug_glPauseTransformFeedbackNV
     * }
     */
    public static MemorySegment glad_debug_glPauseTransformFeedbackNV() {
        return glad_debug_glPauseTransformFeedbackNV$constants.SEGMENT.get(glad_debug_glPauseTransformFeedbackNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPAUSETRANSFORMFEEDBACKNVPROC glad_debug_glPauseTransformFeedbackNV
     * }
     */
    public static void glad_debug_glPauseTransformFeedbackNV(MemorySegment varValue) {
        glad_debug_glPauseTransformFeedbackNV$constants.SEGMENT.set(glad_debug_glPauseTransformFeedbackNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glPixelMapfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glPixelMapfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELMAPFVPROC glad_glPixelMapfv
     * }
     */
    public static AddressLayout glad_glPixelMapfv$layout() {
        return glad_glPixelMapfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELMAPFVPROC glad_glPixelMapfv
     * }
     */
    public static MemorySegment glad_glPixelMapfv$segment() {
        return glad_glPixelMapfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELMAPFVPROC glad_glPixelMapfv
     * }
     */
    public static MemorySegment glad_glPixelMapfv() {
        return glad_glPixelMapfv$constants.SEGMENT.get(glad_glPixelMapfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELMAPFVPROC glad_glPixelMapfv
     * }
     */
    public static void glad_glPixelMapfv(MemorySegment varValue) {
        glad_glPixelMapfv$constants.SEGMENT.set(glad_glPixelMapfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glPixelMapfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glPixelMapfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELMAPFVPROC glad_debug_glPixelMapfv
     * }
     */
    public static AddressLayout glad_debug_glPixelMapfv$layout() {
        return glad_debug_glPixelMapfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELMAPFVPROC glad_debug_glPixelMapfv
     * }
     */
    public static MemorySegment glad_debug_glPixelMapfv$segment() {
        return glad_debug_glPixelMapfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELMAPFVPROC glad_debug_glPixelMapfv
     * }
     */
    public static MemorySegment glad_debug_glPixelMapfv() {
        return glad_debug_glPixelMapfv$constants.SEGMENT.get(glad_debug_glPixelMapfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELMAPFVPROC glad_debug_glPixelMapfv
     * }
     */
    public static void glad_debug_glPixelMapfv(MemorySegment varValue) {
        glad_debug_glPixelMapfv$constants.SEGMENT.set(glad_debug_glPixelMapfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glPixelMapuiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glPixelMapuiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELMAPUIVPROC glad_glPixelMapuiv
     * }
     */
    public static AddressLayout glad_glPixelMapuiv$layout() {
        return glad_glPixelMapuiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELMAPUIVPROC glad_glPixelMapuiv
     * }
     */
    public static MemorySegment glad_glPixelMapuiv$segment() {
        return glad_glPixelMapuiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELMAPUIVPROC glad_glPixelMapuiv
     * }
     */
    public static MemorySegment glad_glPixelMapuiv() {
        return glad_glPixelMapuiv$constants.SEGMENT.get(glad_glPixelMapuiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELMAPUIVPROC glad_glPixelMapuiv
     * }
     */
    public static void glad_glPixelMapuiv(MemorySegment varValue) {
        glad_glPixelMapuiv$constants.SEGMENT.set(glad_glPixelMapuiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glPixelMapuiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glPixelMapuiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELMAPUIVPROC glad_debug_glPixelMapuiv
     * }
     */
    public static AddressLayout glad_debug_glPixelMapuiv$layout() {
        return glad_debug_glPixelMapuiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELMAPUIVPROC glad_debug_glPixelMapuiv
     * }
     */
    public static MemorySegment glad_debug_glPixelMapuiv$segment() {
        return glad_debug_glPixelMapuiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELMAPUIVPROC glad_debug_glPixelMapuiv
     * }
     */
    public static MemorySegment glad_debug_glPixelMapuiv() {
        return glad_debug_glPixelMapuiv$constants.SEGMENT.get(glad_debug_glPixelMapuiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELMAPUIVPROC glad_debug_glPixelMapuiv
     * }
     */
    public static void glad_debug_glPixelMapuiv(MemorySegment varValue) {
        glad_debug_glPixelMapuiv$constants.SEGMENT.set(glad_debug_glPixelMapuiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glPixelMapusv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glPixelMapusv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELMAPUSVPROC glad_glPixelMapusv
     * }
     */
    public static AddressLayout glad_glPixelMapusv$layout() {
        return glad_glPixelMapusv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELMAPUSVPROC glad_glPixelMapusv
     * }
     */
    public static MemorySegment glad_glPixelMapusv$segment() {
        return glad_glPixelMapusv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELMAPUSVPROC glad_glPixelMapusv
     * }
     */
    public static MemorySegment glad_glPixelMapusv() {
        return glad_glPixelMapusv$constants.SEGMENT.get(glad_glPixelMapusv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELMAPUSVPROC glad_glPixelMapusv
     * }
     */
    public static void glad_glPixelMapusv(MemorySegment varValue) {
        glad_glPixelMapusv$constants.SEGMENT.set(glad_glPixelMapusv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glPixelMapusv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glPixelMapusv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELMAPUSVPROC glad_debug_glPixelMapusv
     * }
     */
    public static AddressLayout glad_debug_glPixelMapusv$layout() {
        return glad_debug_glPixelMapusv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELMAPUSVPROC glad_debug_glPixelMapusv
     * }
     */
    public static MemorySegment glad_debug_glPixelMapusv$segment() {
        return glad_debug_glPixelMapusv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELMAPUSVPROC glad_debug_glPixelMapusv
     * }
     */
    public static MemorySegment glad_debug_glPixelMapusv() {
        return glad_debug_glPixelMapusv$constants.SEGMENT.get(glad_debug_glPixelMapusv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELMAPUSVPROC glad_debug_glPixelMapusv
     * }
     */
    public static void glad_debug_glPixelMapusv(MemorySegment varValue) {
        glad_debug_glPixelMapusv$constants.SEGMENT.set(glad_debug_glPixelMapusv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glPixelStoref$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glPixelStoref").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELSTOREFPROC glad_glPixelStoref
     * }
     */
    public static AddressLayout glad_glPixelStoref$layout() {
        return glad_glPixelStoref$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELSTOREFPROC glad_glPixelStoref
     * }
     */
    public static MemorySegment glad_glPixelStoref$segment() {
        return glad_glPixelStoref$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELSTOREFPROC glad_glPixelStoref
     * }
     */
    public static MemorySegment glad_glPixelStoref() {
        return glad_glPixelStoref$constants.SEGMENT.get(glad_glPixelStoref$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELSTOREFPROC glad_glPixelStoref
     * }
     */
    public static void glad_glPixelStoref(MemorySegment varValue) {
        glad_glPixelStoref$constants.SEGMENT.set(glad_glPixelStoref$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glPixelStoref$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glPixelStoref").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELSTOREFPROC glad_debug_glPixelStoref
     * }
     */
    public static AddressLayout glad_debug_glPixelStoref$layout() {
        return glad_debug_glPixelStoref$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELSTOREFPROC glad_debug_glPixelStoref
     * }
     */
    public static MemorySegment glad_debug_glPixelStoref$segment() {
        return glad_debug_glPixelStoref$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELSTOREFPROC glad_debug_glPixelStoref
     * }
     */
    public static MemorySegment glad_debug_glPixelStoref() {
        return glad_debug_glPixelStoref$constants.SEGMENT.get(glad_debug_glPixelStoref$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELSTOREFPROC glad_debug_glPixelStoref
     * }
     */
    public static void glad_debug_glPixelStoref(MemorySegment varValue) {
        glad_debug_glPixelStoref$constants.SEGMENT.set(glad_debug_glPixelStoref$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glPixelStorei$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glPixelStorei").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELSTOREIPROC glad_glPixelStorei
     * }
     */
    public static AddressLayout glad_glPixelStorei$layout() {
        return glad_glPixelStorei$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELSTOREIPROC glad_glPixelStorei
     * }
     */
    public static MemorySegment glad_glPixelStorei$segment() {
        return glad_glPixelStorei$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELSTOREIPROC glad_glPixelStorei
     * }
     */
    public static MemorySegment glad_glPixelStorei() {
        return glad_glPixelStorei$constants.SEGMENT.get(glad_glPixelStorei$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELSTOREIPROC glad_glPixelStorei
     * }
     */
    public static void glad_glPixelStorei(MemorySegment varValue) {
        glad_glPixelStorei$constants.SEGMENT.set(glad_glPixelStorei$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glPixelStorei$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glPixelStorei").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELSTOREIPROC glad_debug_glPixelStorei
     * }
     */
    public static AddressLayout glad_debug_glPixelStorei$layout() {
        return glad_debug_glPixelStorei$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELSTOREIPROC glad_debug_glPixelStorei
     * }
     */
    public static MemorySegment glad_debug_glPixelStorei$segment() {
        return glad_debug_glPixelStorei$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELSTOREIPROC glad_debug_glPixelStorei
     * }
     */
    public static MemorySegment glad_debug_glPixelStorei() {
        return glad_debug_glPixelStorei$constants.SEGMENT.get(glad_debug_glPixelStorei$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELSTOREIPROC glad_debug_glPixelStorei
     * }
     */
    public static void glad_debug_glPixelStorei(MemorySegment varValue) {
        glad_debug_glPixelStorei$constants.SEGMENT.set(glad_debug_glPixelStorei$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glPixelTransferf$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glPixelTransferf").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELTRANSFERFPROC glad_glPixelTransferf
     * }
     */
    public static AddressLayout glad_glPixelTransferf$layout() {
        return glad_glPixelTransferf$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELTRANSFERFPROC glad_glPixelTransferf
     * }
     */
    public static MemorySegment glad_glPixelTransferf$segment() {
        return glad_glPixelTransferf$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELTRANSFERFPROC glad_glPixelTransferf
     * }
     */
    public static MemorySegment glad_glPixelTransferf() {
        return glad_glPixelTransferf$constants.SEGMENT.get(glad_glPixelTransferf$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELTRANSFERFPROC glad_glPixelTransferf
     * }
     */
    public static void glad_glPixelTransferf(MemorySegment varValue) {
        glad_glPixelTransferf$constants.SEGMENT.set(glad_glPixelTransferf$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glPixelTransferf$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glPixelTransferf").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELTRANSFERFPROC glad_debug_glPixelTransferf
     * }
     */
    public static AddressLayout glad_debug_glPixelTransferf$layout() {
        return glad_debug_glPixelTransferf$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELTRANSFERFPROC glad_debug_glPixelTransferf
     * }
     */
    public static MemorySegment glad_debug_glPixelTransferf$segment() {
        return glad_debug_glPixelTransferf$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELTRANSFERFPROC glad_debug_glPixelTransferf
     * }
     */
    public static MemorySegment glad_debug_glPixelTransferf() {
        return glad_debug_glPixelTransferf$constants.SEGMENT.get(glad_debug_glPixelTransferf$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELTRANSFERFPROC glad_debug_glPixelTransferf
     * }
     */
    public static void glad_debug_glPixelTransferf(MemorySegment varValue) {
        glad_debug_glPixelTransferf$constants.SEGMENT.set(glad_debug_glPixelTransferf$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glPixelTransferi$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glPixelTransferi").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELTRANSFERIPROC glad_glPixelTransferi
     * }
     */
    public static AddressLayout glad_glPixelTransferi$layout() {
        return glad_glPixelTransferi$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELTRANSFERIPROC glad_glPixelTransferi
     * }
     */
    public static MemorySegment glad_glPixelTransferi$segment() {
        return glad_glPixelTransferi$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELTRANSFERIPROC glad_glPixelTransferi
     * }
     */
    public static MemorySegment glad_glPixelTransferi() {
        return glad_glPixelTransferi$constants.SEGMENT.get(glad_glPixelTransferi$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELTRANSFERIPROC glad_glPixelTransferi
     * }
     */
    public static void glad_glPixelTransferi(MemorySegment varValue) {
        glad_glPixelTransferi$constants.SEGMENT.set(glad_glPixelTransferi$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glPixelTransferi$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glPixelTransferi").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELTRANSFERIPROC glad_debug_glPixelTransferi
     * }
     */
    public static AddressLayout glad_debug_glPixelTransferi$layout() {
        return glad_debug_glPixelTransferi$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELTRANSFERIPROC glad_debug_glPixelTransferi
     * }
     */
    public static MemorySegment glad_debug_glPixelTransferi$segment() {
        return glad_debug_glPixelTransferi$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELTRANSFERIPROC glad_debug_glPixelTransferi
     * }
     */
    public static MemorySegment glad_debug_glPixelTransferi() {
        return glad_debug_glPixelTransferi$constants.SEGMENT.get(glad_debug_glPixelTransferi$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELTRANSFERIPROC glad_debug_glPixelTransferi
     * }
     */
    public static void glad_debug_glPixelTransferi(MemorySegment varValue) {
        glad_debug_glPixelTransferi$constants.SEGMENT.set(glad_debug_glPixelTransferi$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glPixelZoom$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glPixelZoom").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELZOOMPROC glad_glPixelZoom
     * }
     */
    public static AddressLayout glad_glPixelZoom$layout() {
        return glad_glPixelZoom$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELZOOMPROC glad_glPixelZoom
     * }
     */
    public static MemorySegment glad_glPixelZoom$segment() {
        return glad_glPixelZoom$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELZOOMPROC glad_glPixelZoom
     * }
     */
    public static MemorySegment glad_glPixelZoom() {
        return glad_glPixelZoom$constants.SEGMENT.get(glad_glPixelZoom$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELZOOMPROC glad_glPixelZoom
     * }
     */
    public static void glad_glPixelZoom(MemorySegment varValue) {
        glad_glPixelZoom$constants.SEGMENT.set(glad_glPixelZoom$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glPixelZoom$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glPixelZoom").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELZOOMPROC glad_debug_glPixelZoom
     * }
     */
    public static AddressLayout glad_debug_glPixelZoom$layout() {
        return glad_debug_glPixelZoom$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELZOOMPROC glad_debug_glPixelZoom
     * }
     */
    public static MemorySegment glad_debug_glPixelZoom$segment() {
        return glad_debug_glPixelZoom$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELZOOMPROC glad_debug_glPixelZoom
     * }
     */
    public static MemorySegment glad_debug_glPixelZoom() {
        return glad_debug_glPixelZoom$constants.SEGMENT.get(glad_debug_glPixelZoom$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPIXELZOOMPROC glad_debug_glPixelZoom
     * }
     */
    public static void glad_debug_glPixelZoom(MemorySegment varValue) {
        glad_debug_glPixelZoom$constants.SEGMENT.set(glad_debug_glPixelZoom$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glPointParameterf$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glPointParameterf").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFPROC glad_glPointParameterf
     * }
     */
    public static AddressLayout glad_glPointParameterf$layout() {
        return glad_glPointParameterf$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFPROC glad_glPointParameterf
     * }
     */
    public static MemorySegment glad_glPointParameterf$segment() {
        return glad_glPointParameterf$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFPROC glad_glPointParameterf
     * }
     */
    public static MemorySegment glad_glPointParameterf() {
        return glad_glPointParameterf$constants.SEGMENT.get(glad_glPointParameterf$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFPROC glad_glPointParameterf
     * }
     */
    public static void glad_glPointParameterf(MemorySegment varValue) {
        glad_glPointParameterf$constants.SEGMENT.set(glad_glPointParameterf$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glPointParameterf$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glPointParameterf").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFPROC glad_debug_glPointParameterf
     * }
     */
    public static AddressLayout glad_debug_glPointParameterf$layout() {
        return glad_debug_glPointParameterf$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFPROC glad_debug_glPointParameterf
     * }
     */
    public static MemorySegment glad_debug_glPointParameterf$segment() {
        return glad_debug_glPointParameterf$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFPROC glad_debug_glPointParameterf
     * }
     */
    public static MemorySegment glad_debug_glPointParameterf() {
        return glad_debug_glPointParameterf$constants.SEGMENT.get(glad_debug_glPointParameterf$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFPROC glad_debug_glPointParameterf
     * }
     */
    public static void glad_debug_glPointParameterf(MemorySegment varValue) {
        glad_debug_glPointParameterf$constants.SEGMENT.set(glad_debug_glPointParameterf$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glPointParameterfARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glPointParameterfARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFARBPROC glad_glPointParameterfARB
     * }
     */
    public static AddressLayout glad_glPointParameterfARB$layout() {
        return glad_glPointParameterfARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFARBPROC glad_glPointParameterfARB
     * }
     */
    public static MemorySegment glad_glPointParameterfARB$segment() {
        return glad_glPointParameterfARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFARBPROC glad_glPointParameterfARB
     * }
     */
    public static MemorySegment glad_glPointParameterfARB() {
        return glad_glPointParameterfARB$constants.SEGMENT.get(glad_glPointParameterfARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFARBPROC glad_glPointParameterfARB
     * }
     */
    public static void glad_glPointParameterfARB(MemorySegment varValue) {
        glad_glPointParameterfARB$constants.SEGMENT.set(glad_glPointParameterfARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glPointParameterfARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glPointParameterfARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFARBPROC glad_debug_glPointParameterfARB
     * }
     */
    public static AddressLayout glad_debug_glPointParameterfARB$layout() {
        return glad_debug_glPointParameterfARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFARBPROC glad_debug_glPointParameterfARB
     * }
     */
    public static MemorySegment glad_debug_glPointParameterfARB$segment() {
        return glad_debug_glPointParameterfARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFARBPROC glad_debug_glPointParameterfARB
     * }
     */
    public static MemorySegment glad_debug_glPointParameterfARB() {
        return glad_debug_glPointParameterfARB$constants.SEGMENT.get(glad_debug_glPointParameterfARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFARBPROC glad_debug_glPointParameterfARB
     * }
     */
    public static void glad_debug_glPointParameterfARB(MemorySegment varValue) {
        glad_debug_glPointParameterfARB$constants.SEGMENT.set(glad_debug_glPointParameterfARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glPointParameterfEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glPointParameterfEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFEXTPROC glad_glPointParameterfEXT
     * }
     */
    public static AddressLayout glad_glPointParameterfEXT$layout() {
        return glad_glPointParameterfEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFEXTPROC glad_glPointParameterfEXT
     * }
     */
    public static MemorySegment glad_glPointParameterfEXT$segment() {
        return glad_glPointParameterfEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFEXTPROC glad_glPointParameterfEXT
     * }
     */
    public static MemorySegment glad_glPointParameterfEXT() {
        return glad_glPointParameterfEXT$constants.SEGMENT.get(glad_glPointParameterfEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFEXTPROC glad_glPointParameterfEXT
     * }
     */
    public static void glad_glPointParameterfEXT(MemorySegment varValue) {
        glad_glPointParameterfEXT$constants.SEGMENT.set(glad_glPointParameterfEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glPointParameterfEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glPointParameterfEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFEXTPROC glad_debug_glPointParameterfEXT
     * }
     */
    public static AddressLayout glad_debug_glPointParameterfEXT$layout() {
        return glad_debug_glPointParameterfEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFEXTPROC glad_debug_glPointParameterfEXT
     * }
     */
    public static MemorySegment glad_debug_glPointParameterfEXT$segment() {
        return glad_debug_glPointParameterfEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFEXTPROC glad_debug_glPointParameterfEXT
     * }
     */
    public static MemorySegment glad_debug_glPointParameterfEXT() {
        return glad_debug_glPointParameterfEXT$constants.SEGMENT.get(glad_debug_glPointParameterfEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFEXTPROC glad_debug_glPointParameterfEXT
     * }
     */
    public static void glad_debug_glPointParameterfEXT(MemorySegment varValue) {
        glad_debug_glPointParameterfEXT$constants.SEGMENT.set(glad_debug_glPointParameterfEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glPointParameterfSGIS$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glPointParameterfSGIS").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFSGISPROC glad_glPointParameterfSGIS
     * }
     */
    public static AddressLayout glad_glPointParameterfSGIS$layout() {
        return glad_glPointParameterfSGIS$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFSGISPROC glad_glPointParameterfSGIS
     * }
     */
    public static MemorySegment glad_glPointParameterfSGIS$segment() {
        return glad_glPointParameterfSGIS$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFSGISPROC glad_glPointParameterfSGIS
     * }
     */
    public static MemorySegment glad_glPointParameterfSGIS() {
        return glad_glPointParameterfSGIS$constants.SEGMENT.get(glad_glPointParameterfSGIS$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFSGISPROC glad_glPointParameterfSGIS
     * }
     */
    public static void glad_glPointParameterfSGIS(MemorySegment varValue) {
        glad_glPointParameterfSGIS$constants.SEGMENT.set(glad_glPointParameterfSGIS$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glPointParameterfSGIS$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glPointParameterfSGIS").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFSGISPROC glad_debug_glPointParameterfSGIS
     * }
     */
    public static AddressLayout glad_debug_glPointParameterfSGIS$layout() {
        return glad_debug_glPointParameterfSGIS$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFSGISPROC glad_debug_glPointParameterfSGIS
     * }
     */
    public static MemorySegment glad_debug_glPointParameterfSGIS$segment() {
        return glad_debug_glPointParameterfSGIS$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFSGISPROC glad_debug_glPointParameterfSGIS
     * }
     */
    public static MemorySegment glad_debug_glPointParameterfSGIS() {
        return glad_debug_glPointParameterfSGIS$constants.SEGMENT.get(glad_debug_glPointParameterfSGIS$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFSGISPROC glad_debug_glPointParameterfSGIS
     * }
     */
    public static void glad_debug_glPointParameterfSGIS(MemorySegment varValue) {
        glad_debug_glPointParameterfSGIS$constants.SEGMENT.set(glad_debug_glPointParameterfSGIS$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glPointParameterfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glPointParameterfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFVPROC glad_glPointParameterfv
     * }
     */
    public static AddressLayout glad_glPointParameterfv$layout() {
        return glad_glPointParameterfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFVPROC glad_glPointParameterfv
     * }
     */
    public static MemorySegment glad_glPointParameterfv$segment() {
        return glad_glPointParameterfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFVPROC glad_glPointParameterfv
     * }
     */
    public static MemorySegment glad_glPointParameterfv() {
        return glad_glPointParameterfv$constants.SEGMENT.get(glad_glPointParameterfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFVPROC glad_glPointParameterfv
     * }
     */
    public static void glad_glPointParameterfv(MemorySegment varValue) {
        glad_glPointParameterfv$constants.SEGMENT.set(glad_glPointParameterfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glPointParameterfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glPointParameterfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFVPROC glad_debug_glPointParameterfv
     * }
     */
    public static AddressLayout glad_debug_glPointParameterfv$layout() {
        return glad_debug_glPointParameterfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFVPROC glad_debug_glPointParameterfv
     * }
     */
    public static MemorySegment glad_debug_glPointParameterfv$segment() {
        return glad_debug_glPointParameterfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFVPROC glad_debug_glPointParameterfv
     * }
     */
    public static MemorySegment glad_debug_glPointParameterfv() {
        return glad_debug_glPointParameterfv$constants.SEGMENT.get(glad_debug_glPointParameterfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFVPROC glad_debug_glPointParameterfv
     * }
     */
    public static void glad_debug_glPointParameterfv(MemorySegment varValue) {
        glad_debug_glPointParameterfv$constants.SEGMENT.set(glad_debug_glPointParameterfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glPointParameterfvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glPointParameterfvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFVARBPROC glad_glPointParameterfvARB
     * }
     */
    public static AddressLayout glad_glPointParameterfvARB$layout() {
        return glad_glPointParameterfvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFVARBPROC glad_glPointParameterfvARB
     * }
     */
    public static MemorySegment glad_glPointParameterfvARB$segment() {
        return glad_glPointParameterfvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFVARBPROC glad_glPointParameterfvARB
     * }
     */
    public static MemorySegment glad_glPointParameterfvARB() {
        return glad_glPointParameterfvARB$constants.SEGMENT.get(glad_glPointParameterfvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFVARBPROC glad_glPointParameterfvARB
     * }
     */
    public static void glad_glPointParameterfvARB(MemorySegment varValue) {
        glad_glPointParameterfvARB$constants.SEGMENT.set(glad_glPointParameterfvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glPointParameterfvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glPointParameterfvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFVARBPROC glad_debug_glPointParameterfvARB
     * }
     */
    public static AddressLayout glad_debug_glPointParameterfvARB$layout() {
        return glad_debug_glPointParameterfvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFVARBPROC glad_debug_glPointParameterfvARB
     * }
     */
    public static MemorySegment glad_debug_glPointParameterfvARB$segment() {
        return glad_debug_glPointParameterfvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFVARBPROC glad_debug_glPointParameterfvARB
     * }
     */
    public static MemorySegment glad_debug_glPointParameterfvARB() {
        return glad_debug_glPointParameterfvARB$constants.SEGMENT.get(glad_debug_glPointParameterfvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFVARBPROC glad_debug_glPointParameterfvARB
     * }
     */
    public static void glad_debug_glPointParameterfvARB(MemorySegment varValue) {
        glad_debug_glPointParameterfvARB$constants.SEGMENT.set(glad_debug_glPointParameterfvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glPointParameterfvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glPointParameterfvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFVEXTPROC glad_glPointParameterfvEXT
     * }
     */
    public static AddressLayout glad_glPointParameterfvEXT$layout() {
        return glad_glPointParameterfvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFVEXTPROC glad_glPointParameterfvEXT
     * }
     */
    public static MemorySegment glad_glPointParameterfvEXT$segment() {
        return glad_glPointParameterfvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFVEXTPROC glad_glPointParameterfvEXT
     * }
     */
    public static MemorySegment glad_glPointParameterfvEXT() {
        return glad_glPointParameterfvEXT$constants.SEGMENT.get(glad_glPointParameterfvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFVEXTPROC glad_glPointParameterfvEXT
     * }
     */
    public static void glad_glPointParameterfvEXT(MemorySegment varValue) {
        glad_glPointParameterfvEXT$constants.SEGMENT.set(glad_glPointParameterfvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glPointParameterfvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glPointParameterfvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFVEXTPROC glad_debug_glPointParameterfvEXT
     * }
     */
    public static AddressLayout glad_debug_glPointParameterfvEXT$layout() {
        return glad_debug_glPointParameterfvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFVEXTPROC glad_debug_glPointParameterfvEXT
     * }
     */
    public static MemorySegment glad_debug_glPointParameterfvEXT$segment() {
        return glad_debug_glPointParameterfvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFVEXTPROC glad_debug_glPointParameterfvEXT
     * }
     */
    public static MemorySegment glad_debug_glPointParameterfvEXT() {
        return glad_debug_glPointParameterfvEXT$constants.SEGMENT.get(glad_debug_glPointParameterfvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFVEXTPROC glad_debug_glPointParameterfvEXT
     * }
     */
    public static void glad_debug_glPointParameterfvEXT(MemorySegment varValue) {
        glad_debug_glPointParameterfvEXT$constants.SEGMENT.set(glad_debug_glPointParameterfvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glPointParameterfvSGIS$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glPointParameterfvSGIS").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFVSGISPROC glad_glPointParameterfvSGIS
     * }
     */
    public static AddressLayout glad_glPointParameterfvSGIS$layout() {
        return glad_glPointParameterfvSGIS$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFVSGISPROC glad_glPointParameterfvSGIS
     * }
     */
    public static MemorySegment glad_glPointParameterfvSGIS$segment() {
        return glad_glPointParameterfvSGIS$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFVSGISPROC glad_glPointParameterfvSGIS
     * }
     */
    public static MemorySegment glad_glPointParameterfvSGIS() {
        return glad_glPointParameterfvSGIS$constants.SEGMENT.get(glad_glPointParameterfvSGIS$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFVSGISPROC glad_glPointParameterfvSGIS
     * }
     */
    public static void glad_glPointParameterfvSGIS(MemorySegment varValue) {
        glad_glPointParameterfvSGIS$constants.SEGMENT.set(glad_glPointParameterfvSGIS$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glPointParameterfvSGIS$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glPointParameterfvSGIS").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFVSGISPROC glad_debug_glPointParameterfvSGIS
     * }
     */
    public static AddressLayout glad_debug_glPointParameterfvSGIS$layout() {
        return glad_debug_glPointParameterfvSGIS$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFVSGISPROC glad_debug_glPointParameterfvSGIS
     * }
     */
    public static MemorySegment glad_debug_glPointParameterfvSGIS$segment() {
        return glad_debug_glPointParameterfvSGIS$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFVSGISPROC glad_debug_glPointParameterfvSGIS
     * }
     */
    public static MemorySegment glad_debug_glPointParameterfvSGIS() {
        return glad_debug_glPointParameterfvSGIS$constants.SEGMENT.get(glad_debug_glPointParameterfvSGIS$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERFVSGISPROC glad_debug_glPointParameterfvSGIS
     * }
     */
    public static void glad_debug_glPointParameterfvSGIS(MemorySegment varValue) {
        glad_debug_glPointParameterfvSGIS$constants.SEGMENT.set(glad_debug_glPointParameterfvSGIS$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glPointParameteri$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glPointParameteri").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERIPROC glad_glPointParameteri
     * }
     */
    public static AddressLayout glad_glPointParameteri$layout() {
        return glad_glPointParameteri$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERIPROC glad_glPointParameteri
     * }
     */
    public static MemorySegment glad_glPointParameteri$segment() {
        return glad_glPointParameteri$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERIPROC glad_glPointParameteri
     * }
     */
    public static MemorySegment glad_glPointParameteri() {
        return glad_glPointParameteri$constants.SEGMENT.get(glad_glPointParameteri$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERIPROC glad_glPointParameteri
     * }
     */
    public static void glad_glPointParameteri(MemorySegment varValue) {
        glad_glPointParameteri$constants.SEGMENT.set(glad_glPointParameteri$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glPointParameteri$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glPointParameteri").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERIPROC glad_debug_glPointParameteri
     * }
     */
    public static AddressLayout glad_debug_glPointParameteri$layout() {
        return glad_debug_glPointParameteri$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERIPROC glad_debug_glPointParameteri
     * }
     */
    public static MemorySegment glad_debug_glPointParameteri$segment() {
        return glad_debug_glPointParameteri$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERIPROC glad_debug_glPointParameteri
     * }
     */
    public static MemorySegment glad_debug_glPointParameteri() {
        return glad_debug_glPointParameteri$constants.SEGMENT.get(glad_debug_glPointParameteri$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERIPROC glad_debug_glPointParameteri
     * }
     */
    public static void glad_debug_glPointParameteri(MemorySegment varValue) {
        glad_debug_glPointParameteri$constants.SEGMENT.set(glad_debug_glPointParameteri$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glPointParameteriNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glPointParameteriNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERINVPROC glad_glPointParameteriNV
     * }
     */
    public static AddressLayout glad_glPointParameteriNV$layout() {
        return glad_glPointParameteriNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERINVPROC glad_glPointParameteriNV
     * }
     */
    public static MemorySegment glad_glPointParameteriNV$segment() {
        return glad_glPointParameteriNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERINVPROC glad_glPointParameteriNV
     * }
     */
    public static MemorySegment glad_glPointParameteriNV() {
        return glad_glPointParameteriNV$constants.SEGMENT.get(glad_glPointParameteriNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERINVPROC glad_glPointParameteriNV
     * }
     */
    public static void glad_glPointParameteriNV(MemorySegment varValue) {
        glad_glPointParameteriNV$constants.SEGMENT.set(glad_glPointParameteriNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glPointParameteriNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glPointParameteriNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERINVPROC glad_debug_glPointParameteriNV
     * }
     */
    public static AddressLayout glad_debug_glPointParameteriNV$layout() {
        return glad_debug_glPointParameteriNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERINVPROC glad_debug_glPointParameteriNV
     * }
     */
    public static MemorySegment glad_debug_glPointParameteriNV$segment() {
        return glad_debug_glPointParameteriNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERINVPROC glad_debug_glPointParameteriNV
     * }
     */
    public static MemorySegment glad_debug_glPointParameteriNV() {
        return glad_debug_glPointParameteriNV$constants.SEGMENT.get(glad_debug_glPointParameteriNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERINVPROC glad_debug_glPointParameteriNV
     * }
     */
    public static void glad_debug_glPointParameteriNV(MemorySegment varValue) {
        glad_debug_glPointParameteriNV$constants.SEGMENT.set(glad_debug_glPointParameteriNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glPointParameteriv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glPointParameteriv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERIVPROC glad_glPointParameteriv
     * }
     */
    public static AddressLayout glad_glPointParameteriv$layout() {
        return glad_glPointParameteriv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERIVPROC glad_glPointParameteriv
     * }
     */
    public static MemorySegment glad_glPointParameteriv$segment() {
        return glad_glPointParameteriv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERIVPROC glad_glPointParameteriv
     * }
     */
    public static MemorySegment glad_glPointParameteriv() {
        return glad_glPointParameteriv$constants.SEGMENT.get(glad_glPointParameteriv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERIVPROC glad_glPointParameteriv
     * }
     */
    public static void glad_glPointParameteriv(MemorySegment varValue) {
        glad_glPointParameteriv$constants.SEGMENT.set(glad_glPointParameteriv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glPointParameteriv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glPointParameteriv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERIVPROC glad_debug_glPointParameteriv
     * }
     */
    public static AddressLayout glad_debug_glPointParameteriv$layout() {
        return glad_debug_glPointParameteriv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERIVPROC glad_debug_glPointParameteriv
     * }
     */
    public static MemorySegment glad_debug_glPointParameteriv$segment() {
        return glad_debug_glPointParameteriv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERIVPROC glad_debug_glPointParameteriv
     * }
     */
    public static MemorySegment glad_debug_glPointParameteriv() {
        return glad_debug_glPointParameteriv$constants.SEGMENT.get(glad_debug_glPointParameteriv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERIVPROC glad_debug_glPointParameteriv
     * }
     */
    public static void glad_debug_glPointParameteriv(MemorySegment varValue) {
        glad_debug_glPointParameteriv$constants.SEGMENT.set(glad_debug_glPointParameteriv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glPointParameterivNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glPointParameterivNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERIVNVPROC glad_glPointParameterivNV
     * }
     */
    public static AddressLayout glad_glPointParameterivNV$layout() {
        return glad_glPointParameterivNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERIVNVPROC glad_glPointParameterivNV
     * }
     */
    public static MemorySegment glad_glPointParameterivNV$segment() {
        return glad_glPointParameterivNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERIVNVPROC glad_glPointParameterivNV
     * }
     */
    public static MemorySegment glad_glPointParameterivNV() {
        return glad_glPointParameterivNV$constants.SEGMENT.get(glad_glPointParameterivNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERIVNVPROC glad_glPointParameterivNV
     * }
     */
    public static void glad_glPointParameterivNV(MemorySegment varValue) {
        glad_glPointParameterivNV$constants.SEGMENT.set(glad_glPointParameterivNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glPointParameterivNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glPointParameterivNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERIVNVPROC glad_debug_glPointParameterivNV
     * }
     */
    public static AddressLayout glad_debug_glPointParameterivNV$layout() {
        return glad_debug_glPointParameterivNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERIVNVPROC glad_debug_glPointParameterivNV
     * }
     */
    public static MemorySegment glad_debug_glPointParameterivNV$segment() {
        return glad_debug_glPointParameterivNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERIVNVPROC glad_debug_glPointParameterivNV
     * }
     */
    public static MemorySegment glad_debug_glPointParameterivNV() {
        return glad_debug_glPointParameterivNV$constants.SEGMENT.get(glad_debug_glPointParameterivNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTPARAMETERIVNVPROC glad_debug_glPointParameterivNV
     * }
     */
    public static void glad_debug_glPointParameterivNV(MemorySegment varValue) {
        glad_debug_glPointParameterivNV$constants.SEGMENT.set(glad_debug_glPointParameterivNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glPointSize$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glPointSize").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTSIZEPROC glad_glPointSize
     * }
     */
    public static AddressLayout glad_glPointSize$layout() {
        return glad_glPointSize$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTSIZEPROC glad_glPointSize
     * }
     */
    public static MemorySegment glad_glPointSize$segment() {
        return glad_glPointSize$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTSIZEPROC glad_glPointSize
     * }
     */
    public static MemorySegment glad_glPointSize() {
        return glad_glPointSize$constants.SEGMENT.get(glad_glPointSize$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTSIZEPROC glad_glPointSize
     * }
     */
    public static void glad_glPointSize(MemorySegment varValue) {
        glad_glPointSize$constants.SEGMENT.set(glad_glPointSize$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glPointSize$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glPointSize").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTSIZEPROC glad_debug_glPointSize
     * }
     */
    public static AddressLayout glad_debug_glPointSize$layout() {
        return glad_debug_glPointSize$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTSIZEPROC glad_debug_glPointSize
     * }
     */
    public static MemorySegment glad_debug_glPointSize$segment() {
        return glad_debug_glPointSize$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTSIZEPROC glad_debug_glPointSize
     * }
     */
    public static MemorySegment glad_debug_glPointSize() {
        return glad_debug_glPointSize$constants.SEGMENT.get(glad_debug_glPointSize$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOINTSIZEPROC glad_debug_glPointSize
     * }
     */
    public static void glad_debug_glPointSize(MemorySegment varValue) {
        glad_debug_glPointSize$constants.SEGMENT.set(glad_debug_glPointSize$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glPolygonMode$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glPolygonMode").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPOLYGONMODEPROC glad_glPolygonMode
     * }
     */
    public static AddressLayout glad_glPolygonMode$layout() {
        return glad_glPolygonMode$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPOLYGONMODEPROC glad_glPolygonMode
     * }
     */
    public static MemorySegment glad_glPolygonMode$segment() {
        return glad_glPolygonMode$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOLYGONMODEPROC glad_glPolygonMode
     * }
     */
    public static MemorySegment glad_glPolygonMode() {
        return glad_glPolygonMode$constants.SEGMENT.get(glad_glPolygonMode$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOLYGONMODEPROC glad_glPolygonMode
     * }
     */
    public static void glad_glPolygonMode(MemorySegment varValue) {
        glad_glPolygonMode$constants.SEGMENT.set(glad_glPolygonMode$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glPolygonMode$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glPolygonMode").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPOLYGONMODEPROC glad_debug_glPolygonMode
     * }
     */
    public static AddressLayout glad_debug_glPolygonMode$layout() {
        return glad_debug_glPolygonMode$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPOLYGONMODEPROC glad_debug_glPolygonMode
     * }
     */
    public static MemorySegment glad_debug_glPolygonMode$segment() {
        return glad_debug_glPolygonMode$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOLYGONMODEPROC glad_debug_glPolygonMode
     * }
     */
    public static MemorySegment glad_debug_glPolygonMode() {
        return glad_debug_glPolygonMode$constants.SEGMENT.get(glad_debug_glPolygonMode$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOLYGONMODEPROC glad_debug_glPolygonMode
     * }
     */
    public static void glad_debug_glPolygonMode(MemorySegment varValue) {
        glad_debug_glPolygonMode$constants.SEGMENT.set(glad_debug_glPolygonMode$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glPolygonOffset$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glPolygonOffset").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPOLYGONOFFSETPROC glad_glPolygonOffset
     * }
     */
    public static AddressLayout glad_glPolygonOffset$layout() {
        return glad_glPolygonOffset$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPOLYGONOFFSETPROC glad_glPolygonOffset
     * }
     */
    public static MemorySegment glad_glPolygonOffset$segment() {
        return glad_glPolygonOffset$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOLYGONOFFSETPROC glad_glPolygonOffset
     * }
     */
    public static MemorySegment glad_glPolygonOffset() {
        return glad_glPolygonOffset$constants.SEGMENT.get(glad_glPolygonOffset$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOLYGONOFFSETPROC glad_glPolygonOffset
     * }
     */
    public static void glad_glPolygonOffset(MemorySegment varValue) {
        glad_glPolygonOffset$constants.SEGMENT.set(glad_glPolygonOffset$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glPolygonOffset$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glPolygonOffset").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPOLYGONOFFSETPROC glad_debug_glPolygonOffset
     * }
     */
    public static AddressLayout glad_debug_glPolygonOffset$layout() {
        return glad_debug_glPolygonOffset$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPOLYGONOFFSETPROC glad_debug_glPolygonOffset
     * }
     */
    public static MemorySegment glad_debug_glPolygonOffset$segment() {
        return glad_debug_glPolygonOffset$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOLYGONOFFSETPROC glad_debug_glPolygonOffset
     * }
     */
    public static MemorySegment glad_debug_glPolygonOffset() {
        return glad_debug_glPolygonOffset$constants.SEGMENT.get(glad_debug_glPolygonOffset$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOLYGONOFFSETPROC glad_debug_glPolygonOffset
     * }
     */
    public static void glad_debug_glPolygonOffset(MemorySegment varValue) {
        glad_debug_glPolygonOffset$constants.SEGMENT.set(glad_debug_glPolygonOffset$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glPolygonOffsetClamp$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glPolygonOffsetClamp").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPOLYGONOFFSETCLAMPPROC glad_glPolygonOffsetClamp
     * }
     */
    public static AddressLayout glad_glPolygonOffsetClamp$layout() {
        return glad_glPolygonOffsetClamp$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPOLYGONOFFSETCLAMPPROC glad_glPolygonOffsetClamp
     * }
     */
    public static MemorySegment glad_glPolygonOffsetClamp$segment() {
        return glad_glPolygonOffsetClamp$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOLYGONOFFSETCLAMPPROC glad_glPolygonOffsetClamp
     * }
     */
    public static MemorySegment glad_glPolygonOffsetClamp() {
        return glad_glPolygonOffsetClamp$constants.SEGMENT.get(glad_glPolygonOffsetClamp$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOLYGONOFFSETCLAMPPROC glad_glPolygonOffsetClamp
     * }
     */
    public static void glad_glPolygonOffsetClamp(MemorySegment varValue) {
        glad_glPolygonOffsetClamp$constants.SEGMENT.set(glad_glPolygonOffsetClamp$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glPolygonOffsetClamp$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glPolygonOffsetClamp").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPOLYGONOFFSETCLAMPPROC glad_debug_glPolygonOffsetClamp
     * }
     */
    public static AddressLayout glad_debug_glPolygonOffsetClamp$layout() {
        return glad_debug_glPolygonOffsetClamp$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPOLYGONOFFSETCLAMPPROC glad_debug_glPolygonOffsetClamp
     * }
     */
    public static MemorySegment glad_debug_glPolygonOffsetClamp$segment() {
        return glad_debug_glPolygonOffsetClamp$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOLYGONOFFSETCLAMPPROC glad_debug_glPolygonOffsetClamp
     * }
     */
    public static MemorySegment glad_debug_glPolygonOffsetClamp() {
        return glad_debug_glPolygonOffsetClamp$constants.SEGMENT.get(glad_debug_glPolygonOffsetClamp$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOLYGONOFFSETCLAMPPROC glad_debug_glPolygonOffsetClamp
     * }
     */
    public static void glad_debug_glPolygonOffsetClamp(MemorySegment varValue) {
        glad_debug_glPolygonOffsetClamp$constants.SEGMENT.set(glad_debug_glPolygonOffsetClamp$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glPolygonOffsetClampEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glPolygonOffsetClampEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPOLYGONOFFSETCLAMPEXTPROC glad_glPolygonOffsetClampEXT
     * }
     */
    public static AddressLayout glad_glPolygonOffsetClampEXT$layout() {
        return glad_glPolygonOffsetClampEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPOLYGONOFFSETCLAMPEXTPROC glad_glPolygonOffsetClampEXT
     * }
     */
    public static MemorySegment glad_glPolygonOffsetClampEXT$segment() {
        return glad_glPolygonOffsetClampEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOLYGONOFFSETCLAMPEXTPROC glad_glPolygonOffsetClampEXT
     * }
     */
    public static MemorySegment glad_glPolygonOffsetClampEXT() {
        return glad_glPolygonOffsetClampEXT$constants.SEGMENT.get(glad_glPolygonOffsetClampEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOLYGONOFFSETCLAMPEXTPROC glad_glPolygonOffsetClampEXT
     * }
     */
    public static void glad_glPolygonOffsetClampEXT(MemorySegment varValue) {
        glad_glPolygonOffsetClampEXT$constants.SEGMENT.set(glad_glPolygonOffsetClampEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glPolygonOffsetClampEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glPolygonOffsetClampEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPOLYGONOFFSETCLAMPEXTPROC glad_debug_glPolygonOffsetClampEXT
     * }
     */
    public static AddressLayout glad_debug_glPolygonOffsetClampEXT$layout() {
        return glad_debug_glPolygonOffsetClampEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPOLYGONOFFSETCLAMPEXTPROC glad_debug_glPolygonOffsetClampEXT
     * }
     */
    public static MemorySegment glad_debug_glPolygonOffsetClampEXT$segment() {
        return glad_debug_glPolygonOffsetClampEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOLYGONOFFSETCLAMPEXTPROC glad_debug_glPolygonOffsetClampEXT
     * }
     */
    public static MemorySegment glad_debug_glPolygonOffsetClampEXT() {
        return glad_debug_glPolygonOffsetClampEXT$constants.SEGMENT.get(glad_debug_glPolygonOffsetClampEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOLYGONOFFSETCLAMPEXTPROC glad_debug_glPolygonOffsetClampEXT
     * }
     */
    public static void glad_debug_glPolygonOffsetClampEXT(MemorySegment varValue) {
        glad_debug_glPolygonOffsetClampEXT$constants.SEGMENT.set(glad_debug_glPolygonOffsetClampEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glPolygonStipple$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glPolygonStipple").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPOLYGONSTIPPLEPROC glad_glPolygonStipple
     * }
     */
    public static AddressLayout glad_glPolygonStipple$layout() {
        return glad_glPolygonStipple$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPOLYGONSTIPPLEPROC glad_glPolygonStipple
     * }
     */
    public static MemorySegment glad_glPolygonStipple$segment() {
        return glad_glPolygonStipple$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOLYGONSTIPPLEPROC glad_glPolygonStipple
     * }
     */
    public static MemorySegment glad_glPolygonStipple() {
        return glad_glPolygonStipple$constants.SEGMENT.get(glad_glPolygonStipple$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOLYGONSTIPPLEPROC glad_glPolygonStipple
     * }
     */
    public static void glad_glPolygonStipple(MemorySegment varValue) {
        glad_glPolygonStipple$constants.SEGMENT.set(glad_glPolygonStipple$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glPolygonStipple$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glPolygonStipple").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPOLYGONSTIPPLEPROC glad_debug_glPolygonStipple
     * }
     */
    public static AddressLayout glad_debug_glPolygonStipple$layout() {
        return glad_debug_glPolygonStipple$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPOLYGONSTIPPLEPROC glad_debug_glPolygonStipple
     * }
     */
    public static MemorySegment glad_debug_glPolygonStipple$segment() {
        return glad_debug_glPolygonStipple$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOLYGONSTIPPLEPROC glad_debug_glPolygonStipple
     * }
     */
    public static MemorySegment glad_debug_glPolygonStipple() {
        return glad_debug_glPolygonStipple$constants.SEGMENT.get(glad_debug_glPolygonStipple$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOLYGONSTIPPLEPROC glad_debug_glPolygonStipple
     * }
     */
    public static void glad_debug_glPolygonStipple(MemorySegment varValue) {
        glad_debug_glPolygonStipple$constants.SEGMENT.set(glad_debug_glPolygonStipple$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glPopAttrib$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glPopAttrib").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPOPATTRIBPROC glad_glPopAttrib
     * }
     */
    public static AddressLayout glad_glPopAttrib$layout() {
        return glad_glPopAttrib$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPOPATTRIBPROC glad_glPopAttrib
     * }
     */
    public static MemorySegment glad_glPopAttrib$segment() {
        return glad_glPopAttrib$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOPATTRIBPROC glad_glPopAttrib
     * }
     */
    public static MemorySegment glad_glPopAttrib() {
        return glad_glPopAttrib$constants.SEGMENT.get(glad_glPopAttrib$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOPATTRIBPROC glad_glPopAttrib
     * }
     */
    public static void glad_glPopAttrib(MemorySegment varValue) {
        glad_glPopAttrib$constants.SEGMENT.set(glad_glPopAttrib$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glPopAttrib$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glPopAttrib").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPOPATTRIBPROC glad_debug_glPopAttrib
     * }
     */
    public static AddressLayout glad_debug_glPopAttrib$layout() {
        return glad_debug_glPopAttrib$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPOPATTRIBPROC glad_debug_glPopAttrib
     * }
     */
    public static MemorySegment glad_debug_glPopAttrib$segment() {
        return glad_debug_glPopAttrib$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOPATTRIBPROC glad_debug_glPopAttrib
     * }
     */
    public static MemorySegment glad_debug_glPopAttrib() {
        return glad_debug_glPopAttrib$constants.SEGMENT.get(glad_debug_glPopAttrib$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOPATTRIBPROC glad_debug_glPopAttrib
     * }
     */
    public static void glad_debug_glPopAttrib(MemorySegment varValue) {
        glad_debug_glPopAttrib$constants.SEGMENT.set(glad_debug_glPopAttrib$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glPopClientAttrib$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glPopClientAttrib").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPOPCLIENTATTRIBPROC glad_glPopClientAttrib
     * }
     */
    public static AddressLayout glad_glPopClientAttrib$layout() {
        return glad_glPopClientAttrib$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPOPCLIENTATTRIBPROC glad_glPopClientAttrib
     * }
     */
    public static MemorySegment glad_glPopClientAttrib$segment() {
        return glad_glPopClientAttrib$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOPCLIENTATTRIBPROC glad_glPopClientAttrib
     * }
     */
    public static MemorySegment glad_glPopClientAttrib() {
        return glad_glPopClientAttrib$constants.SEGMENT.get(glad_glPopClientAttrib$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOPCLIENTATTRIBPROC glad_glPopClientAttrib
     * }
     */
    public static void glad_glPopClientAttrib(MemorySegment varValue) {
        glad_glPopClientAttrib$constants.SEGMENT.set(glad_glPopClientAttrib$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glPopClientAttrib$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glPopClientAttrib").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPOPCLIENTATTRIBPROC glad_debug_glPopClientAttrib
     * }
     */
    public static AddressLayout glad_debug_glPopClientAttrib$layout() {
        return glad_debug_glPopClientAttrib$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPOPCLIENTATTRIBPROC glad_debug_glPopClientAttrib
     * }
     */
    public static MemorySegment glad_debug_glPopClientAttrib$segment() {
        return glad_debug_glPopClientAttrib$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOPCLIENTATTRIBPROC glad_debug_glPopClientAttrib
     * }
     */
    public static MemorySegment glad_debug_glPopClientAttrib() {
        return glad_debug_glPopClientAttrib$constants.SEGMENT.get(glad_debug_glPopClientAttrib$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOPCLIENTATTRIBPROC glad_debug_glPopClientAttrib
     * }
     */
    public static void glad_debug_glPopClientAttrib(MemorySegment varValue) {
        glad_debug_glPopClientAttrib$constants.SEGMENT.set(glad_debug_glPopClientAttrib$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glPopDebugGroup$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glPopDebugGroup").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPOPDEBUGGROUPPROC glad_glPopDebugGroup
     * }
     */
    public static AddressLayout glad_glPopDebugGroup$layout() {
        return glad_glPopDebugGroup$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPOPDEBUGGROUPPROC glad_glPopDebugGroup
     * }
     */
    public static MemorySegment glad_glPopDebugGroup$segment() {
        return glad_glPopDebugGroup$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOPDEBUGGROUPPROC glad_glPopDebugGroup
     * }
     */
    public static MemorySegment glad_glPopDebugGroup() {
        return glad_glPopDebugGroup$constants.SEGMENT.get(glad_glPopDebugGroup$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOPDEBUGGROUPPROC glad_glPopDebugGroup
     * }
     */
    public static void glad_glPopDebugGroup(MemorySegment varValue) {
        glad_glPopDebugGroup$constants.SEGMENT.set(glad_glPopDebugGroup$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glPopDebugGroup$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glPopDebugGroup").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPOPDEBUGGROUPPROC glad_debug_glPopDebugGroup
     * }
     */
    public static AddressLayout glad_debug_glPopDebugGroup$layout() {
        return glad_debug_glPopDebugGroup$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPOPDEBUGGROUPPROC glad_debug_glPopDebugGroup
     * }
     */
    public static MemorySegment glad_debug_glPopDebugGroup$segment() {
        return glad_debug_glPopDebugGroup$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOPDEBUGGROUPPROC glad_debug_glPopDebugGroup
     * }
     */
    public static MemorySegment glad_debug_glPopDebugGroup() {
        return glad_debug_glPopDebugGroup$constants.SEGMENT.get(glad_debug_glPopDebugGroup$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOPDEBUGGROUPPROC glad_debug_glPopDebugGroup
     * }
     */
    public static void glad_debug_glPopDebugGroup(MemorySegment varValue) {
        glad_debug_glPopDebugGroup$constants.SEGMENT.set(glad_debug_glPopDebugGroup$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glPopMatrix$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glPopMatrix").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPOPMATRIXPROC glad_glPopMatrix
     * }
     */
    public static AddressLayout glad_glPopMatrix$layout() {
        return glad_glPopMatrix$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPOPMATRIXPROC glad_glPopMatrix
     * }
     */
    public static MemorySegment glad_glPopMatrix$segment() {
        return glad_glPopMatrix$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOPMATRIXPROC glad_glPopMatrix
     * }
     */
    public static MemorySegment glad_glPopMatrix() {
        return glad_glPopMatrix$constants.SEGMENT.get(glad_glPopMatrix$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOPMATRIXPROC glad_glPopMatrix
     * }
     */
    public static void glad_glPopMatrix(MemorySegment varValue) {
        glad_glPopMatrix$constants.SEGMENT.set(glad_glPopMatrix$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glPopMatrix$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glPopMatrix").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPOPMATRIXPROC glad_debug_glPopMatrix
     * }
     */
    public static AddressLayout glad_debug_glPopMatrix$layout() {
        return glad_debug_glPopMatrix$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPOPMATRIXPROC glad_debug_glPopMatrix
     * }
     */
    public static MemorySegment glad_debug_glPopMatrix$segment() {
        return glad_debug_glPopMatrix$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOPMATRIXPROC glad_debug_glPopMatrix
     * }
     */
    public static MemorySegment glad_debug_glPopMatrix() {
        return glad_debug_glPopMatrix$constants.SEGMENT.get(glad_debug_glPopMatrix$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOPMATRIXPROC glad_debug_glPopMatrix
     * }
     */
    public static void glad_debug_glPopMatrix(MemorySegment varValue) {
        glad_debug_glPopMatrix$constants.SEGMENT.set(glad_debug_glPopMatrix$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glPopName$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glPopName").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPOPNAMEPROC glad_glPopName
     * }
     */
    public static AddressLayout glad_glPopName$layout() {
        return glad_glPopName$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPOPNAMEPROC glad_glPopName
     * }
     */
    public static MemorySegment glad_glPopName$segment() {
        return glad_glPopName$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOPNAMEPROC glad_glPopName
     * }
     */
    public static MemorySegment glad_glPopName() {
        return glad_glPopName$constants.SEGMENT.get(glad_glPopName$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOPNAMEPROC glad_glPopName
     * }
     */
    public static void glad_glPopName(MemorySegment varValue) {
        glad_glPopName$constants.SEGMENT.set(glad_glPopName$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glPopName$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glPopName").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPOPNAMEPROC glad_debug_glPopName
     * }
     */
    public static AddressLayout glad_debug_glPopName$layout() {
        return glad_debug_glPopName$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPOPNAMEPROC glad_debug_glPopName
     * }
     */
    public static MemorySegment glad_debug_glPopName$segment() {
        return glad_debug_glPopName$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOPNAMEPROC glad_debug_glPopName
     * }
     */
    public static MemorySegment glad_debug_glPopName() {
        return glad_debug_glPopName$constants.SEGMENT.get(glad_debug_glPopName$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPOPNAMEPROC glad_debug_glPopName
     * }
     */
    public static void glad_debug_glPopName(MemorySegment varValue) {
        glad_debug_glPopName$constants.SEGMENT.set(glad_debug_glPopName$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glPrimitiveRestartIndex$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glPrimitiveRestartIndex").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPRIMITIVERESTARTINDEXPROC glad_glPrimitiveRestartIndex
     * }
     */
    public static AddressLayout glad_glPrimitiveRestartIndex$layout() {
        return glad_glPrimitiveRestartIndex$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPRIMITIVERESTARTINDEXPROC glad_glPrimitiveRestartIndex
     * }
     */
    public static MemorySegment glad_glPrimitiveRestartIndex$segment() {
        return glad_glPrimitiveRestartIndex$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPRIMITIVERESTARTINDEXPROC glad_glPrimitiveRestartIndex
     * }
     */
    public static MemorySegment glad_glPrimitiveRestartIndex() {
        return glad_glPrimitiveRestartIndex$constants.SEGMENT.get(glad_glPrimitiveRestartIndex$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPRIMITIVERESTARTINDEXPROC glad_glPrimitiveRestartIndex
     * }
     */
    public static void glad_glPrimitiveRestartIndex(MemorySegment varValue) {
        glad_glPrimitiveRestartIndex$constants.SEGMENT.set(glad_glPrimitiveRestartIndex$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glPrimitiveRestartIndex$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glPrimitiveRestartIndex").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPRIMITIVERESTARTINDEXPROC glad_debug_glPrimitiveRestartIndex
     * }
     */
    public static AddressLayout glad_debug_glPrimitiveRestartIndex$layout() {
        return glad_debug_glPrimitiveRestartIndex$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPRIMITIVERESTARTINDEXPROC glad_debug_glPrimitiveRestartIndex
     * }
     */
    public static MemorySegment glad_debug_glPrimitiveRestartIndex$segment() {
        return glad_debug_glPrimitiveRestartIndex$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPRIMITIVERESTARTINDEXPROC glad_debug_glPrimitiveRestartIndex
     * }
     */
    public static MemorySegment glad_debug_glPrimitiveRestartIndex() {
        return glad_debug_glPrimitiveRestartIndex$constants.SEGMENT.get(glad_debug_glPrimitiveRestartIndex$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPRIMITIVERESTARTINDEXPROC glad_debug_glPrimitiveRestartIndex
     * }
     */
    public static void glad_debug_glPrimitiveRestartIndex(MemorySegment varValue) {
        glad_debug_glPrimitiveRestartIndex$constants.SEGMENT.set(glad_debug_glPrimitiveRestartIndex$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glPrioritizeTextures$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glPrioritizeTextures").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPRIORITIZETEXTURESPROC glad_glPrioritizeTextures
     * }
     */
    public static AddressLayout glad_glPrioritizeTextures$layout() {
        return glad_glPrioritizeTextures$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPRIORITIZETEXTURESPROC glad_glPrioritizeTextures
     * }
     */
    public static MemorySegment glad_glPrioritizeTextures$segment() {
        return glad_glPrioritizeTextures$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPRIORITIZETEXTURESPROC glad_glPrioritizeTextures
     * }
     */
    public static MemorySegment glad_glPrioritizeTextures() {
        return glad_glPrioritizeTextures$constants.SEGMENT.get(glad_glPrioritizeTextures$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPRIORITIZETEXTURESPROC glad_glPrioritizeTextures
     * }
     */
    public static void glad_glPrioritizeTextures(MemorySegment varValue) {
        glad_glPrioritizeTextures$constants.SEGMENT.set(glad_glPrioritizeTextures$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glPrioritizeTextures$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glPrioritizeTextures").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPRIORITIZETEXTURESPROC glad_debug_glPrioritizeTextures
     * }
     */
    public static AddressLayout glad_debug_glPrioritizeTextures$layout() {
        return glad_debug_glPrioritizeTextures$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPRIORITIZETEXTURESPROC glad_debug_glPrioritizeTextures
     * }
     */
    public static MemorySegment glad_debug_glPrioritizeTextures$segment() {
        return glad_debug_glPrioritizeTextures$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPRIORITIZETEXTURESPROC glad_debug_glPrioritizeTextures
     * }
     */
    public static MemorySegment glad_debug_glPrioritizeTextures() {
        return glad_debug_glPrioritizeTextures$constants.SEGMENT.get(glad_debug_glPrioritizeTextures$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPRIORITIZETEXTURESPROC glad_debug_glPrioritizeTextures
     * }
     */
    public static void glad_debug_glPrioritizeTextures(MemorySegment varValue) {
        glad_debug_glPrioritizeTextures$constants.SEGMENT.set(glad_debug_glPrioritizeTextures$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glPrioritizeTexturesEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glPrioritizeTexturesEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPRIORITIZETEXTURESEXTPROC glad_glPrioritizeTexturesEXT
     * }
     */
    public static AddressLayout glad_glPrioritizeTexturesEXT$layout() {
        return glad_glPrioritizeTexturesEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPRIORITIZETEXTURESEXTPROC glad_glPrioritizeTexturesEXT
     * }
     */
    public static MemorySegment glad_glPrioritizeTexturesEXT$segment() {
        return glad_glPrioritizeTexturesEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPRIORITIZETEXTURESEXTPROC glad_glPrioritizeTexturesEXT
     * }
     */
    public static MemorySegment glad_glPrioritizeTexturesEXT() {
        return glad_glPrioritizeTexturesEXT$constants.SEGMENT.get(glad_glPrioritizeTexturesEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPRIORITIZETEXTURESEXTPROC glad_glPrioritizeTexturesEXT
     * }
     */
    public static void glad_glPrioritizeTexturesEXT(MemorySegment varValue) {
        glad_glPrioritizeTexturesEXT$constants.SEGMENT.set(glad_glPrioritizeTexturesEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glPrioritizeTexturesEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glPrioritizeTexturesEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPRIORITIZETEXTURESEXTPROC glad_debug_glPrioritizeTexturesEXT
     * }
     */
    public static AddressLayout glad_debug_glPrioritizeTexturesEXT$layout() {
        return glad_debug_glPrioritizeTexturesEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPRIORITIZETEXTURESEXTPROC glad_debug_glPrioritizeTexturesEXT
     * }
     */
    public static MemorySegment glad_debug_glPrioritizeTexturesEXT$segment() {
        return glad_debug_glPrioritizeTexturesEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPRIORITIZETEXTURESEXTPROC glad_debug_glPrioritizeTexturesEXT
     * }
     */
    public static MemorySegment glad_debug_glPrioritizeTexturesEXT() {
        return glad_debug_glPrioritizeTexturesEXT$constants.SEGMENT.get(glad_debug_glPrioritizeTexturesEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPRIORITIZETEXTURESEXTPROC glad_debug_glPrioritizeTexturesEXT
     * }
     */
    public static void glad_debug_glPrioritizeTexturesEXT(MemorySegment varValue) {
        glad_debug_glPrioritizeTexturesEXT$constants.SEGMENT.set(glad_debug_glPrioritizeTexturesEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramBinary$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramBinary").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMBINARYPROC glad_glProgramBinary
     * }
     */
    public static AddressLayout glad_glProgramBinary$layout() {
        return glad_glProgramBinary$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMBINARYPROC glad_glProgramBinary
     * }
     */
    public static MemorySegment glad_glProgramBinary$segment() {
        return glad_glProgramBinary$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMBINARYPROC glad_glProgramBinary
     * }
     */
    public static MemorySegment glad_glProgramBinary() {
        return glad_glProgramBinary$constants.SEGMENT.get(glad_glProgramBinary$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMBINARYPROC glad_glProgramBinary
     * }
     */
    public static void glad_glProgramBinary(MemorySegment varValue) {
        glad_glProgramBinary$constants.SEGMENT.set(glad_glProgramBinary$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramBinary$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramBinary").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMBINARYPROC glad_debug_glProgramBinary
     * }
     */
    public static AddressLayout glad_debug_glProgramBinary$layout() {
        return glad_debug_glProgramBinary$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMBINARYPROC glad_debug_glProgramBinary
     * }
     */
    public static MemorySegment glad_debug_glProgramBinary$segment() {
        return glad_debug_glProgramBinary$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMBINARYPROC glad_debug_glProgramBinary
     * }
     */
    public static MemorySegment glad_debug_glProgramBinary() {
        return glad_debug_glProgramBinary$constants.SEGMENT.get(glad_debug_glProgramBinary$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMBINARYPROC glad_debug_glProgramBinary
     * }
     */
    public static void glad_debug_glProgramBinary(MemorySegment varValue) {
        glad_debug_glProgramBinary$constants.SEGMENT.set(glad_debug_glProgramBinary$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramEnvParameter4dARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramEnvParameter4dARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMENVPARAMETER4DARBPROC glad_glProgramEnvParameter4dARB
     * }
     */
    public static AddressLayout glad_glProgramEnvParameter4dARB$layout() {
        return glad_glProgramEnvParameter4dARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMENVPARAMETER4DARBPROC glad_glProgramEnvParameter4dARB
     * }
     */
    public static MemorySegment glad_glProgramEnvParameter4dARB$segment() {
        return glad_glProgramEnvParameter4dARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMENVPARAMETER4DARBPROC glad_glProgramEnvParameter4dARB
     * }
     */
    public static MemorySegment glad_glProgramEnvParameter4dARB() {
        return glad_glProgramEnvParameter4dARB$constants.SEGMENT.get(glad_glProgramEnvParameter4dARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMENVPARAMETER4DARBPROC glad_glProgramEnvParameter4dARB
     * }
     */
    public static void glad_glProgramEnvParameter4dARB(MemorySegment varValue) {
        glad_glProgramEnvParameter4dARB$constants.SEGMENT.set(glad_glProgramEnvParameter4dARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramEnvParameter4dARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramEnvParameter4dARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMENVPARAMETER4DARBPROC glad_debug_glProgramEnvParameter4dARB
     * }
     */
    public static AddressLayout glad_debug_glProgramEnvParameter4dARB$layout() {
        return glad_debug_glProgramEnvParameter4dARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMENVPARAMETER4DARBPROC glad_debug_glProgramEnvParameter4dARB
     * }
     */
    public static MemorySegment glad_debug_glProgramEnvParameter4dARB$segment() {
        return glad_debug_glProgramEnvParameter4dARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMENVPARAMETER4DARBPROC glad_debug_glProgramEnvParameter4dARB
     * }
     */
    public static MemorySegment glad_debug_glProgramEnvParameter4dARB() {
        return glad_debug_glProgramEnvParameter4dARB$constants.SEGMENT.get(glad_debug_glProgramEnvParameter4dARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMENVPARAMETER4DARBPROC glad_debug_glProgramEnvParameter4dARB
     * }
     */
    public static void glad_debug_glProgramEnvParameter4dARB(MemorySegment varValue) {
        glad_debug_glProgramEnvParameter4dARB$constants.SEGMENT.set(glad_debug_glProgramEnvParameter4dARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramEnvParameter4dvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramEnvParameter4dvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMENVPARAMETER4DVARBPROC glad_glProgramEnvParameter4dvARB
     * }
     */
    public static AddressLayout glad_glProgramEnvParameter4dvARB$layout() {
        return glad_glProgramEnvParameter4dvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMENVPARAMETER4DVARBPROC glad_glProgramEnvParameter4dvARB
     * }
     */
    public static MemorySegment glad_glProgramEnvParameter4dvARB$segment() {
        return glad_glProgramEnvParameter4dvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMENVPARAMETER4DVARBPROC glad_glProgramEnvParameter4dvARB
     * }
     */
    public static MemorySegment glad_glProgramEnvParameter4dvARB() {
        return glad_glProgramEnvParameter4dvARB$constants.SEGMENT.get(glad_glProgramEnvParameter4dvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMENVPARAMETER4DVARBPROC glad_glProgramEnvParameter4dvARB
     * }
     */
    public static void glad_glProgramEnvParameter4dvARB(MemorySegment varValue) {
        glad_glProgramEnvParameter4dvARB$constants.SEGMENT.set(glad_glProgramEnvParameter4dvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramEnvParameter4dvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramEnvParameter4dvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMENVPARAMETER4DVARBPROC glad_debug_glProgramEnvParameter4dvARB
     * }
     */
    public static AddressLayout glad_debug_glProgramEnvParameter4dvARB$layout() {
        return glad_debug_glProgramEnvParameter4dvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMENVPARAMETER4DVARBPROC glad_debug_glProgramEnvParameter4dvARB
     * }
     */
    public static MemorySegment glad_debug_glProgramEnvParameter4dvARB$segment() {
        return glad_debug_glProgramEnvParameter4dvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMENVPARAMETER4DVARBPROC glad_debug_glProgramEnvParameter4dvARB
     * }
     */
    public static MemorySegment glad_debug_glProgramEnvParameter4dvARB() {
        return glad_debug_glProgramEnvParameter4dvARB$constants.SEGMENT.get(glad_debug_glProgramEnvParameter4dvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMENVPARAMETER4DVARBPROC glad_debug_glProgramEnvParameter4dvARB
     * }
     */
    public static void glad_debug_glProgramEnvParameter4dvARB(MemorySegment varValue) {
        glad_debug_glProgramEnvParameter4dvARB$constants.SEGMENT.set(glad_debug_glProgramEnvParameter4dvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramEnvParameter4fARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramEnvParameter4fARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMENVPARAMETER4FARBPROC glad_glProgramEnvParameter4fARB
     * }
     */
    public static AddressLayout glad_glProgramEnvParameter4fARB$layout() {
        return glad_glProgramEnvParameter4fARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMENVPARAMETER4FARBPROC glad_glProgramEnvParameter4fARB
     * }
     */
    public static MemorySegment glad_glProgramEnvParameter4fARB$segment() {
        return glad_glProgramEnvParameter4fARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMENVPARAMETER4FARBPROC glad_glProgramEnvParameter4fARB
     * }
     */
    public static MemorySegment glad_glProgramEnvParameter4fARB() {
        return glad_glProgramEnvParameter4fARB$constants.SEGMENT.get(glad_glProgramEnvParameter4fARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMENVPARAMETER4FARBPROC glad_glProgramEnvParameter4fARB
     * }
     */
    public static void glad_glProgramEnvParameter4fARB(MemorySegment varValue) {
        glad_glProgramEnvParameter4fARB$constants.SEGMENT.set(glad_glProgramEnvParameter4fARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramEnvParameter4fARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramEnvParameter4fARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMENVPARAMETER4FARBPROC glad_debug_glProgramEnvParameter4fARB
     * }
     */
    public static AddressLayout glad_debug_glProgramEnvParameter4fARB$layout() {
        return glad_debug_glProgramEnvParameter4fARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMENVPARAMETER4FARBPROC glad_debug_glProgramEnvParameter4fARB
     * }
     */
    public static MemorySegment glad_debug_glProgramEnvParameter4fARB$segment() {
        return glad_debug_glProgramEnvParameter4fARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMENVPARAMETER4FARBPROC glad_debug_glProgramEnvParameter4fARB
     * }
     */
    public static MemorySegment glad_debug_glProgramEnvParameter4fARB() {
        return glad_debug_glProgramEnvParameter4fARB$constants.SEGMENT.get(glad_debug_glProgramEnvParameter4fARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMENVPARAMETER4FARBPROC glad_debug_glProgramEnvParameter4fARB
     * }
     */
    public static void glad_debug_glProgramEnvParameter4fARB(MemorySegment varValue) {
        glad_debug_glProgramEnvParameter4fARB$constants.SEGMENT.set(glad_debug_glProgramEnvParameter4fARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramEnvParameter4fvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramEnvParameter4fvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMENVPARAMETER4FVARBPROC glad_glProgramEnvParameter4fvARB
     * }
     */
    public static AddressLayout glad_glProgramEnvParameter4fvARB$layout() {
        return glad_glProgramEnvParameter4fvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMENVPARAMETER4FVARBPROC glad_glProgramEnvParameter4fvARB
     * }
     */
    public static MemorySegment glad_glProgramEnvParameter4fvARB$segment() {
        return glad_glProgramEnvParameter4fvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMENVPARAMETER4FVARBPROC glad_glProgramEnvParameter4fvARB
     * }
     */
    public static MemorySegment glad_glProgramEnvParameter4fvARB() {
        return glad_glProgramEnvParameter4fvARB$constants.SEGMENT.get(glad_glProgramEnvParameter4fvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMENVPARAMETER4FVARBPROC glad_glProgramEnvParameter4fvARB
     * }
     */
    public static void glad_glProgramEnvParameter4fvARB(MemorySegment varValue) {
        glad_glProgramEnvParameter4fvARB$constants.SEGMENT.set(glad_glProgramEnvParameter4fvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramEnvParameter4fvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramEnvParameter4fvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMENVPARAMETER4FVARBPROC glad_debug_glProgramEnvParameter4fvARB
     * }
     */
    public static AddressLayout glad_debug_glProgramEnvParameter4fvARB$layout() {
        return glad_debug_glProgramEnvParameter4fvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMENVPARAMETER4FVARBPROC glad_debug_glProgramEnvParameter4fvARB
     * }
     */
    public static MemorySegment glad_debug_glProgramEnvParameter4fvARB$segment() {
        return glad_debug_glProgramEnvParameter4fvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMENVPARAMETER4FVARBPROC glad_debug_glProgramEnvParameter4fvARB
     * }
     */
    public static MemorySegment glad_debug_glProgramEnvParameter4fvARB() {
        return glad_debug_glProgramEnvParameter4fvARB$constants.SEGMENT.get(glad_debug_glProgramEnvParameter4fvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMENVPARAMETER4FVARBPROC glad_debug_glProgramEnvParameter4fvARB
     * }
     */
    public static void glad_debug_glProgramEnvParameter4fvARB(MemorySegment varValue) {
        glad_debug_glProgramEnvParameter4fvARB$constants.SEGMENT.set(glad_debug_glProgramEnvParameter4fvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramLocalParameter4dARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramLocalParameter4dARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMLOCALPARAMETER4DARBPROC glad_glProgramLocalParameter4dARB
     * }
     */
    public static AddressLayout glad_glProgramLocalParameter4dARB$layout() {
        return glad_glProgramLocalParameter4dARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMLOCALPARAMETER4DARBPROC glad_glProgramLocalParameter4dARB
     * }
     */
    public static MemorySegment glad_glProgramLocalParameter4dARB$segment() {
        return glad_glProgramLocalParameter4dARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMLOCALPARAMETER4DARBPROC glad_glProgramLocalParameter4dARB
     * }
     */
    public static MemorySegment glad_glProgramLocalParameter4dARB() {
        return glad_glProgramLocalParameter4dARB$constants.SEGMENT.get(glad_glProgramLocalParameter4dARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMLOCALPARAMETER4DARBPROC glad_glProgramLocalParameter4dARB
     * }
     */
    public static void glad_glProgramLocalParameter4dARB(MemorySegment varValue) {
        glad_glProgramLocalParameter4dARB$constants.SEGMENT.set(glad_glProgramLocalParameter4dARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramLocalParameter4dARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramLocalParameter4dARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMLOCALPARAMETER4DARBPROC glad_debug_glProgramLocalParameter4dARB
     * }
     */
    public static AddressLayout glad_debug_glProgramLocalParameter4dARB$layout() {
        return glad_debug_glProgramLocalParameter4dARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMLOCALPARAMETER4DARBPROC glad_debug_glProgramLocalParameter4dARB
     * }
     */
    public static MemorySegment glad_debug_glProgramLocalParameter4dARB$segment() {
        return glad_debug_glProgramLocalParameter4dARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMLOCALPARAMETER4DARBPROC glad_debug_glProgramLocalParameter4dARB
     * }
     */
    public static MemorySegment glad_debug_glProgramLocalParameter4dARB() {
        return glad_debug_glProgramLocalParameter4dARB$constants.SEGMENT.get(glad_debug_glProgramLocalParameter4dARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMLOCALPARAMETER4DARBPROC glad_debug_glProgramLocalParameter4dARB
     * }
     */
    public static void glad_debug_glProgramLocalParameter4dARB(MemorySegment varValue) {
        glad_debug_glProgramLocalParameter4dARB$constants.SEGMENT.set(glad_debug_glProgramLocalParameter4dARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramLocalParameter4dvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramLocalParameter4dvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMLOCALPARAMETER4DVARBPROC glad_glProgramLocalParameter4dvARB
     * }
     */
    public static AddressLayout glad_glProgramLocalParameter4dvARB$layout() {
        return glad_glProgramLocalParameter4dvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMLOCALPARAMETER4DVARBPROC glad_glProgramLocalParameter4dvARB
     * }
     */
    public static MemorySegment glad_glProgramLocalParameter4dvARB$segment() {
        return glad_glProgramLocalParameter4dvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMLOCALPARAMETER4DVARBPROC glad_glProgramLocalParameter4dvARB
     * }
     */
    public static MemorySegment glad_glProgramLocalParameter4dvARB() {
        return glad_glProgramLocalParameter4dvARB$constants.SEGMENT.get(glad_glProgramLocalParameter4dvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMLOCALPARAMETER4DVARBPROC glad_glProgramLocalParameter4dvARB
     * }
     */
    public static void glad_glProgramLocalParameter4dvARB(MemorySegment varValue) {
        glad_glProgramLocalParameter4dvARB$constants.SEGMENT.set(glad_glProgramLocalParameter4dvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramLocalParameter4dvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramLocalParameter4dvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMLOCALPARAMETER4DVARBPROC glad_debug_glProgramLocalParameter4dvARB
     * }
     */
    public static AddressLayout glad_debug_glProgramLocalParameter4dvARB$layout() {
        return glad_debug_glProgramLocalParameter4dvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMLOCALPARAMETER4DVARBPROC glad_debug_glProgramLocalParameter4dvARB
     * }
     */
    public static MemorySegment glad_debug_glProgramLocalParameter4dvARB$segment() {
        return glad_debug_glProgramLocalParameter4dvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMLOCALPARAMETER4DVARBPROC glad_debug_glProgramLocalParameter4dvARB
     * }
     */
    public static MemorySegment glad_debug_glProgramLocalParameter4dvARB() {
        return glad_debug_glProgramLocalParameter4dvARB$constants.SEGMENT.get(glad_debug_glProgramLocalParameter4dvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMLOCALPARAMETER4DVARBPROC glad_debug_glProgramLocalParameter4dvARB
     * }
     */
    public static void glad_debug_glProgramLocalParameter4dvARB(MemorySegment varValue) {
        glad_debug_glProgramLocalParameter4dvARB$constants.SEGMENT.set(glad_debug_glProgramLocalParameter4dvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramLocalParameter4fARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramLocalParameter4fARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMLOCALPARAMETER4FARBPROC glad_glProgramLocalParameter4fARB
     * }
     */
    public static AddressLayout glad_glProgramLocalParameter4fARB$layout() {
        return glad_glProgramLocalParameter4fARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMLOCALPARAMETER4FARBPROC glad_glProgramLocalParameter4fARB
     * }
     */
    public static MemorySegment glad_glProgramLocalParameter4fARB$segment() {
        return glad_glProgramLocalParameter4fARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMLOCALPARAMETER4FARBPROC glad_glProgramLocalParameter4fARB
     * }
     */
    public static MemorySegment glad_glProgramLocalParameter4fARB() {
        return glad_glProgramLocalParameter4fARB$constants.SEGMENT.get(glad_glProgramLocalParameter4fARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMLOCALPARAMETER4FARBPROC glad_glProgramLocalParameter4fARB
     * }
     */
    public static void glad_glProgramLocalParameter4fARB(MemorySegment varValue) {
        glad_glProgramLocalParameter4fARB$constants.SEGMENT.set(glad_glProgramLocalParameter4fARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramLocalParameter4fARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramLocalParameter4fARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMLOCALPARAMETER4FARBPROC glad_debug_glProgramLocalParameter4fARB
     * }
     */
    public static AddressLayout glad_debug_glProgramLocalParameter4fARB$layout() {
        return glad_debug_glProgramLocalParameter4fARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMLOCALPARAMETER4FARBPROC glad_debug_glProgramLocalParameter4fARB
     * }
     */
    public static MemorySegment glad_debug_glProgramLocalParameter4fARB$segment() {
        return glad_debug_glProgramLocalParameter4fARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMLOCALPARAMETER4FARBPROC glad_debug_glProgramLocalParameter4fARB
     * }
     */
    public static MemorySegment glad_debug_glProgramLocalParameter4fARB() {
        return glad_debug_glProgramLocalParameter4fARB$constants.SEGMENT.get(glad_debug_glProgramLocalParameter4fARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMLOCALPARAMETER4FARBPROC glad_debug_glProgramLocalParameter4fARB
     * }
     */
    public static void glad_debug_glProgramLocalParameter4fARB(MemorySegment varValue) {
        glad_debug_glProgramLocalParameter4fARB$constants.SEGMENT.set(glad_debug_glProgramLocalParameter4fARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramLocalParameter4fvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramLocalParameter4fvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMLOCALPARAMETER4FVARBPROC glad_glProgramLocalParameter4fvARB
     * }
     */
    public static AddressLayout glad_glProgramLocalParameter4fvARB$layout() {
        return glad_glProgramLocalParameter4fvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMLOCALPARAMETER4FVARBPROC glad_glProgramLocalParameter4fvARB
     * }
     */
    public static MemorySegment glad_glProgramLocalParameter4fvARB$segment() {
        return glad_glProgramLocalParameter4fvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMLOCALPARAMETER4FVARBPROC glad_glProgramLocalParameter4fvARB
     * }
     */
    public static MemorySegment glad_glProgramLocalParameter4fvARB() {
        return glad_glProgramLocalParameter4fvARB$constants.SEGMENT.get(glad_glProgramLocalParameter4fvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMLOCALPARAMETER4FVARBPROC glad_glProgramLocalParameter4fvARB
     * }
     */
    public static void glad_glProgramLocalParameter4fvARB(MemorySegment varValue) {
        glad_glProgramLocalParameter4fvARB$constants.SEGMENT.set(glad_glProgramLocalParameter4fvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramLocalParameter4fvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramLocalParameter4fvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMLOCALPARAMETER4FVARBPROC glad_debug_glProgramLocalParameter4fvARB
     * }
     */
    public static AddressLayout glad_debug_glProgramLocalParameter4fvARB$layout() {
        return glad_debug_glProgramLocalParameter4fvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMLOCALPARAMETER4FVARBPROC glad_debug_glProgramLocalParameter4fvARB
     * }
     */
    public static MemorySegment glad_debug_glProgramLocalParameter4fvARB$segment() {
        return glad_debug_glProgramLocalParameter4fvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMLOCALPARAMETER4FVARBPROC glad_debug_glProgramLocalParameter4fvARB
     * }
     */
    public static MemorySegment glad_debug_glProgramLocalParameter4fvARB() {
        return glad_debug_glProgramLocalParameter4fvARB$constants.SEGMENT.get(glad_debug_glProgramLocalParameter4fvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMLOCALPARAMETER4FVARBPROC glad_debug_glProgramLocalParameter4fvARB
     * }
     */
    public static void glad_debug_glProgramLocalParameter4fvARB(MemorySegment varValue) {
        glad_debug_glProgramLocalParameter4fvARB$constants.SEGMENT.set(glad_debug_glProgramLocalParameter4fvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramParameter4dNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramParameter4dNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETER4DNVPROC glad_glProgramParameter4dNV
     * }
     */
    public static AddressLayout glad_glProgramParameter4dNV$layout() {
        return glad_glProgramParameter4dNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETER4DNVPROC glad_glProgramParameter4dNV
     * }
     */
    public static MemorySegment glad_glProgramParameter4dNV$segment() {
        return glad_glProgramParameter4dNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETER4DNVPROC glad_glProgramParameter4dNV
     * }
     */
    public static MemorySegment glad_glProgramParameter4dNV() {
        return glad_glProgramParameter4dNV$constants.SEGMENT.get(glad_glProgramParameter4dNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETER4DNVPROC glad_glProgramParameter4dNV
     * }
     */
    public static void glad_glProgramParameter4dNV(MemorySegment varValue) {
        glad_glProgramParameter4dNV$constants.SEGMENT.set(glad_glProgramParameter4dNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramParameter4dNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramParameter4dNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETER4DNVPROC glad_debug_glProgramParameter4dNV
     * }
     */
    public static AddressLayout glad_debug_glProgramParameter4dNV$layout() {
        return glad_debug_glProgramParameter4dNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETER4DNVPROC glad_debug_glProgramParameter4dNV
     * }
     */
    public static MemorySegment glad_debug_glProgramParameter4dNV$segment() {
        return glad_debug_glProgramParameter4dNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETER4DNVPROC glad_debug_glProgramParameter4dNV
     * }
     */
    public static MemorySegment glad_debug_glProgramParameter4dNV() {
        return glad_debug_glProgramParameter4dNV$constants.SEGMENT.get(glad_debug_glProgramParameter4dNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETER4DNVPROC glad_debug_glProgramParameter4dNV
     * }
     */
    public static void glad_debug_glProgramParameter4dNV(MemorySegment varValue) {
        glad_debug_glProgramParameter4dNV$constants.SEGMENT.set(glad_debug_glProgramParameter4dNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramParameter4dvNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramParameter4dvNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETER4DVNVPROC glad_glProgramParameter4dvNV
     * }
     */
    public static AddressLayout glad_glProgramParameter4dvNV$layout() {
        return glad_glProgramParameter4dvNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETER4DVNVPROC glad_glProgramParameter4dvNV
     * }
     */
    public static MemorySegment glad_glProgramParameter4dvNV$segment() {
        return glad_glProgramParameter4dvNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETER4DVNVPROC glad_glProgramParameter4dvNV
     * }
     */
    public static MemorySegment glad_glProgramParameter4dvNV() {
        return glad_glProgramParameter4dvNV$constants.SEGMENT.get(glad_glProgramParameter4dvNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETER4DVNVPROC glad_glProgramParameter4dvNV
     * }
     */
    public static void glad_glProgramParameter4dvNV(MemorySegment varValue) {
        glad_glProgramParameter4dvNV$constants.SEGMENT.set(glad_glProgramParameter4dvNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramParameter4dvNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramParameter4dvNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETER4DVNVPROC glad_debug_glProgramParameter4dvNV
     * }
     */
    public static AddressLayout glad_debug_glProgramParameter4dvNV$layout() {
        return glad_debug_glProgramParameter4dvNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETER4DVNVPROC glad_debug_glProgramParameter4dvNV
     * }
     */
    public static MemorySegment glad_debug_glProgramParameter4dvNV$segment() {
        return glad_debug_glProgramParameter4dvNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETER4DVNVPROC glad_debug_glProgramParameter4dvNV
     * }
     */
    public static MemorySegment glad_debug_glProgramParameter4dvNV() {
        return glad_debug_glProgramParameter4dvNV$constants.SEGMENT.get(glad_debug_glProgramParameter4dvNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETER4DVNVPROC glad_debug_glProgramParameter4dvNV
     * }
     */
    public static void glad_debug_glProgramParameter4dvNV(MemorySegment varValue) {
        glad_debug_glProgramParameter4dvNV$constants.SEGMENT.set(glad_debug_glProgramParameter4dvNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramParameter4fNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramParameter4fNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETER4FNVPROC glad_glProgramParameter4fNV
     * }
     */
    public static AddressLayout glad_glProgramParameter4fNV$layout() {
        return glad_glProgramParameter4fNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETER4FNVPROC glad_glProgramParameter4fNV
     * }
     */
    public static MemorySegment glad_glProgramParameter4fNV$segment() {
        return glad_glProgramParameter4fNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETER4FNVPROC glad_glProgramParameter4fNV
     * }
     */
    public static MemorySegment glad_glProgramParameter4fNV() {
        return glad_glProgramParameter4fNV$constants.SEGMENT.get(glad_glProgramParameter4fNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETER4FNVPROC glad_glProgramParameter4fNV
     * }
     */
    public static void glad_glProgramParameter4fNV(MemorySegment varValue) {
        glad_glProgramParameter4fNV$constants.SEGMENT.set(glad_glProgramParameter4fNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramParameter4fNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramParameter4fNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETER4FNVPROC glad_debug_glProgramParameter4fNV
     * }
     */
    public static AddressLayout glad_debug_glProgramParameter4fNV$layout() {
        return glad_debug_glProgramParameter4fNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETER4FNVPROC glad_debug_glProgramParameter4fNV
     * }
     */
    public static MemorySegment glad_debug_glProgramParameter4fNV$segment() {
        return glad_debug_glProgramParameter4fNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETER4FNVPROC glad_debug_glProgramParameter4fNV
     * }
     */
    public static MemorySegment glad_debug_glProgramParameter4fNV() {
        return glad_debug_glProgramParameter4fNV$constants.SEGMENT.get(glad_debug_glProgramParameter4fNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETER4FNVPROC glad_debug_glProgramParameter4fNV
     * }
     */
    public static void glad_debug_glProgramParameter4fNV(MemorySegment varValue) {
        glad_debug_glProgramParameter4fNV$constants.SEGMENT.set(glad_debug_glProgramParameter4fNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramParameter4fvNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramParameter4fvNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETER4FVNVPROC glad_glProgramParameter4fvNV
     * }
     */
    public static AddressLayout glad_glProgramParameter4fvNV$layout() {
        return glad_glProgramParameter4fvNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETER4FVNVPROC glad_glProgramParameter4fvNV
     * }
     */
    public static MemorySegment glad_glProgramParameter4fvNV$segment() {
        return glad_glProgramParameter4fvNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETER4FVNVPROC glad_glProgramParameter4fvNV
     * }
     */
    public static MemorySegment glad_glProgramParameter4fvNV() {
        return glad_glProgramParameter4fvNV$constants.SEGMENT.get(glad_glProgramParameter4fvNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETER4FVNVPROC glad_glProgramParameter4fvNV
     * }
     */
    public static void glad_glProgramParameter4fvNV(MemorySegment varValue) {
        glad_glProgramParameter4fvNV$constants.SEGMENT.set(glad_glProgramParameter4fvNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramParameter4fvNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramParameter4fvNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETER4FVNVPROC glad_debug_glProgramParameter4fvNV
     * }
     */
    public static AddressLayout glad_debug_glProgramParameter4fvNV$layout() {
        return glad_debug_glProgramParameter4fvNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETER4FVNVPROC glad_debug_glProgramParameter4fvNV
     * }
     */
    public static MemorySegment glad_debug_glProgramParameter4fvNV$segment() {
        return glad_debug_glProgramParameter4fvNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETER4FVNVPROC glad_debug_glProgramParameter4fvNV
     * }
     */
    public static MemorySegment glad_debug_glProgramParameter4fvNV() {
        return glad_debug_glProgramParameter4fvNV$constants.SEGMENT.get(glad_debug_glProgramParameter4fvNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETER4FVNVPROC glad_debug_glProgramParameter4fvNV
     * }
     */
    public static void glad_debug_glProgramParameter4fvNV(MemorySegment varValue) {
        glad_debug_glProgramParameter4fvNV$constants.SEGMENT.set(glad_debug_glProgramParameter4fvNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramParameteri$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramParameteri").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETERIPROC glad_glProgramParameteri
     * }
     */
    public static AddressLayout glad_glProgramParameteri$layout() {
        return glad_glProgramParameteri$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETERIPROC glad_glProgramParameteri
     * }
     */
    public static MemorySegment glad_glProgramParameteri$segment() {
        return glad_glProgramParameteri$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETERIPROC glad_glProgramParameteri
     * }
     */
    public static MemorySegment glad_glProgramParameteri() {
        return glad_glProgramParameteri$constants.SEGMENT.get(glad_glProgramParameteri$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETERIPROC glad_glProgramParameteri
     * }
     */
    public static void glad_glProgramParameteri(MemorySegment varValue) {
        glad_glProgramParameteri$constants.SEGMENT.set(glad_glProgramParameteri$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramParameteri$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramParameteri").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETERIPROC glad_debug_glProgramParameteri
     * }
     */
    public static AddressLayout glad_debug_glProgramParameteri$layout() {
        return glad_debug_glProgramParameteri$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETERIPROC glad_debug_glProgramParameteri
     * }
     */
    public static MemorySegment glad_debug_glProgramParameteri$segment() {
        return glad_debug_glProgramParameteri$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETERIPROC glad_debug_glProgramParameteri
     * }
     */
    public static MemorySegment glad_debug_glProgramParameteri() {
        return glad_debug_glProgramParameteri$constants.SEGMENT.get(glad_debug_glProgramParameteri$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETERIPROC glad_debug_glProgramParameteri
     * }
     */
    public static void glad_debug_glProgramParameteri(MemorySegment varValue) {
        glad_debug_glProgramParameteri$constants.SEGMENT.set(glad_debug_glProgramParameteri$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramParameteriARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramParameteriARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETERIARBPROC glad_glProgramParameteriARB
     * }
     */
    public static AddressLayout glad_glProgramParameteriARB$layout() {
        return glad_glProgramParameteriARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETERIARBPROC glad_glProgramParameteriARB
     * }
     */
    public static MemorySegment glad_glProgramParameteriARB$segment() {
        return glad_glProgramParameteriARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETERIARBPROC glad_glProgramParameteriARB
     * }
     */
    public static MemorySegment glad_glProgramParameteriARB() {
        return glad_glProgramParameteriARB$constants.SEGMENT.get(glad_glProgramParameteriARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETERIARBPROC glad_glProgramParameteriARB
     * }
     */
    public static void glad_glProgramParameteriARB(MemorySegment varValue) {
        glad_glProgramParameteriARB$constants.SEGMENT.set(glad_glProgramParameteriARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramParameteriARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramParameteriARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETERIARBPROC glad_debug_glProgramParameteriARB
     * }
     */
    public static AddressLayout glad_debug_glProgramParameteriARB$layout() {
        return glad_debug_glProgramParameteriARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETERIARBPROC glad_debug_glProgramParameteriARB
     * }
     */
    public static MemorySegment glad_debug_glProgramParameteriARB$segment() {
        return glad_debug_glProgramParameteriARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETERIARBPROC glad_debug_glProgramParameteriARB
     * }
     */
    public static MemorySegment glad_debug_glProgramParameteriARB() {
        return glad_debug_glProgramParameteriARB$constants.SEGMENT.get(glad_debug_glProgramParameteriARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETERIARBPROC glad_debug_glProgramParameteriARB
     * }
     */
    public static void glad_debug_glProgramParameteriARB(MemorySegment varValue) {
        glad_debug_glProgramParameteriARB$constants.SEGMENT.set(glad_debug_glProgramParameteriARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramParameteriEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramParameteriEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETERIEXTPROC glad_glProgramParameteriEXT
     * }
     */
    public static AddressLayout glad_glProgramParameteriEXT$layout() {
        return glad_glProgramParameteriEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETERIEXTPROC glad_glProgramParameteriEXT
     * }
     */
    public static MemorySegment glad_glProgramParameteriEXT$segment() {
        return glad_glProgramParameteriEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETERIEXTPROC glad_glProgramParameteriEXT
     * }
     */
    public static MemorySegment glad_glProgramParameteriEXT() {
        return glad_glProgramParameteriEXT$constants.SEGMENT.get(glad_glProgramParameteriEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETERIEXTPROC glad_glProgramParameteriEXT
     * }
     */
    public static void glad_glProgramParameteriEXT(MemorySegment varValue) {
        glad_glProgramParameteriEXT$constants.SEGMENT.set(glad_glProgramParameteriEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramParameteriEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramParameteriEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETERIEXTPROC glad_debug_glProgramParameteriEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramParameteriEXT$layout() {
        return glad_debug_glProgramParameteriEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETERIEXTPROC glad_debug_glProgramParameteriEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramParameteriEXT$segment() {
        return glad_debug_glProgramParameteriEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETERIEXTPROC glad_debug_glProgramParameteriEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramParameteriEXT() {
        return glad_debug_glProgramParameteriEXT$constants.SEGMENT.get(glad_debug_glProgramParameteriEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETERIEXTPROC glad_debug_glProgramParameteriEXT
     * }
     */
    public static void glad_debug_glProgramParameteriEXT(MemorySegment varValue) {
        glad_debug_glProgramParameteriEXT$constants.SEGMENT.set(glad_debug_glProgramParameteriEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramParameters4dvNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramParameters4dvNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETERS4DVNVPROC glad_glProgramParameters4dvNV
     * }
     */
    public static AddressLayout glad_glProgramParameters4dvNV$layout() {
        return glad_glProgramParameters4dvNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETERS4DVNVPROC glad_glProgramParameters4dvNV
     * }
     */
    public static MemorySegment glad_glProgramParameters4dvNV$segment() {
        return glad_glProgramParameters4dvNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETERS4DVNVPROC glad_glProgramParameters4dvNV
     * }
     */
    public static MemorySegment glad_glProgramParameters4dvNV() {
        return glad_glProgramParameters4dvNV$constants.SEGMENT.get(glad_glProgramParameters4dvNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETERS4DVNVPROC glad_glProgramParameters4dvNV
     * }
     */
    public static void glad_glProgramParameters4dvNV(MemorySegment varValue) {
        glad_glProgramParameters4dvNV$constants.SEGMENT.set(glad_glProgramParameters4dvNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramParameters4dvNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramParameters4dvNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETERS4DVNVPROC glad_debug_glProgramParameters4dvNV
     * }
     */
    public static AddressLayout glad_debug_glProgramParameters4dvNV$layout() {
        return glad_debug_glProgramParameters4dvNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETERS4DVNVPROC glad_debug_glProgramParameters4dvNV
     * }
     */
    public static MemorySegment glad_debug_glProgramParameters4dvNV$segment() {
        return glad_debug_glProgramParameters4dvNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETERS4DVNVPROC glad_debug_glProgramParameters4dvNV
     * }
     */
    public static MemorySegment glad_debug_glProgramParameters4dvNV() {
        return glad_debug_glProgramParameters4dvNV$constants.SEGMENT.get(glad_debug_glProgramParameters4dvNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETERS4DVNVPROC glad_debug_glProgramParameters4dvNV
     * }
     */
    public static void glad_debug_glProgramParameters4dvNV(MemorySegment varValue) {
        glad_debug_glProgramParameters4dvNV$constants.SEGMENT.set(glad_debug_glProgramParameters4dvNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramParameters4fvNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramParameters4fvNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETERS4FVNVPROC glad_glProgramParameters4fvNV
     * }
     */
    public static AddressLayout glad_glProgramParameters4fvNV$layout() {
        return glad_glProgramParameters4fvNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETERS4FVNVPROC glad_glProgramParameters4fvNV
     * }
     */
    public static MemorySegment glad_glProgramParameters4fvNV$segment() {
        return glad_glProgramParameters4fvNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETERS4FVNVPROC glad_glProgramParameters4fvNV
     * }
     */
    public static MemorySegment glad_glProgramParameters4fvNV() {
        return glad_glProgramParameters4fvNV$constants.SEGMENT.get(glad_glProgramParameters4fvNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETERS4FVNVPROC glad_glProgramParameters4fvNV
     * }
     */
    public static void glad_glProgramParameters4fvNV(MemorySegment varValue) {
        glad_glProgramParameters4fvNV$constants.SEGMENT.set(glad_glProgramParameters4fvNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramParameters4fvNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramParameters4fvNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETERS4FVNVPROC glad_debug_glProgramParameters4fvNV
     * }
     */
    public static AddressLayout glad_debug_glProgramParameters4fvNV$layout() {
        return glad_debug_glProgramParameters4fvNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETERS4FVNVPROC glad_debug_glProgramParameters4fvNV
     * }
     */
    public static MemorySegment glad_debug_glProgramParameters4fvNV$segment() {
        return glad_debug_glProgramParameters4fvNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETERS4FVNVPROC glad_debug_glProgramParameters4fvNV
     * }
     */
    public static MemorySegment glad_debug_glProgramParameters4fvNV() {
        return glad_debug_glProgramParameters4fvNV$constants.SEGMENT.get(glad_debug_glProgramParameters4fvNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMPARAMETERS4FVNVPROC glad_debug_glProgramParameters4fvNV
     * }
     */
    public static void glad_debug_glProgramParameters4fvNV(MemorySegment varValue) {
        glad_debug_glProgramParameters4fvNV$constants.SEGMENT.set(glad_debug_glProgramParameters4fvNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramStringARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramStringARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMSTRINGARBPROC glad_glProgramStringARB
     * }
     */
    public static AddressLayout glad_glProgramStringARB$layout() {
        return glad_glProgramStringARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMSTRINGARBPROC glad_glProgramStringARB
     * }
     */
    public static MemorySegment glad_glProgramStringARB$segment() {
        return glad_glProgramStringARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMSTRINGARBPROC glad_glProgramStringARB
     * }
     */
    public static MemorySegment glad_glProgramStringARB() {
        return glad_glProgramStringARB$constants.SEGMENT.get(glad_glProgramStringARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMSTRINGARBPROC glad_glProgramStringARB
     * }
     */
    public static void glad_glProgramStringARB(MemorySegment varValue) {
        glad_glProgramStringARB$constants.SEGMENT.set(glad_glProgramStringARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramStringARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramStringARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMSTRINGARBPROC glad_debug_glProgramStringARB
     * }
     */
    public static AddressLayout glad_debug_glProgramStringARB$layout() {
        return glad_debug_glProgramStringARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMSTRINGARBPROC glad_debug_glProgramStringARB
     * }
     */
    public static MemorySegment glad_debug_glProgramStringARB$segment() {
        return glad_debug_glProgramStringARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMSTRINGARBPROC glad_debug_glProgramStringARB
     * }
     */
    public static MemorySegment glad_debug_glProgramStringARB() {
        return glad_debug_glProgramStringARB$constants.SEGMENT.get(glad_debug_glProgramStringARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMSTRINGARBPROC glad_debug_glProgramStringARB
     * }
     */
    public static void glad_debug_glProgramStringARB(MemorySegment varValue) {
        glad_debug_glProgramStringARB$constants.SEGMENT.set(glad_debug_glProgramStringARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform1d$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform1d").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1DPROC glad_glProgramUniform1d
     * }
     */
    public static AddressLayout glad_glProgramUniform1d$layout() {
        return glad_glProgramUniform1d$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1DPROC glad_glProgramUniform1d
     * }
     */
    public static MemorySegment glad_glProgramUniform1d$segment() {
        return glad_glProgramUniform1d$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1DPROC glad_glProgramUniform1d
     * }
     */
    public static MemorySegment glad_glProgramUniform1d() {
        return glad_glProgramUniform1d$constants.SEGMENT.get(glad_glProgramUniform1d$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1DPROC glad_glProgramUniform1d
     * }
     */
    public static void glad_glProgramUniform1d(MemorySegment varValue) {
        glad_glProgramUniform1d$constants.SEGMENT.set(glad_glProgramUniform1d$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform1d$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform1d").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1DPROC glad_debug_glProgramUniform1d
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform1d$layout() {
        return glad_debug_glProgramUniform1d$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1DPROC glad_debug_glProgramUniform1d
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform1d$segment() {
        return glad_debug_glProgramUniform1d$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1DPROC glad_debug_glProgramUniform1d
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform1d() {
        return glad_debug_glProgramUniform1d$constants.SEGMENT.get(glad_debug_glProgramUniform1d$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1DPROC glad_debug_glProgramUniform1d
     * }
     */
    public static void glad_debug_glProgramUniform1d(MemorySegment varValue) {
        glad_debug_glProgramUniform1d$constants.SEGMENT.set(glad_debug_glProgramUniform1d$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform1dEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform1dEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1DEXTPROC glad_glProgramUniform1dEXT
     * }
     */
    public static AddressLayout glad_glProgramUniform1dEXT$layout() {
        return glad_glProgramUniform1dEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1DEXTPROC glad_glProgramUniform1dEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform1dEXT$segment() {
        return glad_glProgramUniform1dEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1DEXTPROC glad_glProgramUniform1dEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform1dEXT() {
        return glad_glProgramUniform1dEXT$constants.SEGMENT.get(glad_glProgramUniform1dEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1DEXTPROC glad_glProgramUniform1dEXT
     * }
     */
    public static void glad_glProgramUniform1dEXT(MemorySegment varValue) {
        glad_glProgramUniform1dEXT$constants.SEGMENT.set(glad_glProgramUniform1dEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform1dEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform1dEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1DEXTPROC glad_debug_glProgramUniform1dEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform1dEXT$layout() {
        return glad_debug_glProgramUniform1dEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1DEXTPROC glad_debug_glProgramUniform1dEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform1dEXT$segment() {
        return glad_debug_glProgramUniform1dEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1DEXTPROC glad_debug_glProgramUniform1dEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform1dEXT() {
        return glad_debug_glProgramUniform1dEXT$constants.SEGMENT.get(glad_debug_glProgramUniform1dEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1DEXTPROC glad_debug_glProgramUniform1dEXT
     * }
     */
    public static void glad_debug_glProgramUniform1dEXT(MemorySegment varValue) {
        glad_debug_glProgramUniform1dEXT$constants.SEGMENT.set(glad_debug_glProgramUniform1dEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform1dv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform1dv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1DVPROC glad_glProgramUniform1dv
     * }
     */
    public static AddressLayout glad_glProgramUniform1dv$layout() {
        return glad_glProgramUniform1dv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1DVPROC glad_glProgramUniform1dv
     * }
     */
    public static MemorySegment glad_glProgramUniform1dv$segment() {
        return glad_glProgramUniform1dv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1DVPROC glad_glProgramUniform1dv
     * }
     */
    public static MemorySegment glad_glProgramUniform1dv() {
        return glad_glProgramUniform1dv$constants.SEGMENT.get(glad_glProgramUniform1dv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1DVPROC glad_glProgramUniform1dv
     * }
     */
    public static void glad_glProgramUniform1dv(MemorySegment varValue) {
        glad_glProgramUniform1dv$constants.SEGMENT.set(glad_glProgramUniform1dv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform1dv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform1dv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1DVPROC glad_debug_glProgramUniform1dv
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform1dv$layout() {
        return glad_debug_glProgramUniform1dv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1DVPROC glad_debug_glProgramUniform1dv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform1dv$segment() {
        return glad_debug_glProgramUniform1dv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1DVPROC glad_debug_glProgramUniform1dv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform1dv() {
        return glad_debug_glProgramUniform1dv$constants.SEGMENT.get(glad_debug_glProgramUniform1dv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1DVPROC glad_debug_glProgramUniform1dv
     * }
     */
    public static void glad_debug_glProgramUniform1dv(MemorySegment varValue) {
        glad_debug_glProgramUniform1dv$constants.SEGMENT.set(glad_debug_glProgramUniform1dv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform1dvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform1dvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1DVEXTPROC glad_glProgramUniform1dvEXT
     * }
     */
    public static AddressLayout glad_glProgramUniform1dvEXT$layout() {
        return glad_glProgramUniform1dvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1DVEXTPROC glad_glProgramUniform1dvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform1dvEXT$segment() {
        return glad_glProgramUniform1dvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1DVEXTPROC glad_glProgramUniform1dvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform1dvEXT() {
        return glad_glProgramUniform1dvEXT$constants.SEGMENT.get(glad_glProgramUniform1dvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1DVEXTPROC glad_glProgramUniform1dvEXT
     * }
     */
    public static void glad_glProgramUniform1dvEXT(MemorySegment varValue) {
        glad_glProgramUniform1dvEXT$constants.SEGMENT.set(glad_glProgramUniform1dvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform1dvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform1dvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1DVEXTPROC glad_debug_glProgramUniform1dvEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform1dvEXT$layout() {
        return glad_debug_glProgramUniform1dvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1DVEXTPROC glad_debug_glProgramUniform1dvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform1dvEXT$segment() {
        return glad_debug_glProgramUniform1dvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1DVEXTPROC glad_debug_glProgramUniform1dvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform1dvEXT() {
        return glad_debug_glProgramUniform1dvEXT$constants.SEGMENT.get(glad_debug_glProgramUniform1dvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1DVEXTPROC glad_debug_glProgramUniform1dvEXT
     * }
     */
    public static void glad_debug_glProgramUniform1dvEXT(MemorySegment varValue) {
        glad_debug_glProgramUniform1dvEXT$constants.SEGMENT.set(glad_debug_glProgramUniform1dvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform1f$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform1f").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1FPROC glad_glProgramUniform1f
     * }
     */
    public static AddressLayout glad_glProgramUniform1f$layout() {
        return glad_glProgramUniform1f$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1FPROC glad_glProgramUniform1f
     * }
     */
    public static MemorySegment glad_glProgramUniform1f$segment() {
        return glad_glProgramUniform1f$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1FPROC glad_glProgramUniform1f
     * }
     */
    public static MemorySegment glad_glProgramUniform1f() {
        return glad_glProgramUniform1f$constants.SEGMENT.get(glad_glProgramUniform1f$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1FPROC glad_glProgramUniform1f
     * }
     */
    public static void glad_glProgramUniform1f(MemorySegment varValue) {
        glad_glProgramUniform1f$constants.SEGMENT.set(glad_glProgramUniform1f$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform1f$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform1f").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1FPROC glad_debug_glProgramUniform1f
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform1f$layout() {
        return glad_debug_glProgramUniform1f$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1FPROC glad_debug_glProgramUniform1f
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform1f$segment() {
        return glad_debug_glProgramUniform1f$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1FPROC glad_debug_glProgramUniform1f
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform1f() {
        return glad_debug_glProgramUniform1f$constants.SEGMENT.get(glad_debug_glProgramUniform1f$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1FPROC glad_debug_glProgramUniform1f
     * }
     */
    public static void glad_debug_glProgramUniform1f(MemorySegment varValue) {
        glad_debug_glProgramUniform1f$constants.SEGMENT.set(glad_debug_glProgramUniform1f$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform1fEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform1fEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1FEXTPROC glad_glProgramUniform1fEXT
     * }
     */
    public static AddressLayout glad_glProgramUniform1fEXT$layout() {
        return glad_glProgramUniform1fEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1FEXTPROC glad_glProgramUniform1fEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform1fEXT$segment() {
        return glad_glProgramUniform1fEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1FEXTPROC glad_glProgramUniform1fEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform1fEXT() {
        return glad_glProgramUniform1fEXT$constants.SEGMENT.get(glad_glProgramUniform1fEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1FEXTPROC glad_glProgramUniform1fEXT
     * }
     */
    public static void glad_glProgramUniform1fEXT(MemorySegment varValue) {
        glad_glProgramUniform1fEXT$constants.SEGMENT.set(glad_glProgramUniform1fEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform1fEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform1fEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1FEXTPROC glad_debug_glProgramUniform1fEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform1fEXT$layout() {
        return glad_debug_glProgramUniform1fEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1FEXTPROC glad_debug_glProgramUniform1fEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform1fEXT$segment() {
        return glad_debug_glProgramUniform1fEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1FEXTPROC glad_debug_glProgramUniform1fEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform1fEXT() {
        return glad_debug_glProgramUniform1fEXT$constants.SEGMENT.get(glad_debug_glProgramUniform1fEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1FEXTPROC glad_debug_glProgramUniform1fEXT
     * }
     */
    public static void glad_debug_glProgramUniform1fEXT(MemorySegment varValue) {
        glad_debug_glProgramUniform1fEXT$constants.SEGMENT.set(glad_debug_glProgramUniform1fEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform1fv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform1fv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1FVPROC glad_glProgramUniform1fv
     * }
     */
    public static AddressLayout glad_glProgramUniform1fv$layout() {
        return glad_glProgramUniform1fv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1FVPROC glad_glProgramUniform1fv
     * }
     */
    public static MemorySegment glad_glProgramUniform1fv$segment() {
        return glad_glProgramUniform1fv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1FVPROC glad_glProgramUniform1fv
     * }
     */
    public static MemorySegment glad_glProgramUniform1fv() {
        return glad_glProgramUniform1fv$constants.SEGMENT.get(glad_glProgramUniform1fv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1FVPROC glad_glProgramUniform1fv
     * }
     */
    public static void glad_glProgramUniform1fv(MemorySegment varValue) {
        glad_glProgramUniform1fv$constants.SEGMENT.set(glad_glProgramUniform1fv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform1fv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform1fv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1FVPROC glad_debug_glProgramUniform1fv
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform1fv$layout() {
        return glad_debug_glProgramUniform1fv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1FVPROC glad_debug_glProgramUniform1fv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform1fv$segment() {
        return glad_debug_glProgramUniform1fv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1FVPROC glad_debug_glProgramUniform1fv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform1fv() {
        return glad_debug_glProgramUniform1fv$constants.SEGMENT.get(glad_debug_glProgramUniform1fv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1FVPROC glad_debug_glProgramUniform1fv
     * }
     */
    public static void glad_debug_glProgramUniform1fv(MemorySegment varValue) {
        glad_debug_glProgramUniform1fv$constants.SEGMENT.set(glad_debug_glProgramUniform1fv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform1fvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform1fvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1FVEXTPROC glad_glProgramUniform1fvEXT
     * }
     */
    public static AddressLayout glad_glProgramUniform1fvEXT$layout() {
        return glad_glProgramUniform1fvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1FVEXTPROC glad_glProgramUniform1fvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform1fvEXT$segment() {
        return glad_glProgramUniform1fvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1FVEXTPROC glad_glProgramUniform1fvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform1fvEXT() {
        return glad_glProgramUniform1fvEXT$constants.SEGMENT.get(glad_glProgramUniform1fvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1FVEXTPROC glad_glProgramUniform1fvEXT
     * }
     */
    public static void glad_glProgramUniform1fvEXT(MemorySegment varValue) {
        glad_glProgramUniform1fvEXT$constants.SEGMENT.set(glad_glProgramUniform1fvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform1fvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform1fvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1FVEXTPROC glad_debug_glProgramUniform1fvEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform1fvEXT$layout() {
        return glad_debug_glProgramUniform1fvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1FVEXTPROC glad_debug_glProgramUniform1fvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform1fvEXT$segment() {
        return glad_debug_glProgramUniform1fvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1FVEXTPROC glad_debug_glProgramUniform1fvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform1fvEXT() {
        return glad_debug_glProgramUniform1fvEXT$constants.SEGMENT.get(glad_debug_glProgramUniform1fvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1FVEXTPROC glad_debug_glProgramUniform1fvEXT
     * }
     */
    public static void glad_debug_glProgramUniform1fvEXT(MemorySegment varValue) {
        glad_debug_glProgramUniform1fvEXT$constants.SEGMENT.set(glad_debug_glProgramUniform1fvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform1i$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform1i").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1IPROC glad_glProgramUniform1i
     * }
     */
    public static AddressLayout glad_glProgramUniform1i$layout() {
        return glad_glProgramUniform1i$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1IPROC glad_glProgramUniform1i
     * }
     */
    public static MemorySegment glad_glProgramUniform1i$segment() {
        return glad_glProgramUniform1i$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1IPROC glad_glProgramUniform1i
     * }
     */
    public static MemorySegment glad_glProgramUniform1i() {
        return glad_glProgramUniform1i$constants.SEGMENT.get(glad_glProgramUniform1i$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1IPROC glad_glProgramUniform1i
     * }
     */
    public static void glad_glProgramUniform1i(MemorySegment varValue) {
        glad_glProgramUniform1i$constants.SEGMENT.set(glad_glProgramUniform1i$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform1i$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform1i").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1IPROC glad_debug_glProgramUniform1i
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform1i$layout() {
        return glad_debug_glProgramUniform1i$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1IPROC glad_debug_glProgramUniform1i
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform1i$segment() {
        return glad_debug_glProgramUniform1i$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1IPROC glad_debug_glProgramUniform1i
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform1i() {
        return glad_debug_glProgramUniform1i$constants.SEGMENT.get(glad_debug_glProgramUniform1i$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1IPROC glad_debug_glProgramUniform1i
     * }
     */
    public static void glad_debug_glProgramUniform1i(MemorySegment varValue) {
        glad_debug_glProgramUniform1i$constants.SEGMENT.set(glad_debug_glProgramUniform1i$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform1iEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform1iEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1IEXTPROC glad_glProgramUniform1iEXT
     * }
     */
    public static AddressLayout glad_glProgramUniform1iEXT$layout() {
        return glad_glProgramUniform1iEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1IEXTPROC glad_glProgramUniform1iEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform1iEXT$segment() {
        return glad_glProgramUniform1iEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1IEXTPROC glad_glProgramUniform1iEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform1iEXT() {
        return glad_glProgramUniform1iEXT$constants.SEGMENT.get(glad_glProgramUniform1iEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1IEXTPROC glad_glProgramUniform1iEXT
     * }
     */
    public static void glad_glProgramUniform1iEXT(MemorySegment varValue) {
        glad_glProgramUniform1iEXT$constants.SEGMENT.set(glad_glProgramUniform1iEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform1iEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform1iEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1IEXTPROC glad_debug_glProgramUniform1iEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform1iEXT$layout() {
        return glad_debug_glProgramUniform1iEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1IEXTPROC glad_debug_glProgramUniform1iEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform1iEXT$segment() {
        return glad_debug_glProgramUniform1iEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1IEXTPROC glad_debug_glProgramUniform1iEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform1iEXT() {
        return glad_debug_glProgramUniform1iEXT$constants.SEGMENT.get(glad_debug_glProgramUniform1iEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1IEXTPROC glad_debug_glProgramUniform1iEXT
     * }
     */
    public static void glad_debug_glProgramUniform1iEXT(MemorySegment varValue) {
        glad_debug_glProgramUniform1iEXT$constants.SEGMENT.set(glad_debug_glProgramUniform1iEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform1iv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform1iv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1IVPROC glad_glProgramUniform1iv
     * }
     */
    public static AddressLayout glad_glProgramUniform1iv$layout() {
        return glad_glProgramUniform1iv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1IVPROC glad_glProgramUniform1iv
     * }
     */
    public static MemorySegment glad_glProgramUniform1iv$segment() {
        return glad_glProgramUniform1iv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1IVPROC glad_glProgramUniform1iv
     * }
     */
    public static MemorySegment glad_glProgramUniform1iv() {
        return glad_glProgramUniform1iv$constants.SEGMENT.get(glad_glProgramUniform1iv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1IVPROC glad_glProgramUniform1iv
     * }
     */
    public static void glad_glProgramUniform1iv(MemorySegment varValue) {
        glad_glProgramUniform1iv$constants.SEGMENT.set(glad_glProgramUniform1iv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform1iv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform1iv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1IVPROC glad_debug_glProgramUniform1iv
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform1iv$layout() {
        return glad_debug_glProgramUniform1iv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1IVPROC glad_debug_glProgramUniform1iv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform1iv$segment() {
        return glad_debug_glProgramUniform1iv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1IVPROC glad_debug_glProgramUniform1iv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform1iv() {
        return glad_debug_glProgramUniform1iv$constants.SEGMENT.get(glad_debug_glProgramUniform1iv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1IVPROC glad_debug_glProgramUniform1iv
     * }
     */
    public static void glad_debug_glProgramUniform1iv(MemorySegment varValue) {
        glad_debug_glProgramUniform1iv$constants.SEGMENT.set(glad_debug_glProgramUniform1iv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform1ivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform1ivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1IVEXTPROC glad_glProgramUniform1ivEXT
     * }
     */
    public static AddressLayout glad_glProgramUniform1ivEXT$layout() {
        return glad_glProgramUniform1ivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1IVEXTPROC glad_glProgramUniform1ivEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform1ivEXT$segment() {
        return glad_glProgramUniform1ivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1IVEXTPROC glad_glProgramUniform1ivEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform1ivEXT() {
        return glad_glProgramUniform1ivEXT$constants.SEGMENT.get(glad_glProgramUniform1ivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1IVEXTPROC glad_glProgramUniform1ivEXT
     * }
     */
    public static void glad_glProgramUniform1ivEXT(MemorySegment varValue) {
        glad_glProgramUniform1ivEXT$constants.SEGMENT.set(glad_glProgramUniform1ivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform1ivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform1ivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1IVEXTPROC glad_debug_glProgramUniform1ivEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform1ivEXT$layout() {
        return glad_debug_glProgramUniform1ivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1IVEXTPROC glad_debug_glProgramUniform1ivEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform1ivEXT$segment() {
        return glad_debug_glProgramUniform1ivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1IVEXTPROC glad_debug_glProgramUniform1ivEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform1ivEXT() {
        return glad_debug_glProgramUniform1ivEXT$constants.SEGMENT.get(glad_debug_glProgramUniform1ivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1IVEXTPROC glad_debug_glProgramUniform1ivEXT
     * }
     */
    public static void glad_debug_glProgramUniform1ivEXT(MemorySegment varValue) {
        glad_debug_glProgramUniform1ivEXT$constants.SEGMENT.set(glad_debug_glProgramUniform1ivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform1ui$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform1ui").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1UIPROC glad_glProgramUniform1ui
     * }
     */
    public static AddressLayout glad_glProgramUniform1ui$layout() {
        return glad_glProgramUniform1ui$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1UIPROC glad_glProgramUniform1ui
     * }
     */
    public static MemorySegment glad_glProgramUniform1ui$segment() {
        return glad_glProgramUniform1ui$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1UIPROC glad_glProgramUniform1ui
     * }
     */
    public static MemorySegment glad_glProgramUniform1ui() {
        return glad_glProgramUniform1ui$constants.SEGMENT.get(glad_glProgramUniform1ui$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1UIPROC glad_glProgramUniform1ui
     * }
     */
    public static void glad_glProgramUniform1ui(MemorySegment varValue) {
        glad_glProgramUniform1ui$constants.SEGMENT.set(glad_glProgramUniform1ui$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform1ui$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform1ui").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1UIPROC glad_debug_glProgramUniform1ui
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform1ui$layout() {
        return glad_debug_glProgramUniform1ui$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1UIPROC glad_debug_glProgramUniform1ui
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform1ui$segment() {
        return glad_debug_glProgramUniform1ui$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1UIPROC glad_debug_glProgramUniform1ui
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform1ui() {
        return glad_debug_glProgramUniform1ui$constants.SEGMENT.get(glad_debug_glProgramUniform1ui$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1UIPROC glad_debug_glProgramUniform1ui
     * }
     */
    public static void glad_debug_glProgramUniform1ui(MemorySegment varValue) {
        glad_debug_glProgramUniform1ui$constants.SEGMENT.set(glad_debug_glProgramUniform1ui$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform1uiEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform1uiEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1UIEXTPROC glad_glProgramUniform1uiEXT
     * }
     */
    public static AddressLayout glad_glProgramUniform1uiEXT$layout() {
        return glad_glProgramUniform1uiEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1UIEXTPROC glad_glProgramUniform1uiEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform1uiEXT$segment() {
        return glad_glProgramUniform1uiEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1UIEXTPROC glad_glProgramUniform1uiEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform1uiEXT() {
        return glad_glProgramUniform1uiEXT$constants.SEGMENT.get(glad_glProgramUniform1uiEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1UIEXTPROC glad_glProgramUniform1uiEXT
     * }
     */
    public static void glad_glProgramUniform1uiEXT(MemorySegment varValue) {
        glad_glProgramUniform1uiEXT$constants.SEGMENT.set(glad_glProgramUniform1uiEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform1uiEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform1uiEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1UIEXTPROC glad_debug_glProgramUniform1uiEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform1uiEXT$layout() {
        return glad_debug_glProgramUniform1uiEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1UIEXTPROC glad_debug_glProgramUniform1uiEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform1uiEXT$segment() {
        return glad_debug_glProgramUniform1uiEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1UIEXTPROC glad_debug_glProgramUniform1uiEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform1uiEXT() {
        return glad_debug_glProgramUniform1uiEXT$constants.SEGMENT.get(glad_debug_glProgramUniform1uiEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1UIEXTPROC glad_debug_glProgramUniform1uiEXT
     * }
     */
    public static void glad_debug_glProgramUniform1uiEXT(MemorySegment varValue) {
        glad_debug_glProgramUniform1uiEXT$constants.SEGMENT.set(glad_debug_glProgramUniform1uiEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform1uiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform1uiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1UIVPROC glad_glProgramUniform1uiv
     * }
     */
    public static AddressLayout glad_glProgramUniform1uiv$layout() {
        return glad_glProgramUniform1uiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1UIVPROC glad_glProgramUniform1uiv
     * }
     */
    public static MemorySegment glad_glProgramUniform1uiv$segment() {
        return glad_glProgramUniform1uiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1UIVPROC glad_glProgramUniform1uiv
     * }
     */
    public static MemorySegment glad_glProgramUniform1uiv() {
        return glad_glProgramUniform1uiv$constants.SEGMENT.get(glad_glProgramUniform1uiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1UIVPROC glad_glProgramUniform1uiv
     * }
     */
    public static void glad_glProgramUniform1uiv(MemorySegment varValue) {
        glad_glProgramUniform1uiv$constants.SEGMENT.set(glad_glProgramUniform1uiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform1uiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform1uiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1UIVPROC glad_debug_glProgramUniform1uiv
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform1uiv$layout() {
        return glad_debug_glProgramUniform1uiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1UIVPROC glad_debug_glProgramUniform1uiv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform1uiv$segment() {
        return glad_debug_glProgramUniform1uiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1UIVPROC glad_debug_glProgramUniform1uiv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform1uiv() {
        return glad_debug_glProgramUniform1uiv$constants.SEGMENT.get(glad_debug_glProgramUniform1uiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1UIVPROC glad_debug_glProgramUniform1uiv
     * }
     */
    public static void glad_debug_glProgramUniform1uiv(MemorySegment varValue) {
        glad_debug_glProgramUniform1uiv$constants.SEGMENT.set(glad_debug_glProgramUniform1uiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform1uivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform1uivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1UIVEXTPROC glad_glProgramUniform1uivEXT
     * }
     */
    public static AddressLayout glad_glProgramUniform1uivEXT$layout() {
        return glad_glProgramUniform1uivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1UIVEXTPROC glad_glProgramUniform1uivEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform1uivEXT$segment() {
        return glad_glProgramUniform1uivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1UIVEXTPROC glad_glProgramUniform1uivEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform1uivEXT() {
        return glad_glProgramUniform1uivEXT$constants.SEGMENT.get(glad_glProgramUniform1uivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1UIVEXTPROC glad_glProgramUniform1uivEXT
     * }
     */
    public static void glad_glProgramUniform1uivEXT(MemorySegment varValue) {
        glad_glProgramUniform1uivEXT$constants.SEGMENT.set(glad_glProgramUniform1uivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform1uivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform1uivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1UIVEXTPROC glad_debug_glProgramUniform1uivEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform1uivEXT$layout() {
        return glad_debug_glProgramUniform1uivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1UIVEXTPROC glad_debug_glProgramUniform1uivEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform1uivEXT$segment() {
        return glad_debug_glProgramUniform1uivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1UIVEXTPROC glad_debug_glProgramUniform1uivEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform1uivEXT() {
        return glad_debug_glProgramUniform1uivEXT$constants.SEGMENT.get(glad_debug_glProgramUniform1uivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM1UIVEXTPROC glad_debug_glProgramUniform1uivEXT
     * }
     */
    public static void glad_debug_glProgramUniform1uivEXT(MemorySegment varValue) {
        glad_debug_glProgramUniform1uivEXT$constants.SEGMENT.set(glad_debug_glProgramUniform1uivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform2d$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform2d").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2DPROC glad_glProgramUniform2d
     * }
     */
    public static AddressLayout glad_glProgramUniform2d$layout() {
        return glad_glProgramUniform2d$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2DPROC glad_glProgramUniform2d
     * }
     */
    public static MemorySegment glad_glProgramUniform2d$segment() {
        return glad_glProgramUniform2d$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2DPROC glad_glProgramUniform2d
     * }
     */
    public static MemorySegment glad_glProgramUniform2d() {
        return glad_glProgramUniform2d$constants.SEGMENT.get(glad_glProgramUniform2d$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2DPROC glad_glProgramUniform2d
     * }
     */
    public static void glad_glProgramUniform2d(MemorySegment varValue) {
        glad_glProgramUniform2d$constants.SEGMENT.set(glad_glProgramUniform2d$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform2d$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform2d").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2DPROC glad_debug_glProgramUniform2d
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform2d$layout() {
        return glad_debug_glProgramUniform2d$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2DPROC glad_debug_glProgramUniform2d
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform2d$segment() {
        return glad_debug_glProgramUniform2d$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2DPROC glad_debug_glProgramUniform2d
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform2d() {
        return glad_debug_glProgramUniform2d$constants.SEGMENT.get(glad_debug_glProgramUniform2d$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2DPROC glad_debug_glProgramUniform2d
     * }
     */
    public static void glad_debug_glProgramUniform2d(MemorySegment varValue) {
        glad_debug_glProgramUniform2d$constants.SEGMENT.set(glad_debug_glProgramUniform2d$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform2dEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform2dEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2DEXTPROC glad_glProgramUniform2dEXT
     * }
     */
    public static AddressLayout glad_glProgramUniform2dEXT$layout() {
        return glad_glProgramUniform2dEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2DEXTPROC glad_glProgramUniform2dEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform2dEXT$segment() {
        return glad_glProgramUniform2dEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2DEXTPROC glad_glProgramUniform2dEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform2dEXT() {
        return glad_glProgramUniform2dEXT$constants.SEGMENT.get(glad_glProgramUniform2dEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2DEXTPROC glad_glProgramUniform2dEXT
     * }
     */
    public static void glad_glProgramUniform2dEXT(MemorySegment varValue) {
        glad_glProgramUniform2dEXT$constants.SEGMENT.set(glad_glProgramUniform2dEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform2dEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform2dEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2DEXTPROC glad_debug_glProgramUniform2dEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform2dEXT$layout() {
        return glad_debug_glProgramUniform2dEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2DEXTPROC glad_debug_glProgramUniform2dEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform2dEXT$segment() {
        return glad_debug_glProgramUniform2dEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2DEXTPROC glad_debug_glProgramUniform2dEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform2dEXT() {
        return glad_debug_glProgramUniform2dEXT$constants.SEGMENT.get(glad_debug_glProgramUniform2dEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2DEXTPROC glad_debug_glProgramUniform2dEXT
     * }
     */
    public static void glad_debug_glProgramUniform2dEXT(MemorySegment varValue) {
        glad_debug_glProgramUniform2dEXT$constants.SEGMENT.set(glad_debug_glProgramUniform2dEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform2dv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform2dv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2DVPROC glad_glProgramUniform2dv
     * }
     */
    public static AddressLayout glad_glProgramUniform2dv$layout() {
        return glad_glProgramUniform2dv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2DVPROC glad_glProgramUniform2dv
     * }
     */
    public static MemorySegment glad_glProgramUniform2dv$segment() {
        return glad_glProgramUniform2dv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2DVPROC glad_glProgramUniform2dv
     * }
     */
    public static MemorySegment glad_glProgramUniform2dv() {
        return glad_glProgramUniform2dv$constants.SEGMENT.get(glad_glProgramUniform2dv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2DVPROC glad_glProgramUniform2dv
     * }
     */
    public static void glad_glProgramUniform2dv(MemorySegment varValue) {
        glad_glProgramUniform2dv$constants.SEGMENT.set(glad_glProgramUniform2dv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform2dv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform2dv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2DVPROC glad_debug_glProgramUniform2dv
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform2dv$layout() {
        return glad_debug_glProgramUniform2dv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2DVPROC glad_debug_glProgramUniform2dv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform2dv$segment() {
        return glad_debug_glProgramUniform2dv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2DVPROC glad_debug_glProgramUniform2dv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform2dv() {
        return glad_debug_glProgramUniform2dv$constants.SEGMENT.get(glad_debug_glProgramUniform2dv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2DVPROC glad_debug_glProgramUniform2dv
     * }
     */
    public static void glad_debug_glProgramUniform2dv(MemorySegment varValue) {
        glad_debug_glProgramUniform2dv$constants.SEGMENT.set(glad_debug_glProgramUniform2dv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform2dvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform2dvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2DVEXTPROC glad_glProgramUniform2dvEXT
     * }
     */
    public static AddressLayout glad_glProgramUniform2dvEXT$layout() {
        return glad_glProgramUniform2dvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2DVEXTPROC glad_glProgramUniform2dvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform2dvEXT$segment() {
        return glad_glProgramUniform2dvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2DVEXTPROC glad_glProgramUniform2dvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform2dvEXT() {
        return glad_glProgramUniform2dvEXT$constants.SEGMENT.get(glad_glProgramUniform2dvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2DVEXTPROC glad_glProgramUniform2dvEXT
     * }
     */
    public static void glad_glProgramUniform2dvEXT(MemorySegment varValue) {
        glad_glProgramUniform2dvEXT$constants.SEGMENT.set(glad_glProgramUniform2dvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform2dvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform2dvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2DVEXTPROC glad_debug_glProgramUniform2dvEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform2dvEXT$layout() {
        return glad_debug_glProgramUniform2dvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2DVEXTPROC glad_debug_glProgramUniform2dvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform2dvEXT$segment() {
        return glad_debug_glProgramUniform2dvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2DVEXTPROC glad_debug_glProgramUniform2dvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform2dvEXT() {
        return glad_debug_glProgramUniform2dvEXT$constants.SEGMENT.get(glad_debug_glProgramUniform2dvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2DVEXTPROC glad_debug_glProgramUniform2dvEXT
     * }
     */
    public static void glad_debug_glProgramUniform2dvEXT(MemorySegment varValue) {
        glad_debug_glProgramUniform2dvEXT$constants.SEGMENT.set(glad_debug_glProgramUniform2dvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform2f$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform2f").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2FPROC glad_glProgramUniform2f
     * }
     */
    public static AddressLayout glad_glProgramUniform2f$layout() {
        return glad_glProgramUniform2f$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2FPROC glad_glProgramUniform2f
     * }
     */
    public static MemorySegment glad_glProgramUniform2f$segment() {
        return glad_glProgramUniform2f$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2FPROC glad_glProgramUniform2f
     * }
     */
    public static MemorySegment glad_glProgramUniform2f() {
        return glad_glProgramUniform2f$constants.SEGMENT.get(glad_glProgramUniform2f$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2FPROC glad_glProgramUniform2f
     * }
     */
    public static void glad_glProgramUniform2f(MemorySegment varValue) {
        glad_glProgramUniform2f$constants.SEGMENT.set(glad_glProgramUniform2f$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform2f$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform2f").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2FPROC glad_debug_glProgramUniform2f
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform2f$layout() {
        return glad_debug_glProgramUniform2f$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2FPROC glad_debug_glProgramUniform2f
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform2f$segment() {
        return glad_debug_glProgramUniform2f$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2FPROC glad_debug_glProgramUniform2f
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform2f() {
        return glad_debug_glProgramUniform2f$constants.SEGMENT.get(glad_debug_glProgramUniform2f$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2FPROC glad_debug_glProgramUniform2f
     * }
     */
    public static void glad_debug_glProgramUniform2f(MemorySegment varValue) {
        glad_debug_glProgramUniform2f$constants.SEGMENT.set(glad_debug_glProgramUniform2f$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform2fEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform2fEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2FEXTPROC glad_glProgramUniform2fEXT
     * }
     */
    public static AddressLayout glad_glProgramUniform2fEXT$layout() {
        return glad_glProgramUniform2fEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2FEXTPROC glad_glProgramUniform2fEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform2fEXT$segment() {
        return glad_glProgramUniform2fEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2FEXTPROC glad_glProgramUniform2fEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform2fEXT() {
        return glad_glProgramUniform2fEXT$constants.SEGMENT.get(glad_glProgramUniform2fEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2FEXTPROC glad_glProgramUniform2fEXT
     * }
     */
    public static void glad_glProgramUniform2fEXT(MemorySegment varValue) {
        glad_glProgramUniform2fEXT$constants.SEGMENT.set(glad_glProgramUniform2fEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform2fEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform2fEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2FEXTPROC glad_debug_glProgramUniform2fEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform2fEXT$layout() {
        return glad_debug_glProgramUniform2fEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2FEXTPROC glad_debug_glProgramUniform2fEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform2fEXT$segment() {
        return glad_debug_glProgramUniform2fEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2FEXTPROC glad_debug_glProgramUniform2fEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform2fEXT() {
        return glad_debug_glProgramUniform2fEXT$constants.SEGMENT.get(glad_debug_glProgramUniform2fEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2FEXTPROC glad_debug_glProgramUniform2fEXT
     * }
     */
    public static void glad_debug_glProgramUniform2fEXT(MemorySegment varValue) {
        glad_debug_glProgramUniform2fEXT$constants.SEGMENT.set(glad_debug_glProgramUniform2fEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform2fv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform2fv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2FVPROC glad_glProgramUniform2fv
     * }
     */
    public static AddressLayout glad_glProgramUniform2fv$layout() {
        return glad_glProgramUniform2fv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2FVPROC glad_glProgramUniform2fv
     * }
     */
    public static MemorySegment glad_glProgramUniform2fv$segment() {
        return glad_glProgramUniform2fv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2FVPROC glad_glProgramUniform2fv
     * }
     */
    public static MemorySegment glad_glProgramUniform2fv() {
        return glad_glProgramUniform2fv$constants.SEGMENT.get(glad_glProgramUniform2fv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2FVPROC glad_glProgramUniform2fv
     * }
     */
    public static void glad_glProgramUniform2fv(MemorySegment varValue) {
        glad_glProgramUniform2fv$constants.SEGMENT.set(glad_glProgramUniform2fv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform2fv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform2fv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2FVPROC glad_debug_glProgramUniform2fv
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform2fv$layout() {
        return glad_debug_glProgramUniform2fv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2FVPROC glad_debug_glProgramUniform2fv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform2fv$segment() {
        return glad_debug_glProgramUniform2fv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2FVPROC glad_debug_glProgramUniform2fv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform2fv() {
        return glad_debug_glProgramUniform2fv$constants.SEGMENT.get(glad_debug_glProgramUniform2fv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2FVPROC glad_debug_glProgramUniform2fv
     * }
     */
    public static void glad_debug_glProgramUniform2fv(MemorySegment varValue) {
        glad_debug_glProgramUniform2fv$constants.SEGMENT.set(glad_debug_glProgramUniform2fv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform2fvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform2fvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2FVEXTPROC glad_glProgramUniform2fvEXT
     * }
     */
    public static AddressLayout glad_glProgramUniform2fvEXT$layout() {
        return glad_glProgramUniform2fvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2FVEXTPROC glad_glProgramUniform2fvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform2fvEXT$segment() {
        return glad_glProgramUniform2fvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2FVEXTPROC glad_glProgramUniform2fvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform2fvEXT() {
        return glad_glProgramUniform2fvEXT$constants.SEGMENT.get(glad_glProgramUniform2fvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2FVEXTPROC glad_glProgramUniform2fvEXT
     * }
     */
    public static void glad_glProgramUniform2fvEXT(MemorySegment varValue) {
        glad_glProgramUniform2fvEXT$constants.SEGMENT.set(glad_glProgramUniform2fvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform2fvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform2fvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2FVEXTPROC glad_debug_glProgramUniform2fvEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform2fvEXT$layout() {
        return glad_debug_glProgramUniform2fvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2FVEXTPROC glad_debug_glProgramUniform2fvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform2fvEXT$segment() {
        return glad_debug_glProgramUniform2fvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2FVEXTPROC glad_debug_glProgramUniform2fvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform2fvEXT() {
        return glad_debug_glProgramUniform2fvEXT$constants.SEGMENT.get(glad_debug_glProgramUniform2fvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2FVEXTPROC glad_debug_glProgramUniform2fvEXT
     * }
     */
    public static void glad_debug_glProgramUniform2fvEXT(MemorySegment varValue) {
        glad_debug_glProgramUniform2fvEXT$constants.SEGMENT.set(glad_debug_glProgramUniform2fvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform2i$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform2i").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2IPROC glad_glProgramUniform2i
     * }
     */
    public static AddressLayout glad_glProgramUniform2i$layout() {
        return glad_glProgramUniform2i$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2IPROC glad_glProgramUniform2i
     * }
     */
    public static MemorySegment glad_glProgramUniform2i$segment() {
        return glad_glProgramUniform2i$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2IPROC glad_glProgramUniform2i
     * }
     */
    public static MemorySegment glad_glProgramUniform2i() {
        return glad_glProgramUniform2i$constants.SEGMENT.get(glad_glProgramUniform2i$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2IPROC glad_glProgramUniform2i
     * }
     */
    public static void glad_glProgramUniform2i(MemorySegment varValue) {
        glad_glProgramUniform2i$constants.SEGMENT.set(glad_glProgramUniform2i$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform2i$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform2i").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2IPROC glad_debug_glProgramUniform2i
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform2i$layout() {
        return glad_debug_glProgramUniform2i$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2IPROC glad_debug_glProgramUniform2i
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform2i$segment() {
        return glad_debug_glProgramUniform2i$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2IPROC glad_debug_glProgramUniform2i
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform2i() {
        return glad_debug_glProgramUniform2i$constants.SEGMENT.get(glad_debug_glProgramUniform2i$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2IPROC glad_debug_glProgramUniform2i
     * }
     */
    public static void glad_debug_glProgramUniform2i(MemorySegment varValue) {
        glad_debug_glProgramUniform2i$constants.SEGMENT.set(glad_debug_glProgramUniform2i$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform2iEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform2iEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2IEXTPROC glad_glProgramUniform2iEXT
     * }
     */
    public static AddressLayout glad_glProgramUniform2iEXT$layout() {
        return glad_glProgramUniform2iEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2IEXTPROC glad_glProgramUniform2iEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform2iEXT$segment() {
        return glad_glProgramUniform2iEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2IEXTPROC glad_glProgramUniform2iEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform2iEXT() {
        return glad_glProgramUniform2iEXT$constants.SEGMENT.get(glad_glProgramUniform2iEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2IEXTPROC glad_glProgramUniform2iEXT
     * }
     */
    public static void glad_glProgramUniform2iEXT(MemorySegment varValue) {
        glad_glProgramUniform2iEXT$constants.SEGMENT.set(glad_glProgramUniform2iEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform2iEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform2iEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2IEXTPROC glad_debug_glProgramUniform2iEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform2iEXT$layout() {
        return glad_debug_glProgramUniform2iEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2IEXTPROC glad_debug_glProgramUniform2iEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform2iEXT$segment() {
        return glad_debug_glProgramUniform2iEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2IEXTPROC glad_debug_glProgramUniform2iEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform2iEXT() {
        return glad_debug_glProgramUniform2iEXT$constants.SEGMENT.get(glad_debug_glProgramUniform2iEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2IEXTPROC glad_debug_glProgramUniform2iEXT
     * }
     */
    public static void glad_debug_glProgramUniform2iEXT(MemorySegment varValue) {
        glad_debug_glProgramUniform2iEXT$constants.SEGMENT.set(glad_debug_glProgramUniform2iEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform2iv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform2iv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2IVPROC glad_glProgramUniform2iv
     * }
     */
    public static AddressLayout glad_glProgramUniform2iv$layout() {
        return glad_glProgramUniform2iv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2IVPROC glad_glProgramUniform2iv
     * }
     */
    public static MemorySegment glad_glProgramUniform2iv$segment() {
        return glad_glProgramUniform2iv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2IVPROC glad_glProgramUniform2iv
     * }
     */
    public static MemorySegment glad_glProgramUniform2iv() {
        return glad_glProgramUniform2iv$constants.SEGMENT.get(glad_glProgramUniform2iv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2IVPROC glad_glProgramUniform2iv
     * }
     */
    public static void glad_glProgramUniform2iv(MemorySegment varValue) {
        glad_glProgramUniform2iv$constants.SEGMENT.set(glad_glProgramUniform2iv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform2iv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform2iv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2IVPROC glad_debug_glProgramUniform2iv
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform2iv$layout() {
        return glad_debug_glProgramUniform2iv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2IVPROC glad_debug_glProgramUniform2iv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform2iv$segment() {
        return glad_debug_glProgramUniform2iv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2IVPROC glad_debug_glProgramUniform2iv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform2iv() {
        return glad_debug_glProgramUniform2iv$constants.SEGMENT.get(glad_debug_glProgramUniform2iv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2IVPROC glad_debug_glProgramUniform2iv
     * }
     */
    public static void glad_debug_glProgramUniform2iv(MemorySegment varValue) {
        glad_debug_glProgramUniform2iv$constants.SEGMENT.set(glad_debug_glProgramUniform2iv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform2ivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform2ivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2IVEXTPROC glad_glProgramUniform2ivEXT
     * }
     */
    public static AddressLayout glad_glProgramUniform2ivEXT$layout() {
        return glad_glProgramUniform2ivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2IVEXTPROC glad_glProgramUniform2ivEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform2ivEXT$segment() {
        return glad_glProgramUniform2ivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2IVEXTPROC glad_glProgramUniform2ivEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform2ivEXT() {
        return glad_glProgramUniform2ivEXT$constants.SEGMENT.get(glad_glProgramUniform2ivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2IVEXTPROC glad_glProgramUniform2ivEXT
     * }
     */
    public static void glad_glProgramUniform2ivEXT(MemorySegment varValue) {
        glad_glProgramUniform2ivEXT$constants.SEGMENT.set(glad_glProgramUniform2ivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform2ivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform2ivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2IVEXTPROC glad_debug_glProgramUniform2ivEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform2ivEXT$layout() {
        return glad_debug_glProgramUniform2ivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2IVEXTPROC glad_debug_glProgramUniform2ivEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform2ivEXT$segment() {
        return glad_debug_glProgramUniform2ivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2IVEXTPROC glad_debug_glProgramUniform2ivEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform2ivEXT() {
        return glad_debug_glProgramUniform2ivEXT$constants.SEGMENT.get(glad_debug_glProgramUniform2ivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2IVEXTPROC glad_debug_glProgramUniform2ivEXT
     * }
     */
    public static void glad_debug_glProgramUniform2ivEXT(MemorySegment varValue) {
        glad_debug_glProgramUniform2ivEXT$constants.SEGMENT.set(glad_debug_glProgramUniform2ivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform2ui$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform2ui").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2UIPROC glad_glProgramUniform2ui
     * }
     */
    public static AddressLayout glad_glProgramUniform2ui$layout() {
        return glad_glProgramUniform2ui$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2UIPROC glad_glProgramUniform2ui
     * }
     */
    public static MemorySegment glad_glProgramUniform2ui$segment() {
        return glad_glProgramUniform2ui$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2UIPROC glad_glProgramUniform2ui
     * }
     */
    public static MemorySegment glad_glProgramUniform2ui() {
        return glad_glProgramUniform2ui$constants.SEGMENT.get(glad_glProgramUniform2ui$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2UIPROC glad_glProgramUniform2ui
     * }
     */
    public static void glad_glProgramUniform2ui(MemorySegment varValue) {
        glad_glProgramUniform2ui$constants.SEGMENT.set(glad_glProgramUniform2ui$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform2ui$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform2ui").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2UIPROC glad_debug_glProgramUniform2ui
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform2ui$layout() {
        return glad_debug_glProgramUniform2ui$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2UIPROC glad_debug_glProgramUniform2ui
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform2ui$segment() {
        return glad_debug_glProgramUniform2ui$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2UIPROC glad_debug_glProgramUniform2ui
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform2ui() {
        return glad_debug_glProgramUniform2ui$constants.SEGMENT.get(glad_debug_glProgramUniform2ui$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2UIPROC glad_debug_glProgramUniform2ui
     * }
     */
    public static void glad_debug_glProgramUniform2ui(MemorySegment varValue) {
        glad_debug_glProgramUniform2ui$constants.SEGMENT.set(glad_debug_glProgramUniform2ui$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform2uiEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform2uiEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2UIEXTPROC glad_glProgramUniform2uiEXT
     * }
     */
    public static AddressLayout glad_glProgramUniform2uiEXT$layout() {
        return glad_glProgramUniform2uiEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2UIEXTPROC glad_glProgramUniform2uiEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform2uiEXT$segment() {
        return glad_glProgramUniform2uiEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2UIEXTPROC glad_glProgramUniform2uiEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform2uiEXT() {
        return glad_glProgramUniform2uiEXT$constants.SEGMENT.get(glad_glProgramUniform2uiEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2UIEXTPROC glad_glProgramUniform2uiEXT
     * }
     */
    public static void glad_glProgramUniform2uiEXT(MemorySegment varValue) {
        glad_glProgramUniform2uiEXT$constants.SEGMENT.set(glad_glProgramUniform2uiEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform2uiEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform2uiEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2UIEXTPROC glad_debug_glProgramUniform2uiEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform2uiEXT$layout() {
        return glad_debug_glProgramUniform2uiEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2UIEXTPROC glad_debug_glProgramUniform2uiEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform2uiEXT$segment() {
        return glad_debug_glProgramUniform2uiEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2UIEXTPROC glad_debug_glProgramUniform2uiEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform2uiEXT() {
        return glad_debug_glProgramUniform2uiEXT$constants.SEGMENT.get(glad_debug_glProgramUniform2uiEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2UIEXTPROC glad_debug_glProgramUniform2uiEXT
     * }
     */
    public static void glad_debug_glProgramUniform2uiEXT(MemorySegment varValue) {
        glad_debug_glProgramUniform2uiEXT$constants.SEGMENT.set(glad_debug_glProgramUniform2uiEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform2uiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform2uiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2UIVPROC glad_glProgramUniform2uiv
     * }
     */
    public static AddressLayout glad_glProgramUniform2uiv$layout() {
        return glad_glProgramUniform2uiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2UIVPROC glad_glProgramUniform2uiv
     * }
     */
    public static MemorySegment glad_glProgramUniform2uiv$segment() {
        return glad_glProgramUniform2uiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2UIVPROC glad_glProgramUniform2uiv
     * }
     */
    public static MemorySegment glad_glProgramUniform2uiv() {
        return glad_glProgramUniform2uiv$constants.SEGMENT.get(glad_glProgramUniform2uiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2UIVPROC glad_glProgramUniform2uiv
     * }
     */
    public static void glad_glProgramUniform2uiv(MemorySegment varValue) {
        glad_glProgramUniform2uiv$constants.SEGMENT.set(glad_glProgramUniform2uiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform2uiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform2uiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2UIVPROC glad_debug_glProgramUniform2uiv
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform2uiv$layout() {
        return glad_debug_glProgramUniform2uiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2UIVPROC glad_debug_glProgramUniform2uiv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform2uiv$segment() {
        return glad_debug_glProgramUniform2uiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2UIVPROC glad_debug_glProgramUniform2uiv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform2uiv() {
        return glad_debug_glProgramUniform2uiv$constants.SEGMENT.get(glad_debug_glProgramUniform2uiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2UIVPROC glad_debug_glProgramUniform2uiv
     * }
     */
    public static void glad_debug_glProgramUniform2uiv(MemorySegment varValue) {
        glad_debug_glProgramUniform2uiv$constants.SEGMENT.set(glad_debug_glProgramUniform2uiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform2uivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform2uivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2UIVEXTPROC glad_glProgramUniform2uivEXT
     * }
     */
    public static AddressLayout glad_glProgramUniform2uivEXT$layout() {
        return glad_glProgramUniform2uivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2UIVEXTPROC glad_glProgramUniform2uivEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform2uivEXT$segment() {
        return glad_glProgramUniform2uivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2UIVEXTPROC glad_glProgramUniform2uivEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform2uivEXT() {
        return glad_glProgramUniform2uivEXT$constants.SEGMENT.get(glad_glProgramUniform2uivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2UIVEXTPROC glad_glProgramUniform2uivEXT
     * }
     */
    public static void glad_glProgramUniform2uivEXT(MemorySegment varValue) {
        glad_glProgramUniform2uivEXT$constants.SEGMENT.set(glad_glProgramUniform2uivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform2uivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform2uivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2UIVEXTPROC glad_debug_glProgramUniform2uivEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform2uivEXT$layout() {
        return glad_debug_glProgramUniform2uivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2UIVEXTPROC glad_debug_glProgramUniform2uivEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform2uivEXT$segment() {
        return glad_debug_glProgramUniform2uivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2UIVEXTPROC glad_debug_glProgramUniform2uivEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform2uivEXT() {
        return glad_debug_glProgramUniform2uivEXT$constants.SEGMENT.get(glad_debug_glProgramUniform2uivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM2UIVEXTPROC glad_debug_glProgramUniform2uivEXT
     * }
     */
    public static void glad_debug_glProgramUniform2uivEXT(MemorySegment varValue) {
        glad_debug_glProgramUniform2uivEXT$constants.SEGMENT.set(glad_debug_glProgramUniform2uivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform3d$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform3d").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3DPROC glad_glProgramUniform3d
     * }
     */
    public static AddressLayout glad_glProgramUniform3d$layout() {
        return glad_glProgramUniform3d$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3DPROC glad_glProgramUniform3d
     * }
     */
    public static MemorySegment glad_glProgramUniform3d$segment() {
        return glad_glProgramUniform3d$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3DPROC glad_glProgramUniform3d
     * }
     */
    public static MemorySegment glad_glProgramUniform3d() {
        return glad_glProgramUniform3d$constants.SEGMENT.get(glad_glProgramUniform3d$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3DPROC glad_glProgramUniform3d
     * }
     */
    public static void glad_glProgramUniform3d(MemorySegment varValue) {
        glad_glProgramUniform3d$constants.SEGMENT.set(glad_glProgramUniform3d$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform3d$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform3d").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3DPROC glad_debug_glProgramUniform3d
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform3d$layout() {
        return glad_debug_glProgramUniform3d$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3DPROC glad_debug_glProgramUniform3d
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform3d$segment() {
        return glad_debug_glProgramUniform3d$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3DPROC glad_debug_glProgramUniform3d
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform3d() {
        return glad_debug_glProgramUniform3d$constants.SEGMENT.get(glad_debug_glProgramUniform3d$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3DPROC glad_debug_glProgramUniform3d
     * }
     */
    public static void glad_debug_glProgramUniform3d(MemorySegment varValue) {
        glad_debug_glProgramUniform3d$constants.SEGMENT.set(glad_debug_glProgramUniform3d$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform3dEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform3dEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3DEXTPROC glad_glProgramUniform3dEXT
     * }
     */
    public static AddressLayout glad_glProgramUniform3dEXT$layout() {
        return glad_glProgramUniform3dEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3DEXTPROC glad_glProgramUniform3dEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform3dEXT$segment() {
        return glad_glProgramUniform3dEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3DEXTPROC glad_glProgramUniform3dEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform3dEXT() {
        return glad_glProgramUniform3dEXT$constants.SEGMENT.get(glad_glProgramUniform3dEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3DEXTPROC glad_glProgramUniform3dEXT
     * }
     */
    public static void glad_glProgramUniform3dEXT(MemorySegment varValue) {
        glad_glProgramUniform3dEXT$constants.SEGMENT.set(glad_glProgramUniform3dEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform3dEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform3dEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3DEXTPROC glad_debug_glProgramUniform3dEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform3dEXT$layout() {
        return glad_debug_glProgramUniform3dEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3DEXTPROC glad_debug_glProgramUniform3dEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform3dEXT$segment() {
        return glad_debug_glProgramUniform3dEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3DEXTPROC glad_debug_glProgramUniform3dEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform3dEXT() {
        return glad_debug_glProgramUniform3dEXT$constants.SEGMENT.get(glad_debug_glProgramUniform3dEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3DEXTPROC glad_debug_glProgramUniform3dEXT
     * }
     */
    public static void glad_debug_glProgramUniform3dEXT(MemorySegment varValue) {
        glad_debug_glProgramUniform3dEXT$constants.SEGMENT.set(glad_debug_glProgramUniform3dEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform3dv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform3dv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3DVPROC glad_glProgramUniform3dv
     * }
     */
    public static AddressLayout glad_glProgramUniform3dv$layout() {
        return glad_glProgramUniform3dv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3DVPROC glad_glProgramUniform3dv
     * }
     */
    public static MemorySegment glad_glProgramUniform3dv$segment() {
        return glad_glProgramUniform3dv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3DVPROC glad_glProgramUniform3dv
     * }
     */
    public static MemorySegment glad_glProgramUniform3dv() {
        return glad_glProgramUniform3dv$constants.SEGMENT.get(glad_glProgramUniform3dv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3DVPROC glad_glProgramUniform3dv
     * }
     */
    public static void glad_glProgramUniform3dv(MemorySegment varValue) {
        glad_glProgramUniform3dv$constants.SEGMENT.set(glad_glProgramUniform3dv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform3dv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform3dv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3DVPROC glad_debug_glProgramUniform3dv
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform3dv$layout() {
        return glad_debug_glProgramUniform3dv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3DVPROC glad_debug_glProgramUniform3dv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform3dv$segment() {
        return glad_debug_glProgramUniform3dv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3DVPROC glad_debug_glProgramUniform3dv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform3dv() {
        return glad_debug_glProgramUniform3dv$constants.SEGMENT.get(glad_debug_glProgramUniform3dv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3DVPROC glad_debug_glProgramUniform3dv
     * }
     */
    public static void glad_debug_glProgramUniform3dv(MemorySegment varValue) {
        glad_debug_glProgramUniform3dv$constants.SEGMENT.set(glad_debug_glProgramUniform3dv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform3dvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform3dvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3DVEXTPROC glad_glProgramUniform3dvEXT
     * }
     */
    public static AddressLayout glad_glProgramUniform3dvEXT$layout() {
        return glad_glProgramUniform3dvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3DVEXTPROC glad_glProgramUniform3dvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform3dvEXT$segment() {
        return glad_glProgramUniform3dvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3DVEXTPROC glad_glProgramUniform3dvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform3dvEXT() {
        return glad_glProgramUniform3dvEXT$constants.SEGMENT.get(glad_glProgramUniform3dvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3DVEXTPROC glad_glProgramUniform3dvEXT
     * }
     */
    public static void glad_glProgramUniform3dvEXT(MemorySegment varValue) {
        glad_glProgramUniform3dvEXT$constants.SEGMENT.set(glad_glProgramUniform3dvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform3dvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform3dvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3DVEXTPROC glad_debug_glProgramUniform3dvEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform3dvEXT$layout() {
        return glad_debug_glProgramUniform3dvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3DVEXTPROC glad_debug_glProgramUniform3dvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform3dvEXT$segment() {
        return glad_debug_glProgramUniform3dvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3DVEXTPROC glad_debug_glProgramUniform3dvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform3dvEXT() {
        return glad_debug_glProgramUniform3dvEXT$constants.SEGMENT.get(glad_debug_glProgramUniform3dvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3DVEXTPROC glad_debug_glProgramUniform3dvEXT
     * }
     */
    public static void glad_debug_glProgramUniform3dvEXT(MemorySegment varValue) {
        glad_debug_glProgramUniform3dvEXT$constants.SEGMENT.set(glad_debug_glProgramUniform3dvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform3f$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform3f").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3FPROC glad_glProgramUniform3f
     * }
     */
    public static AddressLayout glad_glProgramUniform3f$layout() {
        return glad_glProgramUniform3f$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3FPROC glad_glProgramUniform3f
     * }
     */
    public static MemorySegment glad_glProgramUniform3f$segment() {
        return glad_glProgramUniform3f$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3FPROC glad_glProgramUniform3f
     * }
     */
    public static MemorySegment glad_glProgramUniform3f() {
        return glad_glProgramUniform3f$constants.SEGMENT.get(glad_glProgramUniform3f$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3FPROC glad_glProgramUniform3f
     * }
     */
    public static void glad_glProgramUniform3f(MemorySegment varValue) {
        glad_glProgramUniform3f$constants.SEGMENT.set(glad_glProgramUniform3f$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform3f$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform3f").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3FPROC glad_debug_glProgramUniform3f
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform3f$layout() {
        return glad_debug_glProgramUniform3f$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3FPROC glad_debug_glProgramUniform3f
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform3f$segment() {
        return glad_debug_glProgramUniform3f$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3FPROC glad_debug_glProgramUniform3f
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform3f() {
        return glad_debug_glProgramUniform3f$constants.SEGMENT.get(glad_debug_glProgramUniform3f$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3FPROC glad_debug_glProgramUniform3f
     * }
     */
    public static void glad_debug_glProgramUniform3f(MemorySegment varValue) {
        glad_debug_glProgramUniform3f$constants.SEGMENT.set(glad_debug_glProgramUniform3f$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform3fEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform3fEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3FEXTPROC glad_glProgramUniform3fEXT
     * }
     */
    public static AddressLayout glad_glProgramUniform3fEXT$layout() {
        return glad_glProgramUniform3fEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3FEXTPROC glad_glProgramUniform3fEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform3fEXT$segment() {
        return glad_glProgramUniform3fEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3FEXTPROC glad_glProgramUniform3fEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform3fEXT() {
        return glad_glProgramUniform3fEXT$constants.SEGMENT.get(glad_glProgramUniform3fEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3FEXTPROC glad_glProgramUniform3fEXT
     * }
     */
    public static void glad_glProgramUniform3fEXT(MemorySegment varValue) {
        glad_glProgramUniform3fEXT$constants.SEGMENT.set(glad_glProgramUniform3fEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform3fEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform3fEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3FEXTPROC glad_debug_glProgramUniform3fEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform3fEXT$layout() {
        return glad_debug_glProgramUniform3fEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3FEXTPROC glad_debug_glProgramUniform3fEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform3fEXT$segment() {
        return glad_debug_glProgramUniform3fEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3FEXTPROC glad_debug_glProgramUniform3fEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform3fEXT() {
        return glad_debug_glProgramUniform3fEXT$constants.SEGMENT.get(glad_debug_glProgramUniform3fEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3FEXTPROC glad_debug_glProgramUniform3fEXT
     * }
     */
    public static void glad_debug_glProgramUniform3fEXT(MemorySegment varValue) {
        glad_debug_glProgramUniform3fEXT$constants.SEGMENT.set(glad_debug_glProgramUniform3fEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform3fv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform3fv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3FVPROC glad_glProgramUniform3fv
     * }
     */
    public static AddressLayout glad_glProgramUniform3fv$layout() {
        return glad_glProgramUniform3fv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3FVPROC glad_glProgramUniform3fv
     * }
     */
    public static MemorySegment glad_glProgramUniform3fv$segment() {
        return glad_glProgramUniform3fv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3FVPROC glad_glProgramUniform3fv
     * }
     */
    public static MemorySegment glad_glProgramUniform3fv() {
        return glad_glProgramUniform3fv$constants.SEGMENT.get(glad_glProgramUniform3fv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3FVPROC glad_glProgramUniform3fv
     * }
     */
    public static void glad_glProgramUniform3fv(MemorySegment varValue) {
        glad_glProgramUniform3fv$constants.SEGMENT.set(glad_glProgramUniform3fv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform3fv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform3fv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3FVPROC glad_debug_glProgramUniform3fv
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform3fv$layout() {
        return glad_debug_glProgramUniform3fv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3FVPROC glad_debug_glProgramUniform3fv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform3fv$segment() {
        return glad_debug_glProgramUniform3fv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3FVPROC glad_debug_glProgramUniform3fv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform3fv() {
        return glad_debug_glProgramUniform3fv$constants.SEGMENT.get(glad_debug_glProgramUniform3fv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3FVPROC glad_debug_glProgramUniform3fv
     * }
     */
    public static void glad_debug_glProgramUniform3fv(MemorySegment varValue) {
        glad_debug_glProgramUniform3fv$constants.SEGMENT.set(glad_debug_glProgramUniform3fv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform3fvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform3fvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3FVEXTPROC glad_glProgramUniform3fvEXT
     * }
     */
    public static AddressLayout glad_glProgramUniform3fvEXT$layout() {
        return glad_glProgramUniform3fvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3FVEXTPROC glad_glProgramUniform3fvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform3fvEXT$segment() {
        return glad_glProgramUniform3fvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3FVEXTPROC glad_glProgramUniform3fvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform3fvEXT() {
        return glad_glProgramUniform3fvEXT$constants.SEGMENT.get(glad_glProgramUniform3fvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3FVEXTPROC glad_glProgramUniform3fvEXT
     * }
     */
    public static void glad_glProgramUniform3fvEXT(MemorySegment varValue) {
        glad_glProgramUniform3fvEXT$constants.SEGMENT.set(glad_glProgramUniform3fvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform3fvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform3fvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3FVEXTPROC glad_debug_glProgramUniform3fvEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform3fvEXT$layout() {
        return glad_debug_glProgramUniform3fvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3FVEXTPROC glad_debug_glProgramUniform3fvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform3fvEXT$segment() {
        return glad_debug_glProgramUniform3fvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3FVEXTPROC glad_debug_glProgramUniform3fvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform3fvEXT() {
        return glad_debug_glProgramUniform3fvEXT$constants.SEGMENT.get(glad_debug_glProgramUniform3fvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3FVEXTPROC glad_debug_glProgramUniform3fvEXT
     * }
     */
    public static void glad_debug_glProgramUniform3fvEXT(MemorySegment varValue) {
        glad_debug_glProgramUniform3fvEXT$constants.SEGMENT.set(glad_debug_glProgramUniform3fvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform3i$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform3i").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3IPROC glad_glProgramUniform3i
     * }
     */
    public static AddressLayout glad_glProgramUniform3i$layout() {
        return glad_glProgramUniform3i$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3IPROC glad_glProgramUniform3i
     * }
     */
    public static MemorySegment glad_glProgramUniform3i$segment() {
        return glad_glProgramUniform3i$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3IPROC glad_glProgramUniform3i
     * }
     */
    public static MemorySegment glad_glProgramUniform3i() {
        return glad_glProgramUniform3i$constants.SEGMENT.get(glad_glProgramUniform3i$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3IPROC glad_glProgramUniform3i
     * }
     */
    public static void glad_glProgramUniform3i(MemorySegment varValue) {
        glad_glProgramUniform3i$constants.SEGMENT.set(glad_glProgramUniform3i$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform3i$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform3i").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3IPROC glad_debug_glProgramUniform3i
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform3i$layout() {
        return glad_debug_glProgramUniform3i$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3IPROC glad_debug_glProgramUniform3i
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform3i$segment() {
        return glad_debug_glProgramUniform3i$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3IPROC glad_debug_glProgramUniform3i
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform3i() {
        return glad_debug_glProgramUniform3i$constants.SEGMENT.get(glad_debug_glProgramUniform3i$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3IPROC glad_debug_glProgramUniform3i
     * }
     */
    public static void glad_debug_glProgramUniform3i(MemorySegment varValue) {
        glad_debug_glProgramUniform3i$constants.SEGMENT.set(glad_debug_glProgramUniform3i$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform3iEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform3iEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3IEXTPROC glad_glProgramUniform3iEXT
     * }
     */
    public static AddressLayout glad_glProgramUniform3iEXT$layout() {
        return glad_glProgramUniform3iEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3IEXTPROC glad_glProgramUniform3iEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform3iEXT$segment() {
        return glad_glProgramUniform3iEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3IEXTPROC glad_glProgramUniform3iEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform3iEXT() {
        return glad_glProgramUniform3iEXT$constants.SEGMENT.get(glad_glProgramUniform3iEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3IEXTPROC glad_glProgramUniform3iEXT
     * }
     */
    public static void glad_glProgramUniform3iEXT(MemorySegment varValue) {
        glad_glProgramUniform3iEXT$constants.SEGMENT.set(glad_glProgramUniform3iEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform3iEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform3iEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3IEXTPROC glad_debug_glProgramUniform3iEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform3iEXT$layout() {
        return glad_debug_glProgramUniform3iEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3IEXTPROC glad_debug_glProgramUniform3iEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform3iEXT$segment() {
        return glad_debug_glProgramUniform3iEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3IEXTPROC glad_debug_glProgramUniform3iEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform3iEXT() {
        return glad_debug_glProgramUniform3iEXT$constants.SEGMENT.get(glad_debug_glProgramUniform3iEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3IEXTPROC glad_debug_glProgramUniform3iEXT
     * }
     */
    public static void glad_debug_glProgramUniform3iEXT(MemorySegment varValue) {
        glad_debug_glProgramUniform3iEXT$constants.SEGMENT.set(glad_debug_glProgramUniform3iEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform3iv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform3iv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3IVPROC glad_glProgramUniform3iv
     * }
     */
    public static AddressLayout glad_glProgramUniform3iv$layout() {
        return glad_glProgramUniform3iv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3IVPROC glad_glProgramUniform3iv
     * }
     */
    public static MemorySegment glad_glProgramUniform3iv$segment() {
        return glad_glProgramUniform3iv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3IVPROC glad_glProgramUniform3iv
     * }
     */
    public static MemorySegment glad_glProgramUniform3iv() {
        return glad_glProgramUniform3iv$constants.SEGMENT.get(glad_glProgramUniform3iv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3IVPROC glad_glProgramUniform3iv
     * }
     */
    public static void glad_glProgramUniform3iv(MemorySegment varValue) {
        glad_glProgramUniform3iv$constants.SEGMENT.set(glad_glProgramUniform3iv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform3iv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform3iv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3IVPROC glad_debug_glProgramUniform3iv
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform3iv$layout() {
        return glad_debug_glProgramUniform3iv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3IVPROC glad_debug_glProgramUniform3iv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform3iv$segment() {
        return glad_debug_glProgramUniform3iv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3IVPROC glad_debug_glProgramUniform3iv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform3iv() {
        return glad_debug_glProgramUniform3iv$constants.SEGMENT.get(glad_debug_glProgramUniform3iv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3IVPROC glad_debug_glProgramUniform3iv
     * }
     */
    public static void glad_debug_glProgramUniform3iv(MemorySegment varValue) {
        glad_debug_glProgramUniform3iv$constants.SEGMENT.set(glad_debug_glProgramUniform3iv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform3ivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform3ivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3IVEXTPROC glad_glProgramUniform3ivEXT
     * }
     */
    public static AddressLayout glad_glProgramUniform3ivEXT$layout() {
        return glad_glProgramUniform3ivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3IVEXTPROC glad_glProgramUniform3ivEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform3ivEXT$segment() {
        return glad_glProgramUniform3ivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3IVEXTPROC glad_glProgramUniform3ivEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform3ivEXT() {
        return glad_glProgramUniform3ivEXT$constants.SEGMENT.get(glad_glProgramUniform3ivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3IVEXTPROC glad_glProgramUniform3ivEXT
     * }
     */
    public static void glad_glProgramUniform3ivEXT(MemorySegment varValue) {
        glad_glProgramUniform3ivEXT$constants.SEGMENT.set(glad_glProgramUniform3ivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform3ivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform3ivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3IVEXTPROC glad_debug_glProgramUniform3ivEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform3ivEXT$layout() {
        return glad_debug_glProgramUniform3ivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3IVEXTPROC glad_debug_glProgramUniform3ivEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform3ivEXT$segment() {
        return glad_debug_glProgramUniform3ivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3IVEXTPROC glad_debug_glProgramUniform3ivEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform3ivEXT() {
        return glad_debug_glProgramUniform3ivEXT$constants.SEGMENT.get(glad_debug_glProgramUniform3ivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3IVEXTPROC glad_debug_glProgramUniform3ivEXT
     * }
     */
    public static void glad_debug_glProgramUniform3ivEXT(MemorySegment varValue) {
        glad_debug_glProgramUniform3ivEXT$constants.SEGMENT.set(glad_debug_glProgramUniform3ivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform3ui$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform3ui").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3UIPROC glad_glProgramUniform3ui
     * }
     */
    public static AddressLayout glad_glProgramUniform3ui$layout() {
        return glad_glProgramUniform3ui$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3UIPROC glad_glProgramUniform3ui
     * }
     */
    public static MemorySegment glad_glProgramUniform3ui$segment() {
        return glad_glProgramUniform3ui$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3UIPROC glad_glProgramUniform3ui
     * }
     */
    public static MemorySegment glad_glProgramUniform3ui() {
        return glad_glProgramUniform3ui$constants.SEGMENT.get(glad_glProgramUniform3ui$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3UIPROC glad_glProgramUniform3ui
     * }
     */
    public static void glad_glProgramUniform3ui(MemorySegment varValue) {
        glad_glProgramUniform3ui$constants.SEGMENT.set(glad_glProgramUniform3ui$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform3ui$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform3ui").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3UIPROC glad_debug_glProgramUniform3ui
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform3ui$layout() {
        return glad_debug_glProgramUniform3ui$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3UIPROC glad_debug_glProgramUniform3ui
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform3ui$segment() {
        return glad_debug_glProgramUniform3ui$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3UIPROC glad_debug_glProgramUniform3ui
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform3ui() {
        return glad_debug_glProgramUniform3ui$constants.SEGMENT.get(glad_debug_glProgramUniform3ui$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3UIPROC glad_debug_glProgramUniform3ui
     * }
     */
    public static void glad_debug_glProgramUniform3ui(MemorySegment varValue) {
        glad_debug_glProgramUniform3ui$constants.SEGMENT.set(glad_debug_glProgramUniform3ui$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform3uiEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform3uiEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3UIEXTPROC glad_glProgramUniform3uiEXT
     * }
     */
    public static AddressLayout glad_glProgramUniform3uiEXT$layout() {
        return glad_glProgramUniform3uiEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3UIEXTPROC glad_glProgramUniform3uiEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform3uiEXT$segment() {
        return glad_glProgramUniform3uiEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3UIEXTPROC glad_glProgramUniform3uiEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform3uiEXT() {
        return glad_glProgramUniform3uiEXT$constants.SEGMENT.get(glad_glProgramUniform3uiEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3UIEXTPROC glad_glProgramUniform3uiEXT
     * }
     */
    public static void glad_glProgramUniform3uiEXT(MemorySegment varValue) {
        glad_glProgramUniform3uiEXT$constants.SEGMENT.set(glad_glProgramUniform3uiEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform3uiEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform3uiEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3UIEXTPROC glad_debug_glProgramUniform3uiEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform3uiEXT$layout() {
        return glad_debug_glProgramUniform3uiEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3UIEXTPROC glad_debug_glProgramUniform3uiEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform3uiEXT$segment() {
        return glad_debug_glProgramUniform3uiEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3UIEXTPROC glad_debug_glProgramUniform3uiEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform3uiEXT() {
        return glad_debug_glProgramUniform3uiEXT$constants.SEGMENT.get(glad_debug_glProgramUniform3uiEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3UIEXTPROC glad_debug_glProgramUniform3uiEXT
     * }
     */
    public static void glad_debug_glProgramUniform3uiEXT(MemorySegment varValue) {
        glad_debug_glProgramUniform3uiEXT$constants.SEGMENT.set(glad_debug_glProgramUniform3uiEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform3uiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform3uiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3UIVPROC glad_glProgramUniform3uiv
     * }
     */
    public static AddressLayout glad_glProgramUniform3uiv$layout() {
        return glad_glProgramUniform3uiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3UIVPROC glad_glProgramUniform3uiv
     * }
     */
    public static MemorySegment glad_glProgramUniform3uiv$segment() {
        return glad_glProgramUniform3uiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3UIVPROC glad_glProgramUniform3uiv
     * }
     */
    public static MemorySegment glad_glProgramUniform3uiv() {
        return glad_glProgramUniform3uiv$constants.SEGMENT.get(glad_glProgramUniform3uiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3UIVPROC glad_glProgramUniform3uiv
     * }
     */
    public static void glad_glProgramUniform3uiv(MemorySegment varValue) {
        glad_glProgramUniform3uiv$constants.SEGMENT.set(glad_glProgramUniform3uiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform3uiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform3uiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3UIVPROC glad_debug_glProgramUniform3uiv
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform3uiv$layout() {
        return glad_debug_glProgramUniform3uiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3UIVPROC glad_debug_glProgramUniform3uiv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform3uiv$segment() {
        return glad_debug_glProgramUniform3uiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3UIVPROC glad_debug_glProgramUniform3uiv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform3uiv() {
        return glad_debug_glProgramUniform3uiv$constants.SEGMENT.get(glad_debug_glProgramUniform3uiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3UIVPROC glad_debug_glProgramUniform3uiv
     * }
     */
    public static void glad_debug_glProgramUniform3uiv(MemorySegment varValue) {
        glad_debug_glProgramUniform3uiv$constants.SEGMENT.set(glad_debug_glProgramUniform3uiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform3uivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform3uivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3UIVEXTPROC glad_glProgramUniform3uivEXT
     * }
     */
    public static AddressLayout glad_glProgramUniform3uivEXT$layout() {
        return glad_glProgramUniform3uivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3UIVEXTPROC glad_glProgramUniform3uivEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform3uivEXT$segment() {
        return glad_glProgramUniform3uivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3UIVEXTPROC glad_glProgramUniform3uivEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform3uivEXT() {
        return glad_glProgramUniform3uivEXT$constants.SEGMENT.get(glad_glProgramUniform3uivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3UIVEXTPROC glad_glProgramUniform3uivEXT
     * }
     */
    public static void glad_glProgramUniform3uivEXT(MemorySegment varValue) {
        glad_glProgramUniform3uivEXT$constants.SEGMENT.set(glad_glProgramUniform3uivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform3uivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform3uivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3UIVEXTPROC glad_debug_glProgramUniform3uivEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform3uivEXT$layout() {
        return glad_debug_glProgramUniform3uivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3UIVEXTPROC glad_debug_glProgramUniform3uivEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform3uivEXT$segment() {
        return glad_debug_glProgramUniform3uivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3UIVEXTPROC glad_debug_glProgramUniform3uivEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform3uivEXT() {
        return glad_debug_glProgramUniform3uivEXT$constants.SEGMENT.get(glad_debug_glProgramUniform3uivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM3UIVEXTPROC glad_debug_glProgramUniform3uivEXT
     * }
     */
    public static void glad_debug_glProgramUniform3uivEXT(MemorySegment varValue) {
        glad_debug_glProgramUniform3uivEXT$constants.SEGMENT.set(glad_debug_glProgramUniform3uivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform4d$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform4d").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4DPROC glad_glProgramUniform4d
     * }
     */
    public static AddressLayout glad_glProgramUniform4d$layout() {
        return glad_glProgramUniform4d$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4DPROC glad_glProgramUniform4d
     * }
     */
    public static MemorySegment glad_glProgramUniform4d$segment() {
        return glad_glProgramUniform4d$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4DPROC glad_glProgramUniform4d
     * }
     */
    public static MemorySegment glad_glProgramUniform4d() {
        return glad_glProgramUniform4d$constants.SEGMENT.get(glad_glProgramUniform4d$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4DPROC glad_glProgramUniform4d
     * }
     */
    public static void glad_glProgramUniform4d(MemorySegment varValue) {
        glad_glProgramUniform4d$constants.SEGMENT.set(glad_glProgramUniform4d$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform4d$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform4d").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4DPROC glad_debug_glProgramUniform4d
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform4d$layout() {
        return glad_debug_glProgramUniform4d$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4DPROC glad_debug_glProgramUniform4d
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform4d$segment() {
        return glad_debug_glProgramUniform4d$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4DPROC glad_debug_glProgramUniform4d
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform4d() {
        return glad_debug_glProgramUniform4d$constants.SEGMENT.get(glad_debug_glProgramUniform4d$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4DPROC glad_debug_glProgramUniform4d
     * }
     */
    public static void glad_debug_glProgramUniform4d(MemorySegment varValue) {
        glad_debug_glProgramUniform4d$constants.SEGMENT.set(glad_debug_glProgramUniform4d$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform4dEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform4dEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4DEXTPROC glad_glProgramUniform4dEXT
     * }
     */
    public static AddressLayout glad_glProgramUniform4dEXT$layout() {
        return glad_glProgramUniform4dEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4DEXTPROC glad_glProgramUniform4dEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform4dEXT$segment() {
        return glad_glProgramUniform4dEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4DEXTPROC glad_glProgramUniform4dEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform4dEXT() {
        return glad_glProgramUniform4dEXT$constants.SEGMENT.get(glad_glProgramUniform4dEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4DEXTPROC glad_glProgramUniform4dEXT
     * }
     */
    public static void glad_glProgramUniform4dEXT(MemorySegment varValue) {
        glad_glProgramUniform4dEXT$constants.SEGMENT.set(glad_glProgramUniform4dEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform4dEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform4dEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4DEXTPROC glad_debug_glProgramUniform4dEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform4dEXT$layout() {
        return glad_debug_glProgramUniform4dEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4DEXTPROC glad_debug_glProgramUniform4dEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform4dEXT$segment() {
        return glad_debug_glProgramUniform4dEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4DEXTPROC glad_debug_glProgramUniform4dEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform4dEXT() {
        return glad_debug_glProgramUniform4dEXT$constants.SEGMENT.get(glad_debug_glProgramUniform4dEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4DEXTPROC glad_debug_glProgramUniform4dEXT
     * }
     */
    public static void glad_debug_glProgramUniform4dEXT(MemorySegment varValue) {
        glad_debug_glProgramUniform4dEXT$constants.SEGMENT.set(glad_debug_glProgramUniform4dEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform4dv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform4dv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4DVPROC glad_glProgramUniform4dv
     * }
     */
    public static AddressLayout glad_glProgramUniform4dv$layout() {
        return glad_glProgramUniform4dv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4DVPROC glad_glProgramUniform4dv
     * }
     */
    public static MemorySegment glad_glProgramUniform4dv$segment() {
        return glad_glProgramUniform4dv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4DVPROC glad_glProgramUniform4dv
     * }
     */
    public static MemorySegment glad_glProgramUniform4dv() {
        return glad_glProgramUniform4dv$constants.SEGMENT.get(glad_glProgramUniform4dv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4DVPROC glad_glProgramUniform4dv
     * }
     */
    public static void glad_glProgramUniform4dv(MemorySegment varValue) {
        glad_glProgramUniform4dv$constants.SEGMENT.set(glad_glProgramUniform4dv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform4dv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform4dv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4DVPROC glad_debug_glProgramUniform4dv
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform4dv$layout() {
        return glad_debug_glProgramUniform4dv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4DVPROC glad_debug_glProgramUniform4dv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform4dv$segment() {
        return glad_debug_glProgramUniform4dv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4DVPROC glad_debug_glProgramUniform4dv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform4dv() {
        return glad_debug_glProgramUniform4dv$constants.SEGMENT.get(glad_debug_glProgramUniform4dv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4DVPROC glad_debug_glProgramUniform4dv
     * }
     */
    public static void glad_debug_glProgramUniform4dv(MemorySegment varValue) {
        glad_debug_glProgramUniform4dv$constants.SEGMENT.set(glad_debug_glProgramUniform4dv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform4dvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform4dvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4DVEXTPROC glad_glProgramUniform4dvEXT
     * }
     */
    public static AddressLayout glad_glProgramUniform4dvEXT$layout() {
        return glad_glProgramUniform4dvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4DVEXTPROC glad_glProgramUniform4dvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform4dvEXT$segment() {
        return glad_glProgramUniform4dvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4DVEXTPROC glad_glProgramUniform4dvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform4dvEXT() {
        return glad_glProgramUniform4dvEXT$constants.SEGMENT.get(glad_glProgramUniform4dvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4DVEXTPROC glad_glProgramUniform4dvEXT
     * }
     */
    public static void glad_glProgramUniform4dvEXT(MemorySegment varValue) {
        glad_glProgramUniform4dvEXT$constants.SEGMENT.set(glad_glProgramUniform4dvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform4dvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform4dvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4DVEXTPROC glad_debug_glProgramUniform4dvEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform4dvEXT$layout() {
        return glad_debug_glProgramUniform4dvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4DVEXTPROC glad_debug_glProgramUniform4dvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform4dvEXT$segment() {
        return glad_debug_glProgramUniform4dvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4DVEXTPROC glad_debug_glProgramUniform4dvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform4dvEXT() {
        return glad_debug_glProgramUniform4dvEXT$constants.SEGMENT.get(glad_debug_glProgramUniform4dvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4DVEXTPROC glad_debug_glProgramUniform4dvEXT
     * }
     */
    public static void glad_debug_glProgramUniform4dvEXT(MemorySegment varValue) {
        glad_debug_glProgramUniform4dvEXT$constants.SEGMENT.set(glad_debug_glProgramUniform4dvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform4f$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform4f").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4FPROC glad_glProgramUniform4f
     * }
     */
    public static AddressLayout glad_glProgramUniform4f$layout() {
        return glad_glProgramUniform4f$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4FPROC glad_glProgramUniform4f
     * }
     */
    public static MemorySegment glad_glProgramUniform4f$segment() {
        return glad_glProgramUniform4f$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4FPROC glad_glProgramUniform4f
     * }
     */
    public static MemorySegment glad_glProgramUniform4f() {
        return glad_glProgramUniform4f$constants.SEGMENT.get(glad_glProgramUniform4f$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4FPROC glad_glProgramUniform4f
     * }
     */
    public static void glad_glProgramUniform4f(MemorySegment varValue) {
        glad_glProgramUniform4f$constants.SEGMENT.set(glad_glProgramUniform4f$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform4f$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform4f").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4FPROC glad_debug_glProgramUniform4f
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform4f$layout() {
        return glad_debug_glProgramUniform4f$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4FPROC glad_debug_glProgramUniform4f
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform4f$segment() {
        return glad_debug_glProgramUniform4f$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4FPROC glad_debug_glProgramUniform4f
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform4f() {
        return glad_debug_glProgramUniform4f$constants.SEGMENT.get(glad_debug_glProgramUniform4f$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4FPROC glad_debug_glProgramUniform4f
     * }
     */
    public static void glad_debug_glProgramUniform4f(MemorySegment varValue) {
        glad_debug_glProgramUniform4f$constants.SEGMENT.set(glad_debug_glProgramUniform4f$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform4fEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform4fEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4FEXTPROC glad_glProgramUniform4fEXT
     * }
     */
    public static AddressLayout glad_glProgramUniform4fEXT$layout() {
        return glad_glProgramUniform4fEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4FEXTPROC glad_glProgramUniform4fEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform4fEXT$segment() {
        return glad_glProgramUniform4fEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4FEXTPROC glad_glProgramUniform4fEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform4fEXT() {
        return glad_glProgramUniform4fEXT$constants.SEGMENT.get(glad_glProgramUniform4fEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4FEXTPROC glad_glProgramUniform4fEXT
     * }
     */
    public static void glad_glProgramUniform4fEXT(MemorySegment varValue) {
        glad_glProgramUniform4fEXT$constants.SEGMENT.set(glad_glProgramUniform4fEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform4fEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform4fEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4FEXTPROC glad_debug_glProgramUniform4fEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform4fEXT$layout() {
        return glad_debug_glProgramUniform4fEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4FEXTPROC glad_debug_glProgramUniform4fEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform4fEXT$segment() {
        return glad_debug_glProgramUniform4fEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4FEXTPROC glad_debug_glProgramUniform4fEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform4fEXT() {
        return glad_debug_glProgramUniform4fEXT$constants.SEGMENT.get(glad_debug_glProgramUniform4fEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4FEXTPROC glad_debug_glProgramUniform4fEXT
     * }
     */
    public static void glad_debug_glProgramUniform4fEXT(MemorySegment varValue) {
        glad_debug_glProgramUniform4fEXT$constants.SEGMENT.set(glad_debug_glProgramUniform4fEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform4fv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform4fv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4FVPROC glad_glProgramUniform4fv
     * }
     */
    public static AddressLayout glad_glProgramUniform4fv$layout() {
        return glad_glProgramUniform4fv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4FVPROC glad_glProgramUniform4fv
     * }
     */
    public static MemorySegment glad_glProgramUniform4fv$segment() {
        return glad_glProgramUniform4fv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4FVPROC glad_glProgramUniform4fv
     * }
     */
    public static MemorySegment glad_glProgramUniform4fv() {
        return glad_glProgramUniform4fv$constants.SEGMENT.get(glad_glProgramUniform4fv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4FVPROC glad_glProgramUniform4fv
     * }
     */
    public static void glad_glProgramUniform4fv(MemorySegment varValue) {
        glad_glProgramUniform4fv$constants.SEGMENT.set(glad_glProgramUniform4fv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform4fv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform4fv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4FVPROC glad_debug_glProgramUniform4fv
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform4fv$layout() {
        return glad_debug_glProgramUniform4fv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4FVPROC glad_debug_glProgramUniform4fv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform4fv$segment() {
        return glad_debug_glProgramUniform4fv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4FVPROC glad_debug_glProgramUniform4fv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform4fv() {
        return glad_debug_glProgramUniform4fv$constants.SEGMENT.get(glad_debug_glProgramUniform4fv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4FVPROC glad_debug_glProgramUniform4fv
     * }
     */
    public static void glad_debug_glProgramUniform4fv(MemorySegment varValue) {
        glad_debug_glProgramUniform4fv$constants.SEGMENT.set(glad_debug_glProgramUniform4fv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform4fvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform4fvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4FVEXTPROC glad_glProgramUniform4fvEXT
     * }
     */
    public static AddressLayout glad_glProgramUniform4fvEXT$layout() {
        return glad_glProgramUniform4fvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4FVEXTPROC glad_glProgramUniform4fvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform4fvEXT$segment() {
        return glad_glProgramUniform4fvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4FVEXTPROC glad_glProgramUniform4fvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform4fvEXT() {
        return glad_glProgramUniform4fvEXT$constants.SEGMENT.get(glad_glProgramUniform4fvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4FVEXTPROC glad_glProgramUniform4fvEXT
     * }
     */
    public static void glad_glProgramUniform4fvEXT(MemorySegment varValue) {
        glad_glProgramUniform4fvEXT$constants.SEGMENT.set(glad_glProgramUniform4fvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform4fvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform4fvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4FVEXTPROC glad_debug_glProgramUniform4fvEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform4fvEXT$layout() {
        return glad_debug_glProgramUniform4fvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4FVEXTPROC glad_debug_glProgramUniform4fvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform4fvEXT$segment() {
        return glad_debug_glProgramUniform4fvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4FVEXTPROC glad_debug_glProgramUniform4fvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform4fvEXT() {
        return glad_debug_glProgramUniform4fvEXT$constants.SEGMENT.get(glad_debug_glProgramUniform4fvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4FVEXTPROC glad_debug_glProgramUniform4fvEXT
     * }
     */
    public static void glad_debug_glProgramUniform4fvEXT(MemorySegment varValue) {
        glad_debug_glProgramUniform4fvEXT$constants.SEGMENT.set(glad_debug_glProgramUniform4fvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform4i$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform4i").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4IPROC glad_glProgramUniform4i
     * }
     */
    public static AddressLayout glad_glProgramUniform4i$layout() {
        return glad_glProgramUniform4i$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4IPROC glad_glProgramUniform4i
     * }
     */
    public static MemorySegment glad_glProgramUniform4i$segment() {
        return glad_glProgramUniform4i$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4IPROC glad_glProgramUniform4i
     * }
     */
    public static MemorySegment glad_glProgramUniform4i() {
        return glad_glProgramUniform4i$constants.SEGMENT.get(glad_glProgramUniform4i$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4IPROC glad_glProgramUniform4i
     * }
     */
    public static void glad_glProgramUniform4i(MemorySegment varValue) {
        glad_glProgramUniform4i$constants.SEGMENT.set(glad_glProgramUniform4i$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform4i$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform4i").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4IPROC glad_debug_glProgramUniform4i
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform4i$layout() {
        return glad_debug_glProgramUniform4i$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4IPROC glad_debug_glProgramUniform4i
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform4i$segment() {
        return glad_debug_glProgramUniform4i$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4IPROC glad_debug_glProgramUniform4i
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform4i() {
        return glad_debug_glProgramUniform4i$constants.SEGMENT.get(glad_debug_glProgramUniform4i$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4IPROC glad_debug_glProgramUniform4i
     * }
     */
    public static void glad_debug_glProgramUniform4i(MemorySegment varValue) {
        glad_debug_glProgramUniform4i$constants.SEGMENT.set(glad_debug_glProgramUniform4i$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform4iEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform4iEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4IEXTPROC glad_glProgramUniform4iEXT
     * }
     */
    public static AddressLayout glad_glProgramUniform4iEXT$layout() {
        return glad_glProgramUniform4iEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4IEXTPROC glad_glProgramUniform4iEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform4iEXT$segment() {
        return glad_glProgramUniform4iEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4IEXTPROC glad_glProgramUniform4iEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform4iEXT() {
        return glad_glProgramUniform4iEXT$constants.SEGMENT.get(glad_glProgramUniform4iEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4IEXTPROC glad_glProgramUniform4iEXT
     * }
     */
    public static void glad_glProgramUniform4iEXT(MemorySegment varValue) {
        glad_glProgramUniform4iEXT$constants.SEGMENT.set(glad_glProgramUniform4iEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform4iEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform4iEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4IEXTPROC glad_debug_glProgramUniform4iEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform4iEXT$layout() {
        return glad_debug_glProgramUniform4iEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4IEXTPROC glad_debug_glProgramUniform4iEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform4iEXT$segment() {
        return glad_debug_glProgramUniform4iEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4IEXTPROC glad_debug_glProgramUniform4iEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform4iEXT() {
        return glad_debug_glProgramUniform4iEXT$constants.SEGMENT.get(glad_debug_glProgramUniform4iEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4IEXTPROC glad_debug_glProgramUniform4iEXT
     * }
     */
    public static void glad_debug_glProgramUniform4iEXT(MemorySegment varValue) {
        glad_debug_glProgramUniform4iEXT$constants.SEGMENT.set(glad_debug_glProgramUniform4iEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform4iv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform4iv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4IVPROC glad_glProgramUniform4iv
     * }
     */
    public static AddressLayout glad_glProgramUniform4iv$layout() {
        return glad_glProgramUniform4iv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4IVPROC glad_glProgramUniform4iv
     * }
     */
    public static MemorySegment glad_glProgramUniform4iv$segment() {
        return glad_glProgramUniform4iv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4IVPROC glad_glProgramUniform4iv
     * }
     */
    public static MemorySegment glad_glProgramUniform4iv() {
        return glad_glProgramUniform4iv$constants.SEGMENT.get(glad_glProgramUniform4iv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4IVPROC glad_glProgramUniform4iv
     * }
     */
    public static void glad_glProgramUniform4iv(MemorySegment varValue) {
        glad_glProgramUniform4iv$constants.SEGMENT.set(glad_glProgramUniform4iv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform4iv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform4iv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4IVPROC glad_debug_glProgramUniform4iv
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform4iv$layout() {
        return glad_debug_glProgramUniform4iv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4IVPROC glad_debug_glProgramUniform4iv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform4iv$segment() {
        return glad_debug_glProgramUniform4iv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4IVPROC glad_debug_glProgramUniform4iv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform4iv() {
        return glad_debug_glProgramUniform4iv$constants.SEGMENT.get(glad_debug_glProgramUniform4iv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4IVPROC glad_debug_glProgramUniform4iv
     * }
     */
    public static void glad_debug_glProgramUniform4iv(MemorySegment varValue) {
        glad_debug_glProgramUniform4iv$constants.SEGMENT.set(glad_debug_glProgramUniform4iv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform4ivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform4ivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4IVEXTPROC glad_glProgramUniform4ivEXT
     * }
     */
    public static AddressLayout glad_glProgramUniform4ivEXT$layout() {
        return glad_glProgramUniform4ivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4IVEXTPROC glad_glProgramUniform4ivEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform4ivEXT$segment() {
        return glad_glProgramUniform4ivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4IVEXTPROC glad_glProgramUniform4ivEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform4ivEXT() {
        return glad_glProgramUniform4ivEXT$constants.SEGMENT.get(glad_glProgramUniform4ivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4IVEXTPROC glad_glProgramUniform4ivEXT
     * }
     */
    public static void glad_glProgramUniform4ivEXT(MemorySegment varValue) {
        glad_glProgramUniform4ivEXT$constants.SEGMENT.set(glad_glProgramUniform4ivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform4ivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform4ivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4IVEXTPROC glad_debug_glProgramUniform4ivEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform4ivEXT$layout() {
        return glad_debug_glProgramUniform4ivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4IVEXTPROC glad_debug_glProgramUniform4ivEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform4ivEXT$segment() {
        return glad_debug_glProgramUniform4ivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4IVEXTPROC glad_debug_glProgramUniform4ivEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform4ivEXT() {
        return glad_debug_glProgramUniform4ivEXT$constants.SEGMENT.get(glad_debug_glProgramUniform4ivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4IVEXTPROC glad_debug_glProgramUniform4ivEXT
     * }
     */
    public static void glad_debug_glProgramUniform4ivEXT(MemorySegment varValue) {
        glad_debug_glProgramUniform4ivEXT$constants.SEGMENT.set(glad_debug_glProgramUniform4ivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform4ui$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform4ui").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4UIPROC glad_glProgramUniform4ui
     * }
     */
    public static AddressLayout glad_glProgramUniform4ui$layout() {
        return glad_glProgramUniform4ui$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4UIPROC glad_glProgramUniform4ui
     * }
     */
    public static MemorySegment glad_glProgramUniform4ui$segment() {
        return glad_glProgramUniform4ui$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4UIPROC glad_glProgramUniform4ui
     * }
     */
    public static MemorySegment glad_glProgramUniform4ui() {
        return glad_glProgramUniform4ui$constants.SEGMENT.get(glad_glProgramUniform4ui$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4UIPROC glad_glProgramUniform4ui
     * }
     */
    public static void glad_glProgramUniform4ui(MemorySegment varValue) {
        glad_glProgramUniform4ui$constants.SEGMENT.set(glad_glProgramUniform4ui$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform4ui$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform4ui").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4UIPROC glad_debug_glProgramUniform4ui
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform4ui$layout() {
        return glad_debug_glProgramUniform4ui$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4UIPROC glad_debug_glProgramUniform4ui
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform4ui$segment() {
        return glad_debug_glProgramUniform4ui$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4UIPROC glad_debug_glProgramUniform4ui
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform4ui() {
        return glad_debug_glProgramUniform4ui$constants.SEGMENT.get(glad_debug_glProgramUniform4ui$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4UIPROC glad_debug_glProgramUniform4ui
     * }
     */
    public static void glad_debug_glProgramUniform4ui(MemorySegment varValue) {
        glad_debug_glProgramUniform4ui$constants.SEGMENT.set(glad_debug_glProgramUniform4ui$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform4uiEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform4uiEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4UIEXTPROC glad_glProgramUniform4uiEXT
     * }
     */
    public static AddressLayout glad_glProgramUniform4uiEXT$layout() {
        return glad_glProgramUniform4uiEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4UIEXTPROC glad_glProgramUniform4uiEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform4uiEXT$segment() {
        return glad_glProgramUniform4uiEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4UIEXTPROC glad_glProgramUniform4uiEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform4uiEXT() {
        return glad_glProgramUniform4uiEXT$constants.SEGMENT.get(glad_glProgramUniform4uiEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4UIEXTPROC glad_glProgramUniform4uiEXT
     * }
     */
    public static void glad_glProgramUniform4uiEXT(MemorySegment varValue) {
        glad_glProgramUniform4uiEXT$constants.SEGMENT.set(glad_glProgramUniform4uiEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform4uiEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform4uiEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4UIEXTPROC glad_debug_glProgramUniform4uiEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform4uiEXT$layout() {
        return glad_debug_glProgramUniform4uiEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4UIEXTPROC glad_debug_glProgramUniform4uiEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform4uiEXT$segment() {
        return glad_debug_glProgramUniform4uiEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4UIEXTPROC glad_debug_glProgramUniform4uiEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform4uiEXT() {
        return glad_debug_glProgramUniform4uiEXT$constants.SEGMENT.get(glad_debug_glProgramUniform4uiEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4UIEXTPROC glad_debug_glProgramUniform4uiEXT
     * }
     */
    public static void glad_debug_glProgramUniform4uiEXT(MemorySegment varValue) {
        glad_debug_glProgramUniform4uiEXT$constants.SEGMENT.set(glad_debug_glProgramUniform4uiEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform4uiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform4uiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4UIVPROC glad_glProgramUniform4uiv
     * }
     */
    public static AddressLayout glad_glProgramUniform4uiv$layout() {
        return glad_glProgramUniform4uiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4UIVPROC glad_glProgramUniform4uiv
     * }
     */
    public static MemorySegment glad_glProgramUniform4uiv$segment() {
        return glad_glProgramUniform4uiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4UIVPROC glad_glProgramUniform4uiv
     * }
     */
    public static MemorySegment glad_glProgramUniform4uiv() {
        return glad_glProgramUniform4uiv$constants.SEGMENT.get(glad_glProgramUniform4uiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4UIVPROC glad_glProgramUniform4uiv
     * }
     */
    public static void glad_glProgramUniform4uiv(MemorySegment varValue) {
        glad_glProgramUniform4uiv$constants.SEGMENT.set(glad_glProgramUniform4uiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform4uiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform4uiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4UIVPROC glad_debug_glProgramUniform4uiv
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform4uiv$layout() {
        return glad_debug_glProgramUniform4uiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4UIVPROC glad_debug_glProgramUniform4uiv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform4uiv$segment() {
        return glad_debug_glProgramUniform4uiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4UIVPROC glad_debug_glProgramUniform4uiv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform4uiv() {
        return glad_debug_glProgramUniform4uiv$constants.SEGMENT.get(glad_debug_glProgramUniform4uiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4UIVPROC glad_debug_glProgramUniform4uiv
     * }
     */
    public static void glad_debug_glProgramUniform4uiv(MemorySegment varValue) {
        glad_debug_glProgramUniform4uiv$constants.SEGMENT.set(glad_debug_glProgramUniform4uiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniform4uivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniform4uivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4UIVEXTPROC glad_glProgramUniform4uivEXT
     * }
     */
    public static AddressLayout glad_glProgramUniform4uivEXT$layout() {
        return glad_glProgramUniform4uivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4UIVEXTPROC glad_glProgramUniform4uivEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform4uivEXT$segment() {
        return glad_glProgramUniform4uivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4UIVEXTPROC glad_glProgramUniform4uivEXT
     * }
     */
    public static MemorySegment glad_glProgramUniform4uivEXT() {
        return glad_glProgramUniform4uivEXT$constants.SEGMENT.get(glad_glProgramUniform4uivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4UIVEXTPROC glad_glProgramUniform4uivEXT
     * }
     */
    public static void glad_glProgramUniform4uivEXT(MemorySegment varValue) {
        glad_glProgramUniform4uivEXT$constants.SEGMENT.set(glad_glProgramUniform4uivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniform4uivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniform4uivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4UIVEXTPROC glad_debug_glProgramUniform4uivEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramUniform4uivEXT$layout() {
        return glad_debug_glProgramUniform4uivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4UIVEXTPROC glad_debug_glProgramUniform4uivEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform4uivEXT$segment() {
        return glad_debug_glProgramUniform4uivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4UIVEXTPROC glad_debug_glProgramUniform4uivEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniform4uivEXT() {
        return glad_debug_glProgramUniform4uivEXT$constants.SEGMENT.get(glad_debug_glProgramUniform4uivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORM4UIVEXTPROC glad_debug_glProgramUniform4uivEXT
     * }
     */
    public static void glad_debug_glProgramUniform4uivEXT(MemorySegment varValue) {
        glad_debug_glProgramUniform4uivEXT$constants.SEGMENT.set(glad_debug_glProgramUniform4uivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniformMatrix2dv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniformMatrix2dv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2DVPROC glad_glProgramUniformMatrix2dv
     * }
     */
    public static AddressLayout glad_glProgramUniformMatrix2dv$layout() {
        return glad_glProgramUniformMatrix2dv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2DVPROC glad_glProgramUniformMatrix2dv
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix2dv$segment() {
        return glad_glProgramUniformMatrix2dv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2DVPROC glad_glProgramUniformMatrix2dv
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix2dv() {
        return glad_glProgramUniformMatrix2dv$constants.SEGMENT.get(glad_glProgramUniformMatrix2dv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2DVPROC glad_glProgramUniformMatrix2dv
     * }
     */
    public static void glad_glProgramUniformMatrix2dv(MemorySegment varValue) {
        glad_glProgramUniformMatrix2dv$constants.SEGMENT.set(glad_glProgramUniformMatrix2dv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniformMatrix2dv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniformMatrix2dv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2DVPROC glad_debug_glProgramUniformMatrix2dv
     * }
     */
    public static AddressLayout glad_debug_glProgramUniformMatrix2dv$layout() {
        return glad_debug_glProgramUniformMatrix2dv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2DVPROC glad_debug_glProgramUniformMatrix2dv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix2dv$segment() {
        return glad_debug_glProgramUniformMatrix2dv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2DVPROC glad_debug_glProgramUniformMatrix2dv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix2dv() {
        return glad_debug_glProgramUniformMatrix2dv$constants.SEGMENT.get(glad_debug_glProgramUniformMatrix2dv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2DVPROC glad_debug_glProgramUniformMatrix2dv
     * }
     */
    public static void glad_debug_glProgramUniformMatrix2dv(MemorySegment varValue) {
        glad_debug_glProgramUniformMatrix2dv$constants.SEGMENT.set(glad_debug_glProgramUniformMatrix2dv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniformMatrix2dvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniformMatrix2dvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC glad_glProgramUniformMatrix2dvEXT
     * }
     */
    public static AddressLayout glad_glProgramUniformMatrix2dvEXT$layout() {
        return glad_glProgramUniformMatrix2dvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC glad_glProgramUniformMatrix2dvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix2dvEXT$segment() {
        return glad_glProgramUniformMatrix2dvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC glad_glProgramUniformMatrix2dvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix2dvEXT() {
        return glad_glProgramUniformMatrix2dvEXT$constants.SEGMENT.get(glad_glProgramUniformMatrix2dvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC glad_glProgramUniformMatrix2dvEXT
     * }
     */
    public static void glad_glProgramUniformMatrix2dvEXT(MemorySegment varValue) {
        glad_glProgramUniformMatrix2dvEXT$constants.SEGMENT.set(glad_glProgramUniformMatrix2dvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniformMatrix2dvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniformMatrix2dvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC glad_debug_glProgramUniformMatrix2dvEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramUniformMatrix2dvEXT$layout() {
        return glad_debug_glProgramUniformMatrix2dvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC glad_debug_glProgramUniformMatrix2dvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix2dvEXT$segment() {
        return glad_debug_glProgramUniformMatrix2dvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC glad_debug_glProgramUniformMatrix2dvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix2dvEXT() {
        return glad_debug_glProgramUniformMatrix2dvEXT$constants.SEGMENT.get(glad_debug_glProgramUniformMatrix2dvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC glad_debug_glProgramUniformMatrix2dvEXT
     * }
     */
    public static void glad_debug_glProgramUniformMatrix2dvEXT(MemorySegment varValue) {
        glad_debug_glProgramUniformMatrix2dvEXT$constants.SEGMENT.set(glad_debug_glProgramUniformMatrix2dvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniformMatrix2fv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniformMatrix2fv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2FVPROC glad_glProgramUniformMatrix2fv
     * }
     */
    public static AddressLayout glad_glProgramUniformMatrix2fv$layout() {
        return glad_glProgramUniformMatrix2fv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2FVPROC glad_glProgramUniformMatrix2fv
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix2fv$segment() {
        return glad_glProgramUniformMatrix2fv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2FVPROC glad_glProgramUniformMatrix2fv
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix2fv() {
        return glad_glProgramUniformMatrix2fv$constants.SEGMENT.get(glad_glProgramUniformMatrix2fv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2FVPROC glad_glProgramUniformMatrix2fv
     * }
     */
    public static void glad_glProgramUniformMatrix2fv(MemorySegment varValue) {
        glad_glProgramUniformMatrix2fv$constants.SEGMENT.set(glad_glProgramUniformMatrix2fv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniformMatrix2fv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniformMatrix2fv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2FVPROC glad_debug_glProgramUniformMatrix2fv
     * }
     */
    public static AddressLayout glad_debug_glProgramUniformMatrix2fv$layout() {
        return glad_debug_glProgramUniformMatrix2fv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2FVPROC glad_debug_glProgramUniformMatrix2fv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix2fv$segment() {
        return glad_debug_glProgramUniformMatrix2fv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2FVPROC glad_debug_glProgramUniformMatrix2fv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix2fv() {
        return glad_debug_glProgramUniformMatrix2fv$constants.SEGMENT.get(glad_debug_glProgramUniformMatrix2fv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2FVPROC glad_debug_glProgramUniformMatrix2fv
     * }
     */
    public static void glad_debug_glProgramUniformMatrix2fv(MemorySegment varValue) {
        glad_debug_glProgramUniformMatrix2fv$constants.SEGMENT.set(glad_debug_glProgramUniformMatrix2fv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniformMatrix2fvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniformMatrix2fvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC glad_glProgramUniformMatrix2fvEXT
     * }
     */
    public static AddressLayout glad_glProgramUniformMatrix2fvEXT$layout() {
        return glad_glProgramUniformMatrix2fvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC glad_glProgramUniformMatrix2fvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix2fvEXT$segment() {
        return glad_glProgramUniformMatrix2fvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC glad_glProgramUniformMatrix2fvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix2fvEXT() {
        return glad_glProgramUniformMatrix2fvEXT$constants.SEGMENT.get(glad_glProgramUniformMatrix2fvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC glad_glProgramUniformMatrix2fvEXT
     * }
     */
    public static void glad_glProgramUniformMatrix2fvEXT(MemorySegment varValue) {
        glad_glProgramUniformMatrix2fvEXT$constants.SEGMENT.set(glad_glProgramUniformMatrix2fvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniformMatrix2fvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniformMatrix2fvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC glad_debug_glProgramUniformMatrix2fvEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramUniformMatrix2fvEXT$layout() {
        return glad_debug_glProgramUniformMatrix2fvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC glad_debug_glProgramUniformMatrix2fvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix2fvEXT$segment() {
        return glad_debug_glProgramUniformMatrix2fvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC glad_debug_glProgramUniformMatrix2fvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix2fvEXT() {
        return glad_debug_glProgramUniformMatrix2fvEXT$constants.SEGMENT.get(glad_debug_glProgramUniformMatrix2fvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC glad_debug_glProgramUniformMatrix2fvEXT
     * }
     */
    public static void glad_debug_glProgramUniformMatrix2fvEXT(MemorySegment varValue) {
        glad_debug_glProgramUniformMatrix2fvEXT$constants.SEGMENT.set(glad_debug_glProgramUniformMatrix2fvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniformMatrix2x3dv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniformMatrix2x3dv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC glad_glProgramUniformMatrix2x3dv
     * }
     */
    public static AddressLayout glad_glProgramUniformMatrix2x3dv$layout() {
        return glad_glProgramUniformMatrix2x3dv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC glad_glProgramUniformMatrix2x3dv
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix2x3dv$segment() {
        return glad_glProgramUniformMatrix2x3dv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC glad_glProgramUniformMatrix2x3dv
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix2x3dv() {
        return glad_glProgramUniformMatrix2x3dv$constants.SEGMENT.get(glad_glProgramUniformMatrix2x3dv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC glad_glProgramUniformMatrix2x3dv
     * }
     */
    public static void glad_glProgramUniformMatrix2x3dv(MemorySegment varValue) {
        glad_glProgramUniformMatrix2x3dv$constants.SEGMENT.set(glad_glProgramUniformMatrix2x3dv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniformMatrix2x3dv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniformMatrix2x3dv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC glad_debug_glProgramUniformMatrix2x3dv
     * }
     */
    public static AddressLayout glad_debug_glProgramUniformMatrix2x3dv$layout() {
        return glad_debug_glProgramUniformMatrix2x3dv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC glad_debug_glProgramUniformMatrix2x3dv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix2x3dv$segment() {
        return glad_debug_glProgramUniformMatrix2x3dv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC glad_debug_glProgramUniformMatrix2x3dv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix2x3dv() {
        return glad_debug_glProgramUniformMatrix2x3dv$constants.SEGMENT.get(glad_debug_glProgramUniformMatrix2x3dv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC glad_debug_glProgramUniformMatrix2x3dv
     * }
     */
    public static void glad_debug_glProgramUniformMatrix2x3dv(MemorySegment varValue) {
        glad_debug_glProgramUniformMatrix2x3dv$constants.SEGMENT.set(glad_debug_glProgramUniformMatrix2x3dv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniformMatrix2x3dvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniformMatrix2x3dvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC glad_glProgramUniformMatrix2x3dvEXT
     * }
     */
    public static AddressLayout glad_glProgramUniformMatrix2x3dvEXT$layout() {
        return glad_glProgramUniformMatrix2x3dvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC glad_glProgramUniformMatrix2x3dvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix2x3dvEXT$segment() {
        return glad_glProgramUniformMatrix2x3dvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC glad_glProgramUniformMatrix2x3dvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix2x3dvEXT() {
        return glad_glProgramUniformMatrix2x3dvEXT$constants.SEGMENT.get(glad_glProgramUniformMatrix2x3dvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC glad_glProgramUniformMatrix2x3dvEXT
     * }
     */
    public static void glad_glProgramUniformMatrix2x3dvEXT(MemorySegment varValue) {
        glad_glProgramUniformMatrix2x3dvEXT$constants.SEGMENT.set(glad_glProgramUniformMatrix2x3dvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniformMatrix2x3dvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniformMatrix2x3dvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC glad_debug_glProgramUniformMatrix2x3dvEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramUniformMatrix2x3dvEXT$layout() {
        return glad_debug_glProgramUniformMatrix2x3dvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC glad_debug_glProgramUniformMatrix2x3dvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix2x3dvEXT$segment() {
        return glad_debug_glProgramUniformMatrix2x3dvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC glad_debug_glProgramUniformMatrix2x3dvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix2x3dvEXT() {
        return glad_debug_glProgramUniformMatrix2x3dvEXT$constants.SEGMENT.get(glad_debug_glProgramUniformMatrix2x3dvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC glad_debug_glProgramUniformMatrix2x3dvEXT
     * }
     */
    public static void glad_debug_glProgramUniformMatrix2x3dvEXT(MemorySegment varValue) {
        glad_debug_glProgramUniformMatrix2x3dvEXT$constants.SEGMENT.set(glad_debug_glProgramUniformMatrix2x3dvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniformMatrix2x3fv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniformMatrix2x3fv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC glad_glProgramUniformMatrix2x3fv
     * }
     */
    public static AddressLayout glad_glProgramUniformMatrix2x3fv$layout() {
        return glad_glProgramUniformMatrix2x3fv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC glad_glProgramUniformMatrix2x3fv
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix2x3fv$segment() {
        return glad_glProgramUniformMatrix2x3fv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC glad_glProgramUniformMatrix2x3fv
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix2x3fv() {
        return glad_glProgramUniformMatrix2x3fv$constants.SEGMENT.get(glad_glProgramUniformMatrix2x3fv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC glad_glProgramUniformMatrix2x3fv
     * }
     */
    public static void glad_glProgramUniformMatrix2x3fv(MemorySegment varValue) {
        glad_glProgramUniformMatrix2x3fv$constants.SEGMENT.set(glad_glProgramUniformMatrix2x3fv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniformMatrix2x3fv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniformMatrix2x3fv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC glad_debug_glProgramUniformMatrix2x3fv
     * }
     */
    public static AddressLayout glad_debug_glProgramUniformMatrix2x3fv$layout() {
        return glad_debug_glProgramUniformMatrix2x3fv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC glad_debug_glProgramUniformMatrix2x3fv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix2x3fv$segment() {
        return glad_debug_glProgramUniformMatrix2x3fv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC glad_debug_glProgramUniformMatrix2x3fv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix2x3fv() {
        return glad_debug_glProgramUniformMatrix2x3fv$constants.SEGMENT.get(glad_debug_glProgramUniformMatrix2x3fv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC glad_debug_glProgramUniformMatrix2x3fv
     * }
     */
    public static void glad_debug_glProgramUniformMatrix2x3fv(MemorySegment varValue) {
        glad_debug_glProgramUniformMatrix2x3fv$constants.SEGMENT.set(glad_debug_glProgramUniformMatrix2x3fv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniformMatrix2x3fvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniformMatrix2x3fvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC glad_glProgramUniformMatrix2x3fvEXT
     * }
     */
    public static AddressLayout glad_glProgramUniformMatrix2x3fvEXT$layout() {
        return glad_glProgramUniformMatrix2x3fvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC glad_glProgramUniformMatrix2x3fvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix2x3fvEXT$segment() {
        return glad_glProgramUniformMatrix2x3fvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC glad_glProgramUniformMatrix2x3fvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix2x3fvEXT() {
        return glad_glProgramUniformMatrix2x3fvEXT$constants.SEGMENT.get(glad_glProgramUniformMatrix2x3fvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC glad_glProgramUniformMatrix2x3fvEXT
     * }
     */
    public static void glad_glProgramUniformMatrix2x3fvEXT(MemorySegment varValue) {
        glad_glProgramUniformMatrix2x3fvEXT$constants.SEGMENT.set(glad_glProgramUniformMatrix2x3fvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniformMatrix2x3fvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniformMatrix2x3fvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC glad_debug_glProgramUniformMatrix2x3fvEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramUniformMatrix2x3fvEXT$layout() {
        return glad_debug_glProgramUniformMatrix2x3fvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC glad_debug_glProgramUniformMatrix2x3fvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix2x3fvEXT$segment() {
        return glad_debug_glProgramUniformMatrix2x3fvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC glad_debug_glProgramUniformMatrix2x3fvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix2x3fvEXT() {
        return glad_debug_glProgramUniformMatrix2x3fvEXT$constants.SEGMENT.get(glad_debug_glProgramUniformMatrix2x3fvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC glad_debug_glProgramUniformMatrix2x3fvEXT
     * }
     */
    public static void glad_debug_glProgramUniformMatrix2x3fvEXT(MemorySegment varValue) {
        glad_debug_glProgramUniformMatrix2x3fvEXT$constants.SEGMENT.set(glad_debug_glProgramUniformMatrix2x3fvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniformMatrix2x4dv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniformMatrix2x4dv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC glad_glProgramUniformMatrix2x4dv
     * }
     */
    public static AddressLayout glad_glProgramUniformMatrix2x4dv$layout() {
        return glad_glProgramUniformMatrix2x4dv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC glad_glProgramUniformMatrix2x4dv
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix2x4dv$segment() {
        return glad_glProgramUniformMatrix2x4dv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC glad_glProgramUniformMatrix2x4dv
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix2x4dv() {
        return glad_glProgramUniformMatrix2x4dv$constants.SEGMENT.get(glad_glProgramUniformMatrix2x4dv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC glad_glProgramUniformMatrix2x4dv
     * }
     */
    public static void glad_glProgramUniformMatrix2x4dv(MemorySegment varValue) {
        glad_glProgramUniformMatrix2x4dv$constants.SEGMENT.set(glad_glProgramUniformMatrix2x4dv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniformMatrix2x4dv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniformMatrix2x4dv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC glad_debug_glProgramUniformMatrix2x4dv
     * }
     */
    public static AddressLayout glad_debug_glProgramUniformMatrix2x4dv$layout() {
        return glad_debug_glProgramUniformMatrix2x4dv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC glad_debug_glProgramUniformMatrix2x4dv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix2x4dv$segment() {
        return glad_debug_glProgramUniformMatrix2x4dv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC glad_debug_glProgramUniformMatrix2x4dv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix2x4dv() {
        return glad_debug_glProgramUniformMatrix2x4dv$constants.SEGMENT.get(glad_debug_glProgramUniformMatrix2x4dv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC glad_debug_glProgramUniformMatrix2x4dv
     * }
     */
    public static void glad_debug_glProgramUniformMatrix2x4dv(MemorySegment varValue) {
        glad_debug_glProgramUniformMatrix2x4dv$constants.SEGMENT.set(glad_debug_glProgramUniformMatrix2x4dv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniformMatrix2x4dvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniformMatrix2x4dvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC glad_glProgramUniformMatrix2x4dvEXT
     * }
     */
    public static AddressLayout glad_glProgramUniformMatrix2x4dvEXT$layout() {
        return glad_glProgramUniformMatrix2x4dvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC glad_glProgramUniformMatrix2x4dvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix2x4dvEXT$segment() {
        return glad_glProgramUniformMatrix2x4dvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC glad_glProgramUniformMatrix2x4dvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix2x4dvEXT() {
        return glad_glProgramUniformMatrix2x4dvEXT$constants.SEGMENT.get(glad_glProgramUniformMatrix2x4dvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC glad_glProgramUniformMatrix2x4dvEXT
     * }
     */
    public static void glad_glProgramUniformMatrix2x4dvEXT(MemorySegment varValue) {
        glad_glProgramUniformMatrix2x4dvEXT$constants.SEGMENT.set(glad_glProgramUniformMatrix2x4dvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniformMatrix2x4dvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniformMatrix2x4dvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC glad_debug_glProgramUniformMatrix2x4dvEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramUniformMatrix2x4dvEXT$layout() {
        return glad_debug_glProgramUniformMatrix2x4dvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC glad_debug_glProgramUniformMatrix2x4dvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix2x4dvEXT$segment() {
        return glad_debug_glProgramUniformMatrix2x4dvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC glad_debug_glProgramUniformMatrix2x4dvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix2x4dvEXT() {
        return glad_debug_glProgramUniformMatrix2x4dvEXT$constants.SEGMENT.get(glad_debug_glProgramUniformMatrix2x4dvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC glad_debug_glProgramUniformMatrix2x4dvEXT
     * }
     */
    public static void glad_debug_glProgramUniformMatrix2x4dvEXT(MemorySegment varValue) {
        glad_debug_glProgramUniformMatrix2x4dvEXT$constants.SEGMENT.set(glad_debug_glProgramUniformMatrix2x4dvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniformMatrix2x4fv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniformMatrix2x4fv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC glad_glProgramUniformMatrix2x4fv
     * }
     */
    public static AddressLayout glad_glProgramUniformMatrix2x4fv$layout() {
        return glad_glProgramUniformMatrix2x4fv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC glad_glProgramUniformMatrix2x4fv
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix2x4fv$segment() {
        return glad_glProgramUniformMatrix2x4fv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC glad_glProgramUniformMatrix2x4fv
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix2x4fv() {
        return glad_glProgramUniformMatrix2x4fv$constants.SEGMENT.get(glad_glProgramUniformMatrix2x4fv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC glad_glProgramUniformMatrix2x4fv
     * }
     */
    public static void glad_glProgramUniformMatrix2x4fv(MemorySegment varValue) {
        glad_glProgramUniformMatrix2x4fv$constants.SEGMENT.set(glad_glProgramUniformMatrix2x4fv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniformMatrix2x4fv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniformMatrix2x4fv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC glad_debug_glProgramUniformMatrix2x4fv
     * }
     */
    public static AddressLayout glad_debug_glProgramUniformMatrix2x4fv$layout() {
        return glad_debug_glProgramUniformMatrix2x4fv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC glad_debug_glProgramUniformMatrix2x4fv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix2x4fv$segment() {
        return glad_debug_glProgramUniformMatrix2x4fv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC glad_debug_glProgramUniformMatrix2x4fv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix2x4fv() {
        return glad_debug_glProgramUniformMatrix2x4fv$constants.SEGMENT.get(glad_debug_glProgramUniformMatrix2x4fv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC glad_debug_glProgramUniformMatrix2x4fv
     * }
     */
    public static void glad_debug_glProgramUniformMatrix2x4fv(MemorySegment varValue) {
        glad_debug_glProgramUniformMatrix2x4fv$constants.SEGMENT.set(glad_debug_glProgramUniformMatrix2x4fv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniformMatrix2x4fvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniformMatrix2x4fvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC glad_glProgramUniformMatrix2x4fvEXT
     * }
     */
    public static AddressLayout glad_glProgramUniformMatrix2x4fvEXT$layout() {
        return glad_glProgramUniformMatrix2x4fvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC glad_glProgramUniformMatrix2x4fvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix2x4fvEXT$segment() {
        return glad_glProgramUniformMatrix2x4fvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC glad_glProgramUniformMatrix2x4fvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix2x4fvEXT() {
        return glad_glProgramUniformMatrix2x4fvEXT$constants.SEGMENT.get(glad_glProgramUniformMatrix2x4fvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC glad_glProgramUniformMatrix2x4fvEXT
     * }
     */
    public static void glad_glProgramUniformMatrix2x4fvEXT(MemorySegment varValue) {
        glad_glProgramUniformMatrix2x4fvEXT$constants.SEGMENT.set(glad_glProgramUniformMatrix2x4fvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniformMatrix2x4fvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniformMatrix2x4fvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC glad_debug_glProgramUniformMatrix2x4fvEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramUniformMatrix2x4fvEXT$layout() {
        return glad_debug_glProgramUniformMatrix2x4fvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC glad_debug_glProgramUniformMatrix2x4fvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix2x4fvEXT$segment() {
        return glad_debug_glProgramUniformMatrix2x4fvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC glad_debug_glProgramUniformMatrix2x4fvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix2x4fvEXT() {
        return glad_debug_glProgramUniformMatrix2x4fvEXT$constants.SEGMENT.get(glad_debug_glProgramUniformMatrix2x4fvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC glad_debug_glProgramUniformMatrix2x4fvEXT
     * }
     */
    public static void glad_debug_glProgramUniformMatrix2x4fvEXT(MemorySegment varValue) {
        glad_debug_glProgramUniformMatrix2x4fvEXT$constants.SEGMENT.set(glad_debug_glProgramUniformMatrix2x4fvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniformMatrix3dv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniformMatrix3dv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3DVPROC glad_glProgramUniformMatrix3dv
     * }
     */
    public static AddressLayout glad_glProgramUniformMatrix3dv$layout() {
        return glad_glProgramUniformMatrix3dv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3DVPROC glad_glProgramUniformMatrix3dv
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix3dv$segment() {
        return glad_glProgramUniformMatrix3dv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3DVPROC glad_glProgramUniformMatrix3dv
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix3dv() {
        return glad_glProgramUniformMatrix3dv$constants.SEGMENT.get(glad_glProgramUniformMatrix3dv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3DVPROC glad_glProgramUniformMatrix3dv
     * }
     */
    public static void glad_glProgramUniformMatrix3dv(MemorySegment varValue) {
        glad_glProgramUniformMatrix3dv$constants.SEGMENT.set(glad_glProgramUniformMatrix3dv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniformMatrix3dv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniformMatrix3dv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3DVPROC glad_debug_glProgramUniformMatrix3dv
     * }
     */
    public static AddressLayout glad_debug_glProgramUniformMatrix3dv$layout() {
        return glad_debug_glProgramUniformMatrix3dv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3DVPROC glad_debug_glProgramUniformMatrix3dv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix3dv$segment() {
        return glad_debug_glProgramUniformMatrix3dv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3DVPROC glad_debug_glProgramUniformMatrix3dv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix3dv() {
        return glad_debug_glProgramUniformMatrix3dv$constants.SEGMENT.get(glad_debug_glProgramUniformMatrix3dv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3DVPROC glad_debug_glProgramUniformMatrix3dv
     * }
     */
    public static void glad_debug_glProgramUniformMatrix3dv(MemorySegment varValue) {
        glad_debug_glProgramUniformMatrix3dv$constants.SEGMENT.set(glad_debug_glProgramUniformMatrix3dv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniformMatrix3dvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniformMatrix3dvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC glad_glProgramUniformMatrix3dvEXT
     * }
     */
    public static AddressLayout glad_glProgramUniformMatrix3dvEXT$layout() {
        return glad_glProgramUniformMatrix3dvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC glad_glProgramUniformMatrix3dvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix3dvEXT$segment() {
        return glad_glProgramUniformMatrix3dvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC glad_glProgramUniformMatrix3dvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix3dvEXT() {
        return glad_glProgramUniformMatrix3dvEXT$constants.SEGMENT.get(glad_glProgramUniformMatrix3dvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC glad_glProgramUniformMatrix3dvEXT
     * }
     */
    public static void glad_glProgramUniformMatrix3dvEXT(MemorySegment varValue) {
        glad_glProgramUniformMatrix3dvEXT$constants.SEGMENT.set(glad_glProgramUniformMatrix3dvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniformMatrix3dvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniformMatrix3dvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC glad_debug_glProgramUniformMatrix3dvEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramUniformMatrix3dvEXT$layout() {
        return glad_debug_glProgramUniformMatrix3dvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC glad_debug_glProgramUniformMatrix3dvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix3dvEXT$segment() {
        return glad_debug_glProgramUniformMatrix3dvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC glad_debug_glProgramUniformMatrix3dvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix3dvEXT() {
        return glad_debug_glProgramUniformMatrix3dvEXT$constants.SEGMENT.get(glad_debug_glProgramUniformMatrix3dvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC glad_debug_glProgramUniformMatrix3dvEXT
     * }
     */
    public static void glad_debug_glProgramUniformMatrix3dvEXT(MemorySegment varValue) {
        glad_debug_glProgramUniformMatrix3dvEXT$constants.SEGMENT.set(glad_debug_glProgramUniformMatrix3dvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniformMatrix3fv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniformMatrix3fv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3FVPROC glad_glProgramUniformMatrix3fv
     * }
     */
    public static AddressLayout glad_glProgramUniformMatrix3fv$layout() {
        return glad_glProgramUniformMatrix3fv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3FVPROC glad_glProgramUniformMatrix3fv
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix3fv$segment() {
        return glad_glProgramUniformMatrix3fv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3FVPROC glad_glProgramUniformMatrix3fv
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix3fv() {
        return glad_glProgramUniformMatrix3fv$constants.SEGMENT.get(glad_glProgramUniformMatrix3fv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3FVPROC glad_glProgramUniformMatrix3fv
     * }
     */
    public static void glad_glProgramUniformMatrix3fv(MemorySegment varValue) {
        glad_glProgramUniformMatrix3fv$constants.SEGMENT.set(glad_glProgramUniformMatrix3fv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniformMatrix3fv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniformMatrix3fv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3FVPROC glad_debug_glProgramUniformMatrix3fv
     * }
     */
    public static AddressLayout glad_debug_glProgramUniformMatrix3fv$layout() {
        return glad_debug_glProgramUniformMatrix3fv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3FVPROC glad_debug_glProgramUniformMatrix3fv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix3fv$segment() {
        return glad_debug_glProgramUniformMatrix3fv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3FVPROC glad_debug_glProgramUniformMatrix3fv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix3fv() {
        return glad_debug_glProgramUniformMatrix3fv$constants.SEGMENT.get(glad_debug_glProgramUniformMatrix3fv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3FVPROC glad_debug_glProgramUniformMatrix3fv
     * }
     */
    public static void glad_debug_glProgramUniformMatrix3fv(MemorySegment varValue) {
        glad_debug_glProgramUniformMatrix3fv$constants.SEGMENT.set(glad_debug_glProgramUniformMatrix3fv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniformMatrix3fvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniformMatrix3fvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC glad_glProgramUniformMatrix3fvEXT
     * }
     */
    public static AddressLayout glad_glProgramUniformMatrix3fvEXT$layout() {
        return glad_glProgramUniformMatrix3fvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC glad_glProgramUniformMatrix3fvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix3fvEXT$segment() {
        return glad_glProgramUniformMatrix3fvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC glad_glProgramUniformMatrix3fvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix3fvEXT() {
        return glad_glProgramUniformMatrix3fvEXT$constants.SEGMENT.get(glad_glProgramUniformMatrix3fvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC glad_glProgramUniformMatrix3fvEXT
     * }
     */
    public static void glad_glProgramUniformMatrix3fvEXT(MemorySegment varValue) {
        glad_glProgramUniformMatrix3fvEXT$constants.SEGMENT.set(glad_glProgramUniformMatrix3fvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniformMatrix3fvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniformMatrix3fvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC glad_debug_glProgramUniformMatrix3fvEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramUniformMatrix3fvEXT$layout() {
        return glad_debug_glProgramUniformMatrix3fvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC glad_debug_glProgramUniformMatrix3fvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix3fvEXT$segment() {
        return glad_debug_glProgramUniformMatrix3fvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC glad_debug_glProgramUniformMatrix3fvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix3fvEXT() {
        return glad_debug_glProgramUniformMatrix3fvEXT$constants.SEGMENT.get(glad_debug_glProgramUniformMatrix3fvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC glad_debug_glProgramUniformMatrix3fvEXT
     * }
     */
    public static void glad_debug_glProgramUniformMatrix3fvEXT(MemorySegment varValue) {
        glad_debug_glProgramUniformMatrix3fvEXT$constants.SEGMENT.set(glad_debug_glProgramUniformMatrix3fvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniformMatrix3x2dv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniformMatrix3x2dv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC glad_glProgramUniformMatrix3x2dv
     * }
     */
    public static AddressLayout glad_glProgramUniformMatrix3x2dv$layout() {
        return glad_glProgramUniformMatrix3x2dv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC glad_glProgramUniformMatrix3x2dv
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix3x2dv$segment() {
        return glad_glProgramUniformMatrix3x2dv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC glad_glProgramUniformMatrix3x2dv
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix3x2dv() {
        return glad_glProgramUniformMatrix3x2dv$constants.SEGMENT.get(glad_glProgramUniformMatrix3x2dv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC glad_glProgramUniformMatrix3x2dv
     * }
     */
    public static void glad_glProgramUniformMatrix3x2dv(MemorySegment varValue) {
        glad_glProgramUniformMatrix3x2dv$constants.SEGMENT.set(glad_glProgramUniformMatrix3x2dv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniformMatrix3x2dv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniformMatrix3x2dv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC glad_debug_glProgramUniformMatrix3x2dv
     * }
     */
    public static AddressLayout glad_debug_glProgramUniformMatrix3x2dv$layout() {
        return glad_debug_glProgramUniformMatrix3x2dv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC glad_debug_glProgramUniformMatrix3x2dv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix3x2dv$segment() {
        return glad_debug_glProgramUniformMatrix3x2dv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC glad_debug_glProgramUniformMatrix3x2dv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix3x2dv() {
        return glad_debug_glProgramUniformMatrix3x2dv$constants.SEGMENT.get(glad_debug_glProgramUniformMatrix3x2dv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC glad_debug_glProgramUniformMatrix3x2dv
     * }
     */
    public static void glad_debug_glProgramUniformMatrix3x2dv(MemorySegment varValue) {
        glad_debug_glProgramUniformMatrix3x2dv$constants.SEGMENT.set(glad_debug_glProgramUniformMatrix3x2dv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniformMatrix3x2dvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniformMatrix3x2dvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC glad_glProgramUniformMatrix3x2dvEXT
     * }
     */
    public static AddressLayout glad_glProgramUniformMatrix3x2dvEXT$layout() {
        return glad_glProgramUniformMatrix3x2dvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC glad_glProgramUniformMatrix3x2dvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix3x2dvEXT$segment() {
        return glad_glProgramUniformMatrix3x2dvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC glad_glProgramUniformMatrix3x2dvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix3x2dvEXT() {
        return glad_glProgramUniformMatrix3x2dvEXT$constants.SEGMENT.get(glad_glProgramUniformMatrix3x2dvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC glad_glProgramUniformMatrix3x2dvEXT
     * }
     */
    public static void glad_glProgramUniformMatrix3x2dvEXT(MemorySegment varValue) {
        glad_glProgramUniformMatrix3x2dvEXT$constants.SEGMENT.set(glad_glProgramUniformMatrix3x2dvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniformMatrix3x2dvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniformMatrix3x2dvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC glad_debug_glProgramUniformMatrix3x2dvEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramUniformMatrix3x2dvEXT$layout() {
        return glad_debug_glProgramUniformMatrix3x2dvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC glad_debug_glProgramUniformMatrix3x2dvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix3x2dvEXT$segment() {
        return glad_debug_glProgramUniformMatrix3x2dvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC glad_debug_glProgramUniformMatrix3x2dvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix3x2dvEXT() {
        return glad_debug_glProgramUniformMatrix3x2dvEXT$constants.SEGMENT.get(glad_debug_glProgramUniformMatrix3x2dvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC glad_debug_glProgramUniformMatrix3x2dvEXT
     * }
     */
    public static void glad_debug_glProgramUniformMatrix3x2dvEXT(MemorySegment varValue) {
        glad_debug_glProgramUniformMatrix3x2dvEXT$constants.SEGMENT.set(glad_debug_glProgramUniformMatrix3x2dvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniformMatrix3x2fv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniformMatrix3x2fv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC glad_glProgramUniformMatrix3x2fv
     * }
     */
    public static AddressLayout glad_glProgramUniformMatrix3x2fv$layout() {
        return glad_glProgramUniformMatrix3x2fv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC glad_glProgramUniformMatrix3x2fv
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix3x2fv$segment() {
        return glad_glProgramUniformMatrix3x2fv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC glad_glProgramUniformMatrix3x2fv
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix3x2fv() {
        return glad_glProgramUniformMatrix3x2fv$constants.SEGMENT.get(glad_glProgramUniformMatrix3x2fv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC glad_glProgramUniformMatrix3x2fv
     * }
     */
    public static void glad_glProgramUniformMatrix3x2fv(MemorySegment varValue) {
        glad_glProgramUniformMatrix3x2fv$constants.SEGMENT.set(glad_glProgramUniformMatrix3x2fv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniformMatrix3x2fv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniformMatrix3x2fv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC glad_debug_glProgramUniformMatrix3x2fv
     * }
     */
    public static AddressLayout glad_debug_glProgramUniformMatrix3x2fv$layout() {
        return glad_debug_glProgramUniformMatrix3x2fv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC glad_debug_glProgramUniformMatrix3x2fv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix3x2fv$segment() {
        return glad_debug_glProgramUniformMatrix3x2fv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC glad_debug_glProgramUniformMatrix3x2fv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix3x2fv() {
        return glad_debug_glProgramUniformMatrix3x2fv$constants.SEGMENT.get(glad_debug_glProgramUniformMatrix3x2fv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC glad_debug_glProgramUniformMatrix3x2fv
     * }
     */
    public static void glad_debug_glProgramUniformMatrix3x2fv(MemorySegment varValue) {
        glad_debug_glProgramUniformMatrix3x2fv$constants.SEGMENT.set(glad_debug_glProgramUniformMatrix3x2fv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniformMatrix3x2fvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniformMatrix3x2fvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC glad_glProgramUniformMatrix3x2fvEXT
     * }
     */
    public static AddressLayout glad_glProgramUniformMatrix3x2fvEXT$layout() {
        return glad_glProgramUniformMatrix3x2fvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC glad_glProgramUniformMatrix3x2fvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix3x2fvEXT$segment() {
        return glad_glProgramUniformMatrix3x2fvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC glad_glProgramUniformMatrix3x2fvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix3x2fvEXT() {
        return glad_glProgramUniformMatrix3x2fvEXT$constants.SEGMENT.get(glad_glProgramUniformMatrix3x2fvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC glad_glProgramUniformMatrix3x2fvEXT
     * }
     */
    public static void glad_glProgramUniformMatrix3x2fvEXT(MemorySegment varValue) {
        glad_glProgramUniformMatrix3x2fvEXT$constants.SEGMENT.set(glad_glProgramUniformMatrix3x2fvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniformMatrix3x2fvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniformMatrix3x2fvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC glad_debug_glProgramUniformMatrix3x2fvEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramUniformMatrix3x2fvEXT$layout() {
        return glad_debug_glProgramUniformMatrix3x2fvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC glad_debug_glProgramUniformMatrix3x2fvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix3x2fvEXT$segment() {
        return glad_debug_glProgramUniformMatrix3x2fvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC glad_debug_glProgramUniformMatrix3x2fvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix3x2fvEXT() {
        return glad_debug_glProgramUniformMatrix3x2fvEXT$constants.SEGMENT.get(glad_debug_glProgramUniformMatrix3x2fvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC glad_debug_glProgramUniformMatrix3x2fvEXT
     * }
     */
    public static void glad_debug_glProgramUniformMatrix3x2fvEXT(MemorySegment varValue) {
        glad_debug_glProgramUniformMatrix3x2fvEXT$constants.SEGMENT.set(glad_debug_glProgramUniformMatrix3x2fvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniformMatrix3x4dv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniformMatrix3x4dv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC glad_glProgramUniformMatrix3x4dv
     * }
     */
    public static AddressLayout glad_glProgramUniformMatrix3x4dv$layout() {
        return glad_glProgramUniformMatrix3x4dv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC glad_glProgramUniformMatrix3x4dv
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix3x4dv$segment() {
        return glad_glProgramUniformMatrix3x4dv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC glad_glProgramUniformMatrix3x4dv
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix3x4dv() {
        return glad_glProgramUniformMatrix3x4dv$constants.SEGMENT.get(glad_glProgramUniformMatrix3x4dv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC glad_glProgramUniformMatrix3x4dv
     * }
     */
    public static void glad_glProgramUniformMatrix3x4dv(MemorySegment varValue) {
        glad_glProgramUniformMatrix3x4dv$constants.SEGMENT.set(glad_glProgramUniformMatrix3x4dv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniformMatrix3x4dv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniformMatrix3x4dv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC glad_debug_glProgramUniformMatrix3x4dv
     * }
     */
    public static AddressLayout glad_debug_glProgramUniformMatrix3x4dv$layout() {
        return glad_debug_glProgramUniformMatrix3x4dv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC glad_debug_glProgramUniformMatrix3x4dv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix3x4dv$segment() {
        return glad_debug_glProgramUniformMatrix3x4dv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC glad_debug_glProgramUniformMatrix3x4dv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix3x4dv() {
        return glad_debug_glProgramUniformMatrix3x4dv$constants.SEGMENT.get(glad_debug_glProgramUniformMatrix3x4dv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC glad_debug_glProgramUniformMatrix3x4dv
     * }
     */
    public static void glad_debug_glProgramUniformMatrix3x4dv(MemorySegment varValue) {
        glad_debug_glProgramUniformMatrix3x4dv$constants.SEGMENT.set(glad_debug_glProgramUniformMatrix3x4dv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniformMatrix3x4dvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniformMatrix3x4dvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC glad_glProgramUniformMatrix3x4dvEXT
     * }
     */
    public static AddressLayout glad_glProgramUniformMatrix3x4dvEXT$layout() {
        return glad_glProgramUniformMatrix3x4dvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC glad_glProgramUniformMatrix3x4dvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix3x4dvEXT$segment() {
        return glad_glProgramUniformMatrix3x4dvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC glad_glProgramUniformMatrix3x4dvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix3x4dvEXT() {
        return glad_glProgramUniformMatrix3x4dvEXT$constants.SEGMENT.get(glad_glProgramUniformMatrix3x4dvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC glad_glProgramUniformMatrix3x4dvEXT
     * }
     */
    public static void glad_glProgramUniformMatrix3x4dvEXT(MemorySegment varValue) {
        glad_glProgramUniformMatrix3x4dvEXT$constants.SEGMENT.set(glad_glProgramUniformMatrix3x4dvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniformMatrix3x4dvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniformMatrix3x4dvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC glad_debug_glProgramUniformMatrix3x4dvEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramUniformMatrix3x4dvEXT$layout() {
        return glad_debug_glProgramUniformMatrix3x4dvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC glad_debug_glProgramUniformMatrix3x4dvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix3x4dvEXT$segment() {
        return glad_debug_glProgramUniformMatrix3x4dvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC glad_debug_glProgramUniformMatrix3x4dvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix3x4dvEXT() {
        return glad_debug_glProgramUniformMatrix3x4dvEXT$constants.SEGMENT.get(glad_debug_glProgramUniformMatrix3x4dvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC glad_debug_glProgramUniformMatrix3x4dvEXT
     * }
     */
    public static void glad_debug_glProgramUniformMatrix3x4dvEXT(MemorySegment varValue) {
        glad_debug_glProgramUniformMatrix3x4dvEXT$constants.SEGMENT.set(glad_debug_glProgramUniformMatrix3x4dvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniformMatrix3x4fv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniformMatrix3x4fv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC glad_glProgramUniformMatrix3x4fv
     * }
     */
    public static AddressLayout glad_glProgramUniformMatrix3x4fv$layout() {
        return glad_glProgramUniformMatrix3x4fv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC glad_glProgramUniformMatrix3x4fv
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix3x4fv$segment() {
        return glad_glProgramUniformMatrix3x4fv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC glad_glProgramUniformMatrix3x4fv
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix3x4fv() {
        return glad_glProgramUniformMatrix3x4fv$constants.SEGMENT.get(glad_glProgramUniformMatrix3x4fv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC glad_glProgramUniformMatrix3x4fv
     * }
     */
    public static void glad_glProgramUniformMatrix3x4fv(MemorySegment varValue) {
        glad_glProgramUniformMatrix3x4fv$constants.SEGMENT.set(glad_glProgramUniformMatrix3x4fv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniformMatrix3x4fv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniformMatrix3x4fv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC glad_debug_glProgramUniformMatrix3x4fv
     * }
     */
    public static AddressLayout glad_debug_glProgramUniformMatrix3x4fv$layout() {
        return glad_debug_glProgramUniformMatrix3x4fv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC glad_debug_glProgramUniformMatrix3x4fv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix3x4fv$segment() {
        return glad_debug_glProgramUniformMatrix3x4fv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC glad_debug_glProgramUniformMatrix3x4fv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix3x4fv() {
        return glad_debug_glProgramUniformMatrix3x4fv$constants.SEGMENT.get(glad_debug_glProgramUniformMatrix3x4fv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC glad_debug_glProgramUniformMatrix3x4fv
     * }
     */
    public static void glad_debug_glProgramUniformMatrix3x4fv(MemorySegment varValue) {
        glad_debug_glProgramUniformMatrix3x4fv$constants.SEGMENT.set(glad_debug_glProgramUniformMatrix3x4fv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniformMatrix3x4fvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniformMatrix3x4fvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC glad_glProgramUniformMatrix3x4fvEXT
     * }
     */
    public static AddressLayout glad_glProgramUniformMatrix3x4fvEXT$layout() {
        return glad_glProgramUniformMatrix3x4fvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC glad_glProgramUniformMatrix3x4fvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix3x4fvEXT$segment() {
        return glad_glProgramUniformMatrix3x4fvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC glad_glProgramUniformMatrix3x4fvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix3x4fvEXT() {
        return glad_glProgramUniformMatrix3x4fvEXT$constants.SEGMENT.get(glad_glProgramUniformMatrix3x4fvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC glad_glProgramUniformMatrix3x4fvEXT
     * }
     */
    public static void glad_glProgramUniformMatrix3x4fvEXT(MemorySegment varValue) {
        glad_glProgramUniformMatrix3x4fvEXT$constants.SEGMENT.set(glad_glProgramUniformMatrix3x4fvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniformMatrix3x4fvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniformMatrix3x4fvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC glad_debug_glProgramUniformMatrix3x4fvEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramUniformMatrix3x4fvEXT$layout() {
        return glad_debug_glProgramUniformMatrix3x4fvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC glad_debug_glProgramUniformMatrix3x4fvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix3x4fvEXT$segment() {
        return glad_debug_glProgramUniformMatrix3x4fvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC glad_debug_glProgramUniformMatrix3x4fvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix3x4fvEXT() {
        return glad_debug_glProgramUniformMatrix3x4fvEXT$constants.SEGMENT.get(glad_debug_glProgramUniformMatrix3x4fvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC glad_debug_glProgramUniformMatrix3x4fvEXT
     * }
     */
    public static void glad_debug_glProgramUniformMatrix3x4fvEXT(MemorySegment varValue) {
        glad_debug_glProgramUniformMatrix3x4fvEXT$constants.SEGMENT.set(glad_debug_glProgramUniformMatrix3x4fvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniformMatrix4dv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniformMatrix4dv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4DVPROC glad_glProgramUniformMatrix4dv
     * }
     */
    public static AddressLayout glad_glProgramUniformMatrix4dv$layout() {
        return glad_glProgramUniformMatrix4dv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4DVPROC glad_glProgramUniformMatrix4dv
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix4dv$segment() {
        return glad_glProgramUniformMatrix4dv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4DVPROC glad_glProgramUniformMatrix4dv
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix4dv() {
        return glad_glProgramUniformMatrix4dv$constants.SEGMENT.get(glad_glProgramUniformMatrix4dv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4DVPROC glad_glProgramUniformMatrix4dv
     * }
     */
    public static void glad_glProgramUniformMatrix4dv(MemorySegment varValue) {
        glad_glProgramUniformMatrix4dv$constants.SEGMENT.set(glad_glProgramUniformMatrix4dv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniformMatrix4dv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniformMatrix4dv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4DVPROC glad_debug_glProgramUniformMatrix4dv
     * }
     */
    public static AddressLayout glad_debug_glProgramUniformMatrix4dv$layout() {
        return glad_debug_glProgramUniformMatrix4dv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4DVPROC glad_debug_glProgramUniformMatrix4dv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix4dv$segment() {
        return glad_debug_glProgramUniformMatrix4dv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4DVPROC glad_debug_glProgramUniformMatrix4dv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix4dv() {
        return glad_debug_glProgramUniformMatrix4dv$constants.SEGMENT.get(glad_debug_glProgramUniformMatrix4dv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4DVPROC glad_debug_glProgramUniformMatrix4dv
     * }
     */
    public static void glad_debug_glProgramUniformMatrix4dv(MemorySegment varValue) {
        glad_debug_glProgramUniformMatrix4dv$constants.SEGMENT.set(glad_debug_glProgramUniformMatrix4dv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniformMatrix4dvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniformMatrix4dvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC glad_glProgramUniformMatrix4dvEXT
     * }
     */
    public static AddressLayout glad_glProgramUniformMatrix4dvEXT$layout() {
        return glad_glProgramUniformMatrix4dvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC glad_glProgramUniformMatrix4dvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix4dvEXT$segment() {
        return glad_glProgramUniformMatrix4dvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC glad_glProgramUniformMatrix4dvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix4dvEXT() {
        return glad_glProgramUniformMatrix4dvEXT$constants.SEGMENT.get(glad_glProgramUniformMatrix4dvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC glad_glProgramUniformMatrix4dvEXT
     * }
     */
    public static void glad_glProgramUniformMatrix4dvEXT(MemorySegment varValue) {
        glad_glProgramUniformMatrix4dvEXT$constants.SEGMENT.set(glad_glProgramUniformMatrix4dvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniformMatrix4dvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniformMatrix4dvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC glad_debug_glProgramUniformMatrix4dvEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramUniformMatrix4dvEXT$layout() {
        return glad_debug_glProgramUniformMatrix4dvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC glad_debug_glProgramUniformMatrix4dvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix4dvEXT$segment() {
        return glad_debug_glProgramUniformMatrix4dvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC glad_debug_glProgramUniformMatrix4dvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix4dvEXT() {
        return glad_debug_glProgramUniformMatrix4dvEXT$constants.SEGMENT.get(glad_debug_glProgramUniformMatrix4dvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC glad_debug_glProgramUniformMatrix4dvEXT
     * }
     */
    public static void glad_debug_glProgramUniformMatrix4dvEXT(MemorySegment varValue) {
        glad_debug_glProgramUniformMatrix4dvEXT$constants.SEGMENT.set(glad_debug_glProgramUniformMatrix4dvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniformMatrix4fv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniformMatrix4fv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4FVPROC glad_glProgramUniformMatrix4fv
     * }
     */
    public static AddressLayout glad_glProgramUniformMatrix4fv$layout() {
        return glad_glProgramUniformMatrix4fv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4FVPROC glad_glProgramUniformMatrix4fv
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix4fv$segment() {
        return glad_glProgramUniformMatrix4fv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4FVPROC glad_glProgramUniformMatrix4fv
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix4fv() {
        return glad_glProgramUniformMatrix4fv$constants.SEGMENT.get(glad_glProgramUniformMatrix4fv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4FVPROC glad_glProgramUniformMatrix4fv
     * }
     */
    public static void glad_glProgramUniformMatrix4fv(MemorySegment varValue) {
        glad_glProgramUniformMatrix4fv$constants.SEGMENT.set(glad_glProgramUniformMatrix4fv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniformMatrix4fv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniformMatrix4fv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4FVPROC glad_debug_glProgramUniformMatrix4fv
     * }
     */
    public static AddressLayout glad_debug_glProgramUniformMatrix4fv$layout() {
        return glad_debug_glProgramUniformMatrix4fv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4FVPROC glad_debug_glProgramUniformMatrix4fv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix4fv$segment() {
        return glad_debug_glProgramUniformMatrix4fv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4FVPROC glad_debug_glProgramUniformMatrix4fv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix4fv() {
        return glad_debug_glProgramUniformMatrix4fv$constants.SEGMENT.get(glad_debug_glProgramUniformMatrix4fv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4FVPROC glad_debug_glProgramUniformMatrix4fv
     * }
     */
    public static void glad_debug_glProgramUniformMatrix4fv(MemorySegment varValue) {
        glad_debug_glProgramUniformMatrix4fv$constants.SEGMENT.set(glad_debug_glProgramUniformMatrix4fv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniformMatrix4fvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniformMatrix4fvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC glad_glProgramUniformMatrix4fvEXT
     * }
     */
    public static AddressLayout glad_glProgramUniformMatrix4fvEXT$layout() {
        return glad_glProgramUniformMatrix4fvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC glad_glProgramUniformMatrix4fvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix4fvEXT$segment() {
        return glad_glProgramUniformMatrix4fvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC glad_glProgramUniformMatrix4fvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix4fvEXT() {
        return glad_glProgramUniformMatrix4fvEXT$constants.SEGMENT.get(glad_glProgramUniformMatrix4fvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC glad_glProgramUniformMatrix4fvEXT
     * }
     */
    public static void glad_glProgramUniformMatrix4fvEXT(MemorySegment varValue) {
        glad_glProgramUniformMatrix4fvEXT$constants.SEGMENT.set(glad_glProgramUniformMatrix4fvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniformMatrix4fvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniformMatrix4fvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC glad_debug_glProgramUniformMatrix4fvEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramUniformMatrix4fvEXT$layout() {
        return glad_debug_glProgramUniformMatrix4fvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC glad_debug_glProgramUniformMatrix4fvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix4fvEXT$segment() {
        return glad_debug_glProgramUniformMatrix4fvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC glad_debug_glProgramUniformMatrix4fvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix4fvEXT() {
        return glad_debug_glProgramUniformMatrix4fvEXT$constants.SEGMENT.get(glad_debug_glProgramUniformMatrix4fvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC glad_debug_glProgramUniformMatrix4fvEXT
     * }
     */
    public static void glad_debug_glProgramUniformMatrix4fvEXT(MemorySegment varValue) {
        glad_debug_glProgramUniformMatrix4fvEXT$constants.SEGMENT.set(glad_debug_glProgramUniformMatrix4fvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniformMatrix4x2dv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniformMatrix4x2dv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC glad_glProgramUniformMatrix4x2dv
     * }
     */
    public static AddressLayout glad_glProgramUniformMatrix4x2dv$layout() {
        return glad_glProgramUniformMatrix4x2dv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC glad_glProgramUniformMatrix4x2dv
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix4x2dv$segment() {
        return glad_glProgramUniformMatrix4x2dv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC glad_glProgramUniformMatrix4x2dv
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix4x2dv() {
        return glad_glProgramUniformMatrix4x2dv$constants.SEGMENT.get(glad_glProgramUniformMatrix4x2dv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC glad_glProgramUniformMatrix4x2dv
     * }
     */
    public static void glad_glProgramUniformMatrix4x2dv(MemorySegment varValue) {
        glad_glProgramUniformMatrix4x2dv$constants.SEGMENT.set(glad_glProgramUniformMatrix4x2dv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniformMatrix4x2dv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniformMatrix4x2dv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC glad_debug_glProgramUniformMatrix4x2dv
     * }
     */
    public static AddressLayout glad_debug_glProgramUniformMatrix4x2dv$layout() {
        return glad_debug_glProgramUniformMatrix4x2dv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC glad_debug_glProgramUniformMatrix4x2dv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix4x2dv$segment() {
        return glad_debug_glProgramUniformMatrix4x2dv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC glad_debug_glProgramUniformMatrix4x2dv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix4x2dv() {
        return glad_debug_glProgramUniformMatrix4x2dv$constants.SEGMENT.get(glad_debug_glProgramUniformMatrix4x2dv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC glad_debug_glProgramUniformMatrix4x2dv
     * }
     */
    public static void glad_debug_glProgramUniformMatrix4x2dv(MemorySegment varValue) {
        glad_debug_glProgramUniformMatrix4x2dv$constants.SEGMENT.set(glad_debug_glProgramUniformMatrix4x2dv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniformMatrix4x2dvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniformMatrix4x2dvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC glad_glProgramUniformMatrix4x2dvEXT
     * }
     */
    public static AddressLayout glad_glProgramUniformMatrix4x2dvEXT$layout() {
        return glad_glProgramUniformMatrix4x2dvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC glad_glProgramUniformMatrix4x2dvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix4x2dvEXT$segment() {
        return glad_glProgramUniformMatrix4x2dvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC glad_glProgramUniformMatrix4x2dvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix4x2dvEXT() {
        return glad_glProgramUniformMatrix4x2dvEXT$constants.SEGMENT.get(glad_glProgramUniformMatrix4x2dvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC glad_glProgramUniformMatrix4x2dvEXT
     * }
     */
    public static void glad_glProgramUniformMatrix4x2dvEXT(MemorySegment varValue) {
        glad_glProgramUniformMatrix4x2dvEXT$constants.SEGMENT.set(glad_glProgramUniformMatrix4x2dvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniformMatrix4x2dvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniformMatrix4x2dvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC glad_debug_glProgramUniformMatrix4x2dvEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramUniformMatrix4x2dvEXT$layout() {
        return glad_debug_glProgramUniformMatrix4x2dvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC glad_debug_glProgramUniformMatrix4x2dvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix4x2dvEXT$segment() {
        return glad_debug_glProgramUniformMatrix4x2dvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC glad_debug_glProgramUniformMatrix4x2dvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix4x2dvEXT() {
        return glad_debug_glProgramUniformMatrix4x2dvEXT$constants.SEGMENT.get(glad_debug_glProgramUniformMatrix4x2dvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC glad_debug_glProgramUniformMatrix4x2dvEXT
     * }
     */
    public static void glad_debug_glProgramUniformMatrix4x2dvEXT(MemorySegment varValue) {
        glad_debug_glProgramUniformMatrix4x2dvEXT$constants.SEGMENT.set(glad_debug_glProgramUniformMatrix4x2dvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniformMatrix4x2fv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniformMatrix4x2fv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC glad_glProgramUniformMatrix4x2fv
     * }
     */
    public static AddressLayout glad_glProgramUniformMatrix4x2fv$layout() {
        return glad_glProgramUniformMatrix4x2fv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC glad_glProgramUniformMatrix4x2fv
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix4x2fv$segment() {
        return glad_glProgramUniformMatrix4x2fv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC glad_glProgramUniformMatrix4x2fv
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix4x2fv() {
        return glad_glProgramUniformMatrix4x2fv$constants.SEGMENT.get(glad_glProgramUniformMatrix4x2fv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC glad_glProgramUniformMatrix4x2fv
     * }
     */
    public static void glad_glProgramUniformMatrix4x2fv(MemorySegment varValue) {
        glad_glProgramUniformMatrix4x2fv$constants.SEGMENT.set(glad_glProgramUniformMatrix4x2fv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniformMatrix4x2fv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniformMatrix4x2fv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC glad_debug_glProgramUniformMatrix4x2fv
     * }
     */
    public static AddressLayout glad_debug_glProgramUniformMatrix4x2fv$layout() {
        return glad_debug_glProgramUniformMatrix4x2fv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC glad_debug_glProgramUniformMatrix4x2fv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix4x2fv$segment() {
        return glad_debug_glProgramUniformMatrix4x2fv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC glad_debug_glProgramUniformMatrix4x2fv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix4x2fv() {
        return glad_debug_glProgramUniformMatrix4x2fv$constants.SEGMENT.get(glad_debug_glProgramUniformMatrix4x2fv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC glad_debug_glProgramUniformMatrix4x2fv
     * }
     */
    public static void glad_debug_glProgramUniformMatrix4x2fv(MemorySegment varValue) {
        glad_debug_glProgramUniformMatrix4x2fv$constants.SEGMENT.set(glad_debug_glProgramUniformMatrix4x2fv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniformMatrix4x2fvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniformMatrix4x2fvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC glad_glProgramUniformMatrix4x2fvEXT
     * }
     */
    public static AddressLayout glad_glProgramUniformMatrix4x2fvEXT$layout() {
        return glad_glProgramUniformMatrix4x2fvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC glad_glProgramUniformMatrix4x2fvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix4x2fvEXT$segment() {
        return glad_glProgramUniformMatrix4x2fvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC glad_glProgramUniformMatrix4x2fvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix4x2fvEXT() {
        return glad_glProgramUniformMatrix4x2fvEXT$constants.SEGMENT.get(glad_glProgramUniformMatrix4x2fvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC glad_glProgramUniformMatrix4x2fvEXT
     * }
     */
    public static void glad_glProgramUniformMatrix4x2fvEXT(MemorySegment varValue) {
        glad_glProgramUniformMatrix4x2fvEXT$constants.SEGMENT.set(glad_glProgramUniformMatrix4x2fvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniformMatrix4x2fvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniformMatrix4x2fvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC glad_debug_glProgramUniformMatrix4x2fvEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramUniformMatrix4x2fvEXT$layout() {
        return glad_debug_glProgramUniformMatrix4x2fvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC glad_debug_glProgramUniformMatrix4x2fvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix4x2fvEXT$segment() {
        return glad_debug_glProgramUniformMatrix4x2fvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC glad_debug_glProgramUniformMatrix4x2fvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix4x2fvEXT() {
        return glad_debug_glProgramUniformMatrix4x2fvEXT$constants.SEGMENT.get(glad_debug_glProgramUniformMatrix4x2fvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC glad_debug_glProgramUniformMatrix4x2fvEXT
     * }
     */
    public static void glad_debug_glProgramUniformMatrix4x2fvEXT(MemorySegment varValue) {
        glad_debug_glProgramUniformMatrix4x2fvEXT$constants.SEGMENT.set(glad_debug_glProgramUniformMatrix4x2fvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniformMatrix4x3dv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniformMatrix4x3dv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC glad_glProgramUniformMatrix4x3dv
     * }
     */
    public static AddressLayout glad_glProgramUniformMatrix4x3dv$layout() {
        return glad_glProgramUniformMatrix4x3dv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC glad_glProgramUniformMatrix4x3dv
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix4x3dv$segment() {
        return glad_glProgramUniformMatrix4x3dv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC glad_glProgramUniformMatrix4x3dv
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix4x3dv() {
        return glad_glProgramUniformMatrix4x3dv$constants.SEGMENT.get(glad_glProgramUniformMatrix4x3dv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC glad_glProgramUniformMatrix4x3dv
     * }
     */
    public static void glad_glProgramUniformMatrix4x3dv(MemorySegment varValue) {
        glad_glProgramUniformMatrix4x3dv$constants.SEGMENT.set(glad_glProgramUniformMatrix4x3dv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniformMatrix4x3dv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniformMatrix4x3dv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC glad_debug_glProgramUniformMatrix4x3dv
     * }
     */
    public static AddressLayout glad_debug_glProgramUniformMatrix4x3dv$layout() {
        return glad_debug_glProgramUniformMatrix4x3dv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC glad_debug_glProgramUniformMatrix4x3dv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix4x3dv$segment() {
        return glad_debug_glProgramUniformMatrix4x3dv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC glad_debug_glProgramUniformMatrix4x3dv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix4x3dv() {
        return glad_debug_glProgramUniformMatrix4x3dv$constants.SEGMENT.get(glad_debug_glProgramUniformMatrix4x3dv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC glad_debug_glProgramUniformMatrix4x3dv
     * }
     */
    public static void glad_debug_glProgramUniformMatrix4x3dv(MemorySegment varValue) {
        glad_debug_glProgramUniformMatrix4x3dv$constants.SEGMENT.set(glad_debug_glProgramUniformMatrix4x3dv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniformMatrix4x3dvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniformMatrix4x3dvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC glad_glProgramUniformMatrix4x3dvEXT
     * }
     */
    public static AddressLayout glad_glProgramUniformMatrix4x3dvEXT$layout() {
        return glad_glProgramUniformMatrix4x3dvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC glad_glProgramUniformMatrix4x3dvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix4x3dvEXT$segment() {
        return glad_glProgramUniformMatrix4x3dvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC glad_glProgramUniformMatrix4x3dvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix4x3dvEXT() {
        return glad_glProgramUniformMatrix4x3dvEXT$constants.SEGMENT.get(glad_glProgramUniformMatrix4x3dvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC glad_glProgramUniformMatrix4x3dvEXT
     * }
     */
    public static void glad_glProgramUniformMatrix4x3dvEXT(MemorySegment varValue) {
        glad_glProgramUniformMatrix4x3dvEXT$constants.SEGMENT.set(glad_glProgramUniformMatrix4x3dvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniformMatrix4x3dvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniformMatrix4x3dvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC glad_debug_glProgramUniformMatrix4x3dvEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramUniformMatrix4x3dvEXT$layout() {
        return glad_debug_glProgramUniformMatrix4x3dvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC glad_debug_glProgramUniformMatrix4x3dvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix4x3dvEXT$segment() {
        return glad_debug_glProgramUniformMatrix4x3dvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC glad_debug_glProgramUniformMatrix4x3dvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix4x3dvEXT() {
        return glad_debug_glProgramUniformMatrix4x3dvEXT$constants.SEGMENT.get(glad_debug_glProgramUniformMatrix4x3dvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC glad_debug_glProgramUniformMatrix4x3dvEXT
     * }
     */
    public static void glad_debug_glProgramUniformMatrix4x3dvEXT(MemorySegment varValue) {
        glad_debug_glProgramUniformMatrix4x3dvEXT$constants.SEGMENT.set(glad_debug_glProgramUniformMatrix4x3dvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniformMatrix4x3fv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniformMatrix4x3fv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC glad_glProgramUniformMatrix4x3fv
     * }
     */
    public static AddressLayout glad_glProgramUniformMatrix4x3fv$layout() {
        return glad_glProgramUniformMatrix4x3fv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC glad_glProgramUniformMatrix4x3fv
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix4x3fv$segment() {
        return glad_glProgramUniformMatrix4x3fv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC glad_glProgramUniformMatrix4x3fv
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix4x3fv() {
        return glad_glProgramUniformMatrix4x3fv$constants.SEGMENT.get(glad_glProgramUniformMatrix4x3fv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC glad_glProgramUniformMatrix4x3fv
     * }
     */
    public static void glad_glProgramUniformMatrix4x3fv(MemorySegment varValue) {
        glad_glProgramUniformMatrix4x3fv$constants.SEGMENT.set(glad_glProgramUniformMatrix4x3fv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniformMatrix4x3fv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniformMatrix4x3fv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC glad_debug_glProgramUniformMatrix4x3fv
     * }
     */
    public static AddressLayout glad_debug_glProgramUniformMatrix4x3fv$layout() {
        return glad_debug_glProgramUniformMatrix4x3fv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC glad_debug_glProgramUniformMatrix4x3fv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix4x3fv$segment() {
        return glad_debug_glProgramUniformMatrix4x3fv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC glad_debug_glProgramUniformMatrix4x3fv
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix4x3fv() {
        return glad_debug_glProgramUniformMatrix4x3fv$constants.SEGMENT.get(glad_debug_glProgramUniformMatrix4x3fv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC glad_debug_glProgramUniformMatrix4x3fv
     * }
     */
    public static void glad_debug_glProgramUniformMatrix4x3fv(MemorySegment varValue) {
        glad_debug_glProgramUniformMatrix4x3fv$constants.SEGMENT.set(glad_debug_glProgramUniformMatrix4x3fv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramUniformMatrix4x3fvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramUniformMatrix4x3fvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC glad_glProgramUniformMatrix4x3fvEXT
     * }
     */
    public static AddressLayout glad_glProgramUniformMatrix4x3fvEXT$layout() {
        return glad_glProgramUniformMatrix4x3fvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC glad_glProgramUniformMatrix4x3fvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix4x3fvEXT$segment() {
        return glad_glProgramUniformMatrix4x3fvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC glad_glProgramUniformMatrix4x3fvEXT
     * }
     */
    public static MemorySegment glad_glProgramUniformMatrix4x3fvEXT() {
        return glad_glProgramUniformMatrix4x3fvEXT$constants.SEGMENT.get(glad_glProgramUniformMatrix4x3fvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC glad_glProgramUniformMatrix4x3fvEXT
     * }
     */
    public static void glad_glProgramUniformMatrix4x3fvEXT(MemorySegment varValue) {
        glad_glProgramUniformMatrix4x3fvEXT$constants.SEGMENT.set(glad_glProgramUniformMatrix4x3fvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramUniformMatrix4x3fvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramUniformMatrix4x3fvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC glad_debug_glProgramUniformMatrix4x3fvEXT
     * }
     */
    public static AddressLayout glad_debug_glProgramUniformMatrix4x3fvEXT$layout() {
        return glad_debug_glProgramUniformMatrix4x3fvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC glad_debug_glProgramUniformMatrix4x3fvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix4x3fvEXT$segment() {
        return glad_debug_glProgramUniformMatrix4x3fvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC glad_debug_glProgramUniformMatrix4x3fvEXT
     * }
     */
    public static MemorySegment glad_debug_glProgramUniformMatrix4x3fvEXT() {
        return glad_debug_glProgramUniformMatrix4x3fvEXT$constants.SEGMENT.get(glad_debug_glProgramUniformMatrix4x3fvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC glad_debug_glProgramUniformMatrix4x3fvEXT
     * }
     */
    public static void glad_debug_glProgramUniformMatrix4x3fvEXT(MemorySegment varValue) {
        glad_debug_glProgramUniformMatrix4x3fvEXT$constants.SEGMENT.set(glad_debug_glProgramUniformMatrix4x3fvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProgramVertexLimitNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProgramVertexLimitNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMVERTEXLIMITNVPROC glad_glProgramVertexLimitNV
     * }
     */
    public static AddressLayout glad_glProgramVertexLimitNV$layout() {
        return glad_glProgramVertexLimitNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMVERTEXLIMITNVPROC glad_glProgramVertexLimitNV
     * }
     */
    public static MemorySegment glad_glProgramVertexLimitNV$segment() {
        return glad_glProgramVertexLimitNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMVERTEXLIMITNVPROC glad_glProgramVertexLimitNV
     * }
     */
    public static MemorySegment glad_glProgramVertexLimitNV() {
        return glad_glProgramVertexLimitNV$constants.SEGMENT.get(glad_glProgramVertexLimitNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMVERTEXLIMITNVPROC glad_glProgramVertexLimitNV
     * }
     */
    public static void glad_glProgramVertexLimitNV(MemorySegment varValue) {
        glad_glProgramVertexLimitNV$constants.SEGMENT.set(glad_glProgramVertexLimitNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProgramVertexLimitNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProgramVertexLimitNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMVERTEXLIMITNVPROC glad_debug_glProgramVertexLimitNV
     * }
     */
    public static AddressLayout glad_debug_glProgramVertexLimitNV$layout() {
        return glad_debug_glProgramVertexLimitNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMVERTEXLIMITNVPROC glad_debug_glProgramVertexLimitNV
     * }
     */
    public static MemorySegment glad_debug_glProgramVertexLimitNV$segment() {
        return glad_debug_glProgramVertexLimitNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMVERTEXLIMITNVPROC glad_debug_glProgramVertexLimitNV
     * }
     */
    public static MemorySegment glad_debug_glProgramVertexLimitNV() {
        return glad_debug_glProgramVertexLimitNV$constants.SEGMENT.get(glad_debug_glProgramVertexLimitNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROGRAMVERTEXLIMITNVPROC glad_debug_glProgramVertexLimitNV
     * }
     */
    public static void glad_debug_glProgramVertexLimitNV(MemorySegment varValue) {
        glad_debug_glProgramVertexLimitNV$constants.SEGMENT.set(glad_debug_glProgramVertexLimitNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProvokingVertex$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProvokingVertex").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROVOKINGVERTEXPROC glad_glProvokingVertex
     * }
     */
    public static AddressLayout glad_glProvokingVertex$layout() {
        return glad_glProvokingVertex$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROVOKINGVERTEXPROC glad_glProvokingVertex
     * }
     */
    public static MemorySegment glad_glProvokingVertex$segment() {
        return glad_glProvokingVertex$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROVOKINGVERTEXPROC glad_glProvokingVertex
     * }
     */
    public static MemorySegment glad_glProvokingVertex() {
        return glad_glProvokingVertex$constants.SEGMENT.get(glad_glProvokingVertex$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROVOKINGVERTEXPROC glad_glProvokingVertex
     * }
     */
    public static void glad_glProvokingVertex(MemorySegment varValue) {
        glad_glProvokingVertex$constants.SEGMENT.set(glad_glProvokingVertex$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProvokingVertex$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProvokingVertex").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROVOKINGVERTEXPROC glad_debug_glProvokingVertex
     * }
     */
    public static AddressLayout glad_debug_glProvokingVertex$layout() {
        return glad_debug_glProvokingVertex$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROVOKINGVERTEXPROC glad_debug_glProvokingVertex
     * }
     */
    public static MemorySegment glad_debug_glProvokingVertex$segment() {
        return glad_debug_glProvokingVertex$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROVOKINGVERTEXPROC glad_debug_glProvokingVertex
     * }
     */
    public static MemorySegment glad_debug_glProvokingVertex() {
        return glad_debug_glProvokingVertex$constants.SEGMENT.get(glad_debug_glProvokingVertex$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROVOKINGVERTEXPROC glad_debug_glProvokingVertex
     * }
     */
    public static void glad_debug_glProvokingVertex(MemorySegment varValue) {
        glad_debug_glProvokingVertex$constants.SEGMENT.set(glad_debug_glProvokingVertex$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glProvokingVertexEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glProvokingVertexEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROVOKINGVERTEXEXTPROC glad_glProvokingVertexEXT
     * }
     */
    public static AddressLayout glad_glProvokingVertexEXT$layout() {
        return glad_glProvokingVertexEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROVOKINGVERTEXEXTPROC glad_glProvokingVertexEXT
     * }
     */
    public static MemorySegment glad_glProvokingVertexEXT$segment() {
        return glad_glProvokingVertexEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROVOKINGVERTEXEXTPROC glad_glProvokingVertexEXT
     * }
     */
    public static MemorySegment glad_glProvokingVertexEXT() {
        return glad_glProvokingVertexEXT$constants.SEGMENT.get(glad_glProvokingVertexEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROVOKINGVERTEXEXTPROC glad_glProvokingVertexEXT
     * }
     */
    public static void glad_glProvokingVertexEXT(MemorySegment varValue) {
        glad_glProvokingVertexEXT$constants.SEGMENT.set(glad_glProvokingVertexEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glProvokingVertexEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glProvokingVertexEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPROVOKINGVERTEXEXTPROC glad_debug_glProvokingVertexEXT
     * }
     */
    public static AddressLayout glad_debug_glProvokingVertexEXT$layout() {
        return glad_debug_glProvokingVertexEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPROVOKINGVERTEXEXTPROC glad_debug_glProvokingVertexEXT
     * }
     */
    public static MemorySegment glad_debug_glProvokingVertexEXT$segment() {
        return glad_debug_glProvokingVertexEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROVOKINGVERTEXEXTPROC glad_debug_glProvokingVertexEXT
     * }
     */
    public static MemorySegment glad_debug_glProvokingVertexEXT() {
        return glad_debug_glProvokingVertexEXT$constants.SEGMENT.get(glad_debug_glProvokingVertexEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPROVOKINGVERTEXEXTPROC glad_debug_glProvokingVertexEXT
     * }
     */
    public static void glad_debug_glProvokingVertexEXT(MemorySegment varValue) {
        glad_debug_glProvokingVertexEXT$constants.SEGMENT.set(glad_debug_glProvokingVertexEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glPushAttrib$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glPushAttrib").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPUSHATTRIBPROC glad_glPushAttrib
     * }
     */
    public static AddressLayout glad_glPushAttrib$layout() {
        return glad_glPushAttrib$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPUSHATTRIBPROC glad_glPushAttrib
     * }
     */
    public static MemorySegment glad_glPushAttrib$segment() {
        return glad_glPushAttrib$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPUSHATTRIBPROC glad_glPushAttrib
     * }
     */
    public static MemorySegment glad_glPushAttrib() {
        return glad_glPushAttrib$constants.SEGMENT.get(glad_glPushAttrib$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPUSHATTRIBPROC glad_glPushAttrib
     * }
     */
    public static void glad_glPushAttrib(MemorySegment varValue) {
        glad_glPushAttrib$constants.SEGMENT.set(glad_glPushAttrib$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glPushAttrib$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glPushAttrib").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPUSHATTRIBPROC glad_debug_glPushAttrib
     * }
     */
    public static AddressLayout glad_debug_glPushAttrib$layout() {
        return glad_debug_glPushAttrib$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPUSHATTRIBPROC glad_debug_glPushAttrib
     * }
     */
    public static MemorySegment glad_debug_glPushAttrib$segment() {
        return glad_debug_glPushAttrib$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPUSHATTRIBPROC glad_debug_glPushAttrib
     * }
     */
    public static MemorySegment glad_debug_glPushAttrib() {
        return glad_debug_glPushAttrib$constants.SEGMENT.get(glad_debug_glPushAttrib$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPUSHATTRIBPROC glad_debug_glPushAttrib
     * }
     */
    public static void glad_debug_glPushAttrib(MemorySegment varValue) {
        glad_debug_glPushAttrib$constants.SEGMENT.set(glad_debug_glPushAttrib$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glPushClientAttrib$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glPushClientAttrib").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPUSHCLIENTATTRIBPROC glad_glPushClientAttrib
     * }
     */
    public static AddressLayout glad_glPushClientAttrib$layout() {
        return glad_glPushClientAttrib$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPUSHCLIENTATTRIBPROC glad_glPushClientAttrib
     * }
     */
    public static MemorySegment glad_glPushClientAttrib$segment() {
        return glad_glPushClientAttrib$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPUSHCLIENTATTRIBPROC glad_glPushClientAttrib
     * }
     */
    public static MemorySegment glad_glPushClientAttrib() {
        return glad_glPushClientAttrib$constants.SEGMENT.get(glad_glPushClientAttrib$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPUSHCLIENTATTRIBPROC glad_glPushClientAttrib
     * }
     */
    public static void glad_glPushClientAttrib(MemorySegment varValue) {
        glad_glPushClientAttrib$constants.SEGMENT.set(glad_glPushClientAttrib$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glPushClientAttrib$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glPushClientAttrib").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPUSHCLIENTATTRIBPROC glad_debug_glPushClientAttrib
     * }
     */
    public static AddressLayout glad_debug_glPushClientAttrib$layout() {
        return glad_debug_glPushClientAttrib$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPUSHCLIENTATTRIBPROC glad_debug_glPushClientAttrib
     * }
     */
    public static MemorySegment glad_debug_glPushClientAttrib$segment() {
        return glad_debug_glPushClientAttrib$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPUSHCLIENTATTRIBPROC glad_debug_glPushClientAttrib
     * }
     */
    public static MemorySegment glad_debug_glPushClientAttrib() {
        return glad_debug_glPushClientAttrib$constants.SEGMENT.get(glad_debug_glPushClientAttrib$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPUSHCLIENTATTRIBPROC glad_debug_glPushClientAttrib
     * }
     */
    public static void glad_debug_glPushClientAttrib(MemorySegment varValue) {
        glad_debug_glPushClientAttrib$constants.SEGMENT.set(glad_debug_glPushClientAttrib$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glPushClientAttribDefaultEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glPushClientAttribDefaultEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC glad_glPushClientAttribDefaultEXT
     * }
     */
    public static AddressLayout glad_glPushClientAttribDefaultEXT$layout() {
        return glad_glPushClientAttribDefaultEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC glad_glPushClientAttribDefaultEXT
     * }
     */
    public static MemorySegment glad_glPushClientAttribDefaultEXT$segment() {
        return glad_glPushClientAttribDefaultEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC glad_glPushClientAttribDefaultEXT
     * }
     */
    public static MemorySegment glad_glPushClientAttribDefaultEXT() {
        return glad_glPushClientAttribDefaultEXT$constants.SEGMENT.get(glad_glPushClientAttribDefaultEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC glad_glPushClientAttribDefaultEXT
     * }
     */
    public static void glad_glPushClientAttribDefaultEXT(MemorySegment varValue) {
        glad_glPushClientAttribDefaultEXT$constants.SEGMENT.set(glad_glPushClientAttribDefaultEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glPushClientAttribDefaultEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glPushClientAttribDefaultEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC glad_debug_glPushClientAttribDefaultEXT
     * }
     */
    public static AddressLayout glad_debug_glPushClientAttribDefaultEXT$layout() {
        return glad_debug_glPushClientAttribDefaultEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC glad_debug_glPushClientAttribDefaultEXT
     * }
     */
    public static MemorySegment glad_debug_glPushClientAttribDefaultEXT$segment() {
        return glad_debug_glPushClientAttribDefaultEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC glad_debug_glPushClientAttribDefaultEXT
     * }
     */
    public static MemorySegment glad_debug_glPushClientAttribDefaultEXT() {
        return glad_debug_glPushClientAttribDefaultEXT$constants.SEGMENT.get(glad_debug_glPushClientAttribDefaultEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC glad_debug_glPushClientAttribDefaultEXT
     * }
     */
    public static void glad_debug_glPushClientAttribDefaultEXT(MemorySegment varValue) {
        glad_debug_glPushClientAttribDefaultEXT$constants.SEGMENT.set(glad_debug_glPushClientAttribDefaultEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glPushDebugGroup$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glPushDebugGroup").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPUSHDEBUGGROUPPROC glad_glPushDebugGroup
     * }
     */
    public static AddressLayout glad_glPushDebugGroup$layout() {
        return glad_glPushDebugGroup$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPUSHDEBUGGROUPPROC glad_glPushDebugGroup
     * }
     */
    public static MemorySegment glad_glPushDebugGroup$segment() {
        return glad_glPushDebugGroup$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPUSHDEBUGGROUPPROC glad_glPushDebugGroup
     * }
     */
    public static MemorySegment glad_glPushDebugGroup() {
        return glad_glPushDebugGroup$constants.SEGMENT.get(glad_glPushDebugGroup$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPUSHDEBUGGROUPPROC glad_glPushDebugGroup
     * }
     */
    public static void glad_glPushDebugGroup(MemorySegment varValue) {
        glad_glPushDebugGroup$constants.SEGMENT.set(glad_glPushDebugGroup$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glPushDebugGroup$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glPushDebugGroup").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPUSHDEBUGGROUPPROC glad_debug_glPushDebugGroup
     * }
     */
    public static AddressLayout glad_debug_glPushDebugGroup$layout() {
        return glad_debug_glPushDebugGroup$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPUSHDEBUGGROUPPROC glad_debug_glPushDebugGroup
     * }
     */
    public static MemorySegment glad_debug_glPushDebugGroup$segment() {
        return glad_debug_glPushDebugGroup$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPUSHDEBUGGROUPPROC glad_debug_glPushDebugGroup
     * }
     */
    public static MemorySegment glad_debug_glPushDebugGroup() {
        return glad_debug_glPushDebugGroup$constants.SEGMENT.get(glad_debug_glPushDebugGroup$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPUSHDEBUGGROUPPROC glad_debug_glPushDebugGroup
     * }
     */
    public static void glad_debug_glPushDebugGroup(MemorySegment varValue) {
        glad_debug_glPushDebugGroup$constants.SEGMENT.set(glad_debug_glPushDebugGroup$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glPushMatrix$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glPushMatrix").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPUSHMATRIXPROC glad_glPushMatrix
     * }
     */
    public static AddressLayout glad_glPushMatrix$layout() {
        return glad_glPushMatrix$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPUSHMATRIXPROC glad_glPushMatrix
     * }
     */
    public static MemorySegment glad_glPushMatrix$segment() {
        return glad_glPushMatrix$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPUSHMATRIXPROC glad_glPushMatrix
     * }
     */
    public static MemorySegment glad_glPushMatrix() {
        return glad_glPushMatrix$constants.SEGMENT.get(glad_glPushMatrix$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPUSHMATRIXPROC glad_glPushMatrix
     * }
     */
    public static void glad_glPushMatrix(MemorySegment varValue) {
        glad_glPushMatrix$constants.SEGMENT.set(glad_glPushMatrix$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glPushMatrix$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glPushMatrix").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPUSHMATRIXPROC glad_debug_glPushMatrix
     * }
     */
    public static AddressLayout glad_debug_glPushMatrix$layout() {
        return glad_debug_glPushMatrix$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPUSHMATRIXPROC glad_debug_glPushMatrix
     * }
     */
    public static MemorySegment glad_debug_glPushMatrix$segment() {
        return glad_debug_glPushMatrix$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPUSHMATRIXPROC glad_debug_glPushMatrix
     * }
     */
    public static MemorySegment glad_debug_glPushMatrix() {
        return glad_debug_glPushMatrix$constants.SEGMENT.get(glad_debug_glPushMatrix$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPUSHMATRIXPROC glad_debug_glPushMatrix
     * }
     */
    public static void glad_debug_glPushMatrix(MemorySegment varValue) {
        glad_debug_glPushMatrix$constants.SEGMENT.set(glad_debug_glPushMatrix$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glPushName$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glPushName").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPUSHNAMEPROC glad_glPushName
     * }
     */
    public static AddressLayout glad_glPushName$layout() {
        return glad_glPushName$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPUSHNAMEPROC glad_glPushName
     * }
     */
    public static MemorySegment glad_glPushName$segment() {
        return glad_glPushName$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPUSHNAMEPROC glad_glPushName
     * }
     */
    public static MemorySegment glad_glPushName() {
        return glad_glPushName$constants.SEGMENT.get(glad_glPushName$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPUSHNAMEPROC glad_glPushName
     * }
     */
    public static void glad_glPushName(MemorySegment varValue) {
        glad_glPushName$constants.SEGMENT.set(glad_glPushName$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glPushName$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glPushName").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLPUSHNAMEPROC glad_debug_glPushName
     * }
     */
    public static AddressLayout glad_debug_glPushName$layout() {
        return glad_debug_glPushName$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLPUSHNAMEPROC glad_debug_glPushName
     * }
     */
    public static MemorySegment glad_debug_glPushName$segment() {
        return glad_debug_glPushName$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLPUSHNAMEPROC glad_debug_glPushName
     * }
     */
    public static MemorySegment glad_debug_glPushName() {
        return glad_debug_glPushName$constants.SEGMENT.get(glad_debug_glPushName$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLPUSHNAMEPROC glad_debug_glPushName
     * }
     */
    public static void glad_debug_glPushName(MemorySegment varValue) {
        glad_debug_glPushName$constants.SEGMENT.set(glad_debug_glPushName$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glQueryCounter$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glQueryCounter").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLQUERYCOUNTERPROC glad_glQueryCounter
     * }
     */
    public static AddressLayout glad_glQueryCounter$layout() {
        return glad_glQueryCounter$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLQUERYCOUNTERPROC glad_glQueryCounter
     * }
     */
    public static MemorySegment glad_glQueryCounter$segment() {
        return glad_glQueryCounter$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLQUERYCOUNTERPROC glad_glQueryCounter
     * }
     */
    public static MemorySegment glad_glQueryCounter() {
        return glad_glQueryCounter$constants.SEGMENT.get(glad_glQueryCounter$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLQUERYCOUNTERPROC glad_glQueryCounter
     * }
     */
    public static void glad_glQueryCounter(MemorySegment varValue) {
        glad_glQueryCounter$constants.SEGMENT.set(glad_glQueryCounter$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glQueryCounter$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glQueryCounter").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLQUERYCOUNTERPROC glad_debug_glQueryCounter
     * }
     */
    public static AddressLayout glad_debug_glQueryCounter$layout() {
        return glad_debug_glQueryCounter$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLQUERYCOUNTERPROC glad_debug_glQueryCounter
     * }
     */
    public static MemorySegment glad_debug_glQueryCounter$segment() {
        return glad_debug_glQueryCounter$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLQUERYCOUNTERPROC glad_debug_glQueryCounter
     * }
     */
    public static MemorySegment glad_debug_glQueryCounter() {
        return glad_debug_glQueryCounter$constants.SEGMENT.get(glad_debug_glQueryCounter$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLQUERYCOUNTERPROC glad_debug_glQueryCounter
     * }
     */
    public static void glad_debug_glQueryCounter(MemorySegment varValue) {
        glad_debug_glQueryCounter$constants.SEGMENT.set(glad_debug_glQueryCounter$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glRasterPos2d$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glRasterPos2d").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2DPROC glad_glRasterPos2d
     * }
     */
    public static AddressLayout glad_glRasterPos2d$layout() {
        return glad_glRasterPos2d$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2DPROC glad_glRasterPos2d
     * }
     */
    public static MemorySegment glad_glRasterPos2d$segment() {
        return glad_glRasterPos2d$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2DPROC glad_glRasterPos2d
     * }
     */
    public static MemorySegment glad_glRasterPos2d() {
        return glad_glRasterPos2d$constants.SEGMENT.get(glad_glRasterPos2d$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2DPROC glad_glRasterPos2d
     * }
     */
    public static void glad_glRasterPos2d(MemorySegment varValue) {
        glad_glRasterPos2d$constants.SEGMENT.set(glad_glRasterPos2d$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glRasterPos2d$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glRasterPos2d").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2DPROC glad_debug_glRasterPos2d
     * }
     */
    public static AddressLayout glad_debug_glRasterPos2d$layout() {
        return glad_debug_glRasterPos2d$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2DPROC glad_debug_glRasterPos2d
     * }
     */
    public static MemorySegment glad_debug_glRasterPos2d$segment() {
        return glad_debug_glRasterPos2d$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2DPROC glad_debug_glRasterPos2d
     * }
     */
    public static MemorySegment glad_debug_glRasterPos2d() {
        return glad_debug_glRasterPos2d$constants.SEGMENT.get(glad_debug_glRasterPos2d$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2DPROC glad_debug_glRasterPos2d
     * }
     */
    public static void glad_debug_glRasterPos2d(MemorySegment varValue) {
        glad_debug_glRasterPos2d$constants.SEGMENT.set(glad_debug_glRasterPos2d$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glRasterPos2dv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glRasterPos2dv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2DVPROC glad_glRasterPos2dv
     * }
     */
    public static AddressLayout glad_glRasterPos2dv$layout() {
        return glad_glRasterPos2dv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2DVPROC glad_glRasterPos2dv
     * }
     */
    public static MemorySegment glad_glRasterPos2dv$segment() {
        return glad_glRasterPos2dv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2DVPROC glad_glRasterPos2dv
     * }
     */
    public static MemorySegment glad_glRasterPos2dv() {
        return glad_glRasterPos2dv$constants.SEGMENT.get(glad_glRasterPos2dv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2DVPROC glad_glRasterPos2dv
     * }
     */
    public static void glad_glRasterPos2dv(MemorySegment varValue) {
        glad_glRasterPos2dv$constants.SEGMENT.set(glad_glRasterPos2dv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glRasterPos2dv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glRasterPos2dv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2DVPROC glad_debug_glRasterPos2dv
     * }
     */
    public static AddressLayout glad_debug_glRasterPos2dv$layout() {
        return glad_debug_glRasterPos2dv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2DVPROC glad_debug_glRasterPos2dv
     * }
     */
    public static MemorySegment glad_debug_glRasterPos2dv$segment() {
        return glad_debug_glRasterPos2dv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2DVPROC glad_debug_glRasterPos2dv
     * }
     */
    public static MemorySegment glad_debug_glRasterPos2dv() {
        return glad_debug_glRasterPos2dv$constants.SEGMENT.get(glad_debug_glRasterPos2dv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2DVPROC glad_debug_glRasterPos2dv
     * }
     */
    public static void glad_debug_glRasterPos2dv(MemorySegment varValue) {
        glad_debug_glRasterPos2dv$constants.SEGMENT.set(glad_debug_glRasterPos2dv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glRasterPos2f$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glRasterPos2f").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2FPROC glad_glRasterPos2f
     * }
     */
    public static AddressLayout glad_glRasterPos2f$layout() {
        return glad_glRasterPos2f$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2FPROC glad_glRasterPos2f
     * }
     */
    public static MemorySegment glad_glRasterPos2f$segment() {
        return glad_glRasterPos2f$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2FPROC glad_glRasterPos2f
     * }
     */
    public static MemorySegment glad_glRasterPos2f() {
        return glad_glRasterPos2f$constants.SEGMENT.get(glad_glRasterPos2f$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2FPROC glad_glRasterPos2f
     * }
     */
    public static void glad_glRasterPos2f(MemorySegment varValue) {
        glad_glRasterPos2f$constants.SEGMENT.set(glad_glRasterPos2f$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glRasterPos2f$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glRasterPos2f").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2FPROC glad_debug_glRasterPos2f
     * }
     */
    public static AddressLayout glad_debug_glRasterPos2f$layout() {
        return glad_debug_glRasterPos2f$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2FPROC glad_debug_glRasterPos2f
     * }
     */
    public static MemorySegment glad_debug_glRasterPos2f$segment() {
        return glad_debug_glRasterPos2f$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2FPROC glad_debug_glRasterPos2f
     * }
     */
    public static MemorySegment glad_debug_glRasterPos2f() {
        return glad_debug_glRasterPos2f$constants.SEGMENT.get(glad_debug_glRasterPos2f$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2FPROC glad_debug_glRasterPos2f
     * }
     */
    public static void glad_debug_glRasterPos2f(MemorySegment varValue) {
        glad_debug_glRasterPos2f$constants.SEGMENT.set(glad_debug_glRasterPos2f$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glRasterPos2fv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glRasterPos2fv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2FVPROC glad_glRasterPos2fv
     * }
     */
    public static AddressLayout glad_glRasterPos2fv$layout() {
        return glad_glRasterPos2fv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2FVPROC glad_glRasterPos2fv
     * }
     */
    public static MemorySegment glad_glRasterPos2fv$segment() {
        return glad_glRasterPos2fv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2FVPROC glad_glRasterPos2fv
     * }
     */
    public static MemorySegment glad_glRasterPos2fv() {
        return glad_glRasterPos2fv$constants.SEGMENT.get(glad_glRasterPos2fv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2FVPROC glad_glRasterPos2fv
     * }
     */
    public static void glad_glRasterPos2fv(MemorySegment varValue) {
        glad_glRasterPos2fv$constants.SEGMENT.set(glad_glRasterPos2fv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glRasterPos2fv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glRasterPos2fv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2FVPROC glad_debug_glRasterPos2fv
     * }
     */
    public static AddressLayout glad_debug_glRasterPos2fv$layout() {
        return glad_debug_glRasterPos2fv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2FVPROC glad_debug_glRasterPos2fv
     * }
     */
    public static MemorySegment glad_debug_glRasterPos2fv$segment() {
        return glad_debug_glRasterPos2fv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2FVPROC glad_debug_glRasterPos2fv
     * }
     */
    public static MemorySegment glad_debug_glRasterPos2fv() {
        return glad_debug_glRasterPos2fv$constants.SEGMENT.get(glad_debug_glRasterPos2fv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2FVPROC glad_debug_glRasterPos2fv
     * }
     */
    public static void glad_debug_glRasterPos2fv(MemorySegment varValue) {
        glad_debug_glRasterPos2fv$constants.SEGMENT.set(glad_debug_glRasterPos2fv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glRasterPos2i$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glRasterPos2i").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2IPROC glad_glRasterPos2i
     * }
     */
    public static AddressLayout glad_glRasterPos2i$layout() {
        return glad_glRasterPos2i$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2IPROC glad_glRasterPos2i
     * }
     */
    public static MemorySegment glad_glRasterPos2i$segment() {
        return glad_glRasterPos2i$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2IPROC glad_glRasterPos2i
     * }
     */
    public static MemorySegment glad_glRasterPos2i() {
        return glad_glRasterPos2i$constants.SEGMENT.get(glad_glRasterPos2i$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2IPROC glad_glRasterPos2i
     * }
     */
    public static void glad_glRasterPos2i(MemorySegment varValue) {
        glad_glRasterPos2i$constants.SEGMENT.set(glad_glRasterPos2i$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glRasterPos2i$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glRasterPos2i").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2IPROC glad_debug_glRasterPos2i
     * }
     */
    public static AddressLayout glad_debug_glRasterPos2i$layout() {
        return glad_debug_glRasterPos2i$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2IPROC glad_debug_glRasterPos2i
     * }
     */
    public static MemorySegment glad_debug_glRasterPos2i$segment() {
        return glad_debug_glRasterPos2i$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2IPROC glad_debug_glRasterPos2i
     * }
     */
    public static MemorySegment glad_debug_glRasterPos2i() {
        return glad_debug_glRasterPos2i$constants.SEGMENT.get(glad_debug_glRasterPos2i$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2IPROC glad_debug_glRasterPos2i
     * }
     */
    public static void glad_debug_glRasterPos2i(MemorySegment varValue) {
        glad_debug_glRasterPos2i$constants.SEGMENT.set(glad_debug_glRasterPos2i$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glRasterPos2iv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glRasterPos2iv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2IVPROC glad_glRasterPos2iv
     * }
     */
    public static AddressLayout glad_glRasterPos2iv$layout() {
        return glad_glRasterPos2iv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2IVPROC glad_glRasterPos2iv
     * }
     */
    public static MemorySegment glad_glRasterPos2iv$segment() {
        return glad_glRasterPos2iv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2IVPROC glad_glRasterPos2iv
     * }
     */
    public static MemorySegment glad_glRasterPos2iv() {
        return glad_glRasterPos2iv$constants.SEGMENT.get(glad_glRasterPos2iv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2IVPROC glad_glRasterPos2iv
     * }
     */
    public static void glad_glRasterPos2iv(MemorySegment varValue) {
        glad_glRasterPos2iv$constants.SEGMENT.set(glad_glRasterPos2iv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glRasterPos2iv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glRasterPos2iv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2IVPROC glad_debug_glRasterPos2iv
     * }
     */
    public static AddressLayout glad_debug_glRasterPos2iv$layout() {
        return glad_debug_glRasterPos2iv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2IVPROC glad_debug_glRasterPos2iv
     * }
     */
    public static MemorySegment glad_debug_glRasterPos2iv$segment() {
        return glad_debug_glRasterPos2iv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2IVPROC glad_debug_glRasterPos2iv
     * }
     */
    public static MemorySegment glad_debug_glRasterPos2iv() {
        return glad_debug_glRasterPos2iv$constants.SEGMENT.get(glad_debug_glRasterPos2iv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2IVPROC glad_debug_glRasterPos2iv
     * }
     */
    public static void glad_debug_glRasterPos2iv(MemorySegment varValue) {
        glad_debug_glRasterPos2iv$constants.SEGMENT.set(glad_debug_glRasterPos2iv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glRasterPos2s$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glRasterPos2s").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2SPROC glad_glRasterPos2s
     * }
     */
    public static AddressLayout glad_glRasterPos2s$layout() {
        return glad_glRasterPos2s$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2SPROC glad_glRasterPos2s
     * }
     */
    public static MemorySegment glad_glRasterPos2s$segment() {
        return glad_glRasterPos2s$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2SPROC glad_glRasterPos2s
     * }
     */
    public static MemorySegment glad_glRasterPos2s() {
        return glad_glRasterPos2s$constants.SEGMENT.get(glad_glRasterPos2s$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2SPROC glad_glRasterPos2s
     * }
     */
    public static void glad_glRasterPos2s(MemorySegment varValue) {
        glad_glRasterPos2s$constants.SEGMENT.set(glad_glRasterPos2s$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glRasterPos2s$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glRasterPos2s").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2SPROC glad_debug_glRasterPos2s
     * }
     */
    public static AddressLayout glad_debug_glRasterPos2s$layout() {
        return glad_debug_glRasterPos2s$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2SPROC glad_debug_glRasterPos2s
     * }
     */
    public static MemorySegment glad_debug_glRasterPos2s$segment() {
        return glad_debug_glRasterPos2s$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2SPROC glad_debug_glRasterPos2s
     * }
     */
    public static MemorySegment glad_debug_glRasterPos2s() {
        return glad_debug_glRasterPos2s$constants.SEGMENT.get(glad_debug_glRasterPos2s$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2SPROC glad_debug_glRasterPos2s
     * }
     */
    public static void glad_debug_glRasterPos2s(MemorySegment varValue) {
        glad_debug_glRasterPos2s$constants.SEGMENT.set(glad_debug_glRasterPos2s$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glRasterPos2sv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glRasterPos2sv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2SVPROC glad_glRasterPos2sv
     * }
     */
    public static AddressLayout glad_glRasterPos2sv$layout() {
        return glad_glRasterPos2sv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2SVPROC glad_glRasterPos2sv
     * }
     */
    public static MemorySegment glad_glRasterPos2sv$segment() {
        return glad_glRasterPos2sv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2SVPROC glad_glRasterPos2sv
     * }
     */
    public static MemorySegment glad_glRasterPos2sv() {
        return glad_glRasterPos2sv$constants.SEGMENT.get(glad_glRasterPos2sv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2SVPROC glad_glRasterPos2sv
     * }
     */
    public static void glad_glRasterPos2sv(MemorySegment varValue) {
        glad_glRasterPos2sv$constants.SEGMENT.set(glad_glRasterPos2sv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glRasterPos2sv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glRasterPos2sv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2SVPROC glad_debug_glRasterPos2sv
     * }
     */
    public static AddressLayout glad_debug_glRasterPos2sv$layout() {
        return glad_debug_glRasterPos2sv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2SVPROC glad_debug_glRasterPos2sv
     * }
     */
    public static MemorySegment glad_debug_glRasterPos2sv$segment() {
        return glad_debug_glRasterPos2sv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2SVPROC glad_debug_glRasterPos2sv
     * }
     */
    public static MemorySegment glad_debug_glRasterPos2sv() {
        return glad_debug_glRasterPos2sv$constants.SEGMENT.get(glad_debug_glRasterPos2sv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS2SVPROC glad_debug_glRasterPos2sv
     * }
     */
    public static void glad_debug_glRasterPos2sv(MemorySegment varValue) {
        glad_debug_glRasterPos2sv$constants.SEGMENT.set(glad_debug_glRasterPos2sv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glRasterPos3d$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glRasterPos3d").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3DPROC glad_glRasterPos3d
     * }
     */
    public static AddressLayout glad_glRasterPos3d$layout() {
        return glad_glRasterPos3d$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3DPROC glad_glRasterPos3d
     * }
     */
    public static MemorySegment glad_glRasterPos3d$segment() {
        return glad_glRasterPos3d$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3DPROC glad_glRasterPos3d
     * }
     */
    public static MemorySegment glad_glRasterPos3d() {
        return glad_glRasterPos3d$constants.SEGMENT.get(glad_glRasterPos3d$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3DPROC glad_glRasterPos3d
     * }
     */
    public static void glad_glRasterPos3d(MemorySegment varValue) {
        glad_glRasterPos3d$constants.SEGMENT.set(glad_glRasterPos3d$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glRasterPos3d$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glRasterPos3d").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3DPROC glad_debug_glRasterPos3d
     * }
     */
    public static AddressLayout glad_debug_glRasterPos3d$layout() {
        return glad_debug_glRasterPos3d$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3DPROC glad_debug_glRasterPos3d
     * }
     */
    public static MemorySegment glad_debug_glRasterPos3d$segment() {
        return glad_debug_glRasterPos3d$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3DPROC glad_debug_glRasterPos3d
     * }
     */
    public static MemorySegment glad_debug_glRasterPos3d() {
        return glad_debug_glRasterPos3d$constants.SEGMENT.get(glad_debug_glRasterPos3d$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3DPROC glad_debug_glRasterPos3d
     * }
     */
    public static void glad_debug_glRasterPos3d(MemorySegment varValue) {
        glad_debug_glRasterPos3d$constants.SEGMENT.set(glad_debug_glRasterPos3d$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glRasterPos3dv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glRasterPos3dv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3DVPROC glad_glRasterPos3dv
     * }
     */
    public static AddressLayout glad_glRasterPos3dv$layout() {
        return glad_glRasterPos3dv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3DVPROC glad_glRasterPos3dv
     * }
     */
    public static MemorySegment glad_glRasterPos3dv$segment() {
        return glad_glRasterPos3dv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3DVPROC glad_glRasterPos3dv
     * }
     */
    public static MemorySegment glad_glRasterPos3dv() {
        return glad_glRasterPos3dv$constants.SEGMENT.get(glad_glRasterPos3dv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3DVPROC glad_glRasterPos3dv
     * }
     */
    public static void glad_glRasterPos3dv(MemorySegment varValue) {
        glad_glRasterPos3dv$constants.SEGMENT.set(glad_glRasterPos3dv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glRasterPos3dv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glRasterPos3dv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3DVPROC glad_debug_glRasterPos3dv
     * }
     */
    public static AddressLayout glad_debug_glRasterPos3dv$layout() {
        return glad_debug_glRasterPos3dv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3DVPROC glad_debug_glRasterPos3dv
     * }
     */
    public static MemorySegment glad_debug_glRasterPos3dv$segment() {
        return glad_debug_glRasterPos3dv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3DVPROC glad_debug_glRasterPos3dv
     * }
     */
    public static MemorySegment glad_debug_glRasterPos3dv() {
        return glad_debug_glRasterPos3dv$constants.SEGMENT.get(glad_debug_glRasterPos3dv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3DVPROC glad_debug_glRasterPos3dv
     * }
     */
    public static void glad_debug_glRasterPos3dv(MemorySegment varValue) {
        glad_debug_glRasterPos3dv$constants.SEGMENT.set(glad_debug_glRasterPos3dv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glRasterPos3f$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glRasterPos3f").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3FPROC glad_glRasterPos3f
     * }
     */
    public static AddressLayout glad_glRasterPos3f$layout() {
        return glad_glRasterPos3f$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3FPROC glad_glRasterPos3f
     * }
     */
    public static MemorySegment glad_glRasterPos3f$segment() {
        return glad_glRasterPos3f$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3FPROC glad_glRasterPos3f
     * }
     */
    public static MemorySegment glad_glRasterPos3f() {
        return glad_glRasterPos3f$constants.SEGMENT.get(glad_glRasterPos3f$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3FPROC glad_glRasterPos3f
     * }
     */
    public static void glad_glRasterPos3f(MemorySegment varValue) {
        glad_glRasterPos3f$constants.SEGMENT.set(glad_glRasterPos3f$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glRasterPos3f$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glRasterPos3f").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3FPROC glad_debug_glRasterPos3f
     * }
     */
    public static AddressLayout glad_debug_glRasterPos3f$layout() {
        return glad_debug_glRasterPos3f$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3FPROC glad_debug_glRasterPos3f
     * }
     */
    public static MemorySegment glad_debug_glRasterPos3f$segment() {
        return glad_debug_glRasterPos3f$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3FPROC glad_debug_glRasterPos3f
     * }
     */
    public static MemorySegment glad_debug_glRasterPos3f() {
        return glad_debug_glRasterPos3f$constants.SEGMENT.get(glad_debug_glRasterPos3f$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3FPROC glad_debug_glRasterPos3f
     * }
     */
    public static void glad_debug_glRasterPos3f(MemorySegment varValue) {
        glad_debug_glRasterPos3f$constants.SEGMENT.set(glad_debug_glRasterPos3f$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glRasterPos3fv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glRasterPos3fv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3FVPROC glad_glRasterPos3fv
     * }
     */
    public static AddressLayout glad_glRasterPos3fv$layout() {
        return glad_glRasterPos3fv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3FVPROC glad_glRasterPos3fv
     * }
     */
    public static MemorySegment glad_glRasterPos3fv$segment() {
        return glad_glRasterPos3fv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3FVPROC glad_glRasterPos3fv
     * }
     */
    public static MemorySegment glad_glRasterPos3fv() {
        return glad_glRasterPos3fv$constants.SEGMENT.get(glad_glRasterPos3fv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3FVPROC glad_glRasterPos3fv
     * }
     */
    public static void glad_glRasterPos3fv(MemorySegment varValue) {
        glad_glRasterPos3fv$constants.SEGMENT.set(glad_glRasterPos3fv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glRasterPos3fv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glRasterPos3fv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3FVPROC glad_debug_glRasterPos3fv
     * }
     */
    public static AddressLayout glad_debug_glRasterPos3fv$layout() {
        return glad_debug_glRasterPos3fv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3FVPROC glad_debug_glRasterPos3fv
     * }
     */
    public static MemorySegment glad_debug_glRasterPos3fv$segment() {
        return glad_debug_glRasterPos3fv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3FVPROC glad_debug_glRasterPos3fv
     * }
     */
    public static MemorySegment glad_debug_glRasterPos3fv() {
        return glad_debug_glRasterPos3fv$constants.SEGMENT.get(glad_debug_glRasterPos3fv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3FVPROC glad_debug_glRasterPos3fv
     * }
     */
    public static void glad_debug_glRasterPos3fv(MemorySegment varValue) {
        glad_debug_glRasterPos3fv$constants.SEGMENT.set(glad_debug_glRasterPos3fv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glRasterPos3i$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glRasterPos3i").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3IPROC glad_glRasterPos3i
     * }
     */
    public static AddressLayout glad_glRasterPos3i$layout() {
        return glad_glRasterPos3i$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3IPROC glad_glRasterPos3i
     * }
     */
    public static MemorySegment glad_glRasterPos3i$segment() {
        return glad_glRasterPos3i$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3IPROC glad_glRasterPos3i
     * }
     */
    public static MemorySegment glad_glRasterPos3i() {
        return glad_glRasterPos3i$constants.SEGMENT.get(glad_glRasterPos3i$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3IPROC glad_glRasterPos3i
     * }
     */
    public static void glad_glRasterPos3i(MemorySegment varValue) {
        glad_glRasterPos3i$constants.SEGMENT.set(glad_glRasterPos3i$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glRasterPos3i$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glRasterPos3i").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3IPROC glad_debug_glRasterPos3i
     * }
     */
    public static AddressLayout glad_debug_glRasterPos3i$layout() {
        return glad_debug_glRasterPos3i$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3IPROC glad_debug_glRasterPos3i
     * }
     */
    public static MemorySegment glad_debug_glRasterPos3i$segment() {
        return glad_debug_glRasterPos3i$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3IPROC glad_debug_glRasterPos3i
     * }
     */
    public static MemorySegment glad_debug_glRasterPos3i() {
        return glad_debug_glRasterPos3i$constants.SEGMENT.get(glad_debug_glRasterPos3i$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3IPROC glad_debug_glRasterPos3i
     * }
     */
    public static void glad_debug_glRasterPos3i(MemorySegment varValue) {
        glad_debug_glRasterPos3i$constants.SEGMENT.set(glad_debug_glRasterPos3i$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glRasterPos3iv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glRasterPos3iv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3IVPROC glad_glRasterPos3iv
     * }
     */
    public static AddressLayout glad_glRasterPos3iv$layout() {
        return glad_glRasterPos3iv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3IVPROC glad_glRasterPos3iv
     * }
     */
    public static MemorySegment glad_glRasterPos3iv$segment() {
        return glad_glRasterPos3iv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3IVPROC glad_glRasterPos3iv
     * }
     */
    public static MemorySegment glad_glRasterPos3iv() {
        return glad_glRasterPos3iv$constants.SEGMENT.get(glad_glRasterPos3iv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3IVPROC glad_glRasterPos3iv
     * }
     */
    public static void glad_glRasterPos3iv(MemorySegment varValue) {
        glad_glRasterPos3iv$constants.SEGMENT.set(glad_glRasterPos3iv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glRasterPos3iv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glRasterPos3iv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3IVPROC glad_debug_glRasterPos3iv
     * }
     */
    public static AddressLayout glad_debug_glRasterPos3iv$layout() {
        return glad_debug_glRasterPos3iv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3IVPROC glad_debug_glRasterPos3iv
     * }
     */
    public static MemorySegment glad_debug_glRasterPos3iv$segment() {
        return glad_debug_glRasterPos3iv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3IVPROC glad_debug_glRasterPos3iv
     * }
     */
    public static MemorySegment glad_debug_glRasterPos3iv() {
        return glad_debug_glRasterPos3iv$constants.SEGMENT.get(glad_debug_glRasterPos3iv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3IVPROC glad_debug_glRasterPos3iv
     * }
     */
    public static void glad_debug_glRasterPos3iv(MemorySegment varValue) {
        glad_debug_glRasterPos3iv$constants.SEGMENT.set(glad_debug_glRasterPos3iv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glRasterPos3s$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glRasterPos3s").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3SPROC glad_glRasterPos3s
     * }
     */
    public static AddressLayout glad_glRasterPos3s$layout() {
        return glad_glRasterPos3s$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3SPROC glad_glRasterPos3s
     * }
     */
    public static MemorySegment glad_glRasterPos3s$segment() {
        return glad_glRasterPos3s$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3SPROC glad_glRasterPos3s
     * }
     */
    public static MemorySegment glad_glRasterPos3s() {
        return glad_glRasterPos3s$constants.SEGMENT.get(glad_glRasterPos3s$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3SPROC glad_glRasterPos3s
     * }
     */
    public static void glad_glRasterPos3s(MemorySegment varValue) {
        glad_glRasterPos3s$constants.SEGMENT.set(glad_glRasterPos3s$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glRasterPos3s$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glRasterPos3s").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3SPROC glad_debug_glRasterPos3s
     * }
     */
    public static AddressLayout glad_debug_glRasterPos3s$layout() {
        return glad_debug_glRasterPos3s$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3SPROC glad_debug_glRasterPos3s
     * }
     */
    public static MemorySegment glad_debug_glRasterPos3s$segment() {
        return glad_debug_glRasterPos3s$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3SPROC glad_debug_glRasterPos3s
     * }
     */
    public static MemorySegment glad_debug_glRasterPos3s() {
        return glad_debug_glRasterPos3s$constants.SEGMENT.get(glad_debug_glRasterPos3s$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3SPROC glad_debug_glRasterPos3s
     * }
     */
    public static void glad_debug_glRasterPos3s(MemorySegment varValue) {
        glad_debug_glRasterPos3s$constants.SEGMENT.set(glad_debug_glRasterPos3s$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glRasterPos3sv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glRasterPos3sv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3SVPROC glad_glRasterPos3sv
     * }
     */
    public static AddressLayout glad_glRasterPos3sv$layout() {
        return glad_glRasterPos3sv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3SVPROC glad_glRasterPos3sv
     * }
     */
    public static MemorySegment glad_glRasterPos3sv$segment() {
        return glad_glRasterPos3sv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3SVPROC glad_glRasterPos3sv
     * }
     */
    public static MemorySegment glad_glRasterPos3sv() {
        return glad_glRasterPos3sv$constants.SEGMENT.get(glad_glRasterPos3sv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3SVPROC glad_glRasterPos3sv
     * }
     */
    public static void glad_glRasterPos3sv(MemorySegment varValue) {
        glad_glRasterPos3sv$constants.SEGMENT.set(glad_glRasterPos3sv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glRasterPos3sv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glRasterPos3sv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3SVPROC glad_debug_glRasterPos3sv
     * }
     */
    public static AddressLayout glad_debug_glRasterPos3sv$layout() {
        return glad_debug_glRasterPos3sv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3SVPROC glad_debug_glRasterPos3sv
     * }
     */
    public static MemorySegment glad_debug_glRasterPos3sv$segment() {
        return glad_debug_glRasterPos3sv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3SVPROC glad_debug_glRasterPos3sv
     * }
     */
    public static MemorySegment glad_debug_glRasterPos3sv() {
        return glad_debug_glRasterPos3sv$constants.SEGMENT.get(glad_debug_glRasterPos3sv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS3SVPROC glad_debug_glRasterPos3sv
     * }
     */
    public static void glad_debug_glRasterPos3sv(MemorySegment varValue) {
        glad_debug_glRasterPos3sv$constants.SEGMENT.set(glad_debug_glRasterPos3sv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glRasterPos4d$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glRasterPos4d").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4DPROC glad_glRasterPos4d
     * }
     */
    public static AddressLayout glad_glRasterPos4d$layout() {
        return glad_glRasterPos4d$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4DPROC glad_glRasterPos4d
     * }
     */
    public static MemorySegment glad_glRasterPos4d$segment() {
        return glad_glRasterPos4d$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4DPROC glad_glRasterPos4d
     * }
     */
    public static MemorySegment glad_glRasterPos4d() {
        return glad_glRasterPos4d$constants.SEGMENT.get(glad_glRasterPos4d$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4DPROC glad_glRasterPos4d
     * }
     */
    public static void glad_glRasterPos4d(MemorySegment varValue) {
        glad_glRasterPos4d$constants.SEGMENT.set(glad_glRasterPos4d$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glRasterPos4d$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glRasterPos4d").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4DPROC glad_debug_glRasterPos4d
     * }
     */
    public static AddressLayout glad_debug_glRasterPos4d$layout() {
        return glad_debug_glRasterPos4d$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4DPROC glad_debug_glRasterPos4d
     * }
     */
    public static MemorySegment glad_debug_glRasterPos4d$segment() {
        return glad_debug_glRasterPos4d$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4DPROC glad_debug_glRasterPos4d
     * }
     */
    public static MemorySegment glad_debug_glRasterPos4d() {
        return glad_debug_glRasterPos4d$constants.SEGMENT.get(glad_debug_glRasterPos4d$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4DPROC glad_debug_glRasterPos4d
     * }
     */
    public static void glad_debug_glRasterPos4d(MemorySegment varValue) {
        glad_debug_glRasterPos4d$constants.SEGMENT.set(glad_debug_glRasterPos4d$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glRasterPos4dv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glRasterPos4dv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4DVPROC glad_glRasterPos4dv
     * }
     */
    public static AddressLayout glad_glRasterPos4dv$layout() {
        return glad_glRasterPos4dv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4DVPROC glad_glRasterPos4dv
     * }
     */
    public static MemorySegment glad_glRasterPos4dv$segment() {
        return glad_glRasterPos4dv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4DVPROC glad_glRasterPos4dv
     * }
     */
    public static MemorySegment glad_glRasterPos4dv() {
        return glad_glRasterPos4dv$constants.SEGMENT.get(glad_glRasterPos4dv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4DVPROC glad_glRasterPos4dv
     * }
     */
    public static void glad_glRasterPos4dv(MemorySegment varValue) {
        glad_glRasterPos4dv$constants.SEGMENT.set(glad_glRasterPos4dv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glRasterPos4dv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glRasterPos4dv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4DVPROC glad_debug_glRasterPos4dv
     * }
     */
    public static AddressLayout glad_debug_glRasterPos4dv$layout() {
        return glad_debug_glRasterPos4dv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4DVPROC glad_debug_glRasterPos4dv
     * }
     */
    public static MemorySegment glad_debug_glRasterPos4dv$segment() {
        return glad_debug_glRasterPos4dv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4DVPROC glad_debug_glRasterPos4dv
     * }
     */
    public static MemorySegment glad_debug_glRasterPos4dv() {
        return glad_debug_glRasterPos4dv$constants.SEGMENT.get(glad_debug_glRasterPos4dv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4DVPROC glad_debug_glRasterPos4dv
     * }
     */
    public static void glad_debug_glRasterPos4dv(MemorySegment varValue) {
        glad_debug_glRasterPos4dv$constants.SEGMENT.set(glad_debug_glRasterPos4dv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glRasterPos4f$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glRasterPos4f").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4FPROC glad_glRasterPos4f
     * }
     */
    public static AddressLayout glad_glRasterPos4f$layout() {
        return glad_glRasterPos4f$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4FPROC glad_glRasterPos4f
     * }
     */
    public static MemorySegment glad_glRasterPos4f$segment() {
        return glad_glRasterPos4f$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4FPROC glad_glRasterPos4f
     * }
     */
    public static MemorySegment glad_glRasterPos4f() {
        return glad_glRasterPos4f$constants.SEGMENT.get(glad_glRasterPos4f$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4FPROC glad_glRasterPos4f
     * }
     */
    public static void glad_glRasterPos4f(MemorySegment varValue) {
        glad_glRasterPos4f$constants.SEGMENT.set(glad_glRasterPos4f$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glRasterPos4f$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glRasterPos4f").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4FPROC glad_debug_glRasterPos4f
     * }
     */
    public static AddressLayout glad_debug_glRasterPos4f$layout() {
        return glad_debug_glRasterPos4f$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4FPROC glad_debug_glRasterPos4f
     * }
     */
    public static MemorySegment glad_debug_glRasterPos4f$segment() {
        return glad_debug_glRasterPos4f$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4FPROC glad_debug_glRasterPos4f
     * }
     */
    public static MemorySegment glad_debug_glRasterPos4f() {
        return glad_debug_glRasterPos4f$constants.SEGMENT.get(glad_debug_glRasterPos4f$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4FPROC glad_debug_glRasterPos4f
     * }
     */
    public static void glad_debug_glRasterPos4f(MemorySegment varValue) {
        glad_debug_glRasterPos4f$constants.SEGMENT.set(glad_debug_glRasterPos4f$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glRasterPos4fv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glRasterPos4fv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4FVPROC glad_glRasterPos4fv
     * }
     */
    public static AddressLayout glad_glRasterPos4fv$layout() {
        return glad_glRasterPos4fv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4FVPROC glad_glRasterPos4fv
     * }
     */
    public static MemorySegment glad_glRasterPos4fv$segment() {
        return glad_glRasterPos4fv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4FVPROC glad_glRasterPos4fv
     * }
     */
    public static MemorySegment glad_glRasterPos4fv() {
        return glad_glRasterPos4fv$constants.SEGMENT.get(glad_glRasterPos4fv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4FVPROC glad_glRasterPos4fv
     * }
     */
    public static void glad_glRasterPos4fv(MemorySegment varValue) {
        glad_glRasterPos4fv$constants.SEGMENT.set(glad_glRasterPos4fv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glRasterPos4fv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glRasterPos4fv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4FVPROC glad_debug_glRasterPos4fv
     * }
     */
    public static AddressLayout glad_debug_glRasterPos4fv$layout() {
        return glad_debug_glRasterPos4fv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4FVPROC glad_debug_glRasterPos4fv
     * }
     */
    public static MemorySegment glad_debug_glRasterPos4fv$segment() {
        return glad_debug_glRasterPos4fv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4FVPROC glad_debug_glRasterPos4fv
     * }
     */
    public static MemorySegment glad_debug_glRasterPos4fv() {
        return glad_debug_glRasterPos4fv$constants.SEGMENT.get(glad_debug_glRasterPos4fv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4FVPROC glad_debug_glRasterPos4fv
     * }
     */
    public static void glad_debug_glRasterPos4fv(MemorySegment varValue) {
        glad_debug_glRasterPos4fv$constants.SEGMENT.set(glad_debug_glRasterPos4fv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glRasterPos4i$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glRasterPos4i").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4IPROC glad_glRasterPos4i
     * }
     */
    public static AddressLayout glad_glRasterPos4i$layout() {
        return glad_glRasterPos4i$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4IPROC glad_glRasterPos4i
     * }
     */
    public static MemorySegment glad_glRasterPos4i$segment() {
        return glad_glRasterPos4i$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4IPROC glad_glRasterPos4i
     * }
     */
    public static MemorySegment glad_glRasterPos4i() {
        return glad_glRasterPos4i$constants.SEGMENT.get(glad_glRasterPos4i$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4IPROC glad_glRasterPos4i
     * }
     */
    public static void glad_glRasterPos4i(MemorySegment varValue) {
        glad_glRasterPos4i$constants.SEGMENT.set(glad_glRasterPos4i$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glRasterPos4i$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glRasterPos4i").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4IPROC glad_debug_glRasterPos4i
     * }
     */
    public static AddressLayout glad_debug_glRasterPos4i$layout() {
        return glad_debug_glRasterPos4i$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4IPROC glad_debug_glRasterPos4i
     * }
     */
    public static MemorySegment glad_debug_glRasterPos4i$segment() {
        return glad_debug_glRasterPos4i$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4IPROC glad_debug_glRasterPos4i
     * }
     */
    public static MemorySegment glad_debug_glRasterPos4i() {
        return glad_debug_glRasterPos4i$constants.SEGMENT.get(glad_debug_glRasterPos4i$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4IPROC glad_debug_glRasterPos4i
     * }
     */
    public static void glad_debug_glRasterPos4i(MemorySegment varValue) {
        glad_debug_glRasterPos4i$constants.SEGMENT.set(glad_debug_glRasterPos4i$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glRasterPos4iv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glRasterPos4iv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4IVPROC glad_glRasterPos4iv
     * }
     */
    public static AddressLayout glad_glRasterPos4iv$layout() {
        return glad_glRasterPos4iv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4IVPROC glad_glRasterPos4iv
     * }
     */
    public static MemorySegment glad_glRasterPos4iv$segment() {
        return glad_glRasterPos4iv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4IVPROC glad_glRasterPos4iv
     * }
     */
    public static MemorySegment glad_glRasterPos4iv() {
        return glad_glRasterPos4iv$constants.SEGMENT.get(glad_glRasterPos4iv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4IVPROC glad_glRasterPos4iv
     * }
     */
    public static void glad_glRasterPos4iv(MemorySegment varValue) {
        glad_glRasterPos4iv$constants.SEGMENT.set(glad_glRasterPos4iv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glRasterPos4iv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glRasterPos4iv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4IVPROC glad_debug_glRasterPos4iv
     * }
     */
    public static AddressLayout glad_debug_glRasterPos4iv$layout() {
        return glad_debug_glRasterPos4iv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4IVPROC glad_debug_glRasterPos4iv
     * }
     */
    public static MemorySegment glad_debug_glRasterPos4iv$segment() {
        return glad_debug_glRasterPos4iv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4IVPROC glad_debug_glRasterPos4iv
     * }
     */
    public static MemorySegment glad_debug_glRasterPos4iv() {
        return glad_debug_glRasterPos4iv$constants.SEGMENT.get(glad_debug_glRasterPos4iv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4IVPROC glad_debug_glRasterPos4iv
     * }
     */
    public static void glad_debug_glRasterPos4iv(MemorySegment varValue) {
        glad_debug_glRasterPos4iv$constants.SEGMENT.set(glad_debug_glRasterPos4iv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glRasterPos4s$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glRasterPos4s").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4SPROC glad_glRasterPos4s
     * }
     */
    public static AddressLayout glad_glRasterPos4s$layout() {
        return glad_glRasterPos4s$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4SPROC glad_glRasterPos4s
     * }
     */
    public static MemorySegment glad_glRasterPos4s$segment() {
        return glad_glRasterPos4s$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4SPROC glad_glRasterPos4s
     * }
     */
    public static MemorySegment glad_glRasterPos4s() {
        return glad_glRasterPos4s$constants.SEGMENT.get(glad_glRasterPos4s$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4SPROC glad_glRasterPos4s
     * }
     */
    public static void glad_glRasterPos4s(MemorySegment varValue) {
        glad_glRasterPos4s$constants.SEGMENT.set(glad_glRasterPos4s$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glRasterPos4s$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glRasterPos4s").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4SPROC glad_debug_glRasterPos4s
     * }
     */
    public static AddressLayout glad_debug_glRasterPos4s$layout() {
        return glad_debug_glRasterPos4s$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4SPROC glad_debug_glRasterPos4s
     * }
     */
    public static MemorySegment glad_debug_glRasterPos4s$segment() {
        return glad_debug_glRasterPos4s$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4SPROC glad_debug_glRasterPos4s
     * }
     */
    public static MemorySegment glad_debug_glRasterPos4s() {
        return glad_debug_glRasterPos4s$constants.SEGMENT.get(glad_debug_glRasterPos4s$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4SPROC glad_debug_glRasterPos4s
     * }
     */
    public static void glad_debug_glRasterPos4s(MemorySegment varValue) {
        glad_debug_glRasterPos4s$constants.SEGMENT.set(glad_debug_glRasterPos4s$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glRasterPos4sv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glRasterPos4sv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4SVPROC glad_glRasterPos4sv
     * }
     */
    public static AddressLayout glad_glRasterPos4sv$layout() {
        return glad_glRasterPos4sv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4SVPROC glad_glRasterPos4sv
     * }
     */
    public static MemorySegment glad_glRasterPos4sv$segment() {
        return glad_glRasterPos4sv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4SVPROC glad_glRasterPos4sv
     * }
     */
    public static MemorySegment glad_glRasterPos4sv() {
        return glad_glRasterPos4sv$constants.SEGMENT.get(glad_glRasterPos4sv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4SVPROC glad_glRasterPos4sv
     * }
     */
    public static void glad_glRasterPos4sv(MemorySegment varValue) {
        glad_glRasterPos4sv$constants.SEGMENT.set(glad_glRasterPos4sv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glRasterPos4sv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glRasterPos4sv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4SVPROC glad_debug_glRasterPos4sv
     * }
     */
    public static AddressLayout glad_debug_glRasterPos4sv$layout() {
        return glad_debug_glRasterPos4sv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4SVPROC glad_debug_glRasterPos4sv
     * }
     */
    public static MemorySegment glad_debug_glRasterPos4sv$segment() {
        return glad_debug_glRasterPos4sv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4SVPROC glad_debug_glRasterPos4sv
     * }
     */
    public static MemorySegment glad_debug_glRasterPos4sv() {
        return glad_debug_glRasterPos4sv$constants.SEGMENT.get(glad_debug_glRasterPos4sv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRASTERPOS4SVPROC glad_debug_glRasterPos4sv
     * }
     */
    public static void glad_debug_glRasterPos4sv(MemorySegment varValue) {
        glad_debug_glRasterPos4sv$constants.SEGMENT.set(glad_debug_glRasterPos4sv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glReadBuffer$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glReadBuffer").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLREADBUFFERPROC glad_glReadBuffer
     * }
     */
    public static AddressLayout glad_glReadBuffer$layout() {
        return glad_glReadBuffer$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLREADBUFFERPROC glad_glReadBuffer
     * }
     */
    public static MemorySegment glad_glReadBuffer$segment() {
        return glad_glReadBuffer$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLREADBUFFERPROC glad_glReadBuffer
     * }
     */
    public static MemorySegment glad_glReadBuffer() {
        return glad_glReadBuffer$constants.SEGMENT.get(glad_glReadBuffer$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLREADBUFFERPROC glad_glReadBuffer
     * }
     */
    public static void glad_glReadBuffer(MemorySegment varValue) {
        glad_glReadBuffer$constants.SEGMENT.set(glad_glReadBuffer$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glReadBuffer$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glReadBuffer").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLREADBUFFERPROC glad_debug_glReadBuffer
     * }
     */
    public static AddressLayout glad_debug_glReadBuffer$layout() {
        return glad_debug_glReadBuffer$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLREADBUFFERPROC glad_debug_glReadBuffer
     * }
     */
    public static MemorySegment glad_debug_glReadBuffer$segment() {
        return glad_debug_glReadBuffer$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLREADBUFFERPROC glad_debug_glReadBuffer
     * }
     */
    public static MemorySegment glad_debug_glReadBuffer() {
        return glad_debug_glReadBuffer$constants.SEGMENT.get(glad_debug_glReadBuffer$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLREADBUFFERPROC glad_debug_glReadBuffer
     * }
     */
    public static void glad_debug_glReadBuffer(MemorySegment varValue) {
        glad_debug_glReadBuffer$constants.SEGMENT.set(glad_debug_glReadBuffer$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glReadPixels$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glReadPixels").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLREADPIXELSPROC glad_glReadPixels
     * }
     */
    public static AddressLayout glad_glReadPixels$layout() {
        return glad_glReadPixels$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLREADPIXELSPROC glad_glReadPixels
     * }
     */
    public static MemorySegment glad_glReadPixels$segment() {
        return glad_glReadPixels$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLREADPIXELSPROC glad_glReadPixels
     * }
     */
    public static MemorySegment glad_glReadPixels() {
        return glad_glReadPixels$constants.SEGMENT.get(glad_glReadPixels$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLREADPIXELSPROC glad_glReadPixels
     * }
     */
    public static void glad_glReadPixels(MemorySegment varValue) {
        glad_glReadPixels$constants.SEGMENT.set(glad_glReadPixels$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glReadPixels$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glReadPixels").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLREADPIXELSPROC glad_debug_glReadPixels
     * }
     */
    public static AddressLayout glad_debug_glReadPixels$layout() {
        return glad_debug_glReadPixels$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLREADPIXELSPROC glad_debug_glReadPixels
     * }
     */
    public static MemorySegment glad_debug_glReadPixels$segment() {
        return glad_debug_glReadPixels$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLREADPIXELSPROC glad_debug_glReadPixels
     * }
     */
    public static MemorySegment glad_debug_glReadPixels() {
        return glad_debug_glReadPixels$constants.SEGMENT.get(glad_debug_glReadPixels$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLREADPIXELSPROC glad_debug_glReadPixels
     * }
     */
    public static void glad_debug_glReadPixels(MemorySegment varValue) {
        glad_debug_glReadPixels$constants.SEGMENT.set(glad_debug_glReadPixels$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glReadnPixels$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glReadnPixels").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLREADNPIXELSPROC glad_glReadnPixels
     * }
     */
    public static AddressLayout glad_glReadnPixels$layout() {
        return glad_glReadnPixels$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLREADNPIXELSPROC glad_glReadnPixels
     * }
     */
    public static MemorySegment glad_glReadnPixels$segment() {
        return glad_glReadnPixels$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLREADNPIXELSPROC glad_glReadnPixels
     * }
     */
    public static MemorySegment glad_glReadnPixels() {
        return glad_glReadnPixels$constants.SEGMENT.get(glad_glReadnPixels$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLREADNPIXELSPROC glad_glReadnPixels
     * }
     */
    public static void glad_glReadnPixels(MemorySegment varValue) {
        glad_glReadnPixels$constants.SEGMENT.set(glad_glReadnPixels$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glReadnPixels$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glReadnPixels").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLREADNPIXELSPROC glad_debug_glReadnPixels
     * }
     */
    public static AddressLayout glad_debug_glReadnPixels$layout() {
        return glad_debug_glReadnPixels$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLREADNPIXELSPROC glad_debug_glReadnPixels
     * }
     */
    public static MemorySegment glad_debug_glReadnPixels$segment() {
        return glad_debug_glReadnPixels$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLREADNPIXELSPROC glad_debug_glReadnPixels
     * }
     */
    public static MemorySegment glad_debug_glReadnPixels() {
        return glad_debug_glReadnPixels$constants.SEGMENT.get(glad_debug_glReadnPixels$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLREADNPIXELSPROC glad_debug_glReadnPixels
     * }
     */
    public static void glad_debug_glReadnPixels(MemorySegment varValue) {
        glad_debug_glReadnPixels$constants.SEGMENT.set(glad_debug_glReadnPixels$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glReadnPixelsARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glReadnPixelsARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLREADNPIXELSARBPROC glad_glReadnPixelsARB
     * }
     */
    public static AddressLayout glad_glReadnPixelsARB$layout() {
        return glad_glReadnPixelsARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLREADNPIXELSARBPROC glad_glReadnPixelsARB
     * }
     */
    public static MemorySegment glad_glReadnPixelsARB$segment() {
        return glad_glReadnPixelsARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLREADNPIXELSARBPROC glad_glReadnPixelsARB
     * }
     */
    public static MemorySegment glad_glReadnPixelsARB() {
        return glad_glReadnPixelsARB$constants.SEGMENT.get(glad_glReadnPixelsARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLREADNPIXELSARBPROC glad_glReadnPixelsARB
     * }
     */
    public static void glad_glReadnPixelsARB(MemorySegment varValue) {
        glad_glReadnPixelsARB$constants.SEGMENT.set(glad_glReadnPixelsARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glReadnPixelsARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glReadnPixelsARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLREADNPIXELSARBPROC glad_debug_glReadnPixelsARB
     * }
     */
    public static AddressLayout glad_debug_glReadnPixelsARB$layout() {
        return glad_debug_glReadnPixelsARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLREADNPIXELSARBPROC glad_debug_glReadnPixelsARB
     * }
     */
    public static MemorySegment glad_debug_glReadnPixelsARB$segment() {
        return glad_debug_glReadnPixelsARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLREADNPIXELSARBPROC glad_debug_glReadnPixelsARB
     * }
     */
    public static MemorySegment glad_debug_glReadnPixelsARB() {
        return glad_debug_glReadnPixelsARB$constants.SEGMENT.get(glad_debug_glReadnPixelsARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLREADNPIXELSARBPROC glad_debug_glReadnPixelsARB
     * }
     */
    public static void glad_debug_glReadnPixelsARB(MemorySegment varValue) {
        glad_debug_glReadnPixelsARB$constants.SEGMENT.set(glad_debug_glReadnPixelsARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glRectd$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glRectd").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTDPROC glad_glRectd
     * }
     */
    public static AddressLayout glad_glRectd$layout() {
        return glad_glRectd$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTDPROC glad_glRectd
     * }
     */
    public static MemorySegment glad_glRectd$segment() {
        return glad_glRectd$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTDPROC glad_glRectd
     * }
     */
    public static MemorySegment glad_glRectd() {
        return glad_glRectd$constants.SEGMENT.get(glad_glRectd$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTDPROC glad_glRectd
     * }
     */
    public static void glad_glRectd(MemorySegment varValue) {
        glad_glRectd$constants.SEGMENT.set(glad_glRectd$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glRectd$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glRectd").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTDPROC glad_debug_glRectd
     * }
     */
    public static AddressLayout glad_debug_glRectd$layout() {
        return glad_debug_glRectd$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTDPROC glad_debug_glRectd
     * }
     */
    public static MemorySegment glad_debug_glRectd$segment() {
        return glad_debug_glRectd$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTDPROC glad_debug_glRectd
     * }
     */
    public static MemorySegment glad_debug_glRectd() {
        return glad_debug_glRectd$constants.SEGMENT.get(glad_debug_glRectd$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTDPROC glad_debug_glRectd
     * }
     */
    public static void glad_debug_glRectd(MemorySegment varValue) {
        glad_debug_glRectd$constants.SEGMENT.set(glad_debug_glRectd$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glRectdv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glRectdv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTDVPROC glad_glRectdv
     * }
     */
    public static AddressLayout glad_glRectdv$layout() {
        return glad_glRectdv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTDVPROC glad_glRectdv
     * }
     */
    public static MemorySegment glad_glRectdv$segment() {
        return glad_glRectdv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTDVPROC glad_glRectdv
     * }
     */
    public static MemorySegment glad_glRectdv() {
        return glad_glRectdv$constants.SEGMENT.get(glad_glRectdv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTDVPROC glad_glRectdv
     * }
     */
    public static void glad_glRectdv(MemorySegment varValue) {
        glad_glRectdv$constants.SEGMENT.set(glad_glRectdv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glRectdv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glRectdv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTDVPROC glad_debug_glRectdv
     * }
     */
    public static AddressLayout glad_debug_glRectdv$layout() {
        return glad_debug_glRectdv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTDVPROC glad_debug_glRectdv
     * }
     */
    public static MemorySegment glad_debug_glRectdv$segment() {
        return glad_debug_glRectdv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTDVPROC glad_debug_glRectdv
     * }
     */
    public static MemorySegment glad_debug_glRectdv() {
        return glad_debug_glRectdv$constants.SEGMENT.get(glad_debug_glRectdv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTDVPROC glad_debug_glRectdv
     * }
     */
    public static void glad_debug_glRectdv(MemorySegment varValue) {
        glad_debug_glRectdv$constants.SEGMENT.set(glad_debug_glRectdv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glRectf$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glRectf").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTFPROC glad_glRectf
     * }
     */
    public static AddressLayout glad_glRectf$layout() {
        return glad_glRectf$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTFPROC glad_glRectf
     * }
     */
    public static MemorySegment glad_glRectf$segment() {
        return glad_glRectf$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTFPROC glad_glRectf
     * }
     */
    public static MemorySegment glad_glRectf() {
        return glad_glRectf$constants.SEGMENT.get(glad_glRectf$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTFPROC glad_glRectf
     * }
     */
    public static void glad_glRectf(MemorySegment varValue) {
        glad_glRectf$constants.SEGMENT.set(glad_glRectf$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glRectf$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glRectf").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTFPROC glad_debug_glRectf
     * }
     */
    public static AddressLayout glad_debug_glRectf$layout() {
        return glad_debug_glRectf$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTFPROC glad_debug_glRectf
     * }
     */
    public static MemorySegment glad_debug_glRectf$segment() {
        return glad_debug_glRectf$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTFPROC glad_debug_glRectf
     * }
     */
    public static MemorySegment glad_debug_glRectf() {
        return glad_debug_glRectf$constants.SEGMENT.get(glad_debug_glRectf$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTFPROC glad_debug_glRectf
     * }
     */
    public static void glad_debug_glRectf(MemorySegment varValue) {
        glad_debug_glRectf$constants.SEGMENT.set(glad_debug_glRectf$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glRectfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glRectfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTFVPROC glad_glRectfv
     * }
     */
    public static AddressLayout glad_glRectfv$layout() {
        return glad_glRectfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTFVPROC glad_glRectfv
     * }
     */
    public static MemorySegment glad_glRectfv$segment() {
        return glad_glRectfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTFVPROC glad_glRectfv
     * }
     */
    public static MemorySegment glad_glRectfv() {
        return glad_glRectfv$constants.SEGMENT.get(glad_glRectfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTFVPROC glad_glRectfv
     * }
     */
    public static void glad_glRectfv(MemorySegment varValue) {
        glad_glRectfv$constants.SEGMENT.set(glad_glRectfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glRectfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glRectfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTFVPROC glad_debug_glRectfv
     * }
     */
    public static AddressLayout glad_debug_glRectfv$layout() {
        return glad_debug_glRectfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTFVPROC glad_debug_glRectfv
     * }
     */
    public static MemorySegment glad_debug_glRectfv$segment() {
        return glad_debug_glRectfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTFVPROC glad_debug_glRectfv
     * }
     */
    public static MemorySegment glad_debug_glRectfv() {
        return glad_debug_glRectfv$constants.SEGMENT.get(glad_debug_glRectfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTFVPROC glad_debug_glRectfv
     * }
     */
    public static void glad_debug_glRectfv(MemorySegment varValue) {
        glad_debug_glRectfv$constants.SEGMENT.set(glad_debug_glRectfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glRecti$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glRecti").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTIPROC glad_glRecti
     * }
     */
    public static AddressLayout glad_glRecti$layout() {
        return glad_glRecti$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTIPROC glad_glRecti
     * }
     */
    public static MemorySegment glad_glRecti$segment() {
        return glad_glRecti$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTIPROC glad_glRecti
     * }
     */
    public static MemorySegment glad_glRecti() {
        return glad_glRecti$constants.SEGMENT.get(glad_glRecti$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTIPROC glad_glRecti
     * }
     */
    public static void glad_glRecti(MemorySegment varValue) {
        glad_glRecti$constants.SEGMENT.set(glad_glRecti$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glRecti$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glRecti").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTIPROC glad_debug_glRecti
     * }
     */
    public static AddressLayout glad_debug_glRecti$layout() {
        return glad_debug_glRecti$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTIPROC glad_debug_glRecti
     * }
     */
    public static MemorySegment glad_debug_glRecti$segment() {
        return glad_debug_glRecti$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTIPROC glad_debug_glRecti
     * }
     */
    public static MemorySegment glad_debug_glRecti() {
        return glad_debug_glRecti$constants.SEGMENT.get(glad_debug_glRecti$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTIPROC glad_debug_glRecti
     * }
     */
    public static void glad_debug_glRecti(MemorySegment varValue) {
        glad_debug_glRecti$constants.SEGMENT.set(glad_debug_glRecti$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glRectiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glRectiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTIVPROC glad_glRectiv
     * }
     */
    public static AddressLayout glad_glRectiv$layout() {
        return glad_glRectiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTIVPROC glad_glRectiv
     * }
     */
    public static MemorySegment glad_glRectiv$segment() {
        return glad_glRectiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTIVPROC glad_glRectiv
     * }
     */
    public static MemorySegment glad_glRectiv() {
        return glad_glRectiv$constants.SEGMENT.get(glad_glRectiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTIVPROC glad_glRectiv
     * }
     */
    public static void glad_glRectiv(MemorySegment varValue) {
        glad_glRectiv$constants.SEGMENT.set(glad_glRectiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glRectiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glRectiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTIVPROC glad_debug_glRectiv
     * }
     */
    public static AddressLayout glad_debug_glRectiv$layout() {
        return glad_debug_glRectiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTIVPROC glad_debug_glRectiv
     * }
     */
    public static MemorySegment glad_debug_glRectiv$segment() {
        return glad_debug_glRectiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTIVPROC glad_debug_glRectiv
     * }
     */
    public static MemorySegment glad_debug_glRectiv() {
        return glad_debug_glRectiv$constants.SEGMENT.get(glad_debug_glRectiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTIVPROC glad_debug_glRectiv
     * }
     */
    public static void glad_debug_glRectiv(MemorySegment varValue) {
        glad_debug_glRectiv$constants.SEGMENT.set(glad_debug_glRectiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glRects$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glRects").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTSPROC glad_glRects
     * }
     */
    public static AddressLayout glad_glRects$layout() {
        return glad_glRects$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTSPROC glad_glRects
     * }
     */
    public static MemorySegment glad_glRects$segment() {
        return glad_glRects$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTSPROC glad_glRects
     * }
     */
    public static MemorySegment glad_glRects() {
        return glad_glRects$constants.SEGMENT.get(glad_glRects$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTSPROC glad_glRects
     * }
     */
    public static void glad_glRects(MemorySegment varValue) {
        glad_glRects$constants.SEGMENT.set(glad_glRects$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glRects$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glRects").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTSPROC glad_debug_glRects
     * }
     */
    public static AddressLayout glad_debug_glRects$layout() {
        return glad_debug_glRects$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTSPROC glad_debug_glRects
     * }
     */
    public static MemorySegment glad_debug_glRects$segment() {
        return glad_debug_glRects$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTSPROC glad_debug_glRects
     * }
     */
    public static MemorySegment glad_debug_glRects() {
        return glad_debug_glRects$constants.SEGMENT.get(glad_debug_glRects$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTSPROC glad_debug_glRects
     * }
     */
    public static void glad_debug_glRects(MemorySegment varValue) {
        glad_debug_glRects$constants.SEGMENT.set(glad_debug_glRects$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glRectsv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glRectsv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTSVPROC glad_glRectsv
     * }
     */
    public static AddressLayout glad_glRectsv$layout() {
        return glad_glRectsv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTSVPROC glad_glRectsv
     * }
     */
    public static MemorySegment glad_glRectsv$segment() {
        return glad_glRectsv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTSVPROC glad_glRectsv
     * }
     */
    public static MemorySegment glad_glRectsv() {
        return glad_glRectsv$constants.SEGMENT.get(glad_glRectsv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTSVPROC glad_glRectsv
     * }
     */
    public static void glad_glRectsv(MemorySegment varValue) {
        glad_glRectsv$constants.SEGMENT.set(glad_glRectsv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glRectsv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glRectsv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTSVPROC glad_debug_glRectsv
     * }
     */
    public static AddressLayout glad_debug_glRectsv$layout() {
        return glad_debug_glRectsv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTSVPROC glad_debug_glRectsv
     * }
     */
    public static MemorySegment glad_debug_glRectsv$segment() {
        return glad_debug_glRectsv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTSVPROC glad_debug_glRectsv
     * }
     */
    public static MemorySegment glad_debug_glRectsv() {
        return glad_debug_glRectsv$constants.SEGMENT.get(glad_debug_glRectsv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRECTSVPROC glad_debug_glRectsv
     * }
     */
    public static void glad_debug_glRectsv(MemorySegment varValue) {
        glad_debug_glRectsv$constants.SEGMENT.set(glad_debug_glRectsv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glReleaseShaderCompiler$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glReleaseShaderCompiler").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRELEASESHADERCOMPILERPROC glad_glReleaseShaderCompiler
     * }
     */
    public static AddressLayout glad_glReleaseShaderCompiler$layout() {
        return glad_glReleaseShaderCompiler$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRELEASESHADERCOMPILERPROC glad_glReleaseShaderCompiler
     * }
     */
    public static MemorySegment glad_glReleaseShaderCompiler$segment() {
        return glad_glReleaseShaderCompiler$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRELEASESHADERCOMPILERPROC glad_glReleaseShaderCompiler
     * }
     */
    public static MemorySegment glad_glReleaseShaderCompiler() {
        return glad_glReleaseShaderCompiler$constants.SEGMENT.get(glad_glReleaseShaderCompiler$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRELEASESHADERCOMPILERPROC glad_glReleaseShaderCompiler
     * }
     */
    public static void glad_glReleaseShaderCompiler(MemorySegment varValue) {
        glad_glReleaseShaderCompiler$constants.SEGMENT.set(glad_glReleaseShaderCompiler$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glReleaseShaderCompiler$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glReleaseShaderCompiler").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRELEASESHADERCOMPILERPROC glad_debug_glReleaseShaderCompiler
     * }
     */
    public static AddressLayout glad_debug_glReleaseShaderCompiler$layout() {
        return glad_debug_glReleaseShaderCompiler$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRELEASESHADERCOMPILERPROC glad_debug_glReleaseShaderCompiler
     * }
     */
    public static MemorySegment glad_debug_glReleaseShaderCompiler$segment() {
        return glad_debug_glReleaseShaderCompiler$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRELEASESHADERCOMPILERPROC glad_debug_glReleaseShaderCompiler
     * }
     */
    public static MemorySegment glad_debug_glReleaseShaderCompiler() {
        return glad_debug_glReleaseShaderCompiler$constants.SEGMENT.get(glad_debug_glReleaseShaderCompiler$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRELEASESHADERCOMPILERPROC glad_debug_glReleaseShaderCompiler
     * }
     */
    public static void glad_debug_glReleaseShaderCompiler(MemorySegment varValue) {
        glad_debug_glReleaseShaderCompiler$constants.SEGMENT.set(glad_debug_glReleaseShaderCompiler$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glRenderMode$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glRenderMode").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRENDERMODEPROC glad_glRenderMode
     * }
     */
    public static AddressLayout glad_glRenderMode$layout() {
        return glad_glRenderMode$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRENDERMODEPROC glad_glRenderMode
     * }
     */
    public static MemorySegment glad_glRenderMode$segment() {
        return glad_glRenderMode$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRENDERMODEPROC glad_glRenderMode
     * }
     */
    public static MemorySegment glad_glRenderMode() {
        return glad_glRenderMode$constants.SEGMENT.get(glad_glRenderMode$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRENDERMODEPROC glad_glRenderMode
     * }
     */
    public static void glad_glRenderMode(MemorySegment varValue) {
        glad_glRenderMode$constants.SEGMENT.set(glad_glRenderMode$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glRenderMode$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glRenderMode").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRENDERMODEPROC glad_debug_glRenderMode
     * }
     */
    public static AddressLayout glad_debug_glRenderMode$layout() {
        return glad_debug_glRenderMode$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRENDERMODEPROC glad_debug_glRenderMode
     * }
     */
    public static MemorySegment glad_debug_glRenderMode$segment() {
        return glad_debug_glRenderMode$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRENDERMODEPROC glad_debug_glRenderMode
     * }
     */
    public static MemorySegment glad_debug_glRenderMode() {
        return glad_debug_glRenderMode$constants.SEGMENT.get(glad_debug_glRenderMode$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRENDERMODEPROC glad_debug_glRenderMode
     * }
     */
    public static void glad_debug_glRenderMode(MemorySegment varValue) {
        glad_debug_glRenderMode$constants.SEGMENT.set(glad_debug_glRenderMode$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glRenderbufferStorage$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glRenderbufferStorage").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLRENDERBUFFERSTORAGEPROC glad_glRenderbufferStorage
     * }
     */
    public static AddressLayout glad_glRenderbufferStorage$layout() {
        return glad_glRenderbufferStorage$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLRENDERBUFFERSTORAGEPROC glad_glRenderbufferStorage
     * }
     */
    public static MemorySegment glad_glRenderbufferStorage$segment() {
        return glad_glRenderbufferStorage$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLRENDERBUFFERSTORAGEPROC glad_glRenderbufferStorage
     * }
     */
    public static MemorySegment glad_glRenderbufferStorage() {
        return glad_glRenderbufferStorage$constants.SEGMENT.get(glad_glRenderbufferStorage$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLRENDERBUFFERSTORAGEPROC glad_glRenderbufferStorage
     * }
     */
    public static void glad_glRenderbufferStorage(MemorySegment varValue) {
        glad_glRenderbufferStorage$constants.SEGMENT.set(glad_glRenderbufferStorage$constants.LAYOUT, 0L, varValue);
    }
}

