// Generated by jextract

package au.ikx.glcore;

import java.lang.invoke.*;
import java.lang.foreign.*;
import java.nio.ByteOrder;
import java.util.*;
import java.util.function.*;
import java.util.stream.*;

import static java.lang.foreign.ValueLayout.*;
import static java.lang.foreign.MemoryLayout.PathElement.*;

public class glcore_3 extends glcore_4 {

    glcore_3() {
        // Should not be called directly
    }

    private static class glad_debug_glCopyTextureSubImage1DEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glCopyTextureSubImage1DEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC glad_debug_glCopyTextureSubImage1DEXT
     * }
     */
    public static AddressLayout glad_debug_glCopyTextureSubImage1DEXT$layout() {
        return glad_debug_glCopyTextureSubImage1DEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC glad_debug_glCopyTextureSubImage1DEXT
     * }
     */
    public static MemorySegment glad_debug_glCopyTextureSubImage1DEXT$segment() {
        return glad_debug_glCopyTextureSubImage1DEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC glad_debug_glCopyTextureSubImage1DEXT
     * }
     */
    public static MemorySegment glad_debug_glCopyTextureSubImage1DEXT() {
        return glad_debug_glCopyTextureSubImage1DEXT$constants.SEGMENT.get(glad_debug_glCopyTextureSubImage1DEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC glad_debug_glCopyTextureSubImage1DEXT
     * }
     */
    public static void glad_debug_glCopyTextureSubImage1DEXT(MemorySegment varValue) {
        glad_debug_glCopyTextureSubImage1DEXT$constants.SEGMENT.set(glad_debug_glCopyTextureSubImage1DEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glCopyTextureSubImage2D$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glCopyTextureSubImage2D").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLCOPYTEXTURESUBIMAGE2DPROC glad_glCopyTextureSubImage2D
     * }
     */
    public static AddressLayout glad_glCopyTextureSubImage2D$layout() {
        return glad_glCopyTextureSubImage2D$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLCOPYTEXTURESUBIMAGE2DPROC glad_glCopyTextureSubImage2D
     * }
     */
    public static MemorySegment glad_glCopyTextureSubImage2D$segment() {
        return glad_glCopyTextureSubImage2D$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLCOPYTEXTURESUBIMAGE2DPROC glad_glCopyTextureSubImage2D
     * }
     */
    public static MemorySegment glad_glCopyTextureSubImage2D() {
        return glad_glCopyTextureSubImage2D$constants.SEGMENT.get(glad_glCopyTextureSubImage2D$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLCOPYTEXTURESUBIMAGE2DPROC glad_glCopyTextureSubImage2D
     * }
     */
    public static void glad_glCopyTextureSubImage2D(MemorySegment varValue) {
        glad_glCopyTextureSubImage2D$constants.SEGMENT.set(glad_glCopyTextureSubImage2D$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glCopyTextureSubImage2D$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glCopyTextureSubImage2D").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLCOPYTEXTURESUBIMAGE2DPROC glad_debug_glCopyTextureSubImage2D
     * }
     */
    public static AddressLayout glad_debug_glCopyTextureSubImage2D$layout() {
        return glad_debug_glCopyTextureSubImage2D$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLCOPYTEXTURESUBIMAGE2DPROC glad_debug_glCopyTextureSubImage2D
     * }
     */
    public static MemorySegment glad_debug_glCopyTextureSubImage2D$segment() {
        return glad_debug_glCopyTextureSubImage2D$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLCOPYTEXTURESUBIMAGE2DPROC glad_debug_glCopyTextureSubImage2D
     * }
     */
    public static MemorySegment glad_debug_glCopyTextureSubImage2D() {
        return glad_debug_glCopyTextureSubImage2D$constants.SEGMENT.get(glad_debug_glCopyTextureSubImage2D$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLCOPYTEXTURESUBIMAGE2DPROC glad_debug_glCopyTextureSubImage2D
     * }
     */
    public static void glad_debug_glCopyTextureSubImage2D(MemorySegment varValue) {
        glad_debug_glCopyTextureSubImage2D$constants.SEGMENT.set(glad_debug_glCopyTextureSubImage2D$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glCopyTextureSubImage2DEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glCopyTextureSubImage2DEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC glad_glCopyTextureSubImage2DEXT
     * }
     */
    public static AddressLayout glad_glCopyTextureSubImage2DEXT$layout() {
        return glad_glCopyTextureSubImage2DEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC glad_glCopyTextureSubImage2DEXT
     * }
     */
    public static MemorySegment glad_glCopyTextureSubImage2DEXT$segment() {
        return glad_glCopyTextureSubImage2DEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC glad_glCopyTextureSubImage2DEXT
     * }
     */
    public static MemorySegment glad_glCopyTextureSubImage2DEXT() {
        return glad_glCopyTextureSubImage2DEXT$constants.SEGMENT.get(glad_glCopyTextureSubImage2DEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC glad_glCopyTextureSubImage2DEXT
     * }
     */
    public static void glad_glCopyTextureSubImage2DEXT(MemorySegment varValue) {
        glad_glCopyTextureSubImage2DEXT$constants.SEGMENT.set(glad_glCopyTextureSubImage2DEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glCopyTextureSubImage2DEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glCopyTextureSubImage2DEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC glad_debug_glCopyTextureSubImage2DEXT
     * }
     */
    public static AddressLayout glad_debug_glCopyTextureSubImage2DEXT$layout() {
        return glad_debug_glCopyTextureSubImage2DEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC glad_debug_glCopyTextureSubImage2DEXT
     * }
     */
    public static MemorySegment glad_debug_glCopyTextureSubImage2DEXT$segment() {
        return glad_debug_glCopyTextureSubImage2DEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC glad_debug_glCopyTextureSubImage2DEXT
     * }
     */
    public static MemorySegment glad_debug_glCopyTextureSubImage2DEXT() {
        return glad_debug_glCopyTextureSubImage2DEXT$constants.SEGMENT.get(glad_debug_glCopyTextureSubImage2DEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC glad_debug_glCopyTextureSubImage2DEXT
     * }
     */
    public static void glad_debug_glCopyTextureSubImage2DEXT(MemorySegment varValue) {
        glad_debug_glCopyTextureSubImage2DEXT$constants.SEGMENT.set(glad_debug_glCopyTextureSubImage2DEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glCopyTextureSubImage3D$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glCopyTextureSubImage3D").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLCOPYTEXTURESUBIMAGE3DPROC glad_glCopyTextureSubImage3D
     * }
     */
    public static AddressLayout glad_glCopyTextureSubImage3D$layout() {
        return glad_glCopyTextureSubImage3D$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLCOPYTEXTURESUBIMAGE3DPROC glad_glCopyTextureSubImage3D
     * }
     */
    public static MemorySegment glad_glCopyTextureSubImage3D$segment() {
        return glad_glCopyTextureSubImage3D$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLCOPYTEXTURESUBIMAGE3DPROC glad_glCopyTextureSubImage3D
     * }
     */
    public static MemorySegment glad_glCopyTextureSubImage3D() {
        return glad_glCopyTextureSubImage3D$constants.SEGMENT.get(glad_glCopyTextureSubImage3D$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLCOPYTEXTURESUBIMAGE3DPROC glad_glCopyTextureSubImage3D
     * }
     */
    public static void glad_glCopyTextureSubImage3D(MemorySegment varValue) {
        glad_glCopyTextureSubImage3D$constants.SEGMENT.set(glad_glCopyTextureSubImage3D$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glCopyTextureSubImage3D$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glCopyTextureSubImage3D").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLCOPYTEXTURESUBIMAGE3DPROC glad_debug_glCopyTextureSubImage3D
     * }
     */
    public static AddressLayout glad_debug_glCopyTextureSubImage3D$layout() {
        return glad_debug_glCopyTextureSubImage3D$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLCOPYTEXTURESUBIMAGE3DPROC glad_debug_glCopyTextureSubImage3D
     * }
     */
    public static MemorySegment glad_debug_glCopyTextureSubImage3D$segment() {
        return glad_debug_glCopyTextureSubImage3D$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLCOPYTEXTURESUBIMAGE3DPROC glad_debug_glCopyTextureSubImage3D
     * }
     */
    public static MemorySegment glad_debug_glCopyTextureSubImage3D() {
        return glad_debug_glCopyTextureSubImage3D$constants.SEGMENT.get(glad_debug_glCopyTextureSubImage3D$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLCOPYTEXTURESUBIMAGE3DPROC glad_debug_glCopyTextureSubImage3D
     * }
     */
    public static void glad_debug_glCopyTextureSubImage3D(MemorySegment varValue) {
        glad_debug_glCopyTextureSubImage3D$constants.SEGMENT.set(glad_debug_glCopyTextureSubImage3D$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glCopyTextureSubImage3DEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glCopyTextureSubImage3DEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC glad_glCopyTextureSubImage3DEXT
     * }
     */
    public static AddressLayout glad_glCopyTextureSubImage3DEXT$layout() {
        return glad_glCopyTextureSubImage3DEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC glad_glCopyTextureSubImage3DEXT
     * }
     */
    public static MemorySegment glad_glCopyTextureSubImage3DEXT$segment() {
        return glad_glCopyTextureSubImage3DEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC glad_glCopyTextureSubImage3DEXT
     * }
     */
    public static MemorySegment glad_glCopyTextureSubImage3DEXT() {
        return glad_glCopyTextureSubImage3DEXT$constants.SEGMENT.get(glad_glCopyTextureSubImage3DEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC glad_glCopyTextureSubImage3DEXT
     * }
     */
    public static void glad_glCopyTextureSubImage3DEXT(MemorySegment varValue) {
        glad_glCopyTextureSubImage3DEXT$constants.SEGMENT.set(glad_glCopyTextureSubImage3DEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glCopyTextureSubImage3DEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glCopyTextureSubImage3DEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC glad_debug_glCopyTextureSubImage3DEXT
     * }
     */
    public static AddressLayout glad_debug_glCopyTextureSubImage3DEXT$layout() {
        return glad_debug_glCopyTextureSubImage3DEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC glad_debug_glCopyTextureSubImage3DEXT
     * }
     */
    public static MemorySegment glad_debug_glCopyTextureSubImage3DEXT$segment() {
        return glad_debug_glCopyTextureSubImage3DEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC glad_debug_glCopyTextureSubImage3DEXT
     * }
     */
    public static MemorySegment glad_debug_glCopyTextureSubImage3DEXT() {
        return glad_debug_glCopyTextureSubImage3DEXT$constants.SEGMENT.get(glad_debug_glCopyTextureSubImage3DEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC glad_debug_glCopyTextureSubImage3DEXT
     * }
     */
    public static void glad_debug_glCopyTextureSubImage3DEXT(MemorySegment varValue) {
        glad_debug_glCopyTextureSubImage3DEXT$constants.SEGMENT.set(glad_debug_glCopyTextureSubImage3DEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glCreateBuffers$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glCreateBuffers").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEBUFFERSPROC glad_glCreateBuffers
     * }
     */
    public static AddressLayout glad_glCreateBuffers$layout() {
        return glad_glCreateBuffers$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEBUFFERSPROC glad_glCreateBuffers
     * }
     */
    public static MemorySegment glad_glCreateBuffers$segment() {
        return glad_glCreateBuffers$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEBUFFERSPROC glad_glCreateBuffers
     * }
     */
    public static MemorySegment glad_glCreateBuffers() {
        return glad_glCreateBuffers$constants.SEGMENT.get(glad_glCreateBuffers$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEBUFFERSPROC glad_glCreateBuffers
     * }
     */
    public static void glad_glCreateBuffers(MemorySegment varValue) {
        glad_glCreateBuffers$constants.SEGMENT.set(glad_glCreateBuffers$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glCreateBuffers$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glCreateBuffers").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEBUFFERSPROC glad_debug_glCreateBuffers
     * }
     */
    public static AddressLayout glad_debug_glCreateBuffers$layout() {
        return glad_debug_glCreateBuffers$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEBUFFERSPROC glad_debug_glCreateBuffers
     * }
     */
    public static MemorySegment glad_debug_glCreateBuffers$segment() {
        return glad_debug_glCreateBuffers$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEBUFFERSPROC glad_debug_glCreateBuffers
     * }
     */
    public static MemorySegment glad_debug_glCreateBuffers() {
        return glad_debug_glCreateBuffers$constants.SEGMENT.get(glad_debug_glCreateBuffers$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEBUFFERSPROC glad_debug_glCreateBuffers
     * }
     */
    public static void glad_debug_glCreateBuffers(MemorySegment varValue) {
        glad_debug_glCreateBuffers$constants.SEGMENT.set(glad_debug_glCreateBuffers$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glCreateFramebuffers$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glCreateFramebuffers").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEFRAMEBUFFERSPROC glad_glCreateFramebuffers
     * }
     */
    public static AddressLayout glad_glCreateFramebuffers$layout() {
        return glad_glCreateFramebuffers$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEFRAMEBUFFERSPROC glad_glCreateFramebuffers
     * }
     */
    public static MemorySegment glad_glCreateFramebuffers$segment() {
        return glad_glCreateFramebuffers$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEFRAMEBUFFERSPROC glad_glCreateFramebuffers
     * }
     */
    public static MemorySegment glad_glCreateFramebuffers() {
        return glad_glCreateFramebuffers$constants.SEGMENT.get(glad_glCreateFramebuffers$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEFRAMEBUFFERSPROC glad_glCreateFramebuffers
     * }
     */
    public static void glad_glCreateFramebuffers(MemorySegment varValue) {
        glad_glCreateFramebuffers$constants.SEGMENT.set(glad_glCreateFramebuffers$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glCreateFramebuffers$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glCreateFramebuffers").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEFRAMEBUFFERSPROC glad_debug_glCreateFramebuffers
     * }
     */
    public static AddressLayout glad_debug_glCreateFramebuffers$layout() {
        return glad_debug_glCreateFramebuffers$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEFRAMEBUFFERSPROC glad_debug_glCreateFramebuffers
     * }
     */
    public static MemorySegment glad_debug_glCreateFramebuffers$segment() {
        return glad_debug_glCreateFramebuffers$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEFRAMEBUFFERSPROC glad_debug_glCreateFramebuffers
     * }
     */
    public static MemorySegment glad_debug_glCreateFramebuffers() {
        return glad_debug_glCreateFramebuffers$constants.SEGMENT.get(glad_debug_glCreateFramebuffers$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEFRAMEBUFFERSPROC glad_debug_glCreateFramebuffers
     * }
     */
    public static void glad_debug_glCreateFramebuffers(MemorySegment varValue) {
        glad_debug_glCreateFramebuffers$constants.SEGMENT.set(glad_debug_glCreateFramebuffers$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glCreateProgram$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glCreateProgram").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEPROGRAMPROC glad_glCreateProgram
     * }
     */
    public static AddressLayout glad_glCreateProgram$layout() {
        return glad_glCreateProgram$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEPROGRAMPROC glad_glCreateProgram
     * }
     */
    public static MemorySegment glad_glCreateProgram$segment() {
        return glad_glCreateProgram$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEPROGRAMPROC glad_glCreateProgram
     * }
     */
    public static MemorySegment glad_glCreateProgram() {
        return glad_glCreateProgram$constants.SEGMENT.get(glad_glCreateProgram$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEPROGRAMPROC glad_glCreateProgram
     * }
     */
    public static void glad_glCreateProgram(MemorySegment varValue) {
        glad_glCreateProgram$constants.SEGMENT.set(glad_glCreateProgram$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glCreateProgram$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glCreateProgram").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEPROGRAMPROC glad_debug_glCreateProgram
     * }
     */
    public static AddressLayout glad_debug_glCreateProgram$layout() {
        return glad_debug_glCreateProgram$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEPROGRAMPROC glad_debug_glCreateProgram
     * }
     */
    public static MemorySegment glad_debug_glCreateProgram$segment() {
        return glad_debug_glCreateProgram$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEPROGRAMPROC glad_debug_glCreateProgram
     * }
     */
    public static MemorySegment glad_debug_glCreateProgram() {
        return glad_debug_glCreateProgram$constants.SEGMENT.get(glad_debug_glCreateProgram$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEPROGRAMPROC glad_debug_glCreateProgram
     * }
     */
    public static void glad_debug_glCreateProgram(MemorySegment varValue) {
        glad_debug_glCreateProgram$constants.SEGMENT.set(glad_debug_glCreateProgram$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glCreateProgramObjectARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glCreateProgramObjectARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEPROGRAMOBJECTARBPROC glad_glCreateProgramObjectARB
     * }
     */
    public static AddressLayout glad_glCreateProgramObjectARB$layout() {
        return glad_glCreateProgramObjectARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEPROGRAMOBJECTARBPROC glad_glCreateProgramObjectARB
     * }
     */
    public static MemorySegment glad_glCreateProgramObjectARB$segment() {
        return glad_glCreateProgramObjectARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEPROGRAMOBJECTARBPROC glad_glCreateProgramObjectARB
     * }
     */
    public static MemorySegment glad_glCreateProgramObjectARB() {
        return glad_glCreateProgramObjectARB$constants.SEGMENT.get(glad_glCreateProgramObjectARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEPROGRAMOBJECTARBPROC glad_glCreateProgramObjectARB
     * }
     */
    public static void glad_glCreateProgramObjectARB(MemorySegment varValue) {
        glad_glCreateProgramObjectARB$constants.SEGMENT.set(glad_glCreateProgramObjectARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glCreateProgramObjectARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glCreateProgramObjectARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEPROGRAMOBJECTARBPROC glad_debug_glCreateProgramObjectARB
     * }
     */
    public static AddressLayout glad_debug_glCreateProgramObjectARB$layout() {
        return glad_debug_glCreateProgramObjectARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEPROGRAMOBJECTARBPROC glad_debug_glCreateProgramObjectARB
     * }
     */
    public static MemorySegment glad_debug_glCreateProgramObjectARB$segment() {
        return glad_debug_glCreateProgramObjectARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEPROGRAMOBJECTARBPROC glad_debug_glCreateProgramObjectARB
     * }
     */
    public static MemorySegment glad_debug_glCreateProgramObjectARB() {
        return glad_debug_glCreateProgramObjectARB$constants.SEGMENT.get(glad_debug_glCreateProgramObjectARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEPROGRAMOBJECTARBPROC glad_debug_glCreateProgramObjectARB
     * }
     */
    public static void glad_debug_glCreateProgramObjectARB(MemorySegment varValue) {
        glad_debug_glCreateProgramObjectARB$constants.SEGMENT.set(glad_debug_glCreateProgramObjectARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glCreateProgramPipelines$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glCreateProgramPipelines").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEPROGRAMPIPELINESPROC glad_glCreateProgramPipelines
     * }
     */
    public static AddressLayout glad_glCreateProgramPipelines$layout() {
        return glad_glCreateProgramPipelines$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEPROGRAMPIPELINESPROC glad_glCreateProgramPipelines
     * }
     */
    public static MemorySegment glad_glCreateProgramPipelines$segment() {
        return glad_glCreateProgramPipelines$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEPROGRAMPIPELINESPROC glad_glCreateProgramPipelines
     * }
     */
    public static MemorySegment glad_glCreateProgramPipelines() {
        return glad_glCreateProgramPipelines$constants.SEGMENT.get(glad_glCreateProgramPipelines$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEPROGRAMPIPELINESPROC glad_glCreateProgramPipelines
     * }
     */
    public static void glad_glCreateProgramPipelines(MemorySegment varValue) {
        glad_glCreateProgramPipelines$constants.SEGMENT.set(glad_glCreateProgramPipelines$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glCreateProgramPipelines$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glCreateProgramPipelines").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEPROGRAMPIPELINESPROC glad_debug_glCreateProgramPipelines
     * }
     */
    public static AddressLayout glad_debug_glCreateProgramPipelines$layout() {
        return glad_debug_glCreateProgramPipelines$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEPROGRAMPIPELINESPROC glad_debug_glCreateProgramPipelines
     * }
     */
    public static MemorySegment glad_debug_glCreateProgramPipelines$segment() {
        return glad_debug_glCreateProgramPipelines$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEPROGRAMPIPELINESPROC glad_debug_glCreateProgramPipelines
     * }
     */
    public static MemorySegment glad_debug_glCreateProgramPipelines() {
        return glad_debug_glCreateProgramPipelines$constants.SEGMENT.get(glad_debug_glCreateProgramPipelines$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEPROGRAMPIPELINESPROC glad_debug_glCreateProgramPipelines
     * }
     */
    public static void glad_debug_glCreateProgramPipelines(MemorySegment varValue) {
        glad_debug_glCreateProgramPipelines$constants.SEGMENT.set(glad_debug_glCreateProgramPipelines$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glCreateQueries$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glCreateQueries").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEQUERIESPROC glad_glCreateQueries
     * }
     */
    public static AddressLayout glad_glCreateQueries$layout() {
        return glad_glCreateQueries$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEQUERIESPROC glad_glCreateQueries
     * }
     */
    public static MemorySegment glad_glCreateQueries$segment() {
        return glad_glCreateQueries$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEQUERIESPROC glad_glCreateQueries
     * }
     */
    public static MemorySegment glad_glCreateQueries() {
        return glad_glCreateQueries$constants.SEGMENT.get(glad_glCreateQueries$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEQUERIESPROC glad_glCreateQueries
     * }
     */
    public static void glad_glCreateQueries(MemorySegment varValue) {
        glad_glCreateQueries$constants.SEGMENT.set(glad_glCreateQueries$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glCreateQueries$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glCreateQueries").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEQUERIESPROC glad_debug_glCreateQueries
     * }
     */
    public static AddressLayout glad_debug_glCreateQueries$layout() {
        return glad_debug_glCreateQueries$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEQUERIESPROC glad_debug_glCreateQueries
     * }
     */
    public static MemorySegment glad_debug_glCreateQueries$segment() {
        return glad_debug_glCreateQueries$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEQUERIESPROC glad_debug_glCreateQueries
     * }
     */
    public static MemorySegment glad_debug_glCreateQueries() {
        return glad_debug_glCreateQueries$constants.SEGMENT.get(glad_debug_glCreateQueries$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEQUERIESPROC glad_debug_glCreateQueries
     * }
     */
    public static void glad_debug_glCreateQueries(MemorySegment varValue) {
        glad_debug_glCreateQueries$constants.SEGMENT.set(glad_debug_glCreateQueries$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glCreateRenderbuffers$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glCreateRenderbuffers").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATERENDERBUFFERSPROC glad_glCreateRenderbuffers
     * }
     */
    public static AddressLayout glad_glCreateRenderbuffers$layout() {
        return glad_glCreateRenderbuffers$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATERENDERBUFFERSPROC glad_glCreateRenderbuffers
     * }
     */
    public static MemorySegment glad_glCreateRenderbuffers$segment() {
        return glad_glCreateRenderbuffers$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATERENDERBUFFERSPROC glad_glCreateRenderbuffers
     * }
     */
    public static MemorySegment glad_glCreateRenderbuffers() {
        return glad_glCreateRenderbuffers$constants.SEGMENT.get(glad_glCreateRenderbuffers$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATERENDERBUFFERSPROC glad_glCreateRenderbuffers
     * }
     */
    public static void glad_glCreateRenderbuffers(MemorySegment varValue) {
        glad_glCreateRenderbuffers$constants.SEGMENT.set(glad_glCreateRenderbuffers$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glCreateRenderbuffers$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glCreateRenderbuffers").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATERENDERBUFFERSPROC glad_debug_glCreateRenderbuffers
     * }
     */
    public static AddressLayout glad_debug_glCreateRenderbuffers$layout() {
        return glad_debug_glCreateRenderbuffers$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATERENDERBUFFERSPROC glad_debug_glCreateRenderbuffers
     * }
     */
    public static MemorySegment glad_debug_glCreateRenderbuffers$segment() {
        return glad_debug_glCreateRenderbuffers$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATERENDERBUFFERSPROC glad_debug_glCreateRenderbuffers
     * }
     */
    public static MemorySegment glad_debug_glCreateRenderbuffers() {
        return glad_debug_glCreateRenderbuffers$constants.SEGMENT.get(glad_debug_glCreateRenderbuffers$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATERENDERBUFFERSPROC glad_debug_glCreateRenderbuffers
     * }
     */
    public static void glad_debug_glCreateRenderbuffers(MemorySegment varValue) {
        glad_debug_glCreateRenderbuffers$constants.SEGMENT.set(glad_debug_glCreateRenderbuffers$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glCreateSamplers$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glCreateSamplers").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATESAMPLERSPROC glad_glCreateSamplers
     * }
     */
    public static AddressLayout glad_glCreateSamplers$layout() {
        return glad_glCreateSamplers$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATESAMPLERSPROC glad_glCreateSamplers
     * }
     */
    public static MemorySegment glad_glCreateSamplers$segment() {
        return glad_glCreateSamplers$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATESAMPLERSPROC glad_glCreateSamplers
     * }
     */
    public static MemorySegment glad_glCreateSamplers() {
        return glad_glCreateSamplers$constants.SEGMENT.get(glad_glCreateSamplers$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATESAMPLERSPROC glad_glCreateSamplers
     * }
     */
    public static void glad_glCreateSamplers(MemorySegment varValue) {
        glad_glCreateSamplers$constants.SEGMENT.set(glad_glCreateSamplers$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glCreateSamplers$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glCreateSamplers").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATESAMPLERSPROC glad_debug_glCreateSamplers
     * }
     */
    public static AddressLayout glad_debug_glCreateSamplers$layout() {
        return glad_debug_glCreateSamplers$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATESAMPLERSPROC glad_debug_glCreateSamplers
     * }
     */
    public static MemorySegment glad_debug_glCreateSamplers$segment() {
        return glad_debug_glCreateSamplers$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATESAMPLERSPROC glad_debug_glCreateSamplers
     * }
     */
    public static MemorySegment glad_debug_glCreateSamplers() {
        return glad_debug_glCreateSamplers$constants.SEGMENT.get(glad_debug_glCreateSamplers$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATESAMPLERSPROC glad_debug_glCreateSamplers
     * }
     */
    public static void glad_debug_glCreateSamplers(MemorySegment varValue) {
        glad_debug_glCreateSamplers$constants.SEGMENT.set(glad_debug_glCreateSamplers$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glCreateShader$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glCreateShader").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATESHADERPROC glad_glCreateShader
     * }
     */
    public static AddressLayout glad_glCreateShader$layout() {
        return glad_glCreateShader$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATESHADERPROC glad_glCreateShader
     * }
     */
    public static MemorySegment glad_glCreateShader$segment() {
        return glad_glCreateShader$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATESHADERPROC glad_glCreateShader
     * }
     */
    public static MemorySegment glad_glCreateShader() {
        return glad_glCreateShader$constants.SEGMENT.get(glad_glCreateShader$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATESHADERPROC glad_glCreateShader
     * }
     */
    public static void glad_glCreateShader(MemorySegment varValue) {
        glad_glCreateShader$constants.SEGMENT.set(glad_glCreateShader$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glCreateShader$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glCreateShader").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATESHADERPROC glad_debug_glCreateShader
     * }
     */
    public static AddressLayout glad_debug_glCreateShader$layout() {
        return glad_debug_glCreateShader$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATESHADERPROC glad_debug_glCreateShader
     * }
     */
    public static MemorySegment glad_debug_glCreateShader$segment() {
        return glad_debug_glCreateShader$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATESHADERPROC glad_debug_glCreateShader
     * }
     */
    public static MemorySegment glad_debug_glCreateShader() {
        return glad_debug_glCreateShader$constants.SEGMENT.get(glad_debug_glCreateShader$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATESHADERPROC glad_debug_glCreateShader
     * }
     */
    public static void glad_debug_glCreateShader(MemorySegment varValue) {
        glad_debug_glCreateShader$constants.SEGMENT.set(glad_debug_glCreateShader$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glCreateShaderObjectARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glCreateShaderObjectARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATESHADEROBJECTARBPROC glad_glCreateShaderObjectARB
     * }
     */
    public static AddressLayout glad_glCreateShaderObjectARB$layout() {
        return glad_glCreateShaderObjectARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATESHADEROBJECTARBPROC glad_glCreateShaderObjectARB
     * }
     */
    public static MemorySegment glad_glCreateShaderObjectARB$segment() {
        return glad_glCreateShaderObjectARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATESHADEROBJECTARBPROC glad_glCreateShaderObjectARB
     * }
     */
    public static MemorySegment glad_glCreateShaderObjectARB() {
        return glad_glCreateShaderObjectARB$constants.SEGMENT.get(glad_glCreateShaderObjectARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATESHADEROBJECTARBPROC glad_glCreateShaderObjectARB
     * }
     */
    public static void glad_glCreateShaderObjectARB(MemorySegment varValue) {
        glad_glCreateShaderObjectARB$constants.SEGMENT.set(glad_glCreateShaderObjectARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glCreateShaderObjectARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glCreateShaderObjectARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATESHADEROBJECTARBPROC glad_debug_glCreateShaderObjectARB
     * }
     */
    public static AddressLayout glad_debug_glCreateShaderObjectARB$layout() {
        return glad_debug_glCreateShaderObjectARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATESHADEROBJECTARBPROC glad_debug_glCreateShaderObjectARB
     * }
     */
    public static MemorySegment glad_debug_glCreateShaderObjectARB$segment() {
        return glad_debug_glCreateShaderObjectARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATESHADEROBJECTARBPROC glad_debug_glCreateShaderObjectARB
     * }
     */
    public static MemorySegment glad_debug_glCreateShaderObjectARB() {
        return glad_debug_glCreateShaderObjectARB$constants.SEGMENT.get(glad_debug_glCreateShaderObjectARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATESHADEROBJECTARBPROC glad_debug_glCreateShaderObjectARB
     * }
     */
    public static void glad_debug_glCreateShaderObjectARB(MemorySegment varValue) {
        glad_debug_glCreateShaderObjectARB$constants.SEGMENT.set(glad_debug_glCreateShaderObjectARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glCreateShaderProgramv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glCreateShaderProgramv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATESHADERPROGRAMVPROC glad_glCreateShaderProgramv
     * }
     */
    public static AddressLayout glad_glCreateShaderProgramv$layout() {
        return glad_glCreateShaderProgramv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATESHADERPROGRAMVPROC glad_glCreateShaderProgramv
     * }
     */
    public static MemorySegment glad_glCreateShaderProgramv$segment() {
        return glad_glCreateShaderProgramv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATESHADERPROGRAMVPROC glad_glCreateShaderProgramv
     * }
     */
    public static MemorySegment glad_glCreateShaderProgramv() {
        return glad_glCreateShaderProgramv$constants.SEGMENT.get(glad_glCreateShaderProgramv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATESHADERPROGRAMVPROC glad_glCreateShaderProgramv
     * }
     */
    public static void glad_glCreateShaderProgramv(MemorySegment varValue) {
        glad_glCreateShaderProgramv$constants.SEGMENT.set(glad_glCreateShaderProgramv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glCreateShaderProgramv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glCreateShaderProgramv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATESHADERPROGRAMVPROC glad_debug_glCreateShaderProgramv
     * }
     */
    public static AddressLayout glad_debug_glCreateShaderProgramv$layout() {
        return glad_debug_glCreateShaderProgramv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATESHADERPROGRAMVPROC glad_debug_glCreateShaderProgramv
     * }
     */
    public static MemorySegment glad_debug_glCreateShaderProgramv$segment() {
        return glad_debug_glCreateShaderProgramv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATESHADERPROGRAMVPROC glad_debug_glCreateShaderProgramv
     * }
     */
    public static MemorySegment glad_debug_glCreateShaderProgramv() {
        return glad_debug_glCreateShaderProgramv$constants.SEGMENT.get(glad_debug_glCreateShaderProgramv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATESHADERPROGRAMVPROC glad_debug_glCreateShaderProgramv
     * }
     */
    public static void glad_debug_glCreateShaderProgramv(MemorySegment varValue) {
        glad_debug_glCreateShaderProgramv$constants.SEGMENT.set(glad_debug_glCreateShaderProgramv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glCreateTextures$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glCreateTextures").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATETEXTURESPROC glad_glCreateTextures
     * }
     */
    public static AddressLayout glad_glCreateTextures$layout() {
        return glad_glCreateTextures$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATETEXTURESPROC glad_glCreateTextures
     * }
     */
    public static MemorySegment glad_glCreateTextures$segment() {
        return glad_glCreateTextures$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATETEXTURESPROC glad_glCreateTextures
     * }
     */
    public static MemorySegment glad_glCreateTextures() {
        return glad_glCreateTextures$constants.SEGMENT.get(glad_glCreateTextures$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATETEXTURESPROC glad_glCreateTextures
     * }
     */
    public static void glad_glCreateTextures(MemorySegment varValue) {
        glad_glCreateTextures$constants.SEGMENT.set(glad_glCreateTextures$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glCreateTextures$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glCreateTextures").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATETEXTURESPROC glad_debug_glCreateTextures
     * }
     */
    public static AddressLayout glad_debug_glCreateTextures$layout() {
        return glad_debug_glCreateTextures$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATETEXTURESPROC glad_debug_glCreateTextures
     * }
     */
    public static MemorySegment glad_debug_glCreateTextures$segment() {
        return glad_debug_glCreateTextures$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATETEXTURESPROC glad_debug_glCreateTextures
     * }
     */
    public static MemorySegment glad_debug_glCreateTextures() {
        return glad_debug_glCreateTextures$constants.SEGMENT.get(glad_debug_glCreateTextures$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATETEXTURESPROC glad_debug_glCreateTextures
     * }
     */
    public static void glad_debug_glCreateTextures(MemorySegment varValue) {
        glad_debug_glCreateTextures$constants.SEGMENT.set(glad_debug_glCreateTextures$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glCreateTransformFeedbacks$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glCreateTransformFeedbacks").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATETRANSFORMFEEDBACKSPROC glad_glCreateTransformFeedbacks
     * }
     */
    public static AddressLayout glad_glCreateTransformFeedbacks$layout() {
        return glad_glCreateTransformFeedbacks$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATETRANSFORMFEEDBACKSPROC glad_glCreateTransformFeedbacks
     * }
     */
    public static MemorySegment glad_glCreateTransformFeedbacks$segment() {
        return glad_glCreateTransformFeedbacks$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATETRANSFORMFEEDBACKSPROC glad_glCreateTransformFeedbacks
     * }
     */
    public static MemorySegment glad_glCreateTransformFeedbacks() {
        return glad_glCreateTransformFeedbacks$constants.SEGMENT.get(glad_glCreateTransformFeedbacks$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATETRANSFORMFEEDBACKSPROC glad_glCreateTransformFeedbacks
     * }
     */
    public static void glad_glCreateTransformFeedbacks(MemorySegment varValue) {
        glad_glCreateTransformFeedbacks$constants.SEGMENT.set(glad_glCreateTransformFeedbacks$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glCreateTransformFeedbacks$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glCreateTransformFeedbacks").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATETRANSFORMFEEDBACKSPROC glad_debug_glCreateTransformFeedbacks
     * }
     */
    public static AddressLayout glad_debug_glCreateTransformFeedbacks$layout() {
        return glad_debug_glCreateTransformFeedbacks$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATETRANSFORMFEEDBACKSPROC glad_debug_glCreateTransformFeedbacks
     * }
     */
    public static MemorySegment glad_debug_glCreateTransformFeedbacks$segment() {
        return glad_debug_glCreateTransformFeedbacks$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATETRANSFORMFEEDBACKSPROC glad_debug_glCreateTransformFeedbacks
     * }
     */
    public static MemorySegment glad_debug_glCreateTransformFeedbacks() {
        return glad_debug_glCreateTransformFeedbacks$constants.SEGMENT.get(glad_debug_glCreateTransformFeedbacks$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATETRANSFORMFEEDBACKSPROC glad_debug_glCreateTransformFeedbacks
     * }
     */
    public static void glad_debug_glCreateTransformFeedbacks(MemorySegment varValue) {
        glad_debug_glCreateTransformFeedbacks$constants.SEGMENT.set(glad_debug_glCreateTransformFeedbacks$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glCreateVertexArrays$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glCreateVertexArrays").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEVERTEXARRAYSPROC glad_glCreateVertexArrays
     * }
     */
    public static AddressLayout glad_glCreateVertexArrays$layout() {
        return glad_glCreateVertexArrays$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEVERTEXARRAYSPROC glad_glCreateVertexArrays
     * }
     */
    public static MemorySegment glad_glCreateVertexArrays$segment() {
        return glad_glCreateVertexArrays$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEVERTEXARRAYSPROC glad_glCreateVertexArrays
     * }
     */
    public static MemorySegment glad_glCreateVertexArrays() {
        return glad_glCreateVertexArrays$constants.SEGMENT.get(glad_glCreateVertexArrays$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEVERTEXARRAYSPROC glad_glCreateVertexArrays
     * }
     */
    public static void glad_glCreateVertexArrays(MemorySegment varValue) {
        glad_glCreateVertexArrays$constants.SEGMENT.set(glad_glCreateVertexArrays$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glCreateVertexArrays$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glCreateVertexArrays").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEVERTEXARRAYSPROC glad_debug_glCreateVertexArrays
     * }
     */
    public static AddressLayout glad_debug_glCreateVertexArrays$layout() {
        return glad_debug_glCreateVertexArrays$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEVERTEXARRAYSPROC glad_debug_glCreateVertexArrays
     * }
     */
    public static MemorySegment glad_debug_glCreateVertexArrays$segment() {
        return glad_debug_glCreateVertexArrays$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEVERTEXARRAYSPROC glad_debug_glCreateVertexArrays
     * }
     */
    public static MemorySegment glad_debug_glCreateVertexArrays() {
        return glad_debug_glCreateVertexArrays$constants.SEGMENT.get(glad_debug_glCreateVertexArrays$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLCREATEVERTEXARRAYSPROC glad_debug_glCreateVertexArrays
     * }
     */
    public static void glad_debug_glCreateVertexArrays(MemorySegment varValue) {
        glad_debug_glCreateVertexArrays$constants.SEGMENT.set(glad_debug_glCreateVertexArrays$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glCullFace$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glCullFace").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLCULLFACEPROC glad_glCullFace
     * }
     */
    public static AddressLayout glad_glCullFace$layout() {
        return glad_glCullFace$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLCULLFACEPROC glad_glCullFace
     * }
     */
    public static MemorySegment glad_glCullFace$segment() {
        return glad_glCullFace$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLCULLFACEPROC glad_glCullFace
     * }
     */
    public static MemorySegment glad_glCullFace() {
        return glad_glCullFace$constants.SEGMENT.get(glad_glCullFace$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLCULLFACEPROC glad_glCullFace
     * }
     */
    public static void glad_glCullFace(MemorySegment varValue) {
        glad_glCullFace$constants.SEGMENT.set(glad_glCullFace$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glCullFace$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glCullFace").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLCULLFACEPROC glad_debug_glCullFace
     * }
     */
    public static AddressLayout glad_debug_glCullFace$layout() {
        return glad_debug_glCullFace$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLCULLFACEPROC glad_debug_glCullFace
     * }
     */
    public static MemorySegment glad_debug_glCullFace$segment() {
        return glad_debug_glCullFace$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLCULLFACEPROC glad_debug_glCullFace
     * }
     */
    public static MemorySegment glad_debug_glCullFace() {
        return glad_debug_glCullFace$constants.SEGMENT.get(glad_debug_glCullFace$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLCULLFACEPROC glad_debug_glCullFace
     * }
     */
    public static void glad_debug_glCullFace(MemorySegment varValue) {
        glad_debug_glCullFace$constants.SEGMENT.set(glad_debug_glCullFace$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDebugMessageCallback$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDebugMessageCallback").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDEBUGMESSAGECALLBACKPROC glad_glDebugMessageCallback
     * }
     */
    public static AddressLayout glad_glDebugMessageCallback$layout() {
        return glad_glDebugMessageCallback$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDEBUGMESSAGECALLBACKPROC glad_glDebugMessageCallback
     * }
     */
    public static MemorySegment glad_glDebugMessageCallback$segment() {
        return glad_glDebugMessageCallback$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEBUGMESSAGECALLBACKPROC glad_glDebugMessageCallback
     * }
     */
    public static MemorySegment glad_glDebugMessageCallback() {
        return glad_glDebugMessageCallback$constants.SEGMENT.get(glad_glDebugMessageCallback$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEBUGMESSAGECALLBACKPROC glad_glDebugMessageCallback
     * }
     */
    public static void glad_glDebugMessageCallback(MemorySegment varValue) {
        glad_glDebugMessageCallback$constants.SEGMENT.set(glad_glDebugMessageCallback$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDebugMessageCallback$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDebugMessageCallback").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDEBUGMESSAGECALLBACKPROC glad_debug_glDebugMessageCallback
     * }
     */
    public static AddressLayout glad_debug_glDebugMessageCallback$layout() {
        return glad_debug_glDebugMessageCallback$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDEBUGMESSAGECALLBACKPROC glad_debug_glDebugMessageCallback
     * }
     */
    public static MemorySegment glad_debug_glDebugMessageCallback$segment() {
        return glad_debug_glDebugMessageCallback$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEBUGMESSAGECALLBACKPROC glad_debug_glDebugMessageCallback
     * }
     */
    public static MemorySegment glad_debug_glDebugMessageCallback() {
        return glad_debug_glDebugMessageCallback$constants.SEGMENT.get(glad_debug_glDebugMessageCallback$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEBUGMESSAGECALLBACKPROC glad_debug_glDebugMessageCallback
     * }
     */
    public static void glad_debug_glDebugMessageCallback(MemorySegment varValue) {
        glad_debug_glDebugMessageCallback$constants.SEGMENT.set(glad_debug_glDebugMessageCallback$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDebugMessageCallbackARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDebugMessageCallbackARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDEBUGMESSAGECALLBACKARBPROC glad_glDebugMessageCallbackARB
     * }
     */
    public static AddressLayout glad_glDebugMessageCallbackARB$layout() {
        return glad_glDebugMessageCallbackARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDEBUGMESSAGECALLBACKARBPROC glad_glDebugMessageCallbackARB
     * }
     */
    public static MemorySegment glad_glDebugMessageCallbackARB$segment() {
        return glad_glDebugMessageCallbackARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEBUGMESSAGECALLBACKARBPROC glad_glDebugMessageCallbackARB
     * }
     */
    public static MemorySegment glad_glDebugMessageCallbackARB() {
        return glad_glDebugMessageCallbackARB$constants.SEGMENT.get(glad_glDebugMessageCallbackARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEBUGMESSAGECALLBACKARBPROC glad_glDebugMessageCallbackARB
     * }
     */
    public static void glad_glDebugMessageCallbackARB(MemorySegment varValue) {
        glad_glDebugMessageCallbackARB$constants.SEGMENT.set(glad_glDebugMessageCallbackARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDebugMessageCallbackARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDebugMessageCallbackARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDEBUGMESSAGECALLBACKARBPROC glad_debug_glDebugMessageCallbackARB
     * }
     */
    public static AddressLayout glad_debug_glDebugMessageCallbackARB$layout() {
        return glad_debug_glDebugMessageCallbackARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDEBUGMESSAGECALLBACKARBPROC glad_debug_glDebugMessageCallbackARB
     * }
     */
    public static MemorySegment glad_debug_glDebugMessageCallbackARB$segment() {
        return glad_debug_glDebugMessageCallbackARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEBUGMESSAGECALLBACKARBPROC glad_debug_glDebugMessageCallbackARB
     * }
     */
    public static MemorySegment glad_debug_glDebugMessageCallbackARB() {
        return glad_debug_glDebugMessageCallbackARB$constants.SEGMENT.get(glad_debug_glDebugMessageCallbackARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEBUGMESSAGECALLBACKARBPROC glad_debug_glDebugMessageCallbackARB
     * }
     */
    public static void glad_debug_glDebugMessageCallbackARB(MemorySegment varValue) {
        glad_debug_glDebugMessageCallbackARB$constants.SEGMENT.set(glad_debug_glDebugMessageCallbackARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDebugMessageControl$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDebugMessageControl").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDEBUGMESSAGECONTROLPROC glad_glDebugMessageControl
     * }
     */
    public static AddressLayout glad_glDebugMessageControl$layout() {
        return glad_glDebugMessageControl$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDEBUGMESSAGECONTROLPROC glad_glDebugMessageControl
     * }
     */
    public static MemorySegment glad_glDebugMessageControl$segment() {
        return glad_glDebugMessageControl$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEBUGMESSAGECONTROLPROC glad_glDebugMessageControl
     * }
     */
    public static MemorySegment glad_glDebugMessageControl() {
        return glad_glDebugMessageControl$constants.SEGMENT.get(glad_glDebugMessageControl$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEBUGMESSAGECONTROLPROC glad_glDebugMessageControl
     * }
     */
    public static void glad_glDebugMessageControl(MemorySegment varValue) {
        glad_glDebugMessageControl$constants.SEGMENT.set(glad_glDebugMessageControl$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDebugMessageControl$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDebugMessageControl").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDEBUGMESSAGECONTROLPROC glad_debug_glDebugMessageControl
     * }
     */
    public static AddressLayout glad_debug_glDebugMessageControl$layout() {
        return glad_debug_glDebugMessageControl$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDEBUGMESSAGECONTROLPROC glad_debug_glDebugMessageControl
     * }
     */
    public static MemorySegment glad_debug_glDebugMessageControl$segment() {
        return glad_debug_glDebugMessageControl$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEBUGMESSAGECONTROLPROC glad_debug_glDebugMessageControl
     * }
     */
    public static MemorySegment glad_debug_glDebugMessageControl() {
        return glad_debug_glDebugMessageControl$constants.SEGMENT.get(glad_debug_glDebugMessageControl$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEBUGMESSAGECONTROLPROC glad_debug_glDebugMessageControl
     * }
     */
    public static void glad_debug_glDebugMessageControl(MemorySegment varValue) {
        glad_debug_glDebugMessageControl$constants.SEGMENT.set(glad_debug_glDebugMessageControl$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDebugMessageControlARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDebugMessageControlARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDEBUGMESSAGECONTROLARBPROC glad_glDebugMessageControlARB
     * }
     */
    public static AddressLayout glad_glDebugMessageControlARB$layout() {
        return glad_glDebugMessageControlARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDEBUGMESSAGECONTROLARBPROC glad_glDebugMessageControlARB
     * }
     */
    public static MemorySegment glad_glDebugMessageControlARB$segment() {
        return glad_glDebugMessageControlARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEBUGMESSAGECONTROLARBPROC glad_glDebugMessageControlARB
     * }
     */
    public static MemorySegment glad_glDebugMessageControlARB() {
        return glad_glDebugMessageControlARB$constants.SEGMENT.get(glad_glDebugMessageControlARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEBUGMESSAGECONTROLARBPROC glad_glDebugMessageControlARB
     * }
     */
    public static void glad_glDebugMessageControlARB(MemorySegment varValue) {
        glad_glDebugMessageControlARB$constants.SEGMENT.set(glad_glDebugMessageControlARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDebugMessageControlARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDebugMessageControlARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDEBUGMESSAGECONTROLARBPROC glad_debug_glDebugMessageControlARB
     * }
     */
    public static AddressLayout glad_debug_glDebugMessageControlARB$layout() {
        return glad_debug_glDebugMessageControlARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDEBUGMESSAGECONTROLARBPROC glad_debug_glDebugMessageControlARB
     * }
     */
    public static MemorySegment glad_debug_glDebugMessageControlARB$segment() {
        return glad_debug_glDebugMessageControlARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEBUGMESSAGECONTROLARBPROC glad_debug_glDebugMessageControlARB
     * }
     */
    public static MemorySegment glad_debug_glDebugMessageControlARB() {
        return glad_debug_glDebugMessageControlARB$constants.SEGMENT.get(glad_debug_glDebugMessageControlARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEBUGMESSAGECONTROLARBPROC glad_debug_glDebugMessageControlARB
     * }
     */
    public static void glad_debug_glDebugMessageControlARB(MemorySegment varValue) {
        glad_debug_glDebugMessageControlARB$constants.SEGMENT.set(glad_debug_glDebugMessageControlARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDebugMessageInsert$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDebugMessageInsert").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDEBUGMESSAGEINSERTPROC glad_glDebugMessageInsert
     * }
     */
    public static AddressLayout glad_glDebugMessageInsert$layout() {
        return glad_glDebugMessageInsert$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDEBUGMESSAGEINSERTPROC glad_glDebugMessageInsert
     * }
     */
    public static MemorySegment glad_glDebugMessageInsert$segment() {
        return glad_glDebugMessageInsert$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEBUGMESSAGEINSERTPROC glad_glDebugMessageInsert
     * }
     */
    public static MemorySegment glad_glDebugMessageInsert() {
        return glad_glDebugMessageInsert$constants.SEGMENT.get(glad_glDebugMessageInsert$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEBUGMESSAGEINSERTPROC glad_glDebugMessageInsert
     * }
     */
    public static void glad_glDebugMessageInsert(MemorySegment varValue) {
        glad_glDebugMessageInsert$constants.SEGMENT.set(glad_glDebugMessageInsert$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDebugMessageInsert$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDebugMessageInsert").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDEBUGMESSAGEINSERTPROC glad_debug_glDebugMessageInsert
     * }
     */
    public static AddressLayout glad_debug_glDebugMessageInsert$layout() {
        return glad_debug_glDebugMessageInsert$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDEBUGMESSAGEINSERTPROC glad_debug_glDebugMessageInsert
     * }
     */
    public static MemorySegment glad_debug_glDebugMessageInsert$segment() {
        return glad_debug_glDebugMessageInsert$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEBUGMESSAGEINSERTPROC glad_debug_glDebugMessageInsert
     * }
     */
    public static MemorySegment glad_debug_glDebugMessageInsert() {
        return glad_debug_glDebugMessageInsert$constants.SEGMENT.get(glad_debug_glDebugMessageInsert$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEBUGMESSAGEINSERTPROC glad_debug_glDebugMessageInsert
     * }
     */
    public static void glad_debug_glDebugMessageInsert(MemorySegment varValue) {
        glad_debug_glDebugMessageInsert$constants.SEGMENT.set(glad_debug_glDebugMessageInsert$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDebugMessageInsertARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDebugMessageInsertARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDEBUGMESSAGEINSERTARBPROC glad_glDebugMessageInsertARB
     * }
     */
    public static AddressLayout glad_glDebugMessageInsertARB$layout() {
        return glad_glDebugMessageInsertARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDEBUGMESSAGEINSERTARBPROC glad_glDebugMessageInsertARB
     * }
     */
    public static MemorySegment glad_glDebugMessageInsertARB$segment() {
        return glad_glDebugMessageInsertARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEBUGMESSAGEINSERTARBPROC glad_glDebugMessageInsertARB
     * }
     */
    public static MemorySegment glad_glDebugMessageInsertARB() {
        return glad_glDebugMessageInsertARB$constants.SEGMENT.get(glad_glDebugMessageInsertARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEBUGMESSAGEINSERTARBPROC glad_glDebugMessageInsertARB
     * }
     */
    public static void glad_glDebugMessageInsertARB(MemorySegment varValue) {
        glad_glDebugMessageInsertARB$constants.SEGMENT.set(glad_glDebugMessageInsertARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDebugMessageInsertARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDebugMessageInsertARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDEBUGMESSAGEINSERTARBPROC glad_debug_glDebugMessageInsertARB
     * }
     */
    public static AddressLayout glad_debug_glDebugMessageInsertARB$layout() {
        return glad_debug_glDebugMessageInsertARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDEBUGMESSAGEINSERTARBPROC glad_debug_glDebugMessageInsertARB
     * }
     */
    public static MemorySegment glad_debug_glDebugMessageInsertARB$segment() {
        return glad_debug_glDebugMessageInsertARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEBUGMESSAGEINSERTARBPROC glad_debug_glDebugMessageInsertARB
     * }
     */
    public static MemorySegment glad_debug_glDebugMessageInsertARB() {
        return glad_debug_glDebugMessageInsertARB$constants.SEGMENT.get(glad_debug_glDebugMessageInsertARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEBUGMESSAGEINSERTARBPROC glad_debug_glDebugMessageInsertARB
     * }
     */
    public static void glad_debug_glDebugMessageInsertARB(MemorySegment varValue) {
        glad_debug_glDebugMessageInsertARB$constants.SEGMENT.set(glad_debug_glDebugMessageInsertARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDeleteBuffers$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDeleteBuffers").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEBUFFERSPROC glad_glDeleteBuffers
     * }
     */
    public static AddressLayout glad_glDeleteBuffers$layout() {
        return glad_glDeleteBuffers$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEBUFFERSPROC glad_glDeleteBuffers
     * }
     */
    public static MemorySegment glad_glDeleteBuffers$segment() {
        return glad_glDeleteBuffers$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEBUFFERSPROC glad_glDeleteBuffers
     * }
     */
    public static MemorySegment glad_glDeleteBuffers() {
        return glad_glDeleteBuffers$constants.SEGMENT.get(glad_glDeleteBuffers$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEBUFFERSPROC glad_glDeleteBuffers
     * }
     */
    public static void glad_glDeleteBuffers(MemorySegment varValue) {
        glad_glDeleteBuffers$constants.SEGMENT.set(glad_glDeleteBuffers$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDeleteBuffers$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDeleteBuffers").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEBUFFERSPROC glad_debug_glDeleteBuffers
     * }
     */
    public static AddressLayout glad_debug_glDeleteBuffers$layout() {
        return glad_debug_glDeleteBuffers$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEBUFFERSPROC glad_debug_glDeleteBuffers
     * }
     */
    public static MemorySegment glad_debug_glDeleteBuffers$segment() {
        return glad_debug_glDeleteBuffers$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEBUFFERSPROC glad_debug_glDeleteBuffers
     * }
     */
    public static MemorySegment glad_debug_glDeleteBuffers() {
        return glad_debug_glDeleteBuffers$constants.SEGMENT.get(glad_debug_glDeleteBuffers$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEBUFFERSPROC glad_debug_glDeleteBuffers
     * }
     */
    public static void glad_debug_glDeleteBuffers(MemorySegment varValue) {
        glad_debug_glDeleteBuffers$constants.SEGMENT.set(glad_debug_glDeleteBuffers$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDeleteBuffersARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDeleteBuffersARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEBUFFERSARBPROC glad_glDeleteBuffersARB
     * }
     */
    public static AddressLayout glad_glDeleteBuffersARB$layout() {
        return glad_glDeleteBuffersARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEBUFFERSARBPROC glad_glDeleteBuffersARB
     * }
     */
    public static MemorySegment glad_glDeleteBuffersARB$segment() {
        return glad_glDeleteBuffersARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEBUFFERSARBPROC glad_glDeleteBuffersARB
     * }
     */
    public static MemorySegment glad_glDeleteBuffersARB() {
        return glad_glDeleteBuffersARB$constants.SEGMENT.get(glad_glDeleteBuffersARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEBUFFERSARBPROC glad_glDeleteBuffersARB
     * }
     */
    public static void glad_glDeleteBuffersARB(MemorySegment varValue) {
        glad_glDeleteBuffersARB$constants.SEGMENT.set(glad_glDeleteBuffersARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDeleteBuffersARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDeleteBuffersARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEBUFFERSARBPROC glad_debug_glDeleteBuffersARB
     * }
     */
    public static AddressLayout glad_debug_glDeleteBuffersARB$layout() {
        return glad_debug_glDeleteBuffersARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEBUFFERSARBPROC glad_debug_glDeleteBuffersARB
     * }
     */
    public static MemorySegment glad_debug_glDeleteBuffersARB$segment() {
        return glad_debug_glDeleteBuffersARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEBUFFERSARBPROC glad_debug_glDeleteBuffersARB
     * }
     */
    public static MemorySegment glad_debug_glDeleteBuffersARB() {
        return glad_debug_glDeleteBuffersARB$constants.SEGMENT.get(glad_debug_glDeleteBuffersARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEBUFFERSARBPROC glad_debug_glDeleteBuffersARB
     * }
     */
    public static void glad_debug_glDeleteBuffersARB(MemorySegment varValue) {
        glad_debug_glDeleteBuffersARB$constants.SEGMENT.set(glad_debug_glDeleteBuffersARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDeleteFramebuffers$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDeleteFramebuffers").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEFRAMEBUFFERSPROC glad_glDeleteFramebuffers
     * }
     */
    public static AddressLayout glad_glDeleteFramebuffers$layout() {
        return glad_glDeleteFramebuffers$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEFRAMEBUFFERSPROC glad_glDeleteFramebuffers
     * }
     */
    public static MemorySegment glad_glDeleteFramebuffers$segment() {
        return glad_glDeleteFramebuffers$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEFRAMEBUFFERSPROC glad_glDeleteFramebuffers
     * }
     */
    public static MemorySegment glad_glDeleteFramebuffers() {
        return glad_glDeleteFramebuffers$constants.SEGMENT.get(glad_glDeleteFramebuffers$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEFRAMEBUFFERSPROC glad_glDeleteFramebuffers
     * }
     */
    public static void glad_glDeleteFramebuffers(MemorySegment varValue) {
        glad_glDeleteFramebuffers$constants.SEGMENT.set(glad_glDeleteFramebuffers$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDeleteFramebuffers$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDeleteFramebuffers").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEFRAMEBUFFERSPROC glad_debug_glDeleteFramebuffers
     * }
     */
    public static AddressLayout glad_debug_glDeleteFramebuffers$layout() {
        return glad_debug_glDeleteFramebuffers$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEFRAMEBUFFERSPROC glad_debug_glDeleteFramebuffers
     * }
     */
    public static MemorySegment glad_debug_glDeleteFramebuffers$segment() {
        return glad_debug_glDeleteFramebuffers$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEFRAMEBUFFERSPROC glad_debug_glDeleteFramebuffers
     * }
     */
    public static MemorySegment glad_debug_glDeleteFramebuffers() {
        return glad_debug_glDeleteFramebuffers$constants.SEGMENT.get(glad_debug_glDeleteFramebuffers$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEFRAMEBUFFERSPROC glad_debug_glDeleteFramebuffers
     * }
     */
    public static void glad_debug_glDeleteFramebuffers(MemorySegment varValue) {
        glad_debug_glDeleteFramebuffers$constants.SEGMENT.set(glad_debug_glDeleteFramebuffers$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDeleteFramebuffersEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDeleteFramebuffersEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEFRAMEBUFFERSEXTPROC glad_glDeleteFramebuffersEXT
     * }
     */
    public static AddressLayout glad_glDeleteFramebuffersEXT$layout() {
        return glad_glDeleteFramebuffersEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEFRAMEBUFFERSEXTPROC glad_glDeleteFramebuffersEXT
     * }
     */
    public static MemorySegment glad_glDeleteFramebuffersEXT$segment() {
        return glad_glDeleteFramebuffersEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEFRAMEBUFFERSEXTPROC glad_glDeleteFramebuffersEXT
     * }
     */
    public static MemorySegment glad_glDeleteFramebuffersEXT() {
        return glad_glDeleteFramebuffersEXT$constants.SEGMENT.get(glad_glDeleteFramebuffersEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEFRAMEBUFFERSEXTPROC glad_glDeleteFramebuffersEXT
     * }
     */
    public static void glad_glDeleteFramebuffersEXT(MemorySegment varValue) {
        glad_glDeleteFramebuffersEXT$constants.SEGMENT.set(glad_glDeleteFramebuffersEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDeleteFramebuffersEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDeleteFramebuffersEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEFRAMEBUFFERSEXTPROC glad_debug_glDeleteFramebuffersEXT
     * }
     */
    public static AddressLayout glad_debug_glDeleteFramebuffersEXT$layout() {
        return glad_debug_glDeleteFramebuffersEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEFRAMEBUFFERSEXTPROC glad_debug_glDeleteFramebuffersEXT
     * }
     */
    public static MemorySegment glad_debug_glDeleteFramebuffersEXT$segment() {
        return glad_debug_glDeleteFramebuffersEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEFRAMEBUFFERSEXTPROC glad_debug_glDeleteFramebuffersEXT
     * }
     */
    public static MemorySegment glad_debug_glDeleteFramebuffersEXT() {
        return glad_debug_glDeleteFramebuffersEXT$constants.SEGMENT.get(glad_debug_glDeleteFramebuffersEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEFRAMEBUFFERSEXTPROC glad_debug_glDeleteFramebuffersEXT
     * }
     */
    public static void glad_debug_glDeleteFramebuffersEXT(MemorySegment varValue) {
        glad_debug_glDeleteFramebuffersEXT$constants.SEGMENT.set(glad_debug_glDeleteFramebuffersEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDeleteLists$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDeleteLists").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETELISTSPROC glad_glDeleteLists
     * }
     */
    public static AddressLayout glad_glDeleteLists$layout() {
        return glad_glDeleteLists$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETELISTSPROC glad_glDeleteLists
     * }
     */
    public static MemorySegment glad_glDeleteLists$segment() {
        return glad_glDeleteLists$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETELISTSPROC glad_glDeleteLists
     * }
     */
    public static MemorySegment glad_glDeleteLists() {
        return glad_glDeleteLists$constants.SEGMENT.get(glad_glDeleteLists$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETELISTSPROC glad_glDeleteLists
     * }
     */
    public static void glad_glDeleteLists(MemorySegment varValue) {
        glad_glDeleteLists$constants.SEGMENT.set(glad_glDeleteLists$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDeleteLists$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDeleteLists").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETELISTSPROC glad_debug_glDeleteLists
     * }
     */
    public static AddressLayout glad_debug_glDeleteLists$layout() {
        return glad_debug_glDeleteLists$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETELISTSPROC glad_debug_glDeleteLists
     * }
     */
    public static MemorySegment glad_debug_glDeleteLists$segment() {
        return glad_debug_glDeleteLists$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETELISTSPROC glad_debug_glDeleteLists
     * }
     */
    public static MemorySegment glad_debug_glDeleteLists() {
        return glad_debug_glDeleteLists$constants.SEGMENT.get(glad_debug_glDeleteLists$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETELISTSPROC glad_debug_glDeleteLists
     * }
     */
    public static void glad_debug_glDeleteLists(MemorySegment varValue) {
        glad_debug_glDeleteLists$constants.SEGMENT.set(glad_debug_glDeleteLists$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDeleteObjectARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDeleteObjectARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEOBJECTARBPROC glad_glDeleteObjectARB
     * }
     */
    public static AddressLayout glad_glDeleteObjectARB$layout() {
        return glad_glDeleteObjectARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEOBJECTARBPROC glad_glDeleteObjectARB
     * }
     */
    public static MemorySegment glad_glDeleteObjectARB$segment() {
        return glad_glDeleteObjectARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEOBJECTARBPROC glad_glDeleteObjectARB
     * }
     */
    public static MemorySegment glad_glDeleteObjectARB() {
        return glad_glDeleteObjectARB$constants.SEGMENT.get(glad_glDeleteObjectARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEOBJECTARBPROC glad_glDeleteObjectARB
     * }
     */
    public static void glad_glDeleteObjectARB(MemorySegment varValue) {
        glad_glDeleteObjectARB$constants.SEGMENT.set(glad_glDeleteObjectARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDeleteObjectARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDeleteObjectARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEOBJECTARBPROC glad_debug_glDeleteObjectARB
     * }
     */
    public static AddressLayout glad_debug_glDeleteObjectARB$layout() {
        return glad_debug_glDeleteObjectARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEOBJECTARBPROC glad_debug_glDeleteObjectARB
     * }
     */
    public static MemorySegment glad_debug_glDeleteObjectARB$segment() {
        return glad_debug_glDeleteObjectARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEOBJECTARBPROC glad_debug_glDeleteObjectARB
     * }
     */
    public static MemorySegment glad_debug_glDeleteObjectARB() {
        return glad_debug_glDeleteObjectARB$constants.SEGMENT.get(glad_debug_glDeleteObjectARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEOBJECTARBPROC glad_debug_glDeleteObjectARB
     * }
     */
    public static void glad_debug_glDeleteObjectARB(MemorySegment varValue) {
        glad_debug_glDeleteObjectARB$constants.SEGMENT.set(glad_debug_glDeleteObjectARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDeleteProgram$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDeleteProgram").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEPROGRAMPROC glad_glDeleteProgram
     * }
     */
    public static AddressLayout glad_glDeleteProgram$layout() {
        return glad_glDeleteProgram$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEPROGRAMPROC glad_glDeleteProgram
     * }
     */
    public static MemorySegment glad_glDeleteProgram$segment() {
        return glad_glDeleteProgram$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEPROGRAMPROC glad_glDeleteProgram
     * }
     */
    public static MemorySegment glad_glDeleteProgram() {
        return glad_glDeleteProgram$constants.SEGMENT.get(glad_glDeleteProgram$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEPROGRAMPROC glad_glDeleteProgram
     * }
     */
    public static void glad_glDeleteProgram(MemorySegment varValue) {
        glad_glDeleteProgram$constants.SEGMENT.set(glad_glDeleteProgram$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDeleteProgram$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDeleteProgram").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEPROGRAMPROC glad_debug_glDeleteProgram
     * }
     */
    public static AddressLayout glad_debug_glDeleteProgram$layout() {
        return glad_debug_glDeleteProgram$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEPROGRAMPROC glad_debug_glDeleteProgram
     * }
     */
    public static MemorySegment glad_debug_glDeleteProgram$segment() {
        return glad_debug_glDeleteProgram$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEPROGRAMPROC glad_debug_glDeleteProgram
     * }
     */
    public static MemorySegment glad_debug_glDeleteProgram() {
        return glad_debug_glDeleteProgram$constants.SEGMENT.get(glad_debug_glDeleteProgram$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEPROGRAMPROC glad_debug_glDeleteProgram
     * }
     */
    public static void glad_debug_glDeleteProgram(MemorySegment varValue) {
        glad_debug_glDeleteProgram$constants.SEGMENT.set(glad_debug_glDeleteProgram$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDeleteProgramPipelines$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDeleteProgramPipelines").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEPROGRAMPIPELINESPROC glad_glDeleteProgramPipelines
     * }
     */
    public static AddressLayout glad_glDeleteProgramPipelines$layout() {
        return glad_glDeleteProgramPipelines$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEPROGRAMPIPELINESPROC glad_glDeleteProgramPipelines
     * }
     */
    public static MemorySegment glad_glDeleteProgramPipelines$segment() {
        return glad_glDeleteProgramPipelines$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEPROGRAMPIPELINESPROC glad_glDeleteProgramPipelines
     * }
     */
    public static MemorySegment glad_glDeleteProgramPipelines() {
        return glad_glDeleteProgramPipelines$constants.SEGMENT.get(glad_glDeleteProgramPipelines$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEPROGRAMPIPELINESPROC glad_glDeleteProgramPipelines
     * }
     */
    public static void glad_glDeleteProgramPipelines(MemorySegment varValue) {
        glad_glDeleteProgramPipelines$constants.SEGMENT.set(glad_glDeleteProgramPipelines$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDeleteProgramPipelines$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDeleteProgramPipelines").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEPROGRAMPIPELINESPROC glad_debug_glDeleteProgramPipelines
     * }
     */
    public static AddressLayout glad_debug_glDeleteProgramPipelines$layout() {
        return glad_debug_glDeleteProgramPipelines$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEPROGRAMPIPELINESPROC glad_debug_glDeleteProgramPipelines
     * }
     */
    public static MemorySegment glad_debug_glDeleteProgramPipelines$segment() {
        return glad_debug_glDeleteProgramPipelines$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEPROGRAMPIPELINESPROC glad_debug_glDeleteProgramPipelines
     * }
     */
    public static MemorySegment glad_debug_glDeleteProgramPipelines() {
        return glad_debug_glDeleteProgramPipelines$constants.SEGMENT.get(glad_debug_glDeleteProgramPipelines$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEPROGRAMPIPELINESPROC glad_debug_glDeleteProgramPipelines
     * }
     */
    public static void glad_debug_glDeleteProgramPipelines(MemorySegment varValue) {
        glad_debug_glDeleteProgramPipelines$constants.SEGMENT.set(glad_debug_glDeleteProgramPipelines$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDeleteProgramsARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDeleteProgramsARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEPROGRAMSARBPROC glad_glDeleteProgramsARB
     * }
     */
    public static AddressLayout glad_glDeleteProgramsARB$layout() {
        return glad_glDeleteProgramsARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEPROGRAMSARBPROC glad_glDeleteProgramsARB
     * }
     */
    public static MemorySegment glad_glDeleteProgramsARB$segment() {
        return glad_glDeleteProgramsARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEPROGRAMSARBPROC glad_glDeleteProgramsARB
     * }
     */
    public static MemorySegment glad_glDeleteProgramsARB() {
        return glad_glDeleteProgramsARB$constants.SEGMENT.get(glad_glDeleteProgramsARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEPROGRAMSARBPROC glad_glDeleteProgramsARB
     * }
     */
    public static void glad_glDeleteProgramsARB(MemorySegment varValue) {
        glad_glDeleteProgramsARB$constants.SEGMENT.set(glad_glDeleteProgramsARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDeleteProgramsARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDeleteProgramsARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEPROGRAMSARBPROC glad_debug_glDeleteProgramsARB
     * }
     */
    public static AddressLayout glad_debug_glDeleteProgramsARB$layout() {
        return glad_debug_glDeleteProgramsARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEPROGRAMSARBPROC glad_debug_glDeleteProgramsARB
     * }
     */
    public static MemorySegment glad_debug_glDeleteProgramsARB$segment() {
        return glad_debug_glDeleteProgramsARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEPROGRAMSARBPROC glad_debug_glDeleteProgramsARB
     * }
     */
    public static MemorySegment glad_debug_glDeleteProgramsARB() {
        return glad_debug_glDeleteProgramsARB$constants.SEGMENT.get(glad_debug_glDeleteProgramsARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEPROGRAMSARBPROC glad_debug_glDeleteProgramsARB
     * }
     */
    public static void glad_debug_glDeleteProgramsARB(MemorySegment varValue) {
        glad_debug_glDeleteProgramsARB$constants.SEGMENT.set(glad_debug_glDeleteProgramsARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDeleteProgramsNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDeleteProgramsNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEPROGRAMSNVPROC glad_glDeleteProgramsNV
     * }
     */
    public static AddressLayout glad_glDeleteProgramsNV$layout() {
        return glad_glDeleteProgramsNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEPROGRAMSNVPROC glad_glDeleteProgramsNV
     * }
     */
    public static MemorySegment glad_glDeleteProgramsNV$segment() {
        return glad_glDeleteProgramsNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEPROGRAMSNVPROC glad_glDeleteProgramsNV
     * }
     */
    public static MemorySegment glad_glDeleteProgramsNV() {
        return glad_glDeleteProgramsNV$constants.SEGMENT.get(glad_glDeleteProgramsNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEPROGRAMSNVPROC glad_glDeleteProgramsNV
     * }
     */
    public static void glad_glDeleteProgramsNV(MemorySegment varValue) {
        glad_glDeleteProgramsNV$constants.SEGMENT.set(glad_glDeleteProgramsNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDeleteProgramsNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDeleteProgramsNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEPROGRAMSNVPROC glad_debug_glDeleteProgramsNV
     * }
     */
    public static AddressLayout glad_debug_glDeleteProgramsNV$layout() {
        return glad_debug_glDeleteProgramsNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEPROGRAMSNVPROC glad_debug_glDeleteProgramsNV
     * }
     */
    public static MemorySegment glad_debug_glDeleteProgramsNV$segment() {
        return glad_debug_glDeleteProgramsNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEPROGRAMSNVPROC glad_debug_glDeleteProgramsNV
     * }
     */
    public static MemorySegment glad_debug_glDeleteProgramsNV() {
        return glad_debug_glDeleteProgramsNV$constants.SEGMENT.get(glad_debug_glDeleteProgramsNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEPROGRAMSNVPROC glad_debug_glDeleteProgramsNV
     * }
     */
    public static void glad_debug_glDeleteProgramsNV(MemorySegment varValue) {
        glad_debug_glDeleteProgramsNV$constants.SEGMENT.set(glad_debug_glDeleteProgramsNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDeleteQueries$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDeleteQueries").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEQUERIESPROC glad_glDeleteQueries
     * }
     */
    public static AddressLayout glad_glDeleteQueries$layout() {
        return glad_glDeleteQueries$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEQUERIESPROC glad_glDeleteQueries
     * }
     */
    public static MemorySegment glad_glDeleteQueries$segment() {
        return glad_glDeleteQueries$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEQUERIESPROC glad_glDeleteQueries
     * }
     */
    public static MemorySegment glad_glDeleteQueries() {
        return glad_glDeleteQueries$constants.SEGMENT.get(glad_glDeleteQueries$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEQUERIESPROC glad_glDeleteQueries
     * }
     */
    public static void glad_glDeleteQueries(MemorySegment varValue) {
        glad_glDeleteQueries$constants.SEGMENT.set(glad_glDeleteQueries$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDeleteQueries$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDeleteQueries").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEQUERIESPROC glad_debug_glDeleteQueries
     * }
     */
    public static AddressLayout glad_debug_glDeleteQueries$layout() {
        return glad_debug_glDeleteQueries$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEQUERIESPROC glad_debug_glDeleteQueries
     * }
     */
    public static MemorySegment glad_debug_glDeleteQueries$segment() {
        return glad_debug_glDeleteQueries$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEQUERIESPROC glad_debug_glDeleteQueries
     * }
     */
    public static MemorySegment glad_debug_glDeleteQueries() {
        return glad_debug_glDeleteQueries$constants.SEGMENT.get(glad_debug_glDeleteQueries$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEQUERIESPROC glad_debug_glDeleteQueries
     * }
     */
    public static void glad_debug_glDeleteQueries(MemorySegment varValue) {
        glad_debug_glDeleteQueries$constants.SEGMENT.set(glad_debug_glDeleteQueries$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDeleteQueriesARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDeleteQueriesARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEQUERIESARBPROC glad_glDeleteQueriesARB
     * }
     */
    public static AddressLayout glad_glDeleteQueriesARB$layout() {
        return glad_glDeleteQueriesARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEQUERIESARBPROC glad_glDeleteQueriesARB
     * }
     */
    public static MemorySegment glad_glDeleteQueriesARB$segment() {
        return glad_glDeleteQueriesARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEQUERIESARBPROC glad_glDeleteQueriesARB
     * }
     */
    public static MemorySegment glad_glDeleteQueriesARB() {
        return glad_glDeleteQueriesARB$constants.SEGMENT.get(glad_glDeleteQueriesARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEQUERIESARBPROC glad_glDeleteQueriesARB
     * }
     */
    public static void glad_glDeleteQueriesARB(MemorySegment varValue) {
        glad_glDeleteQueriesARB$constants.SEGMENT.set(glad_glDeleteQueriesARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDeleteQueriesARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDeleteQueriesARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEQUERIESARBPROC glad_debug_glDeleteQueriesARB
     * }
     */
    public static AddressLayout glad_debug_glDeleteQueriesARB$layout() {
        return glad_debug_glDeleteQueriesARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEQUERIESARBPROC glad_debug_glDeleteQueriesARB
     * }
     */
    public static MemorySegment glad_debug_glDeleteQueriesARB$segment() {
        return glad_debug_glDeleteQueriesARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEQUERIESARBPROC glad_debug_glDeleteQueriesARB
     * }
     */
    public static MemorySegment glad_debug_glDeleteQueriesARB() {
        return glad_debug_glDeleteQueriesARB$constants.SEGMENT.get(glad_debug_glDeleteQueriesARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEQUERIESARBPROC glad_debug_glDeleteQueriesARB
     * }
     */
    public static void glad_debug_glDeleteQueriesARB(MemorySegment varValue) {
        glad_debug_glDeleteQueriesARB$constants.SEGMENT.set(glad_debug_glDeleteQueriesARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDeleteRenderbuffers$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDeleteRenderbuffers").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETERENDERBUFFERSPROC glad_glDeleteRenderbuffers
     * }
     */
    public static AddressLayout glad_glDeleteRenderbuffers$layout() {
        return glad_glDeleteRenderbuffers$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETERENDERBUFFERSPROC glad_glDeleteRenderbuffers
     * }
     */
    public static MemorySegment glad_glDeleteRenderbuffers$segment() {
        return glad_glDeleteRenderbuffers$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETERENDERBUFFERSPROC glad_glDeleteRenderbuffers
     * }
     */
    public static MemorySegment glad_glDeleteRenderbuffers() {
        return glad_glDeleteRenderbuffers$constants.SEGMENT.get(glad_glDeleteRenderbuffers$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETERENDERBUFFERSPROC glad_glDeleteRenderbuffers
     * }
     */
    public static void glad_glDeleteRenderbuffers(MemorySegment varValue) {
        glad_glDeleteRenderbuffers$constants.SEGMENT.set(glad_glDeleteRenderbuffers$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDeleteRenderbuffers$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDeleteRenderbuffers").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETERENDERBUFFERSPROC glad_debug_glDeleteRenderbuffers
     * }
     */
    public static AddressLayout glad_debug_glDeleteRenderbuffers$layout() {
        return glad_debug_glDeleteRenderbuffers$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETERENDERBUFFERSPROC glad_debug_glDeleteRenderbuffers
     * }
     */
    public static MemorySegment glad_debug_glDeleteRenderbuffers$segment() {
        return glad_debug_glDeleteRenderbuffers$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETERENDERBUFFERSPROC glad_debug_glDeleteRenderbuffers
     * }
     */
    public static MemorySegment glad_debug_glDeleteRenderbuffers() {
        return glad_debug_glDeleteRenderbuffers$constants.SEGMENT.get(glad_debug_glDeleteRenderbuffers$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETERENDERBUFFERSPROC glad_debug_glDeleteRenderbuffers
     * }
     */
    public static void glad_debug_glDeleteRenderbuffers(MemorySegment varValue) {
        glad_debug_glDeleteRenderbuffers$constants.SEGMENT.set(glad_debug_glDeleteRenderbuffers$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDeleteRenderbuffersEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDeleteRenderbuffersEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETERENDERBUFFERSEXTPROC glad_glDeleteRenderbuffersEXT
     * }
     */
    public static AddressLayout glad_glDeleteRenderbuffersEXT$layout() {
        return glad_glDeleteRenderbuffersEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETERENDERBUFFERSEXTPROC glad_glDeleteRenderbuffersEXT
     * }
     */
    public static MemorySegment glad_glDeleteRenderbuffersEXT$segment() {
        return glad_glDeleteRenderbuffersEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETERENDERBUFFERSEXTPROC glad_glDeleteRenderbuffersEXT
     * }
     */
    public static MemorySegment glad_glDeleteRenderbuffersEXT() {
        return glad_glDeleteRenderbuffersEXT$constants.SEGMENT.get(glad_glDeleteRenderbuffersEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETERENDERBUFFERSEXTPROC glad_glDeleteRenderbuffersEXT
     * }
     */
    public static void glad_glDeleteRenderbuffersEXT(MemorySegment varValue) {
        glad_glDeleteRenderbuffersEXT$constants.SEGMENT.set(glad_glDeleteRenderbuffersEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDeleteRenderbuffersEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDeleteRenderbuffersEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETERENDERBUFFERSEXTPROC glad_debug_glDeleteRenderbuffersEXT
     * }
     */
    public static AddressLayout glad_debug_glDeleteRenderbuffersEXT$layout() {
        return glad_debug_glDeleteRenderbuffersEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETERENDERBUFFERSEXTPROC glad_debug_glDeleteRenderbuffersEXT
     * }
     */
    public static MemorySegment glad_debug_glDeleteRenderbuffersEXT$segment() {
        return glad_debug_glDeleteRenderbuffersEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETERENDERBUFFERSEXTPROC glad_debug_glDeleteRenderbuffersEXT
     * }
     */
    public static MemorySegment glad_debug_glDeleteRenderbuffersEXT() {
        return glad_debug_glDeleteRenderbuffersEXT$constants.SEGMENT.get(glad_debug_glDeleteRenderbuffersEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETERENDERBUFFERSEXTPROC glad_debug_glDeleteRenderbuffersEXT
     * }
     */
    public static void glad_debug_glDeleteRenderbuffersEXT(MemorySegment varValue) {
        glad_debug_glDeleteRenderbuffersEXT$constants.SEGMENT.set(glad_debug_glDeleteRenderbuffersEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDeleteSamplers$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDeleteSamplers").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETESAMPLERSPROC glad_glDeleteSamplers
     * }
     */
    public static AddressLayout glad_glDeleteSamplers$layout() {
        return glad_glDeleteSamplers$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETESAMPLERSPROC glad_glDeleteSamplers
     * }
     */
    public static MemorySegment glad_glDeleteSamplers$segment() {
        return glad_glDeleteSamplers$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETESAMPLERSPROC glad_glDeleteSamplers
     * }
     */
    public static MemorySegment glad_glDeleteSamplers() {
        return glad_glDeleteSamplers$constants.SEGMENT.get(glad_glDeleteSamplers$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETESAMPLERSPROC glad_glDeleteSamplers
     * }
     */
    public static void glad_glDeleteSamplers(MemorySegment varValue) {
        glad_glDeleteSamplers$constants.SEGMENT.set(glad_glDeleteSamplers$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDeleteSamplers$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDeleteSamplers").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETESAMPLERSPROC glad_debug_glDeleteSamplers
     * }
     */
    public static AddressLayout glad_debug_glDeleteSamplers$layout() {
        return glad_debug_glDeleteSamplers$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETESAMPLERSPROC glad_debug_glDeleteSamplers
     * }
     */
    public static MemorySegment glad_debug_glDeleteSamplers$segment() {
        return glad_debug_glDeleteSamplers$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETESAMPLERSPROC glad_debug_glDeleteSamplers
     * }
     */
    public static MemorySegment glad_debug_glDeleteSamplers() {
        return glad_debug_glDeleteSamplers$constants.SEGMENT.get(glad_debug_glDeleteSamplers$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETESAMPLERSPROC glad_debug_glDeleteSamplers
     * }
     */
    public static void glad_debug_glDeleteSamplers(MemorySegment varValue) {
        glad_debug_glDeleteSamplers$constants.SEGMENT.set(glad_debug_glDeleteSamplers$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDeleteShader$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDeleteShader").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETESHADERPROC glad_glDeleteShader
     * }
     */
    public static AddressLayout glad_glDeleteShader$layout() {
        return glad_glDeleteShader$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETESHADERPROC glad_glDeleteShader
     * }
     */
    public static MemorySegment glad_glDeleteShader$segment() {
        return glad_glDeleteShader$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETESHADERPROC glad_glDeleteShader
     * }
     */
    public static MemorySegment glad_glDeleteShader() {
        return glad_glDeleteShader$constants.SEGMENT.get(glad_glDeleteShader$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETESHADERPROC glad_glDeleteShader
     * }
     */
    public static void glad_glDeleteShader(MemorySegment varValue) {
        glad_glDeleteShader$constants.SEGMENT.set(glad_glDeleteShader$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDeleteShader$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDeleteShader").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETESHADERPROC glad_debug_glDeleteShader
     * }
     */
    public static AddressLayout glad_debug_glDeleteShader$layout() {
        return glad_debug_glDeleteShader$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETESHADERPROC glad_debug_glDeleteShader
     * }
     */
    public static MemorySegment glad_debug_glDeleteShader$segment() {
        return glad_debug_glDeleteShader$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETESHADERPROC glad_debug_glDeleteShader
     * }
     */
    public static MemorySegment glad_debug_glDeleteShader() {
        return glad_debug_glDeleteShader$constants.SEGMENT.get(glad_debug_glDeleteShader$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETESHADERPROC glad_debug_glDeleteShader
     * }
     */
    public static void glad_debug_glDeleteShader(MemorySegment varValue) {
        glad_debug_glDeleteShader$constants.SEGMENT.set(glad_debug_glDeleteShader$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDeleteSync$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDeleteSync").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETESYNCPROC glad_glDeleteSync
     * }
     */
    public static AddressLayout glad_glDeleteSync$layout() {
        return glad_glDeleteSync$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETESYNCPROC glad_glDeleteSync
     * }
     */
    public static MemorySegment glad_glDeleteSync$segment() {
        return glad_glDeleteSync$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETESYNCPROC glad_glDeleteSync
     * }
     */
    public static MemorySegment glad_glDeleteSync() {
        return glad_glDeleteSync$constants.SEGMENT.get(glad_glDeleteSync$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETESYNCPROC glad_glDeleteSync
     * }
     */
    public static void glad_glDeleteSync(MemorySegment varValue) {
        glad_glDeleteSync$constants.SEGMENT.set(glad_glDeleteSync$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDeleteSync$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDeleteSync").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETESYNCPROC glad_debug_glDeleteSync
     * }
     */
    public static AddressLayout glad_debug_glDeleteSync$layout() {
        return glad_debug_glDeleteSync$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETESYNCPROC glad_debug_glDeleteSync
     * }
     */
    public static MemorySegment glad_debug_glDeleteSync$segment() {
        return glad_debug_glDeleteSync$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETESYNCPROC glad_debug_glDeleteSync
     * }
     */
    public static MemorySegment glad_debug_glDeleteSync() {
        return glad_debug_glDeleteSync$constants.SEGMENT.get(glad_debug_glDeleteSync$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETESYNCPROC glad_debug_glDeleteSync
     * }
     */
    public static void glad_debug_glDeleteSync(MemorySegment varValue) {
        glad_debug_glDeleteSync$constants.SEGMENT.set(glad_debug_glDeleteSync$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDeleteTextures$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDeleteTextures").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETETEXTURESPROC glad_glDeleteTextures
     * }
     */
    public static AddressLayout glad_glDeleteTextures$layout() {
        return glad_glDeleteTextures$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETETEXTURESPROC glad_glDeleteTextures
     * }
     */
    public static MemorySegment glad_glDeleteTextures$segment() {
        return glad_glDeleteTextures$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETETEXTURESPROC glad_glDeleteTextures
     * }
     */
    public static MemorySegment glad_glDeleteTextures() {
        return glad_glDeleteTextures$constants.SEGMENT.get(glad_glDeleteTextures$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETETEXTURESPROC glad_glDeleteTextures
     * }
     */
    public static void glad_glDeleteTextures(MemorySegment varValue) {
        glad_glDeleteTextures$constants.SEGMENT.set(glad_glDeleteTextures$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDeleteTextures$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDeleteTextures").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETETEXTURESPROC glad_debug_glDeleteTextures
     * }
     */
    public static AddressLayout glad_debug_glDeleteTextures$layout() {
        return glad_debug_glDeleteTextures$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETETEXTURESPROC glad_debug_glDeleteTextures
     * }
     */
    public static MemorySegment glad_debug_glDeleteTextures$segment() {
        return glad_debug_glDeleteTextures$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETETEXTURESPROC glad_debug_glDeleteTextures
     * }
     */
    public static MemorySegment glad_debug_glDeleteTextures() {
        return glad_debug_glDeleteTextures$constants.SEGMENT.get(glad_debug_glDeleteTextures$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETETEXTURESPROC glad_debug_glDeleteTextures
     * }
     */
    public static void glad_debug_glDeleteTextures(MemorySegment varValue) {
        glad_debug_glDeleteTextures$constants.SEGMENT.set(glad_debug_glDeleteTextures$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDeleteTexturesEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDeleteTexturesEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETETEXTURESEXTPROC glad_glDeleteTexturesEXT
     * }
     */
    public static AddressLayout glad_glDeleteTexturesEXT$layout() {
        return glad_glDeleteTexturesEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETETEXTURESEXTPROC glad_glDeleteTexturesEXT
     * }
     */
    public static MemorySegment glad_glDeleteTexturesEXT$segment() {
        return glad_glDeleteTexturesEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETETEXTURESEXTPROC glad_glDeleteTexturesEXT
     * }
     */
    public static MemorySegment glad_glDeleteTexturesEXT() {
        return glad_glDeleteTexturesEXT$constants.SEGMENT.get(glad_glDeleteTexturesEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETETEXTURESEXTPROC glad_glDeleteTexturesEXT
     * }
     */
    public static void glad_glDeleteTexturesEXT(MemorySegment varValue) {
        glad_glDeleteTexturesEXT$constants.SEGMENT.set(glad_glDeleteTexturesEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDeleteTexturesEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDeleteTexturesEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETETEXTURESEXTPROC glad_debug_glDeleteTexturesEXT
     * }
     */
    public static AddressLayout glad_debug_glDeleteTexturesEXT$layout() {
        return glad_debug_glDeleteTexturesEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETETEXTURESEXTPROC glad_debug_glDeleteTexturesEXT
     * }
     */
    public static MemorySegment glad_debug_glDeleteTexturesEXT$segment() {
        return glad_debug_glDeleteTexturesEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETETEXTURESEXTPROC glad_debug_glDeleteTexturesEXT
     * }
     */
    public static MemorySegment glad_debug_glDeleteTexturesEXT() {
        return glad_debug_glDeleteTexturesEXT$constants.SEGMENT.get(glad_debug_glDeleteTexturesEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETETEXTURESEXTPROC glad_debug_glDeleteTexturesEXT
     * }
     */
    public static void glad_debug_glDeleteTexturesEXT(MemorySegment varValue) {
        glad_debug_glDeleteTexturesEXT$constants.SEGMENT.set(glad_debug_glDeleteTexturesEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDeleteTransformFeedbacks$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDeleteTransformFeedbacks").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETETRANSFORMFEEDBACKSPROC glad_glDeleteTransformFeedbacks
     * }
     */
    public static AddressLayout glad_glDeleteTransformFeedbacks$layout() {
        return glad_glDeleteTransformFeedbacks$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETETRANSFORMFEEDBACKSPROC glad_glDeleteTransformFeedbacks
     * }
     */
    public static MemorySegment glad_glDeleteTransformFeedbacks$segment() {
        return glad_glDeleteTransformFeedbacks$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETETRANSFORMFEEDBACKSPROC glad_glDeleteTransformFeedbacks
     * }
     */
    public static MemorySegment glad_glDeleteTransformFeedbacks() {
        return glad_glDeleteTransformFeedbacks$constants.SEGMENT.get(glad_glDeleteTransformFeedbacks$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETETRANSFORMFEEDBACKSPROC glad_glDeleteTransformFeedbacks
     * }
     */
    public static void glad_glDeleteTransformFeedbacks(MemorySegment varValue) {
        glad_glDeleteTransformFeedbacks$constants.SEGMENT.set(glad_glDeleteTransformFeedbacks$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDeleteTransformFeedbacks$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDeleteTransformFeedbacks").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETETRANSFORMFEEDBACKSPROC glad_debug_glDeleteTransformFeedbacks
     * }
     */
    public static AddressLayout glad_debug_glDeleteTransformFeedbacks$layout() {
        return glad_debug_glDeleteTransformFeedbacks$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETETRANSFORMFEEDBACKSPROC glad_debug_glDeleteTransformFeedbacks
     * }
     */
    public static MemorySegment glad_debug_glDeleteTransformFeedbacks$segment() {
        return glad_debug_glDeleteTransformFeedbacks$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETETRANSFORMFEEDBACKSPROC glad_debug_glDeleteTransformFeedbacks
     * }
     */
    public static MemorySegment glad_debug_glDeleteTransformFeedbacks() {
        return glad_debug_glDeleteTransformFeedbacks$constants.SEGMENT.get(glad_debug_glDeleteTransformFeedbacks$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETETRANSFORMFEEDBACKSPROC glad_debug_glDeleteTransformFeedbacks
     * }
     */
    public static void glad_debug_glDeleteTransformFeedbacks(MemorySegment varValue) {
        glad_debug_glDeleteTransformFeedbacks$constants.SEGMENT.set(glad_debug_glDeleteTransformFeedbacks$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDeleteTransformFeedbacksNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDeleteTransformFeedbacksNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETETRANSFORMFEEDBACKSNVPROC glad_glDeleteTransformFeedbacksNV
     * }
     */
    public static AddressLayout glad_glDeleteTransformFeedbacksNV$layout() {
        return glad_glDeleteTransformFeedbacksNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETETRANSFORMFEEDBACKSNVPROC glad_glDeleteTransformFeedbacksNV
     * }
     */
    public static MemorySegment glad_glDeleteTransformFeedbacksNV$segment() {
        return glad_glDeleteTransformFeedbacksNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETETRANSFORMFEEDBACKSNVPROC glad_glDeleteTransformFeedbacksNV
     * }
     */
    public static MemorySegment glad_glDeleteTransformFeedbacksNV() {
        return glad_glDeleteTransformFeedbacksNV$constants.SEGMENT.get(glad_glDeleteTransformFeedbacksNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETETRANSFORMFEEDBACKSNVPROC glad_glDeleteTransformFeedbacksNV
     * }
     */
    public static void glad_glDeleteTransformFeedbacksNV(MemorySegment varValue) {
        glad_glDeleteTransformFeedbacksNV$constants.SEGMENT.set(glad_glDeleteTransformFeedbacksNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDeleteTransformFeedbacksNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDeleteTransformFeedbacksNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETETRANSFORMFEEDBACKSNVPROC glad_debug_glDeleteTransformFeedbacksNV
     * }
     */
    public static AddressLayout glad_debug_glDeleteTransformFeedbacksNV$layout() {
        return glad_debug_glDeleteTransformFeedbacksNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETETRANSFORMFEEDBACKSNVPROC glad_debug_glDeleteTransformFeedbacksNV
     * }
     */
    public static MemorySegment glad_debug_glDeleteTransformFeedbacksNV$segment() {
        return glad_debug_glDeleteTransformFeedbacksNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETETRANSFORMFEEDBACKSNVPROC glad_debug_glDeleteTransformFeedbacksNV
     * }
     */
    public static MemorySegment glad_debug_glDeleteTransformFeedbacksNV() {
        return glad_debug_glDeleteTransformFeedbacksNV$constants.SEGMENT.get(glad_debug_glDeleteTransformFeedbacksNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETETRANSFORMFEEDBACKSNVPROC glad_debug_glDeleteTransformFeedbacksNV
     * }
     */
    public static void glad_debug_glDeleteTransformFeedbacksNV(MemorySegment varValue) {
        glad_debug_glDeleteTransformFeedbacksNV$constants.SEGMENT.set(glad_debug_glDeleteTransformFeedbacksNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDeleteVertexArrays$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDeleteVertexArrays").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEVERTEXARRAYSPROC glad_glDeleteVertexArrays
     * }
     */
    public static AddressLayout glad_glDeleteVertexArrays$layout() {
        return glad_glDeleteVertexArrays$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEVERTEXARRAYSPROC glad_glDeleteVertexArrays
     * }
     */
    public static MemorySegment glad_glDeleteVertexArrays$segment() {
        return glad_glDeleteVertexArrays$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEVERTEXARRAYSPROC glad_glDeleteVertexArrays
     * }
     */
    public static MemorySegment glad_glDeleteVertexArrays() {
        return glad_glDeleteVertexArrays$constants.SEGMENT.get(glad_glDeleteVertexArrays$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEVERTEXARRAYSPROC glad_glDeleteVertexArrays
     * }
     */
    public static void glad_glDeleteVertexArrays(MemorySegment varValue) {
        glad_glDeleteVertexArrays$constants.SEGMENT.set(glad_glDeleteVertexArrays$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDeleteVertexArrays$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDeleteVertexArrays").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEVERTEXARRAYSPROC glad_debug_glDeleteVertexArrays
     * }
     */
    public static AddressLayout glad_debug_glDeleteVertexArrays$layout() {
        return glad_debug_glDeleteVertexArrays$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEVERTEXARRAYSPROC glad_debug_glDeleteVertexArrays
     * }
     */
    public static MemorySegment glad_debug_glDeleteVertexArrays$segment() {
        return glad_debug_glDeleteVertexArrays$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEVERTEXARRAYSPROC glad_debug_glDeleteVertexArrays
     * }
     */
    public static MemorySegment glad_debug_glDeleteVertexArrays() {
        return glad_debug_glDeleteVertexArrays$constants.SEGMENT.get(glad_debug_glDeleteVertexArrays$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEVERTEXARRAYSPROC glad_debug_glDeleteVertexArrays
     * }
     */
    public static void glad_debug_glDeleteVertexArrays(MemorySegment varValue) {
        glad_debug_glDeleteVertexArrays$constants.SEGMENT.set(glad_debug_glDeleteVertexArrays$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDeleteVertexArraysAPPLE$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDeleteVertexArraysAPPLE").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEVERTEXARRAYSAPPLEPROC glad_glDeleteVertexArraysAPPLE
     * }
     */
    public static AddressLayout glad_glDeleteVertexArraysAPPLE$layout() {
        return glad_glDeleteVertexArraysAPPLE$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEVERTEXARRAYSAPPLEPROC glad_glDeleteVertexArraysAPPLE
     * }
     */
    public static MemorySegment glad_glDeleteVertexArraysAPPLE$segment() {
        return glad_glDeleteVertexArraysAPPLE$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEVERTEXARRAYSAPPLEPROC glad_glDeleteVertexArraysAPPLE
     * }
     */
    public static MemorySegment glad_glDeleteVertexArraysAPPLE() {
        return glad_glDeleteVertexArraysAPPLE$constants.SEGMENT.get(glad_glDeleteVertexArraysAPPLE$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEVERTEXARRAYSAPPLEPROC glad_glDeleteVertexArraysAPPLE
     * }
     */
    public static void glad_glDeleteVertexArraysAPPLE(MemorySegment varValue) {
        glad_glDeleteVertexArraysAPPLE$constants.SEGMENT.set(glad_glDeleteVertexArraysAPPLE$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDeleteVertexArraysAPPLE$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDeleteVertexArraysAPPLE").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEVERTEXARRAYSAPPLEPROC glad_debug_glDeleteVertexArraysAPPLE
     * }
     */
    public static AddressLayout glad_debug_glDeleteVertexArraysAPPLE$layout() {
        return glad_debug_glDeleteVertexArraysAPPLE$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEVERTEXARRAYSAPPLEPROC glad_debug_glDeleteVertexArraysAPPLE
     * }
     */
    public static MemorySegment glad_debug_glDeleteVertexArraysAPPLE$segment() {
        return glad_debug_glDeleteVertexArraysAPPLE$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEVERTEXARRAYSAPPLEPROC glad_debug_glDeleteVertexArraysAPPLE
     * }
     */
    public static MemorySegment glad_debug_glDeleteVertexArraysAPPLE() {
        return glad_debug_glDeleteVertexArraysAPPLE$constants.SEGMENT.get(glad_debug_glDeleteVertexArraysAPPLE$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDELETEVERTEXARRAYSAPPLEPROC glad_debug_glDeleteVertexArraysAPPLE
     * }
     */
    public static void glad_debug_glDeleteVertexArraysAPPLE(MemorySegment varValue) {
        glad_debug_glDeleteVertexArraysAPPLE$constants.SEGMENT.set(glad_debug_glDeleteVertexArraysAPPLE$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDepthFunc$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDepthFunc").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHFUNCPROC glad_glDepthFunc
     * }
     */
    public static AddressLayout glad_glDepthFunc$layout() {
        return glad_glDepthFunc$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHFUNCPROC glad_glDepthFunc
     * }
     */
    public static MemorySegment glad_glDepthFunc$segment() {
        return glad_glDepthFunc$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHFUNCPROC glad_glDepthFunc
     * }
     */
    public static MemorySegment glad_glDepthFunc() {
        return glad_glDepthFunc$constants.SEGMENT.get(glad_glDepthFunc$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHFUNCPROC glad_glDepthFunc
     * }
     */
    public static void glad_glDepthFunc(MemorySegment varValue) {
        glad_glDepthFunc$constants.SEGMENT.set(glad_glDepthFunc$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDepthFunc$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDepthFunc").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHFUNCPROC glad_debug_glDepthFunc
     * }
     */
    public static AddressLayout glad_debug_glDepthFunc$layout() {
        return glad_debug_glDepthFunc$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHFUNCPROC glad_debug_glDepthFunc
     * }
     */
    public static MemorySegment glad_debug_glDepthFunc$segment() {
        return glad_debug_glDepthFunc$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHFUNCPROC glad_debug_glDepthFunc
     * }
     */
    public static MemorySegment glad_debug_glDepthFunc() {
        return glad_debug_glDepthFunc$constants.SEGMENT.get(glad_debug_glDepthFunc$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHFUNCPROC glad_debug_glDepthFunc
     * }
     */
    public static void glad_debug_glDepthFunc(MemorySegment varValue) {
        glad_debug_glDepthFunc$constants.SEGMENT.set(glad_debug_glDepthFunc$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDepthMask$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDepthMask").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHMASKPROC glad_glDepthMask
     * }
     */
    public static AddressLayout glad_glDepthMask$layout() {
        return glad_glDepthMask$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHMASKPROC glad_glDepthMask
     * }
     */
    public static MemorySegment glad_glDepthMask$segment() {
        return glad_glDepthMask$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHMASKPROC glad_glDepthMask
     * }
     */
    public static MemorySegment glad_glDepthMask() {
        return glad_glDepthMask$constants.SEGMENT.get(glad_glDepthMask$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHMASKPROC glad_glDepthMask
     * }
     */
    public static void glad_glDepthMask(MemorySegment varValue) {
        glad_glDepthMask$constants.SEGMENT.set(glad_glDepthMask$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDepthMask$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDepthMask").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHMASKPROC glad_debug_glDepthMask
     * }
     */
    public static AddressLayout glad_debug_glDepthMask$layout() {
        return glad_debug_glDepthMask$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHMASKPROC glad_debug_glDepthMask
     * }
     */
    public static MemorySegment glad_debug_glDepthMask$segment() {
        return glad_debug_glDepthMask$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHMASKPROC glad_debug_glDepthMask
     * }
     */
    public static MemorySegment glad_debug_glDepthMask() {
        return glad_debug_glDepthMask$constants.SEGMENT.get(glad_debug_glDepthMask$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHMASKPROC glad_debug_glDepthMask
     * }
     */
    public static void glad_debug_glDepthMask(MemorySegment varValue) {
        glad_debug_glDepthMask$constants.SEGMENT.set(glad_debug_glDepthMask$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDepthRange$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDepthRange").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEPROC glad_glDepthRange
     * }
     */
    public static AddressLayout glad_glDepthRange$layout() {
        return glad_glDepthRange$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEPROC glad_glDepthRange
     * }
     */
    public static MemorySegment glad_glDepthRange$segment() {
        return glad_glDepthRange$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEPROC glad_glDepthRange
     * }
     */
    public static MemorySegment glad_glDepthRange() {
        return glad_glDepthRange$constants.SEGMENT.get(glad_glDepthRange$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEPROC glad_glDepthRange
     * }
     */
    public static void glad_glDepthRange(MemorySegment varValue) {
        glad_glDepthRange$constants.SEGMENT.set(glad_glDepthRange$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDepthRange$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDepthRange").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEPROC glad_debug_glDepthRange
     * }
     */
    public static AddressLayout glad_debug_glDepthRange$layout() {
        return glad_debug_glDepthRange$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEPROC glad_debug_glDepthRange
     * }
     */
    public static MemorySegment glad_debug_glDepthRange$segment() {
        return glad_debug_glDepthRange$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEPROC glad_debug_glDepthRange
     * }
     */
    public static MemorySegment glad_debug_glDepthRange() {
        return glad_debug_glDepthRange$constants.SEGMENT.get(glad_debug_glDepthRange$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEPROC glad_debug_glDepthRange
     * }
     */
    public static void glad_debug_glDepthRange(MemorySegment varValue) {
        glad_debug_glDepthRange$constants.SEGMENT.set(glad_debug_glDepthRange$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDepthRangeArraydvNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDepthRangeArraydvNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEARRAYDVNVPROC glad_glDepthRangeArraydvNV
     * }
     */
    public static AddressLayout glad_glDepthRangeArraydvNV$layout() {
        return glad_glDepthRangeArraydvNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEARRAYDVNVPROC glad_glDepthRangeArraydvNV
     * }
     */
    public static MemorySegment glad_glDepthRangeArraydvNV$segment() {
        return glad_glDepthRangeArraydvNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEARRAYDVNVPROC glad_glDepthRangeArraydvNV
     * }
     */
    public static MemorySegment glad_glDepthRangeArraydvNV() {
        return glad_glDepthRangeArraydvNV$constants.SEGMENT.get(glad_glDepthRangeArraydvNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEARRAYDVNVPROC glad_glDepthRangeArraydvNV
     * }
     */
    public static void glad_glDepthRangeArraydvNV(MemorySegment varValue) {
        glad_glDepthRangeArraydvNV$constants.SEGMENT.set(glad_glDepthRangeArraydvNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDepthRangeArraydvNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDepthRangeArraydvNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEARRAYDVNVPROC glad_debug_glDepthRangeArraydvNV
     * }
     */
    public static AddressLayout glad_debug_glDepthRangeArraydvNV$layout() {
        return glad_debug_glDepthRangeArraydvNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEARRAYDVNVPROC glad_debug_glDepthRangeArraydvNV
     * }
     */
    public static MemorySegment glad_debug_glDepthRangeArraydvNV$segment() {
        return glad_debug_glDepthRangeArraydvNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEARRAYDVNVPROC glad_debug_glDepthRangeArraydvNV
     * }
     */
    public static MemorySegment glad_debug_glDepthRangeArraydvNV() {
        return glad_debug_glDepthRangeArraydvNV$constants.SEGMENT.get(glad_debug_glDepthRangeArraydvNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEARRAYDVNVPROC glad_debug_glDepthRangeArraydvNV
     * }
     */
    public static void glad_debug_glDepthRangeArraydvNV(MemorySegment varValue) {
        glad_debug_glDepthRangeArraydvNV$constants.SEGMENT.set(glad_debug_glDepthRangeArraydvNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDepthRangeArrayv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDepthRangeArrayv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEARRAYVPROC glad_glDepthRangeArrayv
     * }
     */
    public static AddressLayout glad_glDepthRangeArrayv$layout() {
        return glad_glDepthRangeArrayv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEARRAYVPROC glad_glDepthRangeArrayv
     * }
     */
    public static MemorySegment glad_glDepthRangeArrayv$segment() {
        return glad_glDepthRangeArrayv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEARRAYVPROC glad_glDepthRangeArrayv
     * }
     */
    public static MemorySegment glad_glDepthRangeArrayv() {
        return glad_glDepthRangeArrayv$constants.SEGMENT.get(glad_glDepthRangeArrayv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEARRAYVPROC glad_glDepthRangeArrayv
     * }
     */
    public static void glad_glDepthRangeArrayv(MemorySegment varValue) {
        glad_glDepthRangeArrayv$constants.SEGMENT.set(glad_glDepthRangeArrayv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDepthRangeArrayv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDepthRangeArrayv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEARRAYVPROC glad_debug_glDepthRangeArrayv
     * }
     */
    public static AddressLayout glad_debug_glDepthRangeArrayv$layout() {
        return glad_debug_glDepthRangeArrayv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEARRAYVPROC glad_debug_glDepthRangeArrayv
     * }
     */
    public static MemorySegment glad_debug_glDepthRangeArrayv$segment() {
        return glad_debug_glDepthRangeArrayv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEARRAYVPROC glad_debug_glDepthRangeArrayv
     * }
     */
    public static MemorySegment glad_debug_glDepthRangeArrayv() {
        return glad_debug_glDepthRangeArrayv$constants.SEGMENT.get(glad_debug_glDepthRangeArrayv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEARRAYVPROC glad_debug_glDepthRangeArrayv
     * }
     */
    public static void glad_debug_glDepthRangeArrayv(MemorySegment varValue) {
        glad_debug_glDepthRangeArrayv$constants.SEGMENT.set(glad_debug_glDepthRangeArrayv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDepthRangeIndexed$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDepthRangeIndexed").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEINDEXEDPROC glad_glDepthRangeIndexed
     * }
     */
    public static AddressLayout glad_glDepthRangeIndexed$layout() {
        return glad_glDepthRangeIndexed$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEINDEXEDPROC glad_glDepthRangeIndexed
     * }
     */
    public static MemorySegment glad_glDepthRangeIndexed$segment() {
        return glad_glDepthRangeIndexed$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEINDEXEDPROC glad_glDepthRangeIndexed
     * }
     */
    public static MemorySegment glad_glDepthRangeIndexed() {
        return glad_glDepthRangeIndexed$constants.SEGMENT.get(glad_glDepthRangeIndexed$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEINDEXEDPROC glad_glDepthRangeIndexed
     * }
     */
    public static void glad_glDepthRangeIndexed(MemorySegment varValue) {
        glad_glDepthRangeIndexed$constants.SEGMENT.set(glad_glDepthRangeIndexed$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDepthRangeIndexed$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDepthRangeIndexed").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEINDEXEDPROC glad_debug_glDepthRangeIndexed
     * }
     */
    public static AddressLayout glad_debug_glDepthRangeIndexed$layout() {
        return glad_debug_glDepthRangeIndexed$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEINDEXEDPROC glad_debug_glDepthRangeIndexed
     * }
     */
    public static MemorySegment glad_debug_glDepthRangeIndexed$segment() {
        return glad_debug_glDepthRangeIndexed$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEINDEXEDPROC glad_debug_glDepthRangeIndexed
     * }
     */
    public static MemorySegment glad_debug_glDepthRangeIndexed() {
        return glad_debug_glDepthRangeIndexed$constants.SEGMENT.get(glad_debug_glDepthRangeIndexed$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEINDEXEDPROC glad_debug_glDepthRangeIndexed
     * }
     */
    public static void glad_debug_glDepthRangeIndexed(MemorySegment varValue) {
        glad_debug_glDepthRangeIndexed$constants.SEGMENT.set(glad_debug_glDepthRangeIndexed$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDepthRangeIndexeddNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDepthRangeIndexeddNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEINDEXEDDNVPROC glad_glDepthRangeIndexeddNV
     * }
     */
    public static AddressLayout glad_glDepthRangeIndexeddNV$layout() {
        return glad_glDepthRangeIndexeddNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEINDEXEDDNVPROC glad_glDepthRangeIndexeddNV
     * }
     */
    public static MemorySegment glad_glDepthRangeIndexeddNV$segment() {
        return glad_glDepthRangeIndexeddNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEINDEXEDDNVPROC glad_glDepthRangeIndexeddNV
     * }
     */
    public static MemorySegment glad_glDepthRangeIndexeddNV() {
        return glad_glDepthRangeIndexeddNV$constants.SEGMENT.get(glad_glDepthRangeIndexeddNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEINDEXEDDNVPROC glad_glDepthRangeIndexeddNV
     * }
     */
    public static void glad_glDepthRangeIndexeddNV(MemorySegment varValue) {
        glad_glDepthRangeIndexeddNV$constants.SEGMENT.set(glad_glDepthRangeIndexeddNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDepthRangeIndexeddNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDepthRangeIndexeddNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEINDEXEDDNVPROC glad_debug_glDepthRangeIndexeddNV
     * }
     */
    public static AddressLayout glad_debug_glDepthRangeIndexeddNV$layout() {
        return glad_debug_glDepthRangeIndexeddNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEINDEXEDDNVPROC glad_debug_glDepthRangeIndexeddNV
     * }
     */
    public static MemorySegment glad_debug_glDepthRangeIndexeddNV$segment() {
        return glad_debug_glDepthRangeIndexeddNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEINDEXEDDNVPROC glad_debug_glDepthRangeIndexeddNV
     * }
     */
    public static MemorySegment glad_debug_glDepthRangeIndexeddNV() {
        return glad_debug_glDepthRangeIndexeddNV$constants.SEGMENT.get(glad_debug_glDepthRangeIndexeddNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEINDEXEDDNVPROC glad_debug_glDepthRangeIndexeddNV
     * }
     */
    public static void glad_debug_glDepthRangeIndexeddNV(MemorySegment varValue) {
        glad_debug_glDepthRangeIndexeddNV$constants.SEGMENT.set(glad_debug_glDepthRangeIndexeddNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDepthRangef$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDepthRangef").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEFPROC glad_glDepthRangef
     * }
     */
    public static AddressLayout glad_glDepthRangef$layout() {
        return glad_glDepthRangef$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEFPROC glad_glDepthRangef
     * }
     */
    public static MemorySegment glad_glDepthRangef$segment() {
        return glad_glDepthRangef$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEFPROC glad_glDepthRangef
     * }
     */
    public static MemorySegment glad_glDepthRangef() {
        return glad_glDepthRangef$constants.SEGMENT.get(glad_glDepthRangef$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEFPROC glad_glDepthRangef
     * }
     */
    public static void glad_glDepthRangef(MemorySegment varValue) {
        glad_glDepthRangef$constants.SEGMENT.set(glad_glDepthRangef$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDepthRangef$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDepthRangef").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEFPROC glad_debug_glDepthRangef
     * }
     */
    public static AddressLayout glad_debug_glDepthRangef$layout() {
        return glad_debug_glDepthRangef$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEFPROC glad_debug_glDepthRangef
     * }
     */
    public static MemorySegment glad_debug_glDepthRangef$segment() {
        return glad_debug_glDepthRangef$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEFPROC glad_debug_glDepthRangef
     * }
     */
    public static MemorySegment glad_debug_glDepthRangef() {
        return glad_debug_glDepthRangef$constants.SEGMENT.get(glad_debug_glDepthRangef$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEFPROC glad_debug_glDepthRangef
     * }
     */
    public static void glad_debug_glDepthRangef(MemorySegment varValue) {
        glad_debug_glDepthRangef$constants.SEGMENT.set(glad_debug_glDepthRangef$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDepthRangefOES$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDepthRangefOES").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEFOESPROC glad_glDepthRangefOES
     * }
     */
    public static AddressLayout glad_glDepthRangefOES$layout() {
        return glad_glDepthRangefOES$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEFOESPROC glad_glDepthRangefOES
     * }
     */
    public static MemorySegment glad_glDepthRangefOES$segment() {
        return glad_glDepthRangefOES$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEFOESPROC glad_glDepthRangefOES
     * }
     */
    public static MemorySegment glad_glDepthRangefOES() {
        return glad_glDepthRangefOES$constants.SEGMENT.get(glad_glDepthRangefOES$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEFOESPROC glad_glDepthRangefOES
     * }
     */
    public static void glad_glDepthRangefOES(MemorySegment varValue) {
        glad_glDepthRangefOES$constants.SEGMENT.set(glad_glDepthRangefOES$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDepthRangefOES$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDepthRangefOES").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEFOESPROC glad_debug_glDepthRangefOES
     * }
     */
    public static AddressLayout glad_debug_glDepthRangefOES$layout() {
        return glad_debug_glDepthRangefOES$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEFOESPROC glad_debug_glDepthRangefOES
     * }
     */
    public static MemorySegment glad_debug_glDepthRangefOES$segment() {
        return glad_debug_glDepthRangefOES$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEFOESPROC glad_debug_glDepthRangefOES
     * }
     */
    public static MemorySegment glad_debug_glDepthRangefOES() {
        return glad_debug_glDepthRangefOES$constants.SEGMENT.get(glad_debug_glDepthRangefOES$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDEPTHRANGEFOESPROC glad_debug_glDepthRangefOES
     * }
     */
    public static void glad_debug_glDepthRangefOES(MemorySegment varValue) {
        glad_debug_glDepthRangefOES$constants.SEGMENT.set(glad_debug_glDepthRangefOES$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDetachObjectARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDetachObjectARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDETACHOBJECTARBPROC glad_glDetachObjectARB
     * }
     */
    public static AddressLayout glad_glDetachObjectARB$layout() {
        return glad_glDetachObjectARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDETACHOBJECTARBPROC glad_glDetachObjectARB
     * }
     */
    public static MemorySegment glad_glDetachObjectARB$segment() {
        return glad_glDetachObjectARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDETACHOBJECTARBPROC glad_glDetachObjectARB
     * }
     */
    public static MemorySegment glad_glDetachObjectARB() {
        return glad_glDetachObjectARB$constants.SEGMENT.get(glad_glDetachObjectARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDETACHOBJECTARBPROC glad_glDetachObjectARB
     * }
     */
    public static void glad_glDetachObjectARB(MemorySegment varValue) {
        glad_glDetachObjectARB$constants.SEGMENT.set(glad_glDetachObjectARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDetachObjectARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDetachObjectARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDETACHOBJECTARBPROC glad_debug_glDetachObjectARB
     * }
     */
    public static AddressLayout glad_debug_glDetachObjectARB$layout() {
        return glad_debug_glDetachObjectARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDETACHOBJECTARBPROC glad_debug_glDetachObjectARB
     * }
     */
    public static MemorySegment glad_debug_glDetachObjectARB$segment() {
        return glad_debug_glDetachObjectARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDETACHOBJECTARBPROC glad_debug_glDetachObjectARB
     * }
     */
    public static MemorySegment glad_debug_glDetachObjectARB() {
        return glad_debug_glDetachObjectARB$constants.SEGMENT.get(glad_debug_glDetachObjectARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDETACHOBJECTARBPROC glad_debug_glDetachObjectARB
     * }
     */
    public static void glad_debug_glDetachObjectARB(MemorySegment varValue) {
        glad_debug_glDetachObjectARB$constants.SEGMENT.set(glad_debug_glDetachObjectARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDetachShader$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDetachShader").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDETACHSHADERPROC glad_glDetachShader
     * }
     */
    public static AddressLayout glad_glDetachShader$layout() {
        return glad_glDetachShader$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDETACHSHADERPROC glad_glDetachShader
     * }
     */
    public static MemorySegment glad_glDetachShader$segment() {
        return glad_glDetachShader$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDETACHSHADERPROC glad_glDetachShader
     * }
     */
    public static MemorySegment glad_glDetachShader() {
        return glad_glDetachShader$constants.SEGMENT.get(glad_glDetachShader$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDETACHSHADERPROC glad_glDetachShader
     * }
     */
    public static void glad_glDetachShader(MemorySegment varValue) {
        glad_glDetachShader$constants.SEGMENT.set(glad_glDetachShader$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDetachShader$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDetachShader").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDETACHSHADERPROC glad_debug_glDetachShader
     * }
     */
    public static AddressLayout glad_debug_glDetachShader$layout() {
        return glad_debug_glDetachShader$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDETACHSHADERPROC glad_debug_glDetachShader
     * }
     */
    public static MemorySegment glad_debug_glDetachShader$segment() {
        return glad_debug_glDetachShader$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDETACHSHADERPROC glad_debug_glDetachShader
     * }
     */
    public static MemorySegment glad_debug_glDetachShader() {
        return glad_debug_glDetachShader$constants.SEGMENT.get(glad_debug_glDetachShader$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDETACHSHADERPROC glad_debug_glDetachShader
     * }
     */
    public static void glad_debug_glDetachShader(MemorySegment varValue) {
        glad_debug_glDetachShader$constants.SEGMENT.set(glad_debug_glDetachShader$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDisable$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDisable").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEPROC glad_glDisable
     * }
     */
    public static AddressLayout glad_glDisable$layout() {
        return glad_glDisable$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEPROC glad_glDisable
     * }
     */
    public static MemorySegment glad_glDisable$segment() {
        return glad_glDisable$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEPROC glad_glDisable
     * }
     */
    public static MemorySegment glad_glDisable() {
        return glad_glDisable$constants.SEGMENT.get(glad_glDisable$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEPROC glad_glDisable
     * }
     */
    public static void glad_glDisable(MemorySegment varValue) {
        glad_glDisable$constants.SEGMENT.set(glad_glDisable$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDisable$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDisable").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEPROC glad_debug_glDisable
     * }
     */
    public static AddressLayout glad_debug_glDisable$layout() {
        return glad_debug_glDisable$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEPROC glad_debug_glDisable
     * }
     */
    public static MemorySegment glad_debug_glDisable$segment() {
        return glad_debug_glDisable$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEPROC glad_debug_glDisable
     * }
     */
    public static MemorySegment glad_debug_glDisable() {
        return glad_debug_glDisable$constants.SEGMENT.get(glad_debug_glDisable$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEPROC glad_debug_glDisable
     * }
     */
    public static void glad_debug_glDisable(MemorySegment varValue) {
        glad_debug_glDisable$constants.SEGMENT.set(glad_debug_glDisable$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDisableClientState$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDisableClientState").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLECLIENTSTATEPROC glad_glDisableClientState
     * }
     */
    public static AddressLayout glad_glDisableClientState$layout() {
        return glad_glDisableClientState$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLECLIENTSTATEPROC glad_glDisableClientState
     * }
     */
    public static MemorySegment glad_glDisableClientState$segment() {
        return glad_glDisableClientState$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLECLIENTSTATEPROC glad_glDisableClientState
     * }
     */
    public static MemorySegment glad_glDisableClientState() {
        return glad_glDisableClientState$constants.SEGMENT.get(glad_glDisableClientState$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLECLIENTSTATEPROC glad_glDisableClientState
     * }
     */
    public static void glad_glDisableClientState(MemorySegment varValue) {
        glad_glDisableClientState$constants.SEGMENT.set(glad_glDisableClientState$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDisableClientState$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDisableClientState").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLECLIENTSTATEPROC glad_debug_glDisableClientState
     * }
     */
    public static AddressLayout glad_debug_glDisableClientState$layout() {
        return glad_debug_glDisableClientState$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLECLIENTSTATEPROC glad_debug_glDisableClientState
     * }
     */
    public static MemorySegment glad_debug_glDisableClientState$segment() {
        return glad_debug_glDisableClientState$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLECLIENTSTATEPROC glad_debug_glDisableClientState
     * }
     */
    public static MemorySegment glad_debug_glDisableClientState() {
        return glad_debug_glDisableClientState$constants.SEGMENT.get(glad_debug_glDisableClientState$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLECLIENTSTATEPROC glad_debug_glDisableClientState
     * }
     */
    public static void glad_debug_glDisableClientState(MemorySegment varValue) {
        glad_debug_glDisableClientState$constants.SEGMENT.set(glad_debug_glDisableClientState$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDisableClientStateIndexedEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDisableClientStateIndexedEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC glad_glDisableClientStateIndexedEXT
     * }
     */
    public static AddressLayout glad_glDisableClientStateIndexedEXT$layout() {
        return glad_glDisableClientStateIndexedEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC glad_glDisableClientStateIndexedEXT
     * }
     */
    public static MemorySegment glad_glDisableClientStateIndexedEXT$segment() {
        return glad_glDisableClientStateIndexedEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC glad_glDisableClientStateIndexedEXT
     * }
     */
    public static MemorySegment glad_glDisableClientStateIndexedEXT() {
        return glad_glDisableClientStateIndexedEXT$constants.SEGMENT.get(glad_glDisableClientStateIndexedEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC glad_glDisableClientStateIndexedEXT
     * }
     */
    public static void glad_glDisableClientStateIndexedEXT(MemorySegment varValue) {
        glad_glDisableClientStateIndexedEXT$constants.SEGMENT.set(glad_glDisableClientStateIndexedEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDisableClientStateIndexedEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDisableClientStateIndexedEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC glad_debug_glDisableClientStateIndexedEXT
     * }
     */
    public static AddressLayout glad_debug_glDisableClientStateIndexedEXT$layout() {
        return glad_debug_glDisableClientStateIndexedEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC glad_debug_glDisableClientStateIndexedEXT
     * }
     */
    public static MemorySegment glad_debug_glDisableClientStateIndexedEXT$segment() {
        return glad_debug_glDisableClientStateIndexedEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC glad_debug_glDisableClientStateIndexedEXT
     * }
     */
    public static MemorySegment glad_debug_glDisableClientStateIndexedEXT() {
        return glad_debug_glDisableClientStateIndexedEXT$constants.SEGMENT.get(glad_debug_glDisableClientStateIndexedEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC glad_debug_glDisableClientStateIndexedEXT
     * }
     */
    public static void glad_debug_glDisableClientStateIndexedEXT(MemorySegment varValue) {
        glad_debug_glDisableClientStateIndexedEXT$constants.SEGMENT.set(glad_debug_glDisableClientStateIndexedEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDisableClientStateiEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDisableClientStateiEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLECLIENTSTATEIEXTPROC glad_glDisableClientStateiEXT
     * }
     */
    public static AddressLayout glad_glDisableClientStateiEXT$layout() {
        return glad_glDisableClientStateiEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLECLIENTSTATEIEXTPROC glad_glDisableClientStateiEXT
     * }
     */
    public static MemorySegment glad_glDisableClientStateiEXT$segment() {
        return glad_glDisableClientStateiEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLECLIENTSTATEIEXTPROC glad_glDisableClientStateiEXT
     * }
     */
    public static MemorySegment glad_glDisableClientStateiEXT() {
        return glad_glDisableClientStateiEXT$constants.SEGMENT.get(glad_glDisableClientStateiEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLECLIENTSTATEIEXTPROC glad_glDisableClientStateiEXT
     * }
     */
    public static void glad_glDisableClientStateiEXT(MemorySegment varValue) {
        glad_glDisableClientStateiEXT$constants.SEGMENT.set(glad_glDisableClientStateiEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDisableClientStateiEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDisableClientStateiEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLECLIENTSTATEIEXTPROC glad_debug_glDisableClientStateiEXT
     * }
     */
    public static AddressLayout glad_debug_glDisableClientStateiEXT$layout() {
        return glad_debug_glDisableClientStateiEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLECLIENTSTATEIEXTPROC glad_debug_glDisableClientStateiEXT
     * }
     */
    public static MemorySegment glad_debug_glDisableClientStateiEXT$segment() {
        return glad_debug_glDisableClientStateiEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLECLIENTSTATEIEXTPROC glad_debug_glDisableClientStateiEXT
     * }
     */
    public static MemorySegment glad_debug_glDisableClientStateiEXT() {
        return glad_debug_glDisableClientStateiEXT$constants.SEGMENT.get(glad_debug_glDisableClientStateiEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLECLIENTSTATEIEXTPROC glad_debug_glDisableClientStateiEXT
     * }
     */
    public static void glad_debug_glDisableClientStateiEXT(MemorySegment varValue) {
        glad_debug_glDisableClientStateiEXT$constants.SEGMENT.set(glad_debug_glDisableClientStateiEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDisableIndexedEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDisableIndexedEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEINDEXEDEXTPROC glad_glDisableIndexedEXT
     * }
     */
    public static AddressLayout glad_glDisableIndexedEXT$layout() {
        return glad_glDisableIndexedEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEINDEXEDEXTPROC glad_glDisableIndexedEXT
     * }
     */
    public static MemorySegment glad_glDisableIndexedEXT$segment() {
        return glad_glDisableIndexedEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEINDEXEDEXTPROC glad_glDisableIndexedEXT
     * }
     */
    public static MemorySegment glad_glDisableIndexedEXT() {
        return glad_glDisableIndexedEXT$constants.SEGMENT.get(glad_glDisableIndexedEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEINDEXEDEXTPROC glad_glDisableIndexedEXT
     * }
     */
    public static void glad_glDisableIndexedEXT(MemorySegment varValue) {
        glad_glDisableIndexedEXT$constants.SEGMENT.set(glad_glDisableIndexedEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDisableIndexedEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDisableIndexedEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEINDEXEDEXTPROC glad_debug_glDisableIndexedEXT
     * }
     */
    public static AddressLayout glad_debug_glDisableIndexedEXT$layout() {
        return glad_debug_glDisableIndexedEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEINDEXEDEXTPROC glad_debug_glDisableIndexedEXT
     * }
     */
    public static MemorySegment glad_debug_glDisableIndexedEXT$segment() {
        return glad_debug_glDisableIndexedEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEINDEXEDEXTPROC glad_debug_glDisableIndexedEXT
     * }
     */
    public static MemorySegment glad_debug_glDisableIndexedEXT() {
        return glad_debug_glDisableIndexedEXT$constants.SEGMENT.get(glad_debug_glDisableIndexedEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEINDEXEDEXTPROC glad_debug_glDisableIndexedEXT
     * }
     */
    public static void glad_debug_glDisableIndexedEXT(MemorySegment varValue) {
        glad_debug_glDisableIndexedEXT$constants.SEGMENT.set(glad_debug_glDisableIndexedEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDisableVertexArrayAttrib$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDisableVertexArrayAttrib").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEVERTEXARRAYATTRIBPROC glad_glDisableVertexArrayAttrib
     * }
     */
    public static AddressLayout glad_glDisableVertexArrayAttrib$layout() {
        return glad_glDisableVertexArrayAttrib$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEVERTEXARRAYATTRIBPROC glad_glDisableVertexArrayAttrib
     * }
     */
    public static MemorySegment glad_glDisableVertexArrayAttrib$segment() {
        return glad_glDisableVertexArrayAttrib$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEVERTEXARRAYATTRIBPROC glad_glDisableVertexArrayAttrib
     * }
     */
    public static MemorySegment glad_glDisableVertexArrayAttrib() {
        return glad_glDisableVertexArrayAttrib$constants.SEGMENT.get(glad_glDisableVertexArrayAttrib$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEVERTEXARRAYATTRIBPROC glad_glDisableVertexArrayAttrib
     * }
     */
    public static void glad_glDisableVertexArrayAttrib(MemorySegment varValue) {
        glad_glDisableVertexArrayAttrib$constants.SEGMENT.set(glad_glDisableVertexArrayAttrib$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDisableVertexArrayAttrib$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDisableVertexArrayAttrib").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEVERTEXARRAYATTRIBPROC glad_debug_glDisableVertexArrayAttrib
     * }
     */
    public static AddressLayout glad_debug_glDisableVertexArrayAttrib$layout() {
        return glad_debug_glDisableVertexArrayAttrib$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEVERTEXARRAYATTRIBPROC glad_debug_glDisableVertexArrayAttrib
     * }
     */
    public static MemorySegment glad_debug_glDisableVertexArrayAttrib$segment() {
        return glad_debug_glDisableVertexArrayAttrib$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEVERTEXARRAYATTRIBPROC glad_debug_glDisableVertexArrayAttrib
     * }
     */
    public static MemorySegment glad_debug_glDisableVertexArrayAttrib() {
        return glad_debug_glDisableVertexArrayAttrib$constants.SEGMENT.get(glad_debug_glDisableVertexArrayAttrib$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEVERTEXARRAYATTRIBPROC glad_debug_glDisableVertexArrayAttrib
     * }
     */
    public static void glad_debug_glDisableVertexArrayAttrib(MemorySegment varValue) {
        glad_debug_glDisableVertexArrayAttrib$constants.SEGMENT.set(glad_debug_glDisableVertexArrayAttrib$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDisableVertexArrayAttribEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDisableVertexArrayAttribEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC glad_glDisableVertexArrayAttribEXT
     * }
     */
    public static AddressLayout glad_glDisableVertexArrayAttribEXT$layout() {
        return glad_glDisableVertexArrayAttribEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC glad_glDisableVertexArrayAttribEXT
     * }
     */
    public static MemorySegment glad_glDisableVertexArrayAttribEXT$segment() {
        return glad_glDisableVertexArrayAttribEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC glad_glDisableVertexArrayAttribEXT
     * }
     */
    public static MemorySegment glad_glDisableVertexArrayAttribEXT() {
        return glad_glDisableVertexArrayAttribEXT$constants.SEGMENT.get(glad_glDisableVertexArrayAttribEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC glad_glDisableVertexArrayAttribEXT
     * }
     */
    public static void glad_glDisableVertexArrayAttribEXT(MemorySegment varValue) {
        glad_glDisableVertexArrayAttribEXT$constants.SEGMENT.set(glad_glDisableVertexArrayAttribEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDisableVertexArrayAttribEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDisableVertexArrayAttribEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC glad_debug_glDisableVertexArrayAttribEXT
     * }
     */
    public static AddressLayout glad_debug_glDisableVertexArrayAttribEXT$layout() {
        return glad_debug_glDisableVertexArrayAttribEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC glad_debug_glDisableVertexArrayAttribEXT
     * }
     */
    public static MemorySegment glad_debug_glDisableVertexArrayAttribEXT$segment() {
        return glad_debug_glDisableVertexArrayAttribEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC glad_debug_glDisableVertexArrayAttribEXT
     * }
     */
    public static MemorySegment glad_debug_glDisableVertexArrayAttribEXT() {
        return glad_debug_glDisableVertexArrayAttribEXT$constants.SEGMENT.get(glad_debug_glDisableVertexArrayAttribEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC glad_debug_glDisableVertexArrayAttribEXT
     * }
     */
    public static void glad_debug_glDisableVertexArrayAttribEXT(MemorySegment varValue) {
        glad_debug_glDisableVertexArrayAttribEXT$constants.SEGMENT.set(glad_debug_glDisableVertexArrayAttribEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDisableVertexArrayEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDisableVertexArrayEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEVERTEXARRAYEXTPROC glad_glDisableVertexArrayEXT
     * }
     */
    public static AddressLayout glad_glDisableVertexArrayEXT$layout() {
        return glad_glDisableVertexArrayEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEVERTEXARRAYEXTPROC glad_glDisableVertexArrayEXT
     * }
     */
    public static MemorySegment glad_glDisableVertexArrayEXT$segment() {
        return glad_glDisableVertexArrayEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEVERTEXARRAYEXTPROC glad_glDisableVertexArrayEXT
     * }
     */
    public static MemorySegment glad_glDisableVertexArrayEXT() {
        return glad_glDisableVertexArrayEXT$constants.SEGMENT.get(glad_glDisableVertexArrayEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEVERTEXARRAYEXTPROC glad_glDisableVertexArrayEXT
     * }
     */
    public static void glad_glDisableVertexArrayEXT(MemorySegment varValue) {
        glad_glDisableVertexArrayEXT$constants.SEGMENT.set(glad_glDisableVertexArrayEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDisableVertexArrayEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDisableVertexArrayEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEVERTEXARRAYEXTPROC glad_debug_glDisableVertexArrayEXT
     * }
     */
    public static AddressLayout glad_debug_glDisableVertexArrayEXT$layout() {
        return glad_debug_glDisableVertexArrayEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEVERTEXARRAYEXTPROC glad_debug_glDisableVertexArrayEXT
     * }
     */
    public static MemorySegment glad_debug_glDisableVertexArrayEXT$segment() {
        return glad_debug_glDisableVertexArrayEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEVERTEXARRAYEXTPROC glad_debug_glDisableVertexArrayEXT
     * }
     */
    public static MemorySegment glad_debug_glDisableVertexArrayEXT() {
        return glad_debug_glDisableVertexArrayEXT$constants.SEGMENT.get(glad_debug_glDisableVertexArrayEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEVERTEXARRAYEXTPROC glad_debug_glDisableVertexArrayEXT
     * }
     */
    public static void glad_debug_glDisableVertexArrayEXT(MemorySegment varValue) {
        glad_debug_glDisableVertexArrayEXT$constants.SEGMENT.set(glad_debug_glDisableVertexArrayEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDisableVertexAttribArray$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDisableVertexAttribArray").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEVERTEXATTRIBARRAYPROC glad_glDisableVertexAttribArray
     * }
     */
    public static AddressLayout glad_glDisableVertexAttribArray$layout() {
        return glad_glDisableVertexAttribArray$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEVERTEXATTRIBARRAYPROC glad_glDisableVertexAttribArray
     * }
     */
    public static MemorySegment glad_glDisableVertexAttribArray$segment() {
        return glad_glDisableVertexAttribArray$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEVERTEXATTRIBARRAYPROC glad_glDisableVertexAttribArray
     * }
     */
    public static MemorySegment glad_glDisableVertexAttribArray() {
        return glad_glDisableVertexAttribArray$constants.SEGMENT.get(glad_glDisableVertexAttribArray$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEVERTEXATTRIBARRAYPROC glad_glDisableVertexAttribArray
     * }
     */
    public static void glad_glDisableVertexAttribArray(MemorySegment varValue) {
        glad_glDisableVertexAttribArray$constants.SEGMENT.set(glad_glDisableVertexAttribArray$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDisableVertexAttribArray$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDisableVertexAttribArray").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEVERTEXATTRIBARRAYPROC glad_debug_glDisableVertexAttribArray
     * }
     */
    public static AddressLayout glad_debug_glDisableVertexAttribArray$layout() {
        return glad_debug_glDisableVertexAttribArray$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEVERTEXATTRIBARRAYPROC glad_debug_glDisableVertexAttribArray
     * }
     */
    public static MemorySegment glad_debug_glDisableVertexAttribArray$segment() {
        return glad_debug_glDisableVertexAttribArray$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEVERTEXATTRIBARRAYPROC glad_debug_glDisableVertexAttribArray
     * }
     */
    public static MemorySegment glad_debug_glDisableVertexAttribArray() {
        return glad_debug_glDisableVertexAttribArray$constants.SEGMENT.get(glad_debug_glDisableVertexAttribArray$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEVERTEXATTRIBARRAYPROC glad_debug_glDisableVertexAttribArray
     * }
     */
    public static void glad_debug_glDisableVertexAttribArray(MemorySegment varValue) {
        glad_debug_glDisableVertexAttribArray$constants.SEGMENT.set(glad_debug_glDisableVertexAttribArray$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDisableVertexAttribArrayARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDisableVertexAttribArrayARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEVERTEXATTRIBARRAYARBPROC glad_glDisableVertexAttribArrayARB
     * }
     */
    public static AddressLayout glad_glDisableVertexAttribArrayARB$layout() {
        return glad_glDisableVertexAttribArrayARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEVERTEXATTRIBARRAYARBPROC glad_glDisableVertexAttribArrayARB
     * }
     */
    public static MemorySegment glad_glDisableVertexAttribArrayARB$segment() {
        return glad_glDisableVertexAttribArrayARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEVERTEXATTRIBARRAYARBPROC glad_glDisableVertexAttribArrayARB
     * }
     */
    public static MemorySegment glad_glDisableVertexAttribArrayARB() {
        return glad_glDisableVertexAttribArrayARB$constants.SEGMENT.get(glad_glDisableVertexAttribArrayARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEVERTEXATTRIBARRAYARBPROC glad_glDisableVertexAttribArrayARB
     * }
     */
    public static void glad_glDisableVertexAttribArrayARB(MemorySegment varValue) {
        glad_glDisableVertexAttribArrayARB$constants.SEGMENT.set(glad_glDisableVertexAttribArrayARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDisableVertexAttribArrayARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDisableVertexAttribArrayARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEVERTEXATTRIBARRAYARBPROC glad_debug_glDisableVertexAttribArrayARB
     * }
     */
    public static AddressLayout glad_debug_glDisableVertexAttribArrayARB$layout() {
        return glad_debug_glDisableVertexAttribArrayARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEVERTEXATTRIBARRAYARBPROC glad_debug_glDisableVertexAttribArrayARB
     * }
     */
    public static MemorySegment glad_debug_glDisableVertexAttribArrayARB$segment() {
        return glad_debug_glDisableVertexAttribArrayARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEVERTEXATTRIBARRAYARBPROC glad_debug_glDisableVertexAttribArrayARB
     * }
     */
    public static MemorySegment glad_debug_glDisableVertexAttribArrayARB() {
        return glad_debug_glDisableVertexAttribArrayARB$constants.SEGMENT.get(glad_debug_glDisableVertexAttribArrayARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEVERTEXATTRIBARRAYARBPROC glad_debug_glDisableVertexAttribArrayARB
     * }
     */
    public static void glad_debug_glDisableVertexAttribArrayARB(MemorySegment varValue) {
        glad_debug_glDisableVertexAttribArrayARB$constants.SEGMENT.set(glad_debug_glDisableVertexAttribArrayARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDisablei$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDisablei").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEIPROC glad_glDisablei
     * }
     */
    public static AddressLayout glad_glDisablei$layout() {
        return glad_glDisablei$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEIPROC glad_glDisablei
     * }
     */
    public static MemorySegment glad_glDisablei$segment() {
        return glad_glDisablei$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEIPROC glad_glDisablei
     * }
     */
    public static MemorySegment glad_glDisablei() {
        return glad_glDisablei$constants.SEGMENT.get(glad_glDisablei$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEIPROC glad_glDisablei
     * }
     */
    public static void glad_glDisablei(MemorySegment varValue) {
        glad_glDisablei$constants.SEGMENT.set(glad_glDisablei$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDisablei$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDisablei").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEIPROC glad_debug_glDisablei
     * }
     */
    public static AddressLayout glad_debug_glDisablei$layout() {
        return glad_debug_glDisablei$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEIPROC glad_debug_glDisablei
     * }
     */
    public static MemorySegment glad_debug_glDisablei$segment() {
        return glad_debug_glDisablei$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEIPROC glad_debug_glDisablei
     * }
     */
    public static MemorySegment glad_debug_glDisablei() {
        return glad_debug_glDisablei$constants.SEGMENT.get(glad_debug_glDisablei$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISABLEIPROC glad_debug_glDisablei
     * }
     */
    public static void glad_debug_glDisablei(MemorySegment varValue) {
        glad_debug_glDisablei$constants.SEGMENT.set(glad_debug_glDisablei$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDispatchCompute$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDispatchCompute").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDISPATCHCOMPUTEPROC glad_glDispatchCompute
     * }
     */
    public static AddressLayout glad_glDispatchCompute$layout() {
        return glad_glDispatchCompute$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDISPATCHCOMPUTEPROC glad_glDispatchCompute
     * }
     */
    public static MemorySegment glad_glDispatchCompute$segment() {
        return glad_glDispatchCompute$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISPATCHCOMPUTEPROC glad_glDispatchCompute
     * }
     */
    public static MemorySegment glad_glDispatchCompute() {
        return glad_glDispatchCompute$constants.SEGMENT.get(glad_glDispatchCompute$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISPATCHCOMPUTEPROC glad_glDispatchCompute
     * }
     */
    public static void glad_glDispatchCompute(MemorySegment varValue) {
        glad_glDispatchCompute$constants.SEGMENT.set(glad_glDispatchCompute$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDispatchCompute$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDispatchCompute").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDISPATCHCOMPUTEPROC glad_debug_glDispatchCompute
     * }
     */
    public static AddressLayout glad_debug_glDispatchCompute$layout() {
        return glad_debug_glDispatchCompute$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDISPATCHCOMPUTEPROC glad_debug_glDispatchCompute
     * }
     */
    public static MemorySegment glad_debug_glDispatchCompute$segment() {
        return glad_debug_glDispatchCompute$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISPATCHCOMPUTEPROC glad_debug_glDispatchCompute
     * }
     */
    public static MemorySegment glad_debug_glDispatchCompute() {
        return glad_debug_glDispatchCompute$constants.SEGMENT.get(glad_debug_glDispatchCompute$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISPATCHCOMPUTEPROC glad_debug_glDispatchCompute
     * }
     */
    public static void glad_debug_glDispatchCompute(MemorySegment varValue) {
        glad_debug_glDispatchCompute$constants.SEGMENT.set(glad_debug_glDispatchCompute$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDispatchComputeIndirect$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDispatchComputeIndirect").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDISPATCHCOMPUTEINDIRECTPROC glad_glDispatchComputeIndirect
     * }
     */
    public static AddressLayout glad_glDispatchComputeIndirect$layout() {
        return glad_glDispatchComputeIndirect$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDISPATCHCOMPUTEINDIRECTPROC glad_glDispatchComputeIndirect
     * }
     */
    public static MemorySegment glad_glDispatchComputeIndirect$segment() {
        return glad_glDispatchComputeIndirect$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISPATCHCOMPUTEINDIRECTPROC glad_glDispatchComputeIndirect
     * }
     */
    public static MemorySegment glad_glDispatchComputeIndirect() {
        return glad_glDispatchComputeIndirect$constants.SEGMENT.get(glad_glDispatchComputeIndirect$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISPATCHCOMPUTEINDIRECTPROC glad_glDispatchComputeIndirect
     * }
     */
    public static void glad_glDispatchComputeIndirect(MemorySegment varValue) {
        glad_glDispatchComputeIndirect$constants.SEGMENT.set(glad_glDispatchComputeIndirect$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDispatchComputeIndirect$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDispatchComputeIndirect").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDISPATCHCOMPUTEINDIRECTPROC glad_debug_glDispatchComputeIndirect
     * }
     */
    public static AddressLayout glad_debug_glDispatchComputeIndirect$layout() {
        return glad_debug_glDispatchComputeIndirect$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDISPATCHCOMPUTEINDIRECTPROC glad_debug_glDispatchComputeIndirect
     * }
     */
    public static MemorySegment glad_debug_glDispatchComputeIndirect$segment() {
        return glad_debug_glDispatchComputeIndirect$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISPATCHCOMPUTEINDIRECTPROC glad_debug_glDispatchComputeIndirect
     * }
     */
    public static MemorySegment glad_debug_glDispatchComputeIndirect() {
        return glad_debug_glDispatchComputeIndirect$constants.SEGMENT.get(glad_debug_glDispatchComputeIndirect$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDISPATCHCOMPUTEINDIRECTPROC glad_debug_glDispatchComputeIndirect
     * }
     */
    public static void glad_debug_glDispatchComputeIndirect(MemorySegment varValue) {
        glad_debug_glDispatchComputeIndirect$constants.SEGMENT.set(glad_debug_glDispatchComputeIndirect$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDrawArrays$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDrawArrays").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSPROC glad_glDrawArrays
     * }
     */
    public static AddressLayout glad_glDrawArrays$layout() {
        return glad_glDrawArrays$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSPROC glad_glDrawArrays
     * }
     */
    public static MemorySegment glad_glDrawArrays$segment() {
        return glad_glDrawArrays$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSPROC glad_glDrawArrays
     * }
     */
    public static MemorySegment glad_glDrawArrays() {
        return glad_glDrawArrays$constants.SEGMENT.get(glad_glDrawArrays$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSPROC glad_glDrawArrays
     * }
     */
    public static void glad_glDrawArrays(MemorySegment varValue) {
        glad_glDrawArrays$constants.SEGMENT.set(glad_glDrawArrays$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDrawArrays$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDrawArrays").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSPROC glad_debug_glDrawArrays
     * }
     */
    public static AddressLayout glad_debug_glDrawArrays$layout() {
        return glad_debug_glDrawArrays$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSPROC glad_debug_glDrawArrays
     * }
     */
    public static MemorySegment glad_debug_glDrawArrays$segment() {
        return glad_debug_glDrawArrays$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSPROC glad_debug_glDrawArrays
     * }
     */
    public static MemorySegment glad_debug_glDrawArrays() {
        return glad_debug_glDrawArrays$constants.SEGMENT.get(glad_debug_glDrawArrays$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSPROC glad_debug_glDrawArrays
     * }
     */
    public static void glad_debug_glDrawArrays(MemorySegment varValue) {
        glad_debug_glDrawArrays$constants.SEGMENT.set(glad_debug_glDrawArrays$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDrawArraysEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDrawArraysEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSEXTPROC glad_glDrawArraysEXT
     * }
     */
    public static AddressLayout glad_glDrawArraysEXT$layout() {
        return glad_glDrawArraysEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSEXTPROC glad_glDrawArraysEXT
     * }
     */
    public static MemorySegment glad_glDrawArraysEXT$segment() {
        return glad_glDrawArraysEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSEXTPROC glad_glDrawArraysEXT
     * }
     */
    public static MemorySegment glad_glDrawArraysEXT() {
        return glad_glDrawArraysEXT$constants.SEGMENT.get(glad_glDrawArraysEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSEXTPROC glad_glDrawArraysEXT
     * }
     */
    public static void glad_glDrawArraysEXT(MemorySegment varValue) {
        glad_glDrawArraysEXT$constants.SEGMENT.set(glad_glDrawArraysEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDrawArraysEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDrawArraysEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSEXTPROC glad_debug_glDrawArraysEXT
     * }
     */
    public static AddressLayout glad_debug_glDrawArraysEXT$layout() {
        return glad_debug_glDrawArraysEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSEXTPROC glad_debug_glDrawArraysEXT
     * }
     */
    public static MemorySegment glad_debug_glDrawArraysEXT$segment() {
        return glad_debug_glDrawArraysEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSEXTPROC glad_debug_glDrawArraysEXT
     * }
     */
    public static MemorySegment glad_debug_glDrawArraysEXT() {
        return glad_debug_glDrawArraysEXT$constants.SEGMENT.get(glad_debug_glDrawArraysEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSEXTPROC glad_debug_glDrawArraysEXT
     * }
     */
    public static void glad_debug_glDrawArraysEXT(MemorySegment varValue) {
        glad_debug_glDrawArraysEXT$constants.SEGMENT.set(glad_debug_glDrawArraysEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDrawArraysIndirect$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDrawArraysIndirect").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSINDIRECTPROC glad_glDrawArraysIndirect
     * }
     */
    public static AddressLayout glad_glDrawArraysIndirect$layout() {
        return glad_glDrawArraysIndirect$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSINDIRECTPROC glad_glDrawArraysIndirect
     * }
     */
    public static MemorySegment glad_glDrawArraysIndirect$segment() {
        return glad_glDrawArraysIndirect$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSINDIRECTPROC glad_glDrawArraysIndirect
     * }
     */
    public static MemorySegment glad_glDrawArraysIndirect() {
        return glad_glDrawArraysIndirect$constants.SEGMENT.get(glad_glDrawArraysIndirect$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSINDIRECTPROC glad_glDrawArraysIndirect
     * }
     */
    public static void glad_glDrawArraysIndirect(MemorySegment varValue) {
        glad_glDrawArraysIndirect$constants.SEGMENT.set(glad_glDrawArraysIndirect$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDrawArraysIndirect$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDrawArraysIndirect").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSINDIRECTPROC glad_debug_glDrawArraysIndirect
     * }
     */
    public static AddressLayout glad_debug_glDrawArraysIndirect$layout() {
        return glad_debug_glDrawArraysIndirect$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSINDIRECTPROC glad_debug_glDrawArraysIndirect
     * }
     */
    public static MemorySegment glad_debug_glDrawArraysIndirect$segment() {
        return glad_debug_glDrawArraysIndirect$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSINDIRECTPROC glad_debug_glDrawArraysIndirect
     * }
     */
    public static MemorySegment glad_debug_glDrawArraysIndirect() {
        return glad_debug_glDrawArraysIndirect$constants.SEGMENT.get(glad_debug_glDrawArraysIndirect$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSINDIRECTPROC glad_debug_glDrawArraysIndirect
     * }
     */
    public static void glad_debug_glDrawArraysIndirect(MemorySegment varValue) {
        glad_debug_glDrawArraysIndirect$constants.SEGMENT.set(glad_debug_glDrawArraysIndirect$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDrawArraysInstanced$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDrawArraysInstanced").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSINSTANCEDPROC glad_glDrawArraysInstanced
     * }
     */
    public static AddressLayout glad_glDrawArraysInstanced$layout() {
        return glad_glDrawArraysInstanced$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSINSTANCEDPROC glad_glDrawArraysInstanced
     * }
     */
    public static MemorySegment glad_glDrawArraysInstanced$segment() {
        return glad_glDrawArraysInstanced$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSINSTANCEDPROC glad_glDrawArraysInstanced
     * }
     */
    public static MemorySegment glad_glDrawArraysInstanced() {
        return glad_glDrawArraysInstanced$constants.SEGMENT.get(glad_glDrawArraysInstanced$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSINSTANCEDPROC glad_glDrawArraysInstanced
     * }
     */
    public static void glad_glDrawArraysInstanced(MemorySegment varValue) {
        glad_glDrawArraysInstanced$constants.SEGMENT.set(glad_glDrawArraysInstanced$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDrawArraysInstanced$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDrawArraysInstanced").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSINSTANCEDPROC glad_debug_glDrawArraysInstanced
     * }
     */
    public static AddressLayout glad_debug_glDrawArraysInstanced$layout() {
        return glad_debug_glDrawArraysInstanced$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSINSTANCEDPROC glad_debug_glDrawArraysInstanced
     * }
     */
    public static MemorySegment glad_debug_glDrawArraysInstanced$segment() {
        return glad_debug_glDrawArraysInstanced$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSINSTANCEDPROC glad_debug_glDrawArraysInstanced
     * }
     */
    public static MemorySegment glad_debug_glDrawArraysInstanced() {
        return glad_debug_glDrawArraysInstanced$constants.SEGMENT.get(glad_debug_glDrawArraysInstanced$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSINSTANCEDPROC glad_debug_glDrawArraysInstanced
     * }
     */
    public static void glad_debug_glDrawArraysInstanced(MemorySegment varValue) {
        glad_debug_glDrawArraysInstanced$constants.SEGMENT.set(glad_debug_glDrawArraysInstanced$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDrawArraysInstancedARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDrawArraysInstancedARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSINSTANCEDARBPROC glad_glDrawArraysInstancedARB
     * }
     */
    public static AddressLayout glad_glDrawArraysInstancedARB$layout() {
        return glad_glDrawArraysInstancedARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSINSTANCEDARBPROC glad_glDrawArraysInstancedARB
     * }
     */
    public static MemorySegment glad_glDrawArraysInstancedARB$segment() {
        return glad_glDrawArraysInstancedARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSINSTANCEDARBPROC glad_glDrawArraysInstancedARB
     * }
     */
    public static MemorySegment glad_glDrawArraysInstancedARB() {
        return glad_glDrawArraysInstancedARB$constants.SEGMENT.get(glad_glDrawArraysInstancedARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSINSTANCEDARBPROC glad_glDrawArraysInstancedARB
     * }
     */
    public static void glad_glDrawArraysInstancedARB(MemorySegment varValue) {
        glad_glDrawArraysInstancedARB$constants.SEGMENT.set(glad_glDrawArraysInstancedARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDrawArraysInstancedARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDrawArraysInstancedARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSINSTANCEDARBPROC glad_debug_glDrawArraysInstancedARB
     * }
     */
    public static AddressLayout glad_debug_glDrawArraysInstancedARB$layout() {
        return glad_debug_glDrawArraysInstancedARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSINSTANCEDARBPROC glad_debug_glDrawArraysInstancedARB
     * }
     */
    public static MemorySegment glad_debug_glDrawArraysInstancedARB$segment() {
        return glad_debug_glDrawArraysInstancedARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSINSTANCEDARBPROC glad_debug_glDrawArraysInstancedARB
     * }
     */
    public static MemorySegment glad_debug_glDrawArraysInstancedARB() {
        return glad_debug_glDrawArraysInstancedARB$constants.SEGMENT.get(glad_debug_glDrawArraysInstancedARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSINSTANCEDARBPROC glad_debug_glDrawArraysInstancedARB
     * }
     */
    public static void glad_debug_glDrawArraysInstancedARB(MemorySegment varValue) {
        glad_debug_glDrawArraysInstancedARB$constants.SEGMENT.set(glad_debug_glDrawArraysInstancedARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDrawArraysInstancedBaseInstance$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDrawArraysInstancedBaseInstance").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC glad_glDrawArraysInstancedBaseInstance
     * }
     */
    public static AddressLayout glad_glDrawArraysInstancedBaseInstance$layout() {
        return glad_glDrawArraysInstancedBaseInstance$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC glad_glDrawArraysInstancedBaseInstance
     * }
     */
    public static MemorySegment glad_glDrawArraysInstancedBaseInstance$segment() {
        return glad_glDrawArraysInstancedBaseInstance$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC glad_glDrawArraysInstancedBaseInstance
     * }
     */
    public static MemorySegment glad_glDrawArraysInstancedBaseInstance() {
        return glad_glDrawArraysInstancedBaseInstance$constants.SEGMENT.get(glad_glDrawArraysInstancedBaseInstance$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC glad_glDrawArraysInstancedBaseInstance
     * }
     */
    public static void glad_glDrawArraysInstancedBaseInstance(MemorySegment varValue) {
        glad_glDrawArraysInstancedBaseInstance$constants.SEGMENT.set(glad_glDrawArraysInstancedBaseInstance$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDrawArraysInstancedBaseInstance$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDrawArraysInstancedBaseInstance").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC glad_debug_glDrawArraysInstancedBaseInstance
     * }
     */
    public static AddressLayout glad_debug_glDrawArraysInstancedBaseInstance$layout() {
        return glad_debug_glDrawArraysInstancedBaseInstance$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC glad_debug_glDrawArraysInstancedBaseInstance
     * }
     */
    public static MemorySegment glad_debug_glDrawArraysInstancedBaseInstance$segment() {
        return glad_debug_glDrawArraysInstancedBaseInstance$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC glad_debug_glDrawArraysInstancedBaseInstance
     * }
     */
    public static MemorySegment glad_debug_glDrawArraysInstancedBaseInstance() {
        return glad_debug_glDrawArraysInstancedBaseInstance$constants.SEGMENT.get(glad_debug_glDrawArraysInstancedBaseInstance$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC glad_debug_glDrawArraysInstancedBaseInstance
     * }
     */
    public static void glad_debug_glDrawArraysInstancedBaseInstance(MemorySegment varValue) {
        glad_debug_glDrawArraysInstancedBaseInstance$constants.SEGMENT.set(glad_debug_glDrawArraysInstancedBaseInstance$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDrawArraysInstancedEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDrawArraysInstancedEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSINSTANCEDEXTPROC glad_glDrawArraysInstancedEXT
     * }
     */
    public static AddressLayout glad_glDrawArraysInstancedEXT$layout() {
        return glad_glDrawArraysInstancedEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSINSTANCEDEXTPROC glad_glDrawArraysInstancedEXT
     * }
     */
    public static MemorySegment glad_glDrawArraysInstancedEXT$segment() {
        return glad_glDrawArraysInstancedEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSINSTANCEDEXTPROC glad_glDrawArraysInstancedEXT
     * }
     */
    public static MemorySegment glad_glDrawArraysInstancedEXT() {
        return glad_glDrawArraysInstancedEXT$constants.SEGMENT.get(glad_glDrawArraysInstancedEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSINSTANCEDEXTPROC glad_glDrawArraysInstancedEXT
     * }
     */
    public static void glad_glDrawArraysInstancedEXT(MemorySegment varValue) {
        glad_glDrawArraysInstancedEXT$constants.SEGMENT.set(glad_glDrawArraysInstancedEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDrawArraysInstancedEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDrawArraysInstancedEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSINSTANCEDEXTPROC glad_debug_glDrawArraysInstancedEXT
     * }
     */
    public static AddressLayout glad_debug_glDrawArraysInstancedEXT$layout() {
        return glad_debug_glDrawArraysInstancedEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSINSTANCEDEXTPROC glad_debug_glDrawArraysInstancedEXT
     * }
     */
    public static MemorySegment glad_debug_glDrawArraysInstancedEXT$segment() {
        return glad_debug_glDrawArraysInstancedEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSINSTANCEDEXTPROC glad_debug_glDrawArraysInstancedEXT
     * }
     */
    public static MemorySegment glad_debug_glDrawArraysInstancedEXT() {
        return glad_debug_glDrawArraysInstancedEXT$constants.SEGMENT.get(glad_debug_glDrawArraysInstancedEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWARRAYSINSTANCEDEXTPROC glad_debug_glDrawArraysInstancedEXT
     * }
     */
    public static void glad_debug_glDrawArraysInstancedEXT(MemorySegment varValue) {
        glad_debug_glDrawArraysInstancedEXT$constants.SEGMENT.set(glad_debug_glDrawArraysInstancedEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDrawBuffer$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDrawBuffer").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWBUFFERPROC glad_glDrawBuffer
     * }
     */
    public static AddressLayout glad_glDrawBuffer$layout() {
        return glad_glDrawBuffer$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWBUFFERPROC glad_glDrawBuffer
     * }
     */
    public static MemorySegment glad_glDrawBuffer$segment() {
        return glad_glDrawBuffer$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWBUFFERPROC glad_glDrawBuffer
     * }
     */
    public static MemorySegment glad_glDrawBuffer() {
        return glad_glDrawBuffer$constants.SEGMENT.get(glad_glDrawBuffer$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWBUFFERPROC glad_glDrawBuffer
     * }
     */
    public static void glad_glDrawBuffer(MemorySegment varValue) {
        glad_glDrawBuffer$constants.SEGMENT.set(glad_glDrawBuffer$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDrawBuffer$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDrawBuffer").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWBUFFERPROC glad_debug_glDrawBuffer
     * }
     */
    public static AddressLayout glad_debug_glDrawBuffer$layout() {
        return glad_debug_glDrawBuffer$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWBUFFERPROC glad_debug_glDrawBuffer
     * }
     */
    public static MemorySegment glad_debug_glDrawBuffer$segment() {
        return glad_debug_glDrawBuffer$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWBUFFERPROC glad_debug_glDrawBuffer
     * }
     */
    public static MemorySegment glad_debug_glDrawBuffer() {
        return glad_debug_glDrawBuffer$constants.SEGMENT.get(glad_debug_glDrawBuffer$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWBUFFERPROC glad_debug_glDrawBuffer
     * }
     */
    public static void glad_debug_glDrawBuffer(MemorySegment varValue) {
        glad_debug_glDrawBuffer$constants.SEGMENT.set(glad_debug_glDrawBuffer$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDrawBuffers$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDrawBuffers").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWBUFFERSPROC glad_glDrawBuffers
     * }
     */
    public static AddressLayout glad_glDrawBuffers$layout() {
        return glad_glDrawBuffers$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWBUFFERSPROC glad_glDrawBuffers
     * }
     */
    public static MemorySegment glad_glDrawBuffers$segment() {
        return glad_glDrawBuffers$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWBUFFERSPROC glad_glDrawBuffers
     * }
     */
    public static MemorySegment glad_glDrawBuffers() {
        return glad_glDrawBuffers$constants.SEGMENT.get(glad_glDrawBuffers$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWBUFFERSPROC glad_glDrawBuffers
     * }
     */
    public static void glad_glDrawBuffers(MemorySegment varValue) {
        glad_glDrawBuffers$constants.SEGMENT.set(glad_glDrawBuffers$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDrawBuffers$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDrawBuffers").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWBUFFERSPROC glad_debug_glDrawBuffers
     * }
     */
    public static AddressLayout glad_debug_glDrawBuffers$layout() {
        return glad_debug_glDrawBuffers$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWBUFFERSPROC glad_debug_glDrawBuffers
     * }
     */
    public static MemorySegment glad_debug_glDrawBuffers$segment() {
        return glad_debug_glDrawBuffers$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWBUFFERSPROC glad_debug_glDrawBuffers
     * }
     */
    public static MemorySegment glad_debug_glDrawBuffers() {
        return glad_debug_glDrawBuffers$constants.SEGMENT.get(glad_debug_glDrawBuffers$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWBUFFERSPROC glad_debug_glDrawBuffers
     * }
     */
    public static void glad_debug_glDrawBuffers(MemorySegment varValue) {
        glad_debug_glDrawBuffers$constants.SEGMENT.set(glad_debug_glDrawBuffers$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDrawBuffersARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDrawBuffersARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWBUFFERSARBPROC glad_glDrawBuffersARB
     * }
     */
    public static AddressLayout glad_glDrawBuffersARB$layout() {
        return glad_glDrawBuffersARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWBUFFERSARBPROC glad_glDrawBuffersARB
     * }
     */
    public static MemorySegment glad_glDrawBuffersARB$segment() {
        return glad_glDrawBuffersARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWBUFFERSARBPROC glad_glDrawBuffersARB
     * }
     */
    public static MemorySegment glad_glDrawBuffersARB() {
        return glad_glDrawBuffersARB$constants.SEGMENT.get(glad_glDrawBuffersARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWBUFFERSARBPROC glad_glDrawBuffersARB
     * }
     */
    public static void glad_glDrawBuffersARB(MemorySegment varValue) {
        glad_glDrawBuffersARB$constants.SEGMENT.set(glad_glDrawBuffersARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDrawBuffersARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDrawBuffersARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWBUFFERSARBPROC glad_debug_glDrawBuffersARB
     * }
     */
    public static AddressLayout glad_debug_glDrawBuffersARB$layout() {
        return glad_debug_glDrawBuffersARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWBUFFERSARBPROC glad_debug_glDrawBuffersARB
     * }
     */
    public static MemorySegment glad_debug_glDrawBuffersARB$segment() {
        return glad_debug_glDrawBuffersARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWBUFFERSARBPROC glad_debug_glDrawBuffersARB
     * }
     */
    public static MemorySegment glad_debug_glDrawBuffersARB() {
        return glad_debug_glDrawBuffersARB$constants.SEGMENT.get(glad_debug_glDrawBuffersARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWBUFFERSARBPROC glad_debug_glDrawBuffersARB
     * }
     */
    public static void glad_debug_glDrawBuffersARB(MemorySegment varValue) {
        glad_debug_glDrawBuffersARB$constants.SEGMENT.set(glad_debug_glDrawBuffersARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDrawBuffersATI$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDrawBuffersATI").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWBUFFERSATIPROC glad_glDrawBuffersATI
     * }
     */
    public static AddressLayout glad_glDrawBuffersATI$layout() {
        return glad_glDrawBuffersATI$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWBUFFERSATIPROC glad_glDrawBuffersATI
     * }
     */
    public static MemorySegment glad_glDrawBuffersATI$segment() {
        return glad_glDrawBuffersATI$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWBUFFERSATIPROC glad_glDrawBuffersATI
     * }
     */
    public static MemorySegment glad_glDrawBuffersATI() {
        return glad_glDrawBuffersATI$constants.SEGMENT.get(glad_glDrawBuffersATI$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWBUFFERSATIPROC glad_glDrawBuffersATI
     * }
     */
    public static void glad_glDrawBuffersATI(MemorySegment varValue) {
        glad_glDrawBuffersATI$constants.SEGMENT.set(glad_glDrawBuffersATI$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDrawBuffersATI$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDrawBuffersATI").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWBUFFERSATIPROC glad_debug_glDrawBuffersATI
     * }
     */
    public static AddressLayout glad_debug_glDrawBuffersATI$layout() {
        return glad_debug_glDrawBuffersATI$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWBUFFERSATIPROC glad_debug_glDrawBuffersATI
     * }
     */
    public static MemorySegment glad_debug_glDrawBuffersATI$segment() {
        return glad_debug_glDrawBuffersATI$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWBUFFERSATIPROC glad_debug_glDrawBuffersATI
     * }
     */
    public static MemorySegment glad_debug_glDrawBuffersATI() {
        return glad_debug_glDrawBuffersATI$constants.SEGMENT.get(glad_debug_glDrawBuffersATI$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWBUFFERSATIPROC glad_debug_glDrawBuffersATI
     * }
     */
    public static void glad_debug_glDrawBuffersATI(MemorySegment varValue) {
        glad_debug_glDrawBuffersATI$constants.SEGMENT.set(glad_debug_glDrawBuffersATI$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDrawElements$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDrawElements").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSPROC glad_glDrawElements
     * }
     */
    public static AddressLayout glad_glDrawElements$layout() {
        return glad_glDrawElements$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSPROC glad_glDrawElements
     * }
     */
    public static MemorySegment glad_glDrawElements$segment() {
        return glad_glDrawElements$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSPROC glad_glDrawElements
     * }
     */
    public static MemorySegment glad_glDrawElements() {
        return glad_glDrawElements$constants.SEGMENT.get(glad_glDrawElements$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSPROC glad_glDrawElements
     * }
     */
    public static void glad_glDrawElements(MemorySegment varValue) {
        glad_glDrawElements$constants.SEGMENT.set(glad_glDrawElements$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDrawElements$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDrawElements").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSPROC glad_debug_glDrawElements
     * }
     */
    public static AddressLayout glad_debug_glDrawElements$layout() {
        return glad_debug_glDrawElements$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSPROC glad_debug_glDrawElements
     * }
     */
    public static MemorySegment glad_debug_glDrawElements$segment() {
        return glad_debug_glDrawElements$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSPROC glad_debug_glDrawElements
     * }
     */
    public static MemorySegment glad_debug_glDrawElements() {
        return glad_debug_glDrawElements$constants.SEGMENT.get(glad_debug_glDrawElements$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSPROC glad_debug_glDrawElements
     * }
     */
    public static void glad_debug_glDrawElements(MemorySegment varValue) {
        glad_debug_glDrawElements$constants.SEGMENT.set(glad_debug_glDrawElements$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDrawElementsBaseVertex$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDrawElementsBaseVertex").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSBASEVERTEXPROC glad_glDrawElementsBaseVertex
     * }
     */
    public static AddressLayout glad_glDrawElementsBaseVertex$layout() {
        return glad_glDrawElementsBaseVertex$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSBASEVERTEXPROC glad_glDrawElementsBaseVertex
     * }
     */
    public static MemorySegment glad_glDrawElementsBaseVertex$segment() {
        return glad_glDrawElementsBaseVertex$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSBASEVERTEXPROC glad_glDrawElementsBaseVertex
     * }
     */
    public static MemorySegment glad_glDrawElementsBaseVertex() {
        return glad_glDrawElementsBaseVertex$constants.SEGMENT.get(glad_glDrawElementsBaseVertex$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSBASEVERTEXPROC glad_glDrawElementsBaseVertex
     * }
     */
    public static void glad_glDrawElementsBaseVertex(MemorySegment varValue) {
        glad_glDrawElementsBaseVertex$constants.SEGMENT.set(glad_glDrawElementsBaseVertex$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDrawElementsBaseVertex$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDrawElementsBaseVertex").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSBASEVERTEXPROC glad_debug_glDrawElementsBaseVertex
     * }
     */
    public static AddressLayout glad_debug_glDrawElementsBaseVertex$layout() {
        return glad_debug_glDrawElementsBaseVertex$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSBASEVERTEXPROC glad_debug_glDrawElementsBaseVertex
     * }
     */
    public static MemorySegment glad_debug_glDrawElementsBaseVertex$segment() {
        return glad_debug_glDrawElementsBaseVertex$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSBASEVERTEXPROC glad_debug_glDrawElementsBaseVertex
     * }
     */
    public static MemorySegment glad_debug_glDrawElementsBaseVertex() {
        return glad_debug_glDrawElementsBaseVertex$constants.SEGMENT.get(glad_debug_glDrawElementsBaseVertex$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSBASEVERTEXPROC glad_debug_glDrawElementsBaseVertex
     * }
     */
    public static void glad_debug_glDrawElementsBaseVertex(MemorySegment varValue) {
        glad_debug_glDrawElementsBaseVertex$constants.SEGMENT.set(glad_debug_glDrawElementsBaseVertex$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDrawElementsIndirect$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDrawElementsIndirect").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINDIRECTPROC glad_glDrawElementsIndirect
     * }
     */
    public static AddressLayout glad_glDrawElementsIndirect$layout() {
        return glad_glDrawElementsIndirect$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINDIRECTPROC glad_glDrawElementsIndirect
     * }
     */
    public static MemorySegment glad_glDrawElementsIndirect$segment() {
        return glad_glDrawElementsIndirect$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINDIRECTPROC glad_glDrawElementsIndirect
     * }
     */
    public static MemorySegment glad_glDrawElementsIndirect() {
        return glad_glDrawElementsIndirect$constants.SEGMENT.get(glad_glDrawElementsIndirect$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINDIRECTPROC glad_glDrawElementsIndirect
     * }
     */
    public static void glad_glDrawElementsIndirect(MemorySegment varValue) {
        glad_glDrawElementsIndirect$constants.SEGMENT.set(glad_glDrawElementsIndirect$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDrawElementsIndirect$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDrawElementsIndirect").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINDIRECTPROC glad_debug_glDrawElementsIndirect
     * }
     */
    public static AddressLayout glad_debug_glDrawElementsIndirect$layout() {
        return glad_debug_glDrawElementsIndirect$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINDIRECTPROC glad_debug_glDrawElementsIndirect
     * }
     */
    public static MemorySegment glad_debug_glDrawElementsIndirect$segment() {
        return glad_debug_glDrawElementsIndirect$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINDIRECTPROC glad_debug_glDrawElementsIndirect
     * }
     */
    public static MemorySegment glad_debug_glDrawElementsIndirect() {
        return glad_debug_glDrawElementsIndirect$constants.SEGMENT.get(glad_debug_glDrawElementsIndirect$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINDIRECTPROC glad_debug_glDrawElementsIndirect
     * }
     */
    public static void glad_debug_glDrawElementsIndirect(MemorySegment varValue) {
        glad_debug_glDrawElementsIndirect$constants.SEGMENT.set(glad_debug_glDrawElementsIndirect$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDrawElementsInstanced$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDrawElementsInstanced").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINSTANCEDPROC glad_glDrawElementsInstanced
     * }
     */
    public static AddressLayout glad_glDrawElementsInstanced$layout() {
        return glad_glDrawElementsInstanced$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINSTANCEDPROC glad_glDrawElementsInstanced
     * }
     */
    public static MemorySegment glad_glDrawElementsInstanced$segment() {
        return glad_glDrawElementsInstanced$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINSTANCEDPROC glad_glDrawElementsInstanced
     * }
     */
    public static MemorySegment glad_glDrawElementsInstanced() {
        return glad_glDrawElementsInstanced$constants.SEGMENT.get(glad_glDrawElementsInstanced$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINSTANCEDPROC glad_glDrawElementsInstanced
     * }
     */
    public static void glad_glDrawElementsInstanced(MemorySegment varValue) {
        glad_glDrawElementsInstanced$constants.SEGMENT.set(glad_glDrawElementsInstanced$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDrawElementsInstanced$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDrawElementsInstanced").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINSTANCEDPROC glad_debug_glDrawElementsInstanced
     * }
     */
    public static AddressLayout glad_debug_glDrawElementsInstanced$layout() {
        return glad_debug_glDrawElementsInstanced$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINSTANCEDPROC glad_debug_glDrawElementsInstanced
     * }
     */
    public static MemorySegment glad_debug_glDrawElementsInstanced$segment() {
        return glad_debug_glDrawElementsInstanced$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINSTANCEDPROC glad_debug_glDrawElementsInstanced
     * }
     */
    public static MemorySegment glad_debug_glDrawElementsInstanced() {
        return glad_debug_glDrawElementsInstanced$constants.SEGMENT.get(glad_debug_glDrawElementsInstanced$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINSTANCEDPROC glad_debug_glDrawElementsInstanced
     * }
     */
    public static void glad_debug_glDrawElementsInstanced(MemorySegment varValue) {
        glad_debug_glDrawElementsInstanced$constants.SEGMENT.set(glad_debug_glDrawElementsInstanced$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDrawElementsInstancedARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDrawElementsInstancedARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINSTANCEDARBPROC glad_glDrawElementsInstancedARB
     * }
     */
    public static AddressLayout glad_glDrawElementsInstancedARB$layout() {
        return glad_glDrawElementsInstancedARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINSTANCEDARBPROC glad_glDrawElementsInstancedARB
     * }
     */
    public static MemorySegment glad_glDrawElementsInstancedARB$segment() {
        return glad_glDrawElementsInstancedARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINSTANCEDARBPROC glad_glDrawElementsInstancedARB
     * }
     */
    public static MemorySegment glad_glDrawElementsInstancedARB() {
        return glad_glDrawElementsInstancedARB$constants.SEGMENT.get(glad_glDrawElementsInstancedARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINSTANCEDARBPROC glad_glDrawElementsInstancedARB
     * }
     */
    public static void glad_glDrawElementsInstancedARB(MemorySegment varValue) {
        glad_glDrawElementsInstancedARB$constants.SEGMENT.set(glad_glDrawElementsInstancedARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDrawElementsInstancedARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDrawElementsInstancedARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINSTANCEDARBPROC glad_debug_glDrawElementsInstancedARB
     * }
     */
    public static AddressLayout glad_debug_glDrawElementsInstancedARB$layout() {
        return glad_debug_glDrawElementsInstancedARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINSTANCEDARBPROC glad_debug_glDrawElementsInstancedARB
     * }
     */
    public static MemorySegment glad_debug_glDrawElementsInstancedARB$segment() {
        return glad_debug_glDrawElementsInstancedARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINSTANCEDARBPROC glad_debug_glDrawElementsInstancedARB
     * }
     */
    public static MemorySegment glad_debug_glDrawElementsInstancedARB() {
        return glad_debug_glDrawElementsInstancedARB$constants.SEGMENT.get(glad_debug_glDrawElementsInstancedARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINSTANCEDARBPROC glad_debug_glDrawElementsInstancedARB
     * }
     */
    public static void glad_debug_glDrawElementsInstancedARB(MemorySegment varValue) {
        glad_debug_glDrawElementsInstancedARB$constants.SEGMENT.set(glad_debug_glDrawElementsInstancedARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDrawElementsInstancedBaseInstance$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDrawElementsInstancedBaseInstance").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC glad_glDrawElementsInstancedBaseInstance
     * }
     */
    public static AddressLayout glad_glDrawElementsInstancedBaseInstance$layout() {
        return glad_glDrawElementsInstancedBaseInstance$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC glad_glDrawElementsInstancedBaseInstance
     * }
     */
    public static MemorySegment glad_glDrawElementsInstancedBaseInstance$segment() {
        return glad_glDrawElementsInstancedBaseInstance$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC glad_glDrawElementsInstancedBaseInstance
     * }
     */
    public static MemorySegment glad_glDrawElementsInstancedBaseInstance() {
        return glad_glDrawElementsInstancedBaseInstance$constants.SEGMENT.get(glad_glDrawElementsInstancedBaseInstance$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC glad_glDrawElementsInstancedBaseInstance
     * }
     */
    public static void glad_glDrawElementsInstancedBaseInstance(MemorySegment varValue) {
        glad_glDrawElementsInstancedBaseInstance$constants.SEGMENT.set(glad_glDrawElementsInstancedBaseInstance$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDrawElementsInstancedBaseInstance$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDrawElementsInstancedBaseInstance").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC glad_debug_glDrawElementsInstancedBaseInstance
     * }
     */
    public static AddressLayout glad_debug_glDrawElementsInstancedBaseInstance$layout() {
        return glad_debug_glDrawElementsInstancedBaseInstance$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC glad_debug_glDrawElementsInstancedBaseInstance
     * }
     */
    public static MemorySegment glad_debug_glDrawElementsInstancedBaseInstance$segment() {
        return glad_debug_glDrawElementsInstancedBaseInstance$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC glad_debug_glDrawElementsInstancedBaseInstance
     * }
     */
    public static MemorySegment glad_debug_glDrawElementsInstancedBaseInstance() {
        return glad_debug_glDrawElementsInstancedBaseInstance$constants.SEGMENT.get(glad_debug_glDrawElementsInstancedBaseInstance$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC glad_debug_glDrawElementsInstancedBaseInstance
     * }
     */
    public static void glad_debug_glDrawElementsInstancedBaseInstance(MemorySegment varValue) {
        glad_debug_glDrawElementsInstancedBaseInstance$constants.SEGMENT.set(glad_debug_glDrawElementsInstancedBaseInstance$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDrawElementsInstancedBaseVertex$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDrawElementsInstancedBaseVertex").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC glad_glDrawElementsInstancedBaseVertex
     * }
     */
    public static AddressLayout glad_glDrawElementsInstancedBaseVertex$layout() {
        return glad_glDrawElementsInstancedBaseVertex$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC glad_glDrawElementsInstancedBaseVertex
     * }
     */
    public static MemorySegment glad_glDrawElementsInstancedBaseVertex$segment() {
        return glad_glDrawElementsInstancedBaseVertex$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC glad_glDrawElementsInstancedBaseVertex
     * }
     */
    public static MemorySegment glad_glDrawElementsInstancedBaseVertex() {
        return glad_glDrawElementsInstancedBaseVertex$constants.SEGMENT.get(glad_glDrawElementsInstancedBaseVertex$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC glad_glDrawElementsInstancedBaseVertex
     * }
     */
    public static void glad_glDrawElementsInstancedBaseVertex(MemorySegment varValue) {
        glad_glDrawElementsInstancedBaseVertex$constants.SEGMENT.set(glad_glDrawElementsInstancedBaseVertex$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDrawElementsInstancedBaseVertex$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDrawElementsInstancedBaseVertex").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC glad_debug_glDrawElementsInstancedBaseVertex
     * }
     */
    public static AddressLayout glad_debug_glDrawElementsInstancedBaseVertex$layout() {
        return glad_debug_glDrawElementsInstancedBaseVertex$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC glad_debug_glDrawElementsInstancedBaseVertex
     * }
     */
    public static MemorySegment glad_debug_glDrawElementsInstancedBaseVertex$segment() {
        return glad_debug_glDrawElementsInstancedBaseVertex$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC glad_debug_glDrawElementsInstancedBaseVertex
     * }
     */
    public static MemorySegment glad_debug_glDrawElementsInstancedBaseVertex() {
        return glad_debug_glDrawElementsInstancedBaseVertex$constants.SEGMENT.get(glad_debug_glDrawElementsInstancedBaseVertex$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC glad_debug_glDrawElementsInstancedBaseVertex
     * }
     */
    public static void glad_debug_glDrawElementsInstancedBaseVertex(MemorySegment varValue) {
        glad_debug_glDrawElementsInstancedBaseVertex$constants.SEGMENT.set(glad_debug_glDrawElementsInstancedBaseVertex$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDrawElementsInstancedBaseVertexBaseInstance$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDrawElementsInstancedBaseVertexBaseInstance").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC glad_glDrawElementsInstancedBaseVertexBaseInstance
     * }
     */
    public static AddressLayout glad_glDrawElementsInstancedBaseVertexBaseInstance$layout() {
        return glad_glDrawElementsInstancedBaseVertexBaseInstance$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC glad_glDrawElementsInstancedBaseVertexBaseInstance
     * }
     */
    public static MemorySegment glad_glDrawElementsInstancedBaseVertexBaseInstance$segment() {
        return glad_glDrawElementsInstancedBaseVertexBaseInstance$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC glad_glDrawElementsInstancedBaseVertexBaseInstance
     * }
     */
    public static MemorySegment glad_glDrawElementsInstancedBaseVertexBaseInstance() {
        return glad_glDrawElementsInstancedBaseVertexBaseInstance$constants.SEGMENT.get(glad_glDrawElementsInstancedBaseVertexBaseInstance$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC glad_glDrawElementsInstancedBaseVertexBaseInstance
     * }
     */
    public static void glad_glDrawElementsInstancedBaseVertexBaseInstance(MemorySegment varValue) {
        glad_glDrawElementsInstancedBaseVertexBaseInstance$constants.SEGMENT.set(glad_glDrawElementsInstancedBaseVertexBaseInstance$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDrawElementsInstancedBaseVertexBaseInstance$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDrawElementsInstancedBaseVertexBaseInstance").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC glad_debug_glDrawElementsInstancedBaseVertexBaseInstance
     * }
     */
    public static AddressLayout glad_debug_glDrawElementsInstancedBaseVertexBaseInstance$layout() {
        return glad_debug_glDrawElementsInstancedBaseVertexBaseInstance$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC glad_debug_glDrawElementsInstancedBaseVertexBaseInstance
     * }
     */
    public static MemorySegment glad_debug_glDrawElementsInstancedBaseVertexBaseInstance$segment() {
        return glad_debug_glDrawElementsInstancedBaseVertexBaseInstance$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC glad_debug_glDrawElementsInstancedBaseVertexBaseInstance
     * }
     */
    public static MemorySegment glad_debug_glDrawElementsInstancedBaseVertexBaseInstance() {
        return glad_debug_glDrawElementsInstancedBaseVertexBaseInstance$constants.SEGMENT.get(glad_debug_glDrawElementsInstancedBaseVertexBaseInstance$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC glad_debug_glDrawElementsInstancedBaseVertexBaseInstance
     * }
     */
    public static void glad_debug_glDrawElementsInstancedBaseVertexBaseInstance(MemorySegment varValue) {
        glad_debug_glDrawElementsInstancedBaseVertexBaseInstance$constants.SEGMENT.set(glad_debug_glDrawElementsInstancedBaseVertexBaseInstance$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDrawElementsInstancedEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDrawElementsInstancedEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINSTANCEDEXTPROC glad_glDrawElementsInstancedEXT
     * }
     */
    public static AddressLayout glad_glDrawElementsInstancedEXT$layout() {
        return glad_glDrawElementsInstancedEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINSTANCEDEXTPROC glad_glDrawElementsInstancedEXT
     * }
     */
    public static MemorySegment glad_glDrawElementsInstancedEXT$segment() {
        return glad_glDrawElementsInstancedEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINSTANCEDEXTPROC glad_glDrawElementsInstancedEXT
     * }
     */
    public static MemorySegment glad_glDrawElementsInstancedEXT() {
        return glad_glDrawElementsInstancedEXT$constants.SEGMENT.get(glad_glDrawElementsInstancedEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINSTANCEDEXTPROC glad_glDrawElementsInstancedEXT
     * }
     */
    public static void glad_glDrawElementsInstancedEXT(MemorySegment varValue) {
        glad_glDrawElementsInstancedEXT$constants.SEGMENT.set(glad_glDrawElementsInstancedEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDrawElementsInstancedEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDrawElementsInstancedEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINSTANCEDEXTPROC glad_debug_glDrawElementsInstancedEXT
     * }
     */
    public static AddressLayout glad_debug_glDrawElementsInstancedEXT$layout() {
        return glad_debug_glDrawElementsInstancedEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINSTANCEDEXTPROC glad_debug_glDrawElementsInstancedEXT
     * }
     */
    public static MemorySegment glad_debug_glDrawElementsInstancedEXT$segment() {
        return glad_debug_glDrawElementsInstancedEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINSTANCEDEXTPROC glad_debug_glDrawElementsInstancedEXT
     * }
     */
    public static MemorySegment glad_debug_glDrawElementsInstancedEXT() {
        return glad_debug_glDrawElementsInstancedEXT$constants.SEGMENT.get(glad_debug_glDrawElementsInstancedEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWELEMENTSINSTANCEDEXTPROC glad_debug_glDrawElementsInstancedEXT
     * }
     */
    public static void glad_debug_glDrawElementsInstancedEXT(MemorySegment varValue) {
        glad_debug_glDrawElementsInstancedEXT$constants.SEGMENT.set(glad_debug_glDrawElementsInstancedEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDrawPixels$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDrawPixels").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWPIXELSPROC glad_glDrawPixels
     * }
     */
    public static AddressLayout glad_glDrawPixels$layout() {
        return glad_glDrawPixels$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWPIXELSPROC glad_glDrawPixels
     * }
     */
    public static MemorySegment glad_glDrawPixels$segment() {
        return glad_glDrawPixels$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWPIXELSPROC glad_glDrawPixels
     * }
     */
    public static MemorySegment glad_glDrawPixels() {
        return glad_glDrawPixels$constants.SEGMENT.get(glad_glDrawPixels$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWPIXELSPROC glad_glDrawPixels
     * }
     */
    public static void glad_glDrawPixels(MemorySegment varValue) {
        glad_glDrawPixels$constants.SEGMENT.set(glad_glDrawPixels$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDrawPixels$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDrawPixels").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWPIXELSPROC glad_debug_glDrawPixels
     * }
     */
    public static AddressLayout glad_debug_glDrawPixels$layout() {
        return glad_debug_glDrawPixels$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWPIXELSPROC glad_debug_glDrawPixels
     * }
     */
    public static MemorySegment glad_debug_glDrawPixels$segment() {
        return glad_debug_glDrawPixels$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWPIXELSPROC glad_debug_glDrawPixels
     * }
     */
    public static MemorySegment glad_debug_glDrawPixels() {
        return glad_debug_glDrawPixels$constants.SEGMENT.get(glad_debug_glDrawPixels$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWPIXELSPROC glad_debug_glDrawPixels
     * }
     */
    public static void glad_debug_glDrawPixels(MemorySegment varValue) {
        glad_debug_glDrawPixels$constants.SEGMENT.set(glad_debug_glDrawPixels$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDrawRangeElements$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDrawRangeElements").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWRANGEELEMENTSPROC glad_glDrawRangeElements
     * }
     */
    public static AddressLayout glad_glDrawRangeElements$layout() {
        return glad_glDrawRangeElements$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWRANGEELEMENTSPROC glad_glDrawRangeElements
     * }
     */
    public static MemorySegment glad_glDrawRangeElements$segment() {
        return glad_glDrawRangeElements$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWRANGEELEMENTSPROC glad_glDrawRangeElements
     * }
     */
    public static MemorySegment glad_glDrawRangeElements() {
        return glad_glDrawRangeElements$constants.SEGMENT.get(glad_glDrawRangeElements$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWRANGEELEMENTSPROC glad_glDrawRangeElements
     * }
     */
    public static void glad_glDrawRangeElements(MemorySegment varValue) {
        glad_glDrawRangeElements$constants.SEGMENT.set(glad_glDrawRangeElements$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDrawRangeElements$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDrawRangeElements").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWRANGEELEMENTSPROC glad_debug_glDrawRangeElements
     * }
     */
    public static AddressLayout glad_debug_glDrawRangeElements$layout() {
        return glad_debug_glDrawRangeElements$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWRANGEELEMENTSPROC glad_debug_glDrawRangeElements
     * }
     */
    public static MemorySegment glad_debug_glDrawRangeElements$segment() {
        return glad_debug_glDrawRangeElements$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWRANGEELEMENTSPROC glad_debug_glDrawRangeElements
     * }
     */
    public static MemorySegment glad_debug_glDrawRangeElements() {
        return glad_debug_glDrawRangeElements$constants.SEGMENT.get(glad_debug_glDrawRangeElements$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWRANGEELEMENTSPROC glad_debug_glDrawRangeElements
     * }
     */
    public static void glad_debug_glDrawRangeElements(MemorySegment varValue) {
        glad_debug_glDrawRangeElements$constants.SEGMENT.set(glad_debug_glDrawRangeElements$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDrawRangeElementsBaseVertex$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDrawRangeElementsBaseVertex").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC glad_glDrawRangeElementsBaseVertex
     * }
     */
    public static AddressLayout glad_glDrawRangeElementsBaseVertex$layout() {
        return glad_glDrawRangeElementsBaseVertex$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC glad_glDrawRangeElementsBaseVertex
     * }
     */
    public static MemorySegment glad_glDrawRangeElementsBaseVertex$segment() {
        return glad_glDrawRangeElementsBaseVertex$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC glad_glDrawRangeElementsBaseVertex
     * }
     */
    public static MemorySegment glad_glDrawRangeElementsBaseVertex() {
        return glad_glDrawRangeElementsBaseVertex$constants.SEGMENT.get(glad_glDrawRangeElementsBaseVertex$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC glad_glDrawRangeElementsBaseVertex
     * }
     */
    public static void glad_glDrawRangeElementsBaseVertex(MemorySegment varValue) {
        glad_glDrawRangeElementsBaseVertex$constants.SEGMENT.set(glad_glDrawRangeElementsBaseVertex$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDrawRangeElementsBaseVertex$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDrawRangeElementsBaseVertex").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC glad_debug_glDrawRangeElementsBaseVertex
     * }
     */
    public static AddressLayout glad_debug_glDrawRangeElementsBaseVertex$layout() {
        return glad_debug_glDrawRangeElementsBaseVertex$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC glad_debug_glDrawRangeElementsBaseVertex
     * }
     */
    public static MemorySegment glad_debug_glDrawRangeElementsBaseVertex$segment() {
        return glad_debug_glDrawRangeElementsBaseVertex$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC glad_debug_glDrawRangeElementsBaseVertex
     * }
     */
    public static MemorySegment glad_debug_glDrawRangeElementsBaseVertex() {
        return glad_debug_glDrawRangeElementsBaseVertex$constants.SEGMENT.get(glad_debug_glDrawRangeElementsBaseVertex$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC glad_debug_glDrawRangeElementsBaseVertex
     * }
     */
    public static void glad_debug_glDrawRangeElementsBaseVertex(MemorySegment varValue) {
        glad_debug_glDrawRangeElementsBaseVertex$constants.SEGMENT.set(glad_debug_glDrawRangeElementsBaseVertex$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDrawRangeElementsEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDrawRangeElementsEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWRANGEELEMENTSEXTPROC glad_glDrawRangeElementsEXT
     * }
     */
    public static AddressLayout glad_glDrawRangeElementsEXT$layout() {
        return glad_glDrawRangeElementsEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWRANGEELEMENTSEXTPROC glad_glDrawRangeElementsEXT
     * }
     */
    public static MemorySegment glad_glDrawRangeElementsEXT$segment() {
        return glad_glDrawRangeElementsEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWRANGEELEMENTSEXTPROC glad_glDrawRangeElementsEXT
     * }
     */
    public static MemorySegment glad_glDrawRangeElementsEXT() {
        return glad_glDrawRangeElementsEXT$constants.SEGMENT.get(glad_glDrawRangeElementsEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWRANGEELEMENTSEXTPROC glad_glDrawRangeElementsEXT
     * }
     */
    public static void glad_glDrawRangeElementsEXT(MemorySegment varValue) {
        glad_glDrawRangeElementsEXT$constants.SEGMENT.set(glad_glDrawRangeElementsEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDrawRangeElementsEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDrawRangeElementsEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWRANGEELEMENTSEXTPROC glad_debug_glDrawRangeElementsEXT
     * }
     */
    public static AddressLayout glad_debug_glDrawRangeElementsEXT$layout() {
        return glad_debug_glDrawRangeElementsEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWRANGEELEMENTSEXTPROC glad_debug_glDrawRangeElementsEXT
     * }
     */
    public static MemorySegment glad_debug_glDrawRangeElementsEXT$segment() {
        return glad_debug_glDrawRangeElementsEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWRANGEELEMENTSEXTPROC glad_debug_glDrawRangeElementsEXT
     * }
     */
    public static MemorySegment glad_debug_glDrawRangeElementsEXT() {
        return glad_debug_glDrawRangeElementsEXT$constants.SEGMENT.get(glad_debug_glDrawRangeElementsEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWRANGEELEMENTSEXTPROC glad_debug_glDrawRangeElementsEXT
     * }
     */
    public static void glad_debug_glDrawRangeElementsEXT(MemorySegment varValue) {
        glad_debug_glDrawRangeElementsEXT$constants.SEGMENT.set(glad_debug_glDrawRangeElementsEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDrawTransformFeedback$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDrawTransformFeedback").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWTRANSFORMFEEDBACKPROC glad_glDrawTransformFeedback
     * }
     */
    public static AddressLayout glad_glDrawTransformFeedback$layout() {
        return glad_glDrawTransformFeedback$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWTRANSFORMFEEDBACKPROC glad_glDrawTransformFeedback
     * }
     */
    public static MemorySegment glad_glDrawTransformFeedback$segment() {
        return glad_glDrawTransformFeedback$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWTRANSFORMFEEDBACKPROC glad_glDrawTransformFeedback
     * }
     */
    public static MemorySegment glad_glDrawTransformFeedback() {
        return glad_glDrawTransformFeedback$constants.SEGMENT.get(glad_glDrawTransformFeedback$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWTRANSFORMFEEDBACKPROC glad_glDrawTransformFeedback
     * }
     */
    public static void glad_glDrawTransformFeedback(MemorySegment varValue) {
        glad_glDrawTransformFeedback$constants.SEGMENT.set(glad_glDrawTransformFeedback$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDrawTransformFeedback$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDrawTransformFeedback").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWTRANSFORMFEEDBACKPROC glad_debug_glDrawTransformFeedback
     * }
     */
    public static AddressLayout glad_debug_glDrawTransformFeedback$layout() {
        return glad_debug_glDrawTransformFeedback$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWTRANSFORMFEEDBACKPROC glad_debug_glDrawTransformFeedback
     * }
     */
    public static MemorySegment glad_debug_glDrawTransformFeedback$segment() {
        return glad_debug_glDrawTransformFeedback$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWTRANSFORMFEEDBACKPROC glad_debug_glDrawTransformFeedback
     * }
     */
    public static MemorySegment glad_debug_glDrawTransformFeedback() {
        return glad_debug_glDrawTransformFeedback$constants.SEGMENT.get(glad_debug_glDrawTransformFeedback$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWTRANSFORMFEEDBACKPROC glad_debug_glDrawTransformFeedback
     * }
     */
    public static void glad_debug_glDrawTransformFeedback(MemorySegment varValue) {
        glad_debug_glDrawTransformFeedback$constants.SEGMENT.set(glad_debug_glDrawTransformFeedback$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDrawTransformFeedbackInstanced$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDrawTransformFeedbackInstanced").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC glad_glDrawTransformFeedbackInstanced
     * }
     */
    public static AddressLayout glad_glDrawTransformFeedbackInstanced$layout() {
        return glad_glDrawTransformFeedbackInstanced$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC glad_glDrawTransformFeedbackInstanced
     * }
     */
    public static MemorySegment glad_glDrawTransformFeedbackInstanced$segment() {
        return glad_glDrawTransformFeedbackInstanced$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC glad_glDrawTransformFeedbackInstanced
     * }
     */
    public static MemorySegment glad_glDrawTransformFeedbackInstanced() {
        return glad_glDrawTransformFeedbackInstanced$constants.SEGMENT.get(glad_glDrawTransformFeedbackInstanced$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC glad_glDrawTransformFeedbackInstanced
     * }
     */
    public static void glad_glDrawTransformFeedbackInstanced(MemorySegment varValue) {
        glad_glDrawTransformFeedbackInstanced$constants.SEGMENT.set(glad_glDrawTransformFeedbackInstanced$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDrawTransformFeedbackInstanced$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDrawTransformFeedbackInstanced").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC glad_debug_glDrawTransformFeedbackInstanced
     * }
     */
    public static AddressLayout glad_debug_glDrawTransformFeedbackInstanced$layout() {
        return glad_debug_glDrawTransformFeedbackInstanced$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC glad_debug_glDrawTransformFeedbackInstanced
     * }
     */
    public static MemorySegment glad_debug_glDrawTransformFeedbackInstanced$segment() {
        return glad_debug_glDrawTransformFeedbackInstanced$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC glad_debug_glDrawTransformFeedbackInstanced
     * }
     */
    public static MemorySegment glad_debug_glDrawTransformFeedbackInstanced() {
        return glad_debug_glDrawTransformFeedbackInstanced$constants.SEGMENT.get(glad_debug_glDrawTransformFeedbackInstanced$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC glad_debug_glDrawTransformFeedbackInstanced
     * }
     */
    public static void glad_debug_glDrawTransformFeedbackInstanced(MemorySegment varValue) {
        glad_debug_glDrawTransformFeedbackInstanced$constants.SEGMENT.set(glad_debug_glDrawTransformFeedbackInstanced$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDrawTransformFeedbackNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDrawTransformFeedbackNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWTRANSFORMFEEDBACKNVPROC glad_glDrawTransformFeedbackNV
     * }
     */
    public static AddressLayout glad_glDrawTransformFeedbackNV$layout() {
        return glad_glDrawTransformFeedbackNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWTRANSFORMFEEDBACKNVPROC glad_glDrawTransformFeedbackNV
     * }
     */
    public static MemorySegment glad_glDrawTransformFeedbackNV$segment() {
        return glad_glDrawTransformFeedbackNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWTRANSFORMFEEDBACKNVPROC glad_glDrawTransformFeedbackNV
     * }
     */
    public static MemorySegment glad_glDrawTransformFeedbackNV() {
        return glad_glDrawTransformFeedbackNV$constants.SEGMENT.get(glad_glDrawTransformFeedbackNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWTRANSFORMFEEDBACKNVPROC glad_glDrawTransformFeedbackNV
     * }
     */
    public static void glad_glDrawTransformFeedbackNV(MemorySegment varValue) {
        glad_glDrawTransformFeedbackNV$constants.SEGMENT.set(glad_glDrawTransformFeedbackNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDrawTransformFeedbackNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDrawTransformFeedbackNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWTRANSFORMFEEDBACKNVPROC glad_debug_glDrawTransformFeedbackNV
     * }
     */
    public static AddressLayout glad_debug_glDrawTransformFeedbackNV$layout() {
        return glad_debug_glDrawTransformFeedbackNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWTRANSFORMFEEDBACKNVPROC glad_debug_glDrawTransformFeedbackNV
     * }
     */
    public static MemorySegment glad_debug_glDrawTransformFeedbackNV$segment() {
        return glad_debug_glDrawTransformFeedbackNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWTRANSFORMFEEDBACKNVPROC glad_debug_glDrawTransformFeedbackNV
     * }
     */
    public static MemorySegment glad_debug_glDrawTransformFeedbackNV() {
        return glad_debug_glDrawTransformFeedbackNV$constants.SEGMENT.get(glad_debug_glDrawTransformFeedbackNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWTRANSFORMFEEDBACKNVPROC glad_debug_glDrawTransformFeedbackNV
     * }
     */
    public static void glad_debug_glDrawTransformFeedbackNV(MemorySegment varValue) {
        glad_debug_glDrawTransformFeedbackNV$constants.SEGMENT.set(glad_debug_glDrawTransformFeedbackNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDrawTransformFeedbackStream$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDrawTransformFeedbackStream").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC glad_glDrawTransformFeedbackStream
     * }
     */
    public static AddressLayout glad_glDrawTransformFeedbackStream$layout() {
        return glad_glDrawTransformFeedbackStream$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC glad_glDrawTransformFeedbackStream
     * }
     */
    public static MemorySegment glad_glDrawTransformFeedbackStream$segment() {
        return glad_glDrawTransformFeedbackStream$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC glad_glDrawTransformFeedbackStream
     * }
     */
    public static MemorySegment glad_glDrawTransformFeedbackStream() {
        return glad_glDrawTransformFeedbackStream$constants.SEGMENT.get(glad_glDrawTransformFeedbackStream$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC glad_glDrawTransformFeedbackStream
     * }
     */
    public static void glad_glDrawTransformFeedbackStream(MemorySegment varValue) {
        glad_glDrawTransformFeedbackStream$constants.SEGMENT.set(glad_glDrawTransformFeedbackStream$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDrawTransformFeedbackStream$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDrawTransformFeedbackStream").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC glad_debug_glDrawTransformFeedbackStream
     * }
     */
    public static AddressLayout glad_debug_glDrawTransformFeedbackStream$layout() {
        return glad_debug_glDrawTransformFeedbackStream$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC glad_debug_glDrawTransformFeedbackStream
     * }
     */
    public static MemorySegment glad_debug_glDrawTransformFeedbackStream$segment() {
        return glad_debug_glDrawTransformFeedbackStream$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC glad_debug_glDrawTransformFeedbackStream
     * }
     */
    public static MemorySegment glad_debug_glDrawTransformFeedbackStream() {
        return glad_debug_glDrawTransformFeedbackStream$constants.SEGMENT.get(glad_debug_glDrawTransformFeedbackStream$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC glad_debug_glDrawTransformFeedbackStream
     * }
     */
    public static void glad_debug_glDrawTransformFeedbackStream(MemorySegment varValue) {
        glad_debug_glDrawTransformFeedbackStream$constants.SEGMENT.set(glad_debug_glDrawTransformFeedbackStream$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glDrawTransformFeedbackStreamInstanced$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glDrawTransformFeedbackStreamInstanced").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC glad_glDrawTransformFeedbackStreamInstanced
     * }
     */
    public static AddressLayout glad_glDrawTransformFeedbackStreamInstanced$layout() {
        return glad_glDrawTransformFeedbackStreamInstanced$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC glad_glDrawTransformFeedbackStreamInstanced
     * }
     */
    public static MemorySegment glad_glDrawTransformFeedbackStreamInstanced$segment() {
        return glad_glDrawTransformFeedbackStreamInstanced$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC glad_glDrawTransformFeedbackStreamInstanced
     * }
     */
    public static MemorySegment glad_glDrawTransformFeedbackStreamInstanced() {
        return glad_glDrawTransformFeedbackStreamInstanced$constants.SEGMENT.get(glad_glDrawTransformFeedbackStreamInstanced$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC glad_glDrawTransformFeedbackStreamInstanced
     * }
     */
    public static void glad_glDrawTransformFeedbackStreamInstanced(MemorySegment varValue) {
        glad_glDrawTransformFeedbackStreamInstanced$constants.SEGMENT.set(glad_glDrawTransformFeedbackStreamInstanced$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glDrawTransformFeedbackStreamInstanced$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glDrawTransformFeedbackStreamInstanced").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC glad_debug_glDrawTransformFeedbackStreamInstanced
     * }
     */
    public static AddressLayout glad_debug_glDrawTransformFeedbackStreamInstanced$layout() {
        return glad_debug_glDrawTransformFeedbackStreamInstanced$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC glad_debug_glDrawTransformFeedbackStreamInstanced
     * }
     */
    public static MemorySegment glad_debug_glDrawTransformFeedbackStreamInstanced$segment() {
        return glad_debug_glDrawTransformFeedbackStreamInstanced$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC glad_debug_glDrawTransformFeedbackStreamInstanced
     * }
     */
    public static MemorySegment glad_debug_glDrawTransformFeedbackStreamInstanced() {
        return glad_debug_glDrawTransformFeedbackStreamInstanced$constants.SEGMENT.get(glad_debug_glDrawTransformFeedbackStreamInstanced$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC glad_debug_glDrawTransformFeedbackStreamInstanced
     * }
     */
    public static void glad_debug_glDrawTransformFeedbackStreamInstanced(MemorySegment varValue) {
        glad_debug_glDrawTransformFeedbackStreamInstanced$constants.SEGMENT.set(glad_debug_glDrawTransformFeedbackStreamInstanced$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glEdgeFlag$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glEdgeFlag").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLEDGEFLAGPROC glad_glEdgeFlag
     * }
     */
    public static AddressLayout glad_glEdgeFlag$layout() {
        return glad_glEdgeFlag$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLEDGEFLAGPROC glad_glEdgeFlag
     * }
     */
    public static MemorySegment glad_glEdgeFlag$segment() {
        return glad_glEdgeFlag$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLEDGEFLAGPROC glad_glEdgeFlag
     * }
     */
    public static MemorySegment glad_glEdgeFlag() {
        return glad_glEdgeFlag$constants.SEGMENT.get(glad_glEdgeFlag$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLEDGEFLAGPROC glad_glEdgeFlag
     * }
     */
    public static void glad_glEdgeFlag(MemorySegment varValue) {
        glad_glEdgeFlag$constants.SEGMENT.set(glad_glEdgeFlag$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glEdgeFlag$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glEdgeFlag").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLEDGEFLAGPROC glad_debug_glEdgeFlag
     * }
     */
    public static AddressLayout glad_debug_glEdgeFlag$layout() {
        return glad_debug_glEdgeFlag$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLEDGEFLAGPROC glad_debug_glEdgeFlag
     * }
     */
    public static MemorySegment glad_debug_glEdgeFlag$segment() {
        return glad_debug_glEdgeFlag$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLEDGEFLAGPROC glad_debug_glEdgeFlag
     * }
     */
    public static MemorySegment glad_debug_glEdgeFlag() {
        return glad_debug_glEdgeFlag$constants.SEGMENT.get(glad_debug_glEdgeFlag$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLEDGEFLAGPROC glad_debug_glEdgeFlag
     * }
     */
    public static void glad_debug_glEdgeFlag(MemorySegment varValue) {
        glad_debug_glEdgeFlag$constants.SEGMENT.set(glad_debug_glEdgeFlag$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glEdgeFlagPointer$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glEdgeFlagPointer").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLEDGEFLAGPOINTERPROC glad_glEdgeFlagPointer
     * }
     */
    public static AddressLayout glad_glEdgeFlagPointer$layout() {
        return glad_glEdgeFlagPointer$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLEDGEFLAGPOINTERPROC glad_glEdgeFlagPointer
     * }
     */
    public static MemorySegment glad_glEdgeFlagPointer$segment() {
        return glad_glEdgeFlagPointer$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLEDGEFLAGPOINTERPROC glad_glEdgeFlagPointer
     * }
     */
    public static MemorySegment glad_glEdgeFlagPointer() {
        return glad_glEdgeFlagPointer$constants.SEGMENT.get(glad_glEdgeFlagPointer$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLEDGEFLAGPOINTERPROC glad_glEdgeFlagPointer
     * }
     */
    public static void glad_glEdgeFlagPointer(MemorySegment varValue) {
        glad_glEdgeFlagPointer$constants.SEGMENT.set(glad_glEdgeFlagPointer$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glEdgeFlagPointer$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glEdgeFlagPointer").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLEDGEFLAGPOINTERPROC glad_debug_glEdgeFlagPointer
     * }
     */
    public static AddressLayout glad_debug_glEdgeFlagPointer$layout() {
        return glad_debug_glEdgeFlagPointer$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLEDGEFLAGPOINTERPROC glad_debug_glEdgeFlagPointer
     * }
     */
    public static MemorySegment glad_debug_glEdgeFlagPointer$segment() {
        return glad_debug_glEdgeFlagPointer$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLEDGEFLAGPOINTERPROC glad_debug_glEdgeFlagPointer
     * }
     */
    public static MemorySegment glad_debug_glEdgeFlagPointer() {
        return glad_debug_glEdgeFlagPointer$constants.SEGMENT.get(glad_debug_glEdgeFlagPointer$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLEDGEFLAGPOINTERPROC glad_debug_glEdgeFlagPointer
     * }
     */
    public static void glad_debug_glEdgeFlagPointer(MemorySegment varValue) {
        glad_debug_glEdgeFlagPointer$constants.SEGMENT.set(glad_debug_glEdgeFlagPointer$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glEdgeFlagPointerEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glEdgeFlagPointerEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLEDGEFLAGPOINTEREXTPROC glad_glEdgeFlagPointerEXT
     * }
     */
    public static AddressLayout glad_glEdgeFlagPointerEXT$layout() {
        return glad_glEdgeFlagPointerEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLEDGEFLAGPOINTEREXTPROC glad_glEdgeFlagPointerEXT
     * }
     */
    public static MemorySegment glad_glEdgeFlagPointerEXT$segment() {
        return glad_glEdgeFlagPointerEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLEDGEFLAGPOINTEREXTPROC glad_glEdgeFlagPointerEXT
     * }
     */
    public static MemorySegment glad_glEdgeFlagPointerEXT() {
        return glad_glEdgeFlagPointerEXT$constants.SEGMENT.get(glad_glEdgeFlagPointerEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLEDGEFLAGPOINTEREXTPROC glad_glEdgeFlagPointerEXT
     * }
     */
    public static void glad_glEdgeFlagPointerEXT(MemorySegment varValue) {
        glad_glEdgeFlagPointerEXT$constants.SEGMENT.set(glad_glEdgeFlagPointerEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glEdgeFlagPointerEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glEdgeFlagPointerEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLEDGEFLAGPOINTEREXTPROC glad_debug_glEdgeFlagPointerEXT
     * }
     */
    public static AddressLayout glad_debug_glEdgeFlagPointerEXT$layout() {
        return glad_debug_glEdgeFlagPointerEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLEDGEFLAGPOINTEREXTPROC glad_debug_glEdgeFlagPointerEXT
     * }
     */
    public static MemorySegment glad_debug_glEdgeFlagPointerEXT$segment() {
        return glad_debug_glEdgeFlagPointerEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLEDGEFLAGPOINTEREXTPROC glad_debug_glEdgeFlagPointerEXT
     * }
     */
    public static MemorySegment glad_debug_glEdgeFlagPointerEXT() {
        return glad_debug_glEdgeFlagPointerEXT$constants.SEGMENT.get(glad_debug_glEdgeFlagPointerEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLEDGEFLAGPOINTEREXTPROC glad_debug_glEdgeFlagPointerEXT
     * }
     */
    public static void glad_debug_glEdgeFlagPointerEXT(MemorySegment varValue) {
        glad_debug_glEdgeFlagPointerEXT$constants.SEGMENT.set(glad_debug_glEdgeFlagPointerEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glEdgeFlagv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glEdgeFlagv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLEDGEFLAGVPROC glad_glEdgeFlagv
     * }
     */
    public static AddressLayout glad_glEdgeFlagv$layout() {
        return glad_glEdgeFlagv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLEDGEFLAGVPROC glad_glEdgeFlagv
     * }
     */
    public static MemorySegment glad_glEdgeFlagv$segment() {
        return glad_glEdgeFlagv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLEDGEFLAGVPROC glad_glEdgeFlagv
     * }
     */
    public static MemorySegment glad_glEdgeFlagv() {
        return glad_glEdgeFlagv$constants.SEGMENT.get(glad_glEdgeFlagv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLEDGEFLAGVPROC glad_glEdgeFlagv
     * }
     */
    public static void glad_glEdgeFlagv(MemorySegment varValue) {
        glad_glEdgeFlagv$constants.SEGMENT.set(glad_glEdgeFlagv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glEdgeFlagv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glEdgeFlagv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLEDGEFLAGVPROC glad_debug_glEdgeFlagv
     * }
     */
    public static AddressLayout glad_debug_glEdgeFlagv$layout() {
        return glad_debug_glEdgeFlagv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLEDGEFLAGVPROC glad_debug_glEdgeFlagv
     * }
     */
    public static MemorySegment glad_debug_glEdgeFlagv$segment() {
        return glad_debug_glEdgeFlagv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLEDGEFLAGVPROC glad_debug_glEdgeFlagv
     * }
     */
    public static MemorySegment glad_debug_glEdgeFlagv() {
        return glad_debug_glEdgeFlagv$constants.SEGMENT.get(glad_debug_glEdgeFlagv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLEDGEFLAGVPROC glad_debug_glEdgeFlagv
     * }
     */
    public static void glad_debug_glEdgeFlagv(MemorySegment varValue) {
        glad_debug_glEdgeFlagv$constants.SEGMENT.set(glad_debug_glEdgeFlagv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glEnable$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glEnable").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEPROC glad_glEnable
     * }
     */
    public static AddressLayout glad_glEnable$layout() {
        return glad_glEnable$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEPROC glad_glEnable
     * }
     */
    public static MemorySegment glad_glEnable$segment() {
        return glad_glEnable$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEPROC glad_glEnable
     * }
     */
    public static MemorySegment glad_glEnable() {
        return glad_glEnable$constants.SEGMENT.get(glad_glEnable$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEPROC glad_glEnable
     * }
     */
    public static void glad_glEnable(MemorySegment varValue) {
        glad_glEnable$constants.SEGMENT.set(glad_glEnable$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glEnable$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glEnable").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEPROC glad_debug_glEnable
     * }
     */
    public static AddressLayout glad_debug_glEnable$layout() {
        return glad_debug_glEnable$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEPROC glad_debug_glEnable
     * }
     */
    public static MemorySegment glad_debug_glEnable$segment() {
        return glad_debug_glEnable$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEPROC glad_debug_glEnable
     * }
     */
    public static MemorySegment glad_debug_glEnable() {
        return glad_debug_glEnable$constants.SEGMENT.get(glad_debug_glEnable$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEPROC glad_debug_glEnable
     * }
     */
    public static void glad_debug_glEnable(MemorySegment varValue) {
        glad_debug_glEnable$constants.SEGMENT.set(glad_debug_glEnable$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glEnableClientState$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glEnableClientState").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLECLIENTSTATEPROC glad_glEnableClientState
     * }
     */
    public static AddressLayout glad_glEnableClientState$layout() {
        return glad_glEnableClientState$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLECLIENTSTATEPROC glad_glEnableClientState
     * }
     */
    public static MemorySegment glad_glEnableClientState$segment() {
        return glad_glEnableClientState$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLECLIENTSTATEPROC glad_glEnableClientState
     * }
     */
    public static MemorySegment glad_glEnableClientState() {
        return glad_glEnableClientState$constants.SEGMENT.get(glad_glEnableClientState$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLECLIENTSTATEPROC glad_glEnableClientState
     * }
     */
    public static void glad_glEnableClientState(MemorySegment varValue) {
        glad_glEnableClientState$constants.SEGMENT.set(glad_glEnableClientState$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glEnableClientState$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glEnableClientState").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLECLIENTSTATEPROC glad_debug_glEnableClientState
     * }
     */
    public static AddressLayout glad_debug_glEnableClientState$layout() {
        return glad_debug_glEnableClientState$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLECLIENTSTATEPROC glad_debug_glEnableClientState
     * }
     */
    public static MemorySegment glad_debug_glEnableClientState$segment() {
        return glad_debug_glEnableClientState$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLECLIENTSTATEPROC glad_debug_glEnableClientState
     * }
     */
    public static MemorySegment glad_debug_glEnableClientState() {
        return glad_debug_glEnableClientState$constants.SEGMENT.get(glad_debug_glEnableClientState$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLECLIENTSTATEPROC glad_debug_glEnableClientState
     * }
     */
    public static void glad_debug_glEnableClientState(MemorySegment varValue) {
        glad_debug_glEnableClientState$constants.SEGMENT.set(glad_debug_glEnableClientState$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glEnableClientStateIndexedEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glEnableClientStateIndexedEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLECLIENTSTATEINDEXEDEXTPROC glad_glEnableClientStateIndexedEXT
     * }
     */
    public static AddressLayout glad_glEnableClientStateIndexedEXT$layout() {
        return glad_glEnableClientStateIndexedEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLECLIENTSTATEINDEXEDEXTPROC glad_glEnableClientStateIndexedEXT
     * }
     */
    public static MemorySegment glad_glEnableClientStateIndexedEXT$segment() {
        return glad_glEnableClientStateIndexedEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLECLIENTSTATEINDEXEDEXTPROC glad_glEnableClientStateIndexedEXT
     * }
     */
    public static MemorySegment glad_glEnableClientStateIndexedEXT() {
        return glad_glEnableClientStateIndexedEXT$constants.SEGMENT.get(glad_glEnableClientStateIndexedEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLECLIENTSTATEINDEXEDEXTPROC glad_glEnableClientStateIndexedEXT
     * }
     */
    public static void glad_glEnableClientStateIndexedEXT(MemorySegment varValue) {
        glad_glEnableClientStateIndexedEXT$constants.SEGMENT.set(glad_glEnableClientStateIndexedEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glEnableClientStateIndexedEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glEnableClientStateIndexedEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLECLIENTSTATEINDEXEDEXTPROC glad_debug_glEnableClientStateIndexedEXT
     * }
     */
    public static AddressLayout glad_debug_glEnableClientStateIndexedEXT$layout() {
        return glad_debug_glEnableClientStateIndexedEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLECLIENTSTATEINDEXEDEXTPROC glad_debug_glEnableClientStateIndexedEXT
     * }
     */
    public static MemorySegment glad_debug_glEnableClientStateIndexedEXT$segment() {
        return glad_debug_glEnableClientStateIndexedEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLECLIENTSTATEINDEXEDEXTPROC glad_debug_glEnableClientStateIndexedEXT
     * }
     */
    public static MemorySegment glad_debug_glEnableClientStateIndexedEXT() {
        return glad_debug_glEnableClientStateIndexedEXT$constants.SEGMENT.get(glad_debug_glEnableClientStateIndexedEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLECLIENTSTATEINDEXEDEXTPROC glad_debug_glEnableClientStateIndexedEXT
     * }
     */
    public static void glad_debug_glEnableClientStateIndexedEXT(MemorySegment varValue) {
        glad_debug_glEnableClientStateIndexedEXT$constants.SEGMENT.set(glad_debug_glEnableClientStateIndexedEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glEnableClientStateiEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glEnableClientStateiEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLECLIENTSTATEIEXTPROC glad_glEnableClientStateiEXT
     * }
     */
    public static AddressLayout glad_glEnableClientStateiEXT$layout() {
        return glad_glEnableClientStateiEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLECLIENTSTATEIEXTPROC glad_glEnableClientStateiEXT
     * }
     */
    public static MemorySegment glad_glEnableClientStateiEXT$segment() {
        return glad_glEnableClientStateiEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLECLIENTSTATEIEXTPROC glad_glEnableClientStateiEXT
     * }
     */
    public static MemorySegment glad_glEnableClientStateiEXT() {
        return glad_glEnableClientStateiEXT$constants.SEGMENT.get(glad_glEnableClientStateiEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLECLIENTSTATEIEXTPROC glad_glEnableClientStateiEXT
     * }
     */
    public static void glad_glEnableClientStateiEXT(MemorySegment varValue) {
        glad_glEnableClientStateiEXT$constants.SEGMENT.set(glad_glEnableClientStateiEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glEnableClientStateiEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glEnableClientStateiEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLECLIENTSTATEIEXTPROC glad_debug_glEnableClientStateiEXT
     * }
     */
    public static AddressLayout glad_debug_glEnableClientStateiEXT$layout() {
        return glad_debug_glEnableClientStateiEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLECLIENTSTATEIEXTPROC glad_debug_glEnableClientStateiEXT
     * }
     */
    public static MemorySegment glad_debug_glEnableClientStateiEXT$segment() {
        return glad_debug_glEnableClientStateiEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLECLIENTSTATEIEXTPROC glad_debug_glEnableClientStateiEXT
     * }
     */
    public static MemorySegment glad_debug_glEnableClientStateiEXT() {
        return glad_debug_glEnableClientStateiEXT$constants.SEGMENT.get(glad_debug_glEnableClientStateiEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLECLIENTSTATEIEXTPROC glad_debug_glEnableClientStateiEXT
     * }
     */
    public static void glad_debug_glEnableClientStateiEXT(MemorySegment varValue) {
        glad_debug_glEnableClientStateiEXT$constants.SEGMENT.set(glad_debug_glEnableClientStateiEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glEnableIndexedEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glEnableIndexedEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEINDEXEDEXTPROC glad_glEnableIndexedEXT
     * }
     */
    public static AddressLayout glad_glEnableIndexedEXT$layout() {
        return glad_glEnableIndexedEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEINDEXEDEXTPROC glad_glEnableIndexedEXT
     * }
     */
    public static MemorySegment glad_glEnableIndexedEXT$segment() {
        return glad_glEnableIndexedEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEINDEXEDEXTPROC glad_glEnableIndexedEXT
     * }
     */
    public static MemorySegment glad_glEnableIndexedEXT() {
        return glad_glEnableIndexedEXT$constants.SEGMENT.get(glad_glEnableIndexedEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEINDEXEDEXTPROC glad_glEnableIndexedEXT
     * }
     */
    public static void glad_glEnableIndexedEXT(MemorySegment varValue) {
        glad_glEnableIndexedEXT$constants.SEGMENT.set(glad_glEnableIndexedEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glEnableIndexedEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glEnableIndexedEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEINDEXEDEXTPROC glad_debug_glEnableIndexedEXT
     * }
     */
    public static AddressLayout glad_debug_glEnableIndexedEXT$layout() {
        return glad_debug_glEnableIndexedEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEINDEXEDEXTPROC glad_debug_glEnableIndexedEXT
     * }
     */
    public static MemorySegment glad_debug_glEnableIndexedEXT$segment() {
        return glad_debug_glEnableIndexedEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEINDEXEDEXTPROC glad_debug_glEnableIndexedEXT
     * }
     */
    public static MemorySegment glad_debug_glEnableIndexedEXT() {
        return glad_debug_glEnableIndexedEXT$constants.SEGMENT.get(glad_debug_glEnableIndexedEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEINDEXEDEXTPROC glad_debug_glEnableIndexedEXT
     * }
     */
    public static void glad_debug_glEnableIndexedEXT(MemorySegment varValue) {
        glad_debug_glEnableIndexedEXT$constants.SEGMENT.set(glad_debug_glEnableIndexedEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glEnableVertexArrayAttrib$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glEnableVertexArrayAttrib").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEVERTEXARRAYATTRIBPROC glad_glEnableVertexArrayAttrib
     * }
     */
    public static AddressLayout glad_glEnableVertexArrayAttrib$layout() {
        return glad_glEnableVertexArrayAttrib$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEVERTEXARRAYATTRIBPROC glad_glEnableVertexArrayAttrib
     * }
     */
    public static MemorySegment glad_glEnableVertexArrayAttrib$segment() {
        return glad_glEnableVertexArrayAttrib$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEVERTEXARRAYATTRIBPROC glad_glEnableVertexArrayAttrib
     * }
     */
    public static MemorySegment glad_glEnableVertexArrayAttrib() {
        return glad_glEnableVertexArrayAttrib$constants.SEGMENT.get(glad_glEnableVertexArrayAttrib$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEVERTEXARRAYATTRIBPROC glad_glEnableVertexArrayAttrib
     * }
     */
    public static void glad_glEnableVertexArrayAttrib(MemorySegment varValue) {
        glad_glEnableVertexArrayAttrib$constants.SEGMENT.set(glad_glEnableVertexArrayAttrib$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glEnableVertexArrayAttrib$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glEnableVertexArrayAttrib").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEVERTEXARRAYATTRIBPROC glad_debug_glEnableVertexArrayAttrib
     * }
     */
    public static AddressLayout glad_debug_glEnableVertexArrayAttrib$layout() {
        return glad_debug_glEnableVertexArrayAttrib$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEVERTEXARRAYATTRIBPROC glad_debug_glEnableVertexArrayAttrib
     * }
     */
    public static MemorySegment glad_debug_glEnableVertexArrayAttrib$segment() {
        return glad_debug_glEnableVertexArrayAttrib$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEVERTEXARRAYATTRIBPROC glad_debug_glEnableVertexArrayAttrib
     * }
     */
    public static MemorySegment glad_debug_glEnableVertexArrayAttrib() {
        return glad_debug_glEnableVertexArrayAttrib$constants.SEGMENT.get(glad_debug_glEnableVertexArrayAttrib$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEVERTEXARRAYATTRIBPROC glad_debug_glEnableVertexArrayAttrib
     * }
     */
    public static void glad_debug_glEnableVertexArrayAttrib(MemorySegment varValue) {
        glad_debug_glEnableVertexArrayAttrib$constants.SEGMENT.set(glad_debug_glEnableVertexArrayAttrib$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glEnableVertexArrayAttribEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glEnableVertexArrayAttribEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEVERTEXARRAYATTRIBEXTPROC glad_glEnableVertexArrayAttribEXT
     * }
     */
    public static AddressLayout glad_glEnableVertexArrayAttribEXT$layout() {
        return glad_glEnableVertexArrayAttribEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEVERTEXARRAYATTRIBEXTPROC glad_glEnableVertexArrayAttribEXT
     * }
     */
    public static MemorySegment glad_glEnableVertexArrayAttribEXT$segment() {
        return glad_glEnableVertexArrayAttribEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEVERTEXARRAYATTRIBEXTPROC glad_glEnableVertexArrayAttribEXT
     * }
     */
    public static MemorySegment glad_glEnableVertexArrayAttribEXT() {
        return glad_glEnableVertexArrayAttribEXT$constants.SEGMENT.get(glad_glEnableVertexArrayAttribEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEVERTEXARRAYATTRIBEXTPROC glad_glEnableVertexArrayAttribEXT
     * }
     */
    public static void glad_glEnableVertexArrayAttribEXT(MemorySegment varValue) {
        glad_glEnableVertexArrayAttribEXT$constants.SEGMENT.set(glad_glEnableVertexArrayAttribEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glEnableVertexArrayAttribEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glEnableVertexArrayAttribEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEVERTEXARRAYATTRIBEXTPROC glad_debug_glEnableVertexArrayAttribEXT
     * }
     */
    public static AddressLayout glad_debug_glEnableVertexArrayAttribEXT$layout() {
        return glad_debug_glEnableVertexArrayAttribEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEVERTEXARRAYATTRIBEXTPROC glad_debug_glEnableVertexArrayAttribEXT
     * }
     */
    public static MemorySegment glad_debug_glEnableVertexArrayAttribEXT$segment() {
        return glad_debug_glEnableVertexArrayAttribEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEVERTEXARRAYATTRIBEXTPROC glad_debug_glEnableVertexArrayAttribEXT
     * }
     */
    public static MemorySegment glad_debug_glEnableVertexArrayAttribEXT() {
        return glad_debug_glEnableVertexArrayAttribEXT$constants.SEGMENT.get(glad_debug_glEnableVertexArrayAttribEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEVERTEXARRAYATTRIBEXTPROC glad_debug_glEnableVertexArrayAttribEXT
     * }
     */
    public static void glad_debug_glEnableVertexArrayAttribEXT(MemorySegment varValue) {
        glad_debug_glEnableVertexArrayAttribEXT$constants.SEGMENT.set(glad_debug_glEnableVertexArrayAttribEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glEnableVertexArrayEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glEnableVertexArrayEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEVERTEXARRAYEXTPROC glad_glEnableVertexArrayEXT
     * }
     */
    public static AddressLayout glad_glEnableVertexArrayEXT$layout() {
        return glad_glEnableVertexArrayEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEVERTEXARRAYEXTPROC glad_glEnableVertexArrayEXT
     * }
     */
    public static MemorySegment glad_glEnableVertexArrayEXT$segment() {
        return glad_glEnableVertexArrayEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEVERTEXARRAYEXTPROC glad_glEnableVertexArrayEXT
     * }
     */
    public static MemorySegment glad_glEnableVertexArrayEXT() {
        return glad_glEnableVertexArrayEXT$constants.SEGMENT.get(glad_glEnableVertexArrayEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEVERTEXARRAYEXTPROC glad_glEnableVertexArrayEXT
     * }
     */
    public static void glad_glEnableVertexArrayEXT(MemorySegment varValue) {
        glad_glEnableVertexArrayEXT$constants.SEGMENT.set(glad_glEnableVertexArrayEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glEnableVertexArrayEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glEnableVertexArrayEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEVERTEXARRAYEXTPROC glad_debug_glEnableVertexArrayEXT
     * }
     */
    public static AddressLayout glad_debug_glEnableVertexArrayEXT$layout() {
        return glad_debug_glEnableVertexArrayEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEVERTEXARRAYEXTPROC glad_debug_glEnableVertexArrayEXT
     * }
     */
    public static MemorySegment glad_debug_glEnableVertexArrayEXT$segment() {
        return glad_debug_glEnableVertexArrayEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEVERTEXARRAYEXTPROC glad_debug_glEnableVertexArrayEXT
     * }
     */
    public static MemorySegment glad_debug_glEnableVertexArrayEXT() {
        return glad_debug_glEnableVertexArrayEXT$constants.SEGMENT.get(glad_debug_glEnableVertexArrayEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEVERTEXARRAYEXTPROC glad_debug_glEnableVertexArrayEXT
     * }
     */
    public static void glad_debug_glEnableVertexArrayEXT(MemorySegment varValue) {
        glad_debug_glEnableVertexArrayEXT$constants.SEGMENT.set(glad_debug_glEnableVertexArrayEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glEnableVertexAttribArray$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glEnableVertexAttribArray").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEVERTEXATTRIBARRAYPROC glad_glEnableVertexAttribArray
     * }
     */
    public static AddressLayout glad_glEnableVertexAttribArray$layout() {
        return glad_glEnableVertexAttribArray$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEVERTEXATTRIBARRAYPROC glad_glEnableVertexAttribArray
     * }
     */
    public static MemorySegment glad_glEnableVertexAttribArray$segment() {
        return glad_glEnableVertexAttribArray$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEVERTEXATTRIBARRAYPROC glad_glEnableVertexAttribArray
     * }
     */
    public static MemorySegment glad_glEnableVertexAttribArray() {
        return glad_glEnableVertexAttribArray$constants.SEGMENT.get(glad_glEnableVertexAttribArray$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEVERTEXATTRIBARRAYPROC glad_glEnableVertexAttribArray
     * }
     */
    public static void glad_glEnableVertexAttribArray(MemorySegment varValue) {
        glad_glEnableVertexAttribArray$constants.SEGMENT.set(glad_glEnableVertexAttribArray$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glEnableVertexAttribArray$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glEnableVertexAttribArray").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEVERTEXATTRIBARRAYPROC glad_debug_glEnableVertexAttribArray
     * }
     */
    public static AddressLayout glad_debug_glEnableVertexAttribArray$layout() {
        return glad_debug_glEnableVertexAttribArray$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEVERTEXATTRIBARRAYPROC glad_debug_glEnableVertexAttribArray
     * }
     */
    public static MemorySegment glad_debug_glEnableVertexAttribArray$segment() {
        return glad_debug_glEnableVertexAttribArray$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEVERTEXATTRIBARRAYPROC glad_debug_glEnableVertexAttribArray
     * }
     */
    public static MemorySegment glad_debug_glEnableVertexAttribArray() {
        return glad_debug_glEnableVertexAttribArray$constants.SEGMENT.get(glad_debug_glEnableVertexAttribArray$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEVERTEXATTRIBARRAYPROC glad_debug_glEnableVertexAttribArray
     * }
     */
    public static void glad_debug_glEnableVertexAttribArray(MemorySegment varValue) {
        glad_debug_glEnableVertexAttribArray$constants.SEGMENT.set(glad_debug_glEnableVertexAttribArray$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glEnableVertexAttribArrayARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glEnableVertexAttribArrayARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEVERTEXATTRIBARRAYARBPROC glad_glEnableVertexAttribArrayARB
     * }
     */
    public static AddressLayout glad_glEnableVertexAttribArrayARB$layout() {
        return glad_glEnableVertexAttribArrayARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEVERTEXATTRIBARRAYARBPROC glad_glEnableVertexAttribArrayARB
     * }
     */
    public static MemorySegment glad_glEnableVertexAttribArrayARB$segment() {
        return glad_glEnableVertexAttribArrayARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEVERTEXATTRIBARRAYARBPROC glad_glEnableVertexAttribArrayARB
     * }
     */
    public static MemorySegment glad_glEnableVertexAttribArrayARB() {
        return glad_glEnableVertexAttribArrayARB$constants.SEGMENT.get(glad_glEnableVertexAttribArrayARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEVERTEXATTRIBARRAYARBPROC glad_glEnableVertexAttribArrayARB
     * }
     */
    public static void glad_glEnableVertexAttribArrayARB(MemorySegment varValue) {
        glad_glEnableVertexAttribArrayARB$constants.SEGMENT.set(glad_glEnableVertexAttribArrayARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glEnableVertexAttribArrayARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glEnableVertexAttribArrayARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEVERTEXATTRIBARRAYARBPROC glad_debug_glEnableVertexAttribArrayARB
     * }
     */
    public static AddressLayout glad_debug_glEnableVertexAttribArrayARB$layout() {
        return glad_debug_glEnableVertexAttribArrayARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEVERTEXATTRIBARRAYARBPROC glad_debug_glEnableVertexAttribArrayARB
     * }
     */
    public static MemorySegment glad_debug_glEnableVertexAttribArrayARB$segment() {
        return glad_debug_glEnableVertexAttribArrayARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEVERTEXATTRIBARRAYARBPROC glad_debug_glEnableVertexAttribArrayARB
     * }
     */
    public static MemorySegment glad_debug_glEnableVertexAttribArrayARB() {
        return glad_debug_glEnableVertexAttribArrayARB$constants.SEGMENT.get(glad_debug_glEnableVertexAttribArrayARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEVERTEXATTRIBARRAYARBPROC glad_debug_glEnableVertexAttribArrayARB
     * }
     */
    public static void glad_debug_glEnableVertexAttribArrayARB(MemorySegment varValue) {
        glad_debug_glEnableVertexAttribArrayARB$constants.SEGMENT.set(glad_debug_glEnableVertexAttribArrayARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glEnablei$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glEnablei").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEIPROC glad_glEnablei
     * }
     */
    public static AddressLayout glad_glEnablei$layout() {
        return glad_glEnablei$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEIPROC glad_glEnablei
     * }
     */
    public static MemorySegment glad_glEnablei$segment() {
        return glad_glEnablei$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEIPROC glad_glEnablei
     * }
     */
    public static MemorySegment glad_glEnablei() {
        return glad_glEnablei$constants.SEGMENT.get(glad_glEnablei$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEIPROC glad_glEnablei
     * }
     */
    public static void glad_glEnablei(MemorySegment varValue) {
        glad_glEnablei$constants.SEGMENT.set(glad_glEnablei$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glEnablei$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glEnablei").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEIPROC glad_debug_glEnablei
     * }
     */
    public static AddressLayout glad_debug_glEnablei$layout() {
        return glad_debug_glEnablei$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEIPROC glad_debug_glEnablei
     * }
     */
    public static MemorySegment glad_debug_glEnablei$segment() {
        return glad_debug_glEnablei$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEIPROC glad_debug_glEnablei
     * }
     */
    public static MemorySegment glad_debug_glEnablei() {
        return glad_debug_glEnablei$constants.SEGMENT.get(glad_debug_glEnablei$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLENABLEIPROC glad_debug_glEnablei
     * }
     */
    public static void glad_debug_glEnablei(MemorySegment varValue) {
        glad_debug_glEnablei$constants.SEGMENT.set(glad_debug_glEnablei$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glEnd$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glEnd").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLENDPROC glad_glEnd
     * }
     */
    public static AddressLayout glad_glEnd$layout() {
        return glad_glEnd$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLENDPROC glad_glEnd
     * }
     */
    public static MemorySegment glad_glEnd$segment() {
        return glad_glEnd$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLENDPROC glad_glEnd
     * }
     */
    public static MemorySegment glad_glEnd() {
        return glad_glEnd$constants.SEGMENT.get(glad_glEnd$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLENDPROC glad_glEnd
     * }
     */
    public static void glad_glEnd(MemorySegment varValue) {
        glad_glEnd$constants.SEGMENT.set(glad_glEnd$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glEnd$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glEnd").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLENDPROC glad_debug_glEnd
     * }
     */
    public static AddressLayout glad_debug_glEnd$layout() {
        return glad_debug_glEnd$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLENDPROC glad_debug_glEnd
     * }
     */
    public static MemorySegment glad_debug_glEnd$segment() {
        return glad_debug_glEnd$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLENDPROC glad_debug_glEnd
     * }
     */
    public static MemorySegment glad_debug_glEnd() {
        return glad_debug_glEnd$constants.SEGMENT.get(glad_debug_glEnd$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLENDPROC glad_debug_glEnd
     * }
     */
    public static void glad_debug_glEnd(MemorySegment varValue) {
        glad_debug_glEnd$constants.SEGMENT.set(glad_debug_glEnd$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glEndConditionalRender$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glEndConditionalRender").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLENDCONDITIONALRENDERPROC glad_glEndConditionalRender
     * }
     */
    public static AddressLayout glad_glEndConditionalRender$layout() {
        return glad_glEndConditionalRender$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLENDCONDITIONALRENDERPROC glad_glEndConditionalRender
     * }
     */
    public static MemorySegment glad_glEndConditionalRender$segment() {
        return glad_glEndConditionalRender$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLENDCONDITIONALRENDERPROC glad_glEndConditionalRender
     * }
     */
    public static MemorySegment glad_glEndConditionalRender() {
        return glad_glEndConditionalRender$constants.SEGMENT.get(glad_glEndConditionalRender$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLENDCONDITIONALRENDERPROC glad_glEndConditionalRender
     * }
     */
    public static void glad_glEndConditionalRender(MemorySegment varValue) {
        glad_glEndConditionalRender$constants.SEGMENT.set(glad_glEndConditionalRender$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glEndConditionalRender$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glEndConditionalRender").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLENDCONDITIONALRENDERPROC glad_debug_glEndConditionalRender
     * }
     */
    public static AddressLayout glad_debug_glEndConditionalRender$layout() {
        return glad_debug_glEndConditionalRender$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLENDCONDITIONALRENDERPROC glad_debug_glEndConditionalRender
     * }
     */
    public static MemorySegment glad_debug_glEndConditionalRender$segment() {
        return glad_debug_glEndConditionalRender$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLENDCONDITIONALRENDERPROC glad_debug_glEndConditionalRender
     * }
     */
    public static MemorySegment glad_debug_glEndConditionalRender() {
        return glad_debug_glEndConditionalRender$constants.SEGMENT.get(glad_debug_glEndConditionalRender$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLENDCONDITIONALRENDERPROC glad_debug_glEndConditionalRender
     * }
     */
    public static void glad_debug_glEndConditionalRender(MemorySegment varValue) {
        glad_debug_glEndConditionalRender$constants.SEGMENT.set(glad_debug_glEndConditionalRender$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glEndConditionalRenderNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glEndConditionalRenderNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLENDCONDITIONALRENDERNVPROC glad_glEndConditionalRenderNV
     * }
     */
    public static AddressLayout glad_glEndConditionalRenderNV$layout() {
        return glad_glEndConditionalRenderNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLENDCONDITIONALRENDERNVPROC glad_glEndConditionalRenderNV
     * }
     */
    public static MemorySegment glad_glEndConditionalRenderNV$segment() {
        return glad_glEndConditionalRenderNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLENDCONDITIONALRENDERNVPROC glad_glEndConditionalRenderNV
     * }
     */
    public static MemorySegment glad_glEndConditionalRenderNV() {
        return glad_glEndConditionalRenderNV$constants.SEGMENT.get(glad_glEndConditionalRenderNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLENDCONDITIONALRENDERNVPROC glad_glEndConditionalRenderNV
     * }
     */
    public static void glad_glEndConditionalRenderNV(MemorySegment varValue) {
        glad_glEndConditionalRenderNV$constants.SEGMENT.set(glad_glEndConditionalRenderNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glEndConditionalRenderNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glEndConditionalRenderNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLENDCONDITIONALRENDERNVPROC glad_debug_glEndConditionalRenderNV
     * }
     */
    public static AddressLayout glad_debug_glEndConditionalRenderNV$layout() {
        return glad_debug_glEndConditionalRenderNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLENDCONDITIONALRENDERNVPROC glad_debug_glEndConditionalRenderNV
     * }
     */
    public static MemorySegment glad_debug_glEndConditionalRenderNV$segment() {
        return glad_debug_glEndConditionalRenderNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLENDCONDITIONALRENDERNVPROC glad_debug_glEndConditionalRenderNV
     * }
     */
    public static MemorySegment glad_debug_glEndConditionalRenderNV() {
        return glad_debug_glEndConditionalRenderNV$constants.SEGMENT.get(glad_debug_glEndConditionalRenderNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLENDCONDITIONALRENDERNVPROC glad_debug_glEndConditionalRenderNV
     * }
     */
    public static void glad_debug_glEndConditionalRenderNV(MemorySegment varValue) {
        glad_debug_glEndConditionalRenderNV$constants.SEGMENT.set(glad_debug_glEndConditionalRenderNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glEndConditionalRenderNVX$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glEndConditionalRenderNVX").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLENDCONDITIONALRENDERNVXPROC glad_glEndConditionalRenderNVX
     * }
     */
    public static AddressLayout glad_glEndConditionalRenderNVX$layout() {
        return glad_glEndConditionalRenderNVX$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLENDCONDITIONALRENDERNVXPROC glad_glEndConditionalRenderNVX
     * }
     */
    public static MemorySegment glad_glEndConditionalRenderNVX$segment() {
        return glad_glEndConditionalRenderNVX$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLENDCONDITIONALRENDERNVXPROC glad_glEndConditionalRenderNVX
     * }
     */
    public static MemorySegment glad_glEndConditionalRenderNVX() {
        return glad_glEndConditionalRenderNVX$constants.SEGMENT.get(glad_glEndConditionalRenderNVX$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLENDCONDITIONALRENDERNVXPROC glad_glEndConditionalRenderNVX
     * }
     */
    public static void glad_glEndConditionalRenderNVX(MemorySegment varValue) {
        glad_glEndConditionalRenderNVX$constants.SEGMENT.set(glad_glEndConditionalRenderNVX$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glEndConditionalRenderNVX$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glEndConditionalRenderNVX").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLENDCONDITIONALRENDERNVXPROC glad_debug_glEndConditionalRenderNVX
     * }
     */
    public static AddressLayout glad_debug_glEndConditionalRenderNVX$layout() {
        return glad_debug_glEndConditionalRenderNVX$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLENDCONDITIONALRENDERNVXPROC glad_debug_glEndConditionalRenderNVX
     * }
     */
    public static MemorySegment glad_debug_glEndConditionalRenderNVX$segment() {
        return glad_debug_glEndConditionalRenderNVX$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLENDCONDITIONALRENDERNVXPROC glad_debug_glEndConditionalRenderNVX
     * }
     */
    public static MemorySegment glad_debug_glEndConditionalRenderNVX() {
        return glad_debug_glEndConditionalRenderNVX$constants.SEGMENT.get(glad_debug_glEndConditionalRenderNVX$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLENDCONDITIONALRENDERNVXPROC glad_debug_glEndConditionalRenderNVX
     * }
     */
    public static void glad_debug_glEndConditionalRenderNVX(MemorySegment varValue) {
        glad_debug_glEndConditionalRenderNVX$constants.SEGMENT.set(glad_debug_glEndConditionalRenderNVX$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glEndList$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glEndList").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLENDLISTPROC glad_glEndList
     * }
     */
    public static AddressLayout glad_glEndList$layout() {
        return glad_glEndList$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLENDLISTPROC glad_glEndList
     * }
     */
    public static MemorySegment glad_glEndList$segment() {
        return glad_glEndList$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLENDLISTPROC glad_glEndList
     * }
     */
    public static MemorySegment glad_glEndList() {
        return glad_glEndList$constants.SEGMENT.get(glad_glEndList$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLENDLISTPROC glad_glEndList
     * }
     */
    public static void glad_glEndList(MemorySegment varValue) {
        glad_glEndList$constants.SEGMENT.set(glad_glEndList$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glEndList$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glEndList").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLENDLISTPROC glad_debug_glEndList
     * }
     */
    public static AddressLayout glad_debug_glEndList$layout() {
        return glad_debug_glEndList$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLENDLISTPROC glad_debug_glEndList
     * }
     */
    public static MemorySegment glad_debug_glEndList$segment() {
        return glad_debug_glEndList$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLENDLISTPROC glad_debug_glEndList
     * }
     */
    public static MemorySegment glad_debug_glEndList() {
        return glad_debug_glEndList$constants.SEGMENT.get(glad_debug_glEndList$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLENDLISTPROC glad_debug_glEndList
     * }
     */
    public static void glad_debug_glEndList(MemorySegment varValue) {
        glad_debug_glEndList$constants.SEGMENT.set(glad_debug_glEndList$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glEndQuery$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glEndQuery").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLENDQUERYPROC glad_glEndQuery
     * }
     */
    public static AddressLayout glad_glEndQuery$layout() {
        return glad_glEndQuery$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLENDQUERYPROC glad_glEndQuery
     * }
     */
    public static MemorySegment glad_glEndQuery$segment() {
        return glad_glEndQuery$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLENDQUERYPROC glad_glEndQuery
     * }
     */
    public static MemorySegment glad_glEndQuery() {
        return glad_glEndQuery$constants.SEGMENT.get(glad_glEndQuery$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLENDQUERYPROC glad_glEndQuery
     * }
     */
    public static void glad_glEndQuery(MemorySegment varValue) {
        glad_glEndQuery$constants.SEGMENT.set(glad_glEndQuery$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glEndQuery$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glEndQuery").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLENDQUERYPROC glad_debug_glEndQuery
     * }
     */
    public static AddressLayout glad_debug_glEndQuery$layout() {
        return glad_debug_glEndQuery$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLENDQUERYPROC glad_debug_glEndQuery
     * }
     */
    public static MemorySegment glad_debug_glEndQuery$segment() {
        return glad_debug_glEndQuery$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLENDQUERYPROC glad_debug_glEndQuery
     * }
     */
    public static MemorySegment glad_debug_glEndQuery() {
        return glad_debug_glEndQuery$constants.SEGMENT.get(glad_debug_glEndQuery$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLENDQUERYPROC glad_debug_glEndQuery
     * }
     */
    public static void glad_debug_glEndQuery(MemorySegment varValue) {
        glad_debug_glEndQuery$constants.SEGMENT.set(glad_debug_glEndQuery$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glEndQueryARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glEndQueryARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLENDQUERYARBPROC glad_glEndQueryARB
     * }
     */
    public static AddressLayout glad_glEndQueryARB$layout() {
        return glad_glEndQueryARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLENDQUERYARBPROC glad_glEndQueryARB
     * }
     */
    public static MemorySegment glad_glEndQueryARB$segment() {
        return glad_glEndQueryARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLENDQUERYARBPROC glad_glEndQueryARB
     * }
     */
    public static MemorySegment glad_glEndQueryARB() {
        return glad_glEndQueryARB$constants.SEGMENT.get(glad_glEndQueryARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLENDQUERYARBPROC glad_glEndQueryARB
     * }
     */
    public static void glad_glEndQueryARB(MemorySegment varValue) {
        glad_glEndQueryARB$constants.SEGMENT.set(glad_glEndQueryARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glEndQueryARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glEndQueryARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLENDQUERYARBPROC glad_debug_glEndQueryARB
     * }
     */
    public static AddressLayout glad_debug_glEndQueryARB$layout() {
        return glad_debug_glEndQueryARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLENDQUERYARBPROC glad_debug_glEndQueryARB
     * }
     */
    public static MemorySegment glad_debug_glEndQueryARB$segment() {
        return glad_debug_glEndQueryARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLENDQUERYARBPROC glad_debug_glEndQueryARB
     * }
     */
    public static MemorySegment glad_debug_glEndQueryARB() {
        return glad_debug_glEndQueryARB$constants.SEGMENT.get(glad_debug_glEndQueryARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLENDQUERYARBPROC glad_debug_glEndQueryARB
     * }
     */
    public static void glad_debug_glEndQueryARB(MemorySegment varValue) {
        glad_debug_glEndQueryARB$constants.SEGMENT.set(glad_debug_glEndQueryARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glEndQueryIndexed$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glEndQueryIndexed").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLENDQUERYINDEXEDPROC glad_glEndQueryIndexed
     * }
     */
    public static AddressLayout glad_glEndQueryIndexed$layout() {
        return glad_glEndQueryIndexed$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLENDQUERYINDEXEDPROC glad_glEndQueryIndexed
     * }
     */
    public static MemorySegment glad_glEndQueryIndexed$segment() {
        return glad_glEndQueryIndexed$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLENDQUERYINDEXEDPROC glad_glEndQueryIndexed
     * }
     */
    public static MemorySegment glad_glEndQueryIndexed() {
        return glad_glEndQueryIndexed$constants.SEGMENT.get(glad_glEndQueryIndexed$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLENDQUERYINDEXEDPROC glad_glEndQueryIndexed
     * }
     */
    public static void glad_glEndQueryIndexed(MemorySegment varValue) {
        glad_glEndQueryIndexed$constants.SEGMENT.set(glad_glEndQueryIndexed$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glEndQueryIndexed$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glEndQueryIndexed").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLENDQUERYINDEXEDPROC glad_debug_glEndQueryIndexed
     * }
     */
    public static AddressLayout glad_debug_glEndQueryIndexed$layout() {
        return glad_debug_glEndQueryIndexed$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLENDQUERYINDEXEDPROC glad_debug_glEndQueryIndexed
     * }
     */
    public static MemorySegment glad_debug_glEndQueryIndexed$segment() {
        return glad_debug_glEndQueryIndexed$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLENDQUERYINDEXEDPROC glad_debug_glEndQueryIndexed
     * }
     */
    public static MemorySegment glad_debug_glEndQueryIndexed() {
        return glad_debug_glEndQueryIndexed$constants.SEGMENT.get(glad_debug_glEndQueryIndexed$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLENDQUERYINDEXEDPROC glad_debug_glEndQueryIndexed
     * }
     */
    public static void glad_debug_glEndQueryIndexed(MemorySegment varValue) {
        glad_debug_glEndQueryIndexed$constants.SEGMENT.set(glad_debug_glEndQueryIndexed$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glEndTransformFeedback$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glEndTransformFeedback").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLENDTRANSFORMFEEDBACKPROC glad_glEndTransformFeedback
     * }
     */
    public static AddressLayout glad_glEndTransformFeedback$layout() {
        return glad_glEndTransformFeedback$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLENDTRANSFORMFEEDBACKPROC glad_glEndTransformFeedback
     * }
     */
    public static MemorySegment glad_glEndTransformFeedback$segment() {
        return glad_glEndTransformFeedback$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLENDTRANSFORMFEEDBACKPROC glad_glEndTransformFeedback
     * }
     */
    public static MemorySegment glad_glEndTransformFeedback() {
        return glad_glEndTransformFeedback$constants.SEGMENT.get(glad_glEndTransformFeedback$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLENDTRANSFORMFEEDBACKPROC glad_glEndTransformFeedback
     * }
     */
    public static void glad_glEndTransformFeedback(MemorySegment varValue) {
        glad_glEndTransformFeedback$constants.SEGMENT.set(glad_glEndTransformFeedback$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glEndTransformFeedback$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glEndTransformFeedback").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLENDTRANSFORMFEEDBACKPROC glad_debug_glEndTransformFeedback
     * }
     */
    public static AddressLayout glad_debug_glEndTransformFeedback$layout() {
        return glad_debug_glEndTransformFeedback$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLENDTRANSFORMFEEDBACKPROC glad_debug_glEndTransformFeedback
     * }
     */
    public static MemorySegment glad_debug_glEndTransformFeedback$segment() {
        return glad_debug_glEndTransformFeedback$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLENDTRANSFORMFEEDBACKPROC glad_debug_glEndTransformFeedback
     * }
     */
    public static MemorySegment glad_debug_glEndTransformFeedback() {
        return glad_debug_glEndTransformFeedback$constants.SEGMENT.get(glad_debug_glEndTransformFeedback$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLENDTRANSFORMFEEDBACKPROC glad_debug_glEndTransformFeedback
     * }
     */
    public static void glad_debug_glEndTransformFeedback(MemorySegment varValue) {
        glad_debug_glEndTransformFeedback$constants.SEGMENT.set(glad_debug_glEndTransformFeedback$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glEndTransformFeedbackEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glEndTransformFeedbackEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLENDTRANSFORMFEEDBACKEXTPROC glad_glEndTransformFeedbackEXT
     * }
     */
    public static AddressLayout glad_glEndTransformFeedbackEXT$layout() {
        return glad_glEndTransformFeedbackEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLENDTRANSFORMFEEDBACKEXTPROC glad_glEndTransformFeedbackEXT
     * }
     */
    public static MemorySegment glad_glEndTransformFeedbackEXT$segment() {
        return glad_glEndTransformFeedbackEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLENDTRANSFORMFEEDBACKEXTPROC glad_glEndTransformFeedbackEXT
     * }
     */
    public static MemorySegment glad_glEndTransformFeedbackEXT() {
        return glad_glEndTransformFeedbackEXT$constants.SEGMENT.get(glad_glEndTransformFeedbackEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLENDTRANSFORMFEEDBACKEXTPROC glad_glEndTransformFeedbackEXT
     * }
     */
    public static void glad_glEndTransformFeedbackEXT(MemorySegment varValue) {
        glad_glEndTransformFeedbackEXT$constants.SEGMENT.set(glad_glEndTransformFeedbackEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glEndTransformFeedbackEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glEndTransformFeedbackEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLENDTRANSFORMFEEDBACKEXTPROC glad_debug_glEndTransformFeedbackEXT
     * }
     */
    public static AddressLayout glad_debug_glEndTransformFeedbackEXT$layout() {
        return glad_debug_glEndTransformFeedbackEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLENDTRANSFORMFEEDBACKEXTPROC glad_debug_glEndTransformFeedbackEXT
     * }
     */
    public static MemorySegment glad_debug_glEndTransformFeedbackEXT$segment() {
        return glad_debug_glEndTransformFeedbackEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLENDTRANSFORMFEEDBACKEXTPROC glad_debug_glEndTransformFeedbackEXT
     * }
     */
    public static MemorySegment glad_debug_glEndTransformFeedbackEXT() {
        return glad_debug_glEndTransformFeedbackEXT$constants.SEGMENT.get(glad_debug_glEndTransformFeedbackEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLENDTRANSFORMFEEDBACKEXTPROC glad_debug_glEndTransformFeedbackEXT
     * }
     */
    public static void glad_debug_glEndTransformFeedbackEXT(MemorySegment varValue) {
        glad_debug_glEndTransformFeedbackEXT$constants.SEGMENT.set(glad_debug_glEndTransformFeedbackEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glEndTransformFeedbackNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glEndTransformFeedbackNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLENDTRANSFORMFEEDBACKNVPROC glad_glEndTransformFeedbackNV
     * }
     */
    public static AddressLayout glad_glEndTransformFeedbackNV$layout() {
        return glad_glEndTransformFeedbackNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLENDTRANSFORMFEEDBACKNVPROC glad_glEndTransformFeedbackNV
     * }
     */
    public static MemorySegment glad_glEndTransformFeedbackNV$segment() {
        return glad_glEndTransformFeedbackNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLENDTRANSFORMFEEDBACKNVPROC glad_glEndTransformFeedbackNV
     * }
     */
    public static MemorySegment glad_glEndTransformFeedbackNV() {
        return glad_glEndTransformFeedbackNV$constants.SEGMENT.get(glad_glEndTransformFeedbackNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLENDTRANSFORMFEEDBACKNVPROC glad_glEndTransformFeedbackNV
     * }
     */
    public static void glad_glEndTransformFeedbackNV(MemorySegment varValue) {
        glad_glEndTransformFeedbackNV$constants.SEGMENT.set(glad_glEndTransformFeedbackNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glEndTransformFeedbackNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glEndTransformFeedbackNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLENDTRANSFORMFEEDBACKNVPROC glad_debug_glEndTransformFeedbackNV
     * }
     */
    public static AddressLayout glad_debug_glEndTransformFeedbackNV$layout() {
        return glad_debug_glEndTransformFeedbackNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLENDTRANSFORMFEEDBACKNVPROC glad_debug_glEndTransformFeedbackNV
     * }
     */
    public static MemorySegment glad_debug_glEndTransformFeedbackNV$segment() {
        return glad_debug_glEndTransformFeedbackNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLENDTRANSFORMFEEDBACKNVPROC glad_debug_glEndTransformFeedbackNV
     * }
     */
    public static MemorySegment glad_debug_glEndTransformFeedbackNV() {
        return glad_debug_glEndTransformFeedbackNV$constants.SEGMENT.get(glad_debug_glEndTransformFeedbackNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLENDTRANSFORMFEEDBACKNVPROC glad_debug_glEndTransformFeedbackNV
     * }
     */
    public static void glad_debug_glEndTransformFeedbackNV(MemorySegment varValue) {
        glad_debug_glEndTransformFeedbackNV$constants.SEGMENT.set(glad_debug_glEndTransformFeedbackNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glEvalCoord1d$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glEvalCoord1d").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD1DPROC glad_glEvalCoord1d
     * }
     */
    public static AddressLayout glad_glEvalCoord1d$layout() {
        return glad_glEvalCoord1d$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD1DPROC glad_glEvalCoord1d
     * }
     */
    public static MemorySegment glad_glEvalCoord1d$segment() {
        return glad_glEvalCoord1d$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD1DPROC glad_glEvalCoord1d
     * }
     */
    public static MemorySegment glad_glEvalCoord1d() {
        return glad_glEvalCoord1d$constants.SEGMENT.get(glad_glEvalCoord1d$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD1DPROC glad_glEvalCoord1d
     * }
     */
    public static void glad_glEvalCoord1d(MemorySegment varValue) {
        glad_glEvalCoord1d$constants.SEGMENT.set(glad_glEvalCoord1d$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glEvalCoord1d$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glEvalCoord1d").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD1DPROC glad_debug_glEvalCoord1d
     * }
     */
    public static AddressLayout glad_debug_glEvalCoord1d$layout() {
        return glad_debug_glEvalCoord1d$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD1DPROC glad_debug_glEvalCoord1d
     * }
     */
    public static MemorySegment glad_debug_glEvalCoord1d$segment() {
        return glad_debug_glEvalCoord1d$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD1DPROC glad_debug_glEvalCoord1d
     * }
     */
    public static MemorySegment glad_debug_glEvalCoord1d() {
        return glad_debug_glEvalCoord1d$constants.SEGMENT.get(glad_debug_glEvalCoord1d$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD1DPROC glad_debug_glEvalCoord1d
     * }
     */
    public static void glad_debug_glEvalCoord1d(MemorySegment varValue) {
        glad_debug_glEvalCoord1d$constants.SEGMENT.set(glad_debug_glEvalCoord1d$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glEvalCoord1dv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glEvalCoord1dv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD1DVPROC glad_glEvalCoord1dv
     * }
     */
    public static AddressLayout glad_glEvalCoord1dv$layout() {
        return glad_glEvalCoord1dv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD1DVPROC glad_glEvalCoord1dv
     * }
     */
    public static MemorySegment glad_glEvalCoord1dv$segment() {
        return glad_glEvalCoord1dv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD1DVPROC glad_glEvalCoord1dv
     * }
     */
    public static MemorySegment glad_glEvalCoord1dv() {
        return glad_glEvalCoord1dv$constants.SEGMENT.get(glad_glEvalCoord1dv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD1DVPROC glad_glEvalCoord1dv
     * }
     */
    public static void glad_glEvalCoord1dv(MemorySegment varValue) {
        glad_glEvalCoord1dv$constants.SEGMENT.set(glad_glEvalCoord1dv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glEvalCoord1dv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glEvalCoord1dv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD1DVPROC glad_debug_glEvalCoord1dv
     * }
     */
    public static AddressLayout glad_debug_glEvalCoord1dv$layout() {
        return glad_debug_glEvalCoord1dv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD1DVPROC glad_debug_glEvalCoord1dv
     * }
     */
    public static MemorySegment glad_debug_glEvalCoord1dv$segment() {
        return glad_debug_glEvalCoord1dv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD1DVPROC glad_debug_glEvalCoord1dv
     * }
     */
    public static MemorySegment glad_debug_glEvalCoord1dv() {
        return glad_debug_glEvalCoord1dv$constants.SEGMENT.get(glad_debug_glEvalCoord1dv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD1DVPROC glad_debug_glEvalCoord1dv
     * }
     */
    public static void glad_debug_glEvalCoord1dv(MemorySegment varValue) {
        glad_debug_glEvalCoord1dv$constants.SEGMENT.set(glad_debug_glEvalCoord1dv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glEvalCoord1f$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glEvalCoord1f").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD1FPROC glad_glEvalCoord1f
     * }
     */
    public static AddressLayout glad_glEvalCoord1f$layout() {
        return glad_glEvalCoord1f$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD1FPROC glad_glEvalCoord1f
     * }
     */
    public static MemorySegment glad_glEvalCoord1f$segment() {
        return glad_glEvalCoord1f$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD1FPROC glad_glEvalCoord1f
     * }
     */
    public static MemorySegment glad_glEvalCoord1f() {
        return glad_glEvalCoord1f$constants.SEGMENT.get(glad_glEvalCoord1f$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD1FPROC glad_glEvalCoord1f
     * }
     */
    public static void glad_glEvalCoord1f(MemorySegment varValue) {
        glad_glEvalCoord1f$constants.SEGMENT.set(glad_glEvalCoord1f$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glEvalCoord1f$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glEvalCoord1f").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD1FPROC glad_debug_glEvalCoord1f
     * }
     */
    public static AddressLayout glad_debug_glEvalCoord1f$layout() {
        return glad_debug_glEvalCoord1f$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD1FPROC glad_debug_glEvalCoord1f
     * }
     */
    public static MemorySegment glad_debug_glEvalCoord1f$segment() {
        return glad_debug_glEvalCoord1f$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD1FPROC glad_debug_glEvalCoord1f
     * }
     */
    public static MemorySegment glad_debug_glEvalCoord1f() {
        return glad_debug_glEvalCoord1f$constants.SEGMENT.get(glad_debug_glEvalCoord1f$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD1FPROC glad_debug_glEvalCoord1f
     * }
     */
    public static void glad_debug_glEvalCoord1f(MemorySegment varValue) {
        glad_debug_glEvalCoord1f$constants.SEGMENT.set(glad_debug_glEvalCoord1f$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glEvalCoord1fv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glEvalCoord1fv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD1FVPROC glad_glEvalCoord1fv
     * }
     */
    public static AddressLayout glad_glEvalCoord1fv$layout() {
        return glad_glEvalCoord1fv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD1FVPROC glad_glEvalCoord1fv
     * }
     */
    public static MemorySegment glad_glEvalCoord1fv$segment() {
        return glad_glEvalCoord1fv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD1FVPROC glad_glEvalCoord1fv
     * }
     */
    public static MemorySegment glad_glEvalCoord1fv() {
        return glad_glEvalCoord1fv$constants.SEGMENT.get(glad_glEvalCoord1fv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD1FVPROC glad_glEvalCoord1fv
     * }
     */
    public static void glad_glEvalCoord1fv(MemorySegment varValue) {
        glad_glEvalCoord1fv$constants.SEGMENT.set(glad_glEvalCoord1fv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glEvalCoord1fv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glEvalCoord1fv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD1FVPROC glad_debug_glEvalCoord1fv
     * }
     */
    public static AddressLayout glad_debug_glEvalCoord1fv$layout() {
        return glad_debug_glEvalCoord1fv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD1FVPROC glad_debug_glEvalCoord1fv
     * }
     */
    public static MemorySegment glad_debug_glEvalCoord1fv$segment() {
        return glad_debug_glEvalCoord1fv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD1FVPROC glad_debug_glEvalCoord1fv
     * }
     */
    public static MemorySegment glad_debug_glEvalCoord1fv() {
        return glad_debug_glEvalCoord1fv$constants.SEGMENT.get(glad_debug_glEvalCoord1fv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD1FVPROC glad_debug_glEvalCoord1fv
     * }
     */
    public static void glad_debug_glEvalCoord1fv(MemorySegment varValue) {
        glad_debug_glEvalCoord1fv$constants.SEGMENT.set(glad_debug_glEvalCoord1fv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glEvalCoord2d$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glEvalCoord2d").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD2DPROC glad_glEvalCoord2d
     * }
     */
    public static AddressLayout glad_glEvalCoord2d$layout() {
        return glad_glEvalCoord2d$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD2DPROC glad_glEvalCoord2d
     * }
     */
    public static MemorySegment glad_glEvalCoord2d$segment() {
        return glad_glEvalCoord2d$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD2DPROC glad_glEvalCoord2d
     * }
     */
    public static MemorySegment glad_glEvalCoord2d() {
        return glad_glEvalCoord2d$constants.SEGMENT.get(glad_glEvalCoord2d$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD2DPROC glad_glEvalCoord2d
     * }
     */
    public static void glad_glEvalCoord2d(MemorySegment varValue) {
        glad_glEvalCoord2d$constants.SEGMENT.set(glad_glEvalCoord2d$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glEvalCoord2d$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glEvalCoord2d").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD2DPROC glad_debug_glEvalCoord2d
     * }
     */
    public static AddressLayout glad_debug_glEvalCoord2d$layout() {
        return glad_debug_glEvalCoord2d$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD2DPROC glad_debug_glEvalCoord2d
     * }
     */
    public static MemorySegment glad_debug_glEvalCoord2d$segment() {
        return glad_debug_glEvalCoord2d$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD2DPROC glad_debug_glEvalCoord2d
     * }
     */
    public static MemorySegment glad_debug_glEvalCoord2d() {
        return glad_debug_glEvalCoord2d$constants.SEGMENT.get(glad_debug_glEvalCoord2d$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD2DPROC glad_debug_glEvalCoord2d
     * }
     */
    public static void glad_debug_glEvalCoord2d(MemorySegment varValue) {
        glad_debug_glEvalCoord2d$constants.SEGMENT.set(glad_debug_glEvalCoord2d$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glEvalCoord2dv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glEvalCoord2dv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD2DVPROC glad_glEvalCoord2dv
     * }
     */
    public static AddressLayout glad_glEvalCoord2dv$layout() {
        return glad_glEvalCoord2dv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD2DVPROC glad_glEvalCoord2dv
     * }
     */
    public static MemorySegment glad_glEvalCoord2dv$segment() {
        return glad_glEvalCoord2dv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD2DVPROC glad_glEvalCoord2dv
     * }
     */
    public static MemorySegment glad_glEvalCoord2dv() {
        return glad_glEvalCoord2dv$constants.SEGMENT.get(glad_glEvalCoord2dv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD2DVPROC glad_glEvalCoord2dv
     * }
     */
    public static void glad_glEvalCoord2dv(MemorySegment varValue) {
        glad_glEvalCoord2dv$constants.SEGMENT.set(glad_glEvalCoord2dv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glEvalCoord2dv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glEvalCoord2dv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD2DVPROC glad_debug_glEvalCoord2dv
     * }
     */
    public static AddressLayout glad_debug_glEvalCoord2dv$layout() {
        return glad_debug_glEvalCoord2dv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD2DVPROC glad_debug_glEvalCoord2dv
     * }
     */
    public static MemorySegment glad_debug_glEvalCoord2dv$segment() {
        return glad_debug_glEvalCoord2dv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD2DVPROC glad_debug_glEvalCoord2dv
     * }
     */
    public static MemorySegment glad_debug_glEvalCoord2dv() {
        return glad_debug_glEvalCoord2dv$constants.SEGMENT.get(glad_debug_glEvalCoord2dv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD2DVPROC glad_debug_glEvalCoord2dv
     * }
     */
    public static void glad_debug_glEvalCoord2dv(MemorySegment varValue) {
        glad_debug_glEvalCoord2dv$constants.SEGMENT.set(glad_debug_glEvalCoord2dv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glEvalCoord2f$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glEvalCoord2f").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD2FPROC glad_glEvalCoord2f
     * }
     */
    public static AddressLayout glad_glEvalCoord2f$layout() {
        return glad_glEvalCoord2f$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD2FPROC glad_glEvalCoord2f
     * }
     */
    public static MemorySegment glad_glEvalCoord2f$segment() {
        return glad_glEvalCoord2f$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD2FPROC glad_glEvalCoord2f
     * }
     */
    public static MemorySegment glad_glEvalCoord2f() {
        return glad_glEvalCoord2f$constants.SEGMENT.get(glad_glEvalCoord2f$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD2FPROC glad_glEvalCoord2f
     * }
     */
    public static void glad_glEvalCoord2f(MemorySegment varValue) {
        glad_glEvalCoord2f$constants.SEGMENT.set(glad_glEvalCoord2f$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glEvalCoord2f$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glEvalCoord2f").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD2FPROC glad_debug_glEvalCoord2f
     * }
     */
    public static AddressLayout glad_debug_glEvalCoord2f$layout() {
        return glad_debug_glEvalCoord2f$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD2FPROC glad_debug_glEvalCoord2f
     * }
     */
    public static MemorySegment glad_debug_glEvalCoord2f$segment() {
        return glad_debug_glEvalCoord2f$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD2FPROC glad_debug_glEvalCoord2f
     * }
     */
    public static MemorySegment glad_debug_glEvalCoord2f() {
        return glad_debug_glEvalCoord2f$constants.SEGMENT.get(glad_debug_glEvalCoord2f$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD2FPROC glad_debug_glEvalCoord2f
     * }
     */
    public static void glad_debug_glEvalCoord2f(MemorySegment varValue) {
        glad_debug_glEvalCoord2f$constants.SEGMENT.set(glad_debug_glEvalCoord2f$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glEvalCoord2fv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glEvalCoord2fv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD2FVPROC glad_glEvalCoord2fv
     * }
     */
    public static AddressLayout glad_glEvalCoord2fv$layout() {
        return glad_glEvalCoord2fv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD2FVPROC glad_glEvalCoord2fv
     * }
     */
    public static MemorySegment glad_glEvalCoord2fv$segment() {
        return glad_glEvalCoord2fv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD2FVPROC glad_glEvalCoord2fv
     * }
     */
    public static MemorySegment glad_glEvalCoord2fv() {
        return glad_glEvalCoord2fv$constants.SEGMENT.get(glad_glEvalCoord2fv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD2FVPROC glad_glEvalCoord2fv
     * }
     */
    public static void glad_glEvalCoord2fv(MemorySegment varValue) {
        glad_glEvalCoord2fv$constants.SEGMENT.set(glad_glEvalCoord2fv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glEvalCoord2fv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glEvalCoord2fv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD2FVPROC glad_debug_glEvalCoord2fv
     * }
     */
    public static AddressLayout glad_debug_glEvalCoord2fv$layout() {
        return glad_debug_glEvalCoord2fv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD2FVPROC glad_debug_glEvalCoord2fv
     * }
     */
    public static MemorySegment glad_debug_glEvalCoord2fv$segment() {
        return glad_debug_glEvalCoord2fv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD2FVPROC glad_debug_glEvalCoord2fv
     * }
     */
    public static MemorySegment glad_debug_glEvalCoord2fv() {
        return glad_debug_glEvalCoord2fv$constants.SEGMENT.get(glad_debug_glEvalCoord2fv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALCOORD2FVPROC glad_debug_glEvalCoord2fv
     * }
     */
    public static void glad_debug_glEvalCoord2fv(MemorySegment varValue) {
        glad_debug_glEvalCoord2fv$constants.SEGMENT.set(glad_debug_glEvalCoord2fv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glEvalMesh1$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glEvalMesh1").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALMESH1PROC glad_glEvalMesh1
     * }
     */
    public static AddressLayout glad_glEvalMesh1$layout() {
        return glad_glEvalMesh1$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALMESH1PROC glad_glEvalMesh1
     * }
     */
    public static MemorySegment glad_glEvalMesh1$segment() {
        return glad_glEvalMesh1$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALMESH1PROC glad_glEvalMesh1
     * }
     */
    public static MemorySegment glad_glEvalMesh1() {
        return glad_glEvalMesh1$constants.SEGMENT.get(glad_glEvalMesh1$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALMESH1PROC glad_glEvalMesh1
     * }
     */
    public static void glad_glEvalMesh1(MemorySegment varValue) {
        glad_glEvalMesh1$constants.SEGMENT.set(glad_glEvalMesh1$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glEvalMesh1$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glEvalMesh1").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALMESH1PROC glad_debug_glEvalMesh1
     * }
     */
    public static AddressLayout glad_debug_glEvalMesh1$layout() {
        return glad_debug_glEvalMesh1$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALMESH1PROC glad_debug_glEvalMesh1
     * }
     */
    public static MemorySegment glad_debug_glEvalMesh1$segment() {
        return glad_debug_glEvalMesh1$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALMESH1PROC glad_debug_glEvalMesh1
     * }
     */
    public static MemorySegment glad_debug_glEvalMesh1() {
        return glad_debug_glEvalMesh1$constants.SEGMENT.get(glad_debug_glEvalMesh1$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALMESH1PROC glad_debug_glEvalMesh1
     * }
     */
    public static void glad_debug_glEvalMesh1(MemorySegment varValue) {
        glad_debug_glEvalMesh1$constants.SEGMENT.set(glad_debug_glEvalMesh1$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glEvalMesh2$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glEvalMesh2").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALMESH2PROC glad_glEvalMesh2
     * }
     */
    public static AddressLayout glad_glEvalMesh2$layout() {
        return glad_glEvalMesh2$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALMESH2PROC glad_glEvalMesh2
     * }
     */
    public static MemorySegment glad_glEvalMesh2$segment() {
        return glad_glEvalMesh2$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALMESH2PROC glad_glEvalMesh2
     * }
     */
    public static MemorySegment glad_glEvalMesh2() {
        return glad_glEvalMesh2$constants.SEGMENT.get(glad_glEvalMesh2$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALMESH2PROC glad_glEvalMesh2
     * }
     */
    public static void glad_glEvalMesh2(MemorySegment varValue) {
        glad_glEvalMesh2$constants.SEGMENT.set(glad_glEvalMesh2$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glEvalMesh2$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glEvalMesh2").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALMESH2PROC glad_debug_glEvalMesh2
     * }
     */
    public static AddressLayout glad_debug_glEvalMesh2$layout() {
        return glad_debug_glEvalMesh2$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALMESH2PROC glad_debug_glEvalMesh2
     * }
     */
    public static MemorySegment glad_debug_glEvalMesh2$segment() {
        return glad_debug_glEvalMesh2$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALMESH2PROC glad_debug_glEvalMesh2
     * }
     */
    public static MemorySegment glad_debug_glEvalMesh2() {
        return glad_debug_glEvalMesh2$constants.SEGMENT.get(glad_debug_glEvalMesh2$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALMESH2PROC glad_debug_glEvalMesh2
     * }
     */
    public static void glad_debug_glEvalMesh2(MemorySegment varValue) {
        glad_debug_glEvalMesh2$constants.SEGMENT.set(glad_debug_glEvalMesh2$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glEvalPoint1$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glEvalPoint1").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALPOINT1PROC glad_glEvalPoint1
     * }
     */
    public static AddressLayout glad_glEvalPoint1$layout() {
        return glad_glEvalPoint1$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALPOINT1PROC glad_glEvalPoint1
     * }
     */
    public static MemorySegment glad_glEvalPoint1$segment() {
        return glad_glEvalPoint1$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALPOINT1PROC glad_glEvalPoint1
     * }
     */
    public static MemorySegment glad_glEvalPoint1() {
        return glad_glEvalPoint1$constants.SEGMENT.get(glad_glEvalPoint1$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALPOINT1PROC glad_glEvalPoint1
     * }
     */
    public static void glad_glEvalPoint1(MemorySegment varValue) {
        glad_glEvalPoint1$constants.SEGMENT.set(glad_glEvalPoint1$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glEvalPoint1$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glEvalPoint1").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALPOINT1PROC glad_debug_glEvalPoint1
     * }
     */
    public static AddressLayout glad_debug_glEvalPoint1$layout() {
        return glad_debug_glEvalPoint1$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALPOINT1PROC glad_debug_glEvalPoint1
     * }
     */
    public static MemorySegment glad_debug_glEvalPoint1$segment() {
        return glad_debug_glEvalPoint1$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALPOINT1PROC glad_debug_glEvalPoint1
     * }
     */
    public static MemorySegment glad_debug_glEvalPoint1() {
        return glad_debug_glEvalPoint1$constants.SEGMENT.get(glad_debug_glEvalPoint1$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALPOINT1PROC glad_debug_glEvalPoint1
     * }
     */
    public static void glad_debug_glEvalPoint1(MemorySegment varValue) {
        glad_debug_glEvalPoint1$constants.SEGMENT.set(glad_debug_glEvalPoint1$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glEvalPoint2$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glEvalPoint2").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALPOINT2PROC glad_glEvalPoint2
     * }
     */
    public static AddressLayout glad_glEvalPoint2$layout() {
        return glad_glEvalPoint2$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALPOINT2PROC glad_glEvalPoint2
     * }
     */
    public static MemorySegment glad_glEvalPoint2$segment() {
        return glad_glEvalPoint2$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALPOINT2PROC glad_glEvalPoint2
     * }
     */
    public static MemorySegment glad_glEvalPoint2() {
        return glad_glEvalPoint2$constants.SEGMENT.get(glad_glEvalPoint2$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALPOINT2PROC glad_glEvalPoint2
     * }
     */
    public static void glad_glEvalPoint2(MemorySegment varValue) {
        glad_glEvalPoint2$constants.SEGMENT.set(glad_glEvalPoint2$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glEvalPoint2$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glEvalPoint2").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALPOINT2PROC glad_debug_glEvalPoint2
     * }
     */
    public static AddressLayout glad_debug_glEvalPoint2$layout() {
        return glad_debug_glEvalPoint2$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALPOINT2PROC glad_debug_glEvalPoint2
     * }
     */
    public static MemorySegment glad_debug_glEvalPoint2$segment() {
        return glad_debug_glEvalPoint2$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALPOINT2PROC glad_debug_glEvalPoint2
     * }
     */
    public static MemorySegment glad_debug_glEvalPoint2() {
        return glad_debug_glEvalPoint2$constants.SEGMENT.get(glad_debug_glEvalPoint2$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLEVALPOINT2PROC glad_debug_glEvalPoint2
     * }
     */
    public static void glad_debug_glEvalPoint2(MemorySegment varValue) {
        glad_debug_glEvalPoint2$constants.SEGMENT.set(glad_debug_glEvalPoint2$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glExecuteProgramNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glExecuteProgramNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLEXECUTEPROGRAMNVPROC glad_glExecuteProgramNV
     * }
     */
    public static AddressLayout glad_glExecuteProgramNV$layout() {
        return glad_glExecuteProgramNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLEXECUTEPROGRAMNVPROC glad_glExecuteProgramNV
     * }
     */
    public static MemorySegment glad_glExecuteProgramNV$segment() {
        return glad_glExecuteProgramNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLEXECUTEPROGRAMNVPROC glad_glExecuteProgramNV
     * }
     */
    public static MemorySegment glad_glExecuteProgramNV() {
        return glad_glExecuteProgramNV$constants.SEGMENT.get(glad_glExecuteProgramNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLEXECUTEPROGRAMNVPROC glad_glExecuteProgramNV
     * }
     */
    public static void glad_glExecuteProgramNV(MemorySegment varValue) {
        glad_glExecuteProgramNV$constants.SEGMENT.set(glad_glExecuteProgramNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glExecuteProgramNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glExecuteProgramNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLEXECUTEPROGRAMNVPROC glad_debug_glExecuteProgramNV
     * }
     */
    public static AddressLayout glad_debug_glExecuteProgramNV$layout() {
        return glad_debug_glExecuteProgramNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLEXECUTEPROGRAMNVPROC glad_debug_glExecuteProgramNV
     * }
     */
    public static MemorySegment glad_debug_glExecuteProgramNV$segment() {
        return glad_debug_glExecuteProgramNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLEXECUTEPROGRAMNVPROC glad_debug_glExecuteProgramNV
     * }
     */
    public static MemorySegment glad_debug_glExecuteProgramNV() {
        return glad_debug_glExecuteProgramNV$constants.SEGMENT.get(glad_debug_glExecuteProgramNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLEXECUTEPROGRAMNVPROC glad_debug_glExecuteProgramNV
     * }
     */
    public static void glad_debug_glExecuteProgramNV(MemorySegment varValue) {
        glad_debug_glExecuteProgramNV$constants.SEGMENT.set(glad_debug_glExecuteProgramNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glFeedbackBuffer$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glFeedbackBuffer").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFEEDBACKBUFFERPROC glad_glFeedbackBuffer
     * }
     */
    public static AddressLayout glad_glFeedbackBuffer$layout() {
        return glad_glFeedbackBuffer$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFEEDBACKBUFFERPROC glad_glFeedbackBuffer
     * }
     */
    public static MemorySegment glad_glFeedbackBuffer$segment() {
        return glad_glFeedbackBuffer$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFEEDBACKBUFFERPROC glad_glFeedbackBuffer
     * }
     */
    public static MemorySegment glad_glFeedbackBuffer() {
        return glad_glFeedbackBuffer$constants.SEGMENT.get(glad_glFeedbackBuffer$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFEEDBACKBUFFERPROC glad_glFeedbackBuffer
     * }
     */
    public static void glad_glFeedbackBuffer(MemorySegment varValue) {
        glad_glFeedbackBuffer$constants.SEGMENT.set(glad_glFeedbackBuffer$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glFeedbackBuffer$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glFeedbackBuffer").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFEEDBACKBUFFERPROC glad_debug_glFeedbackBuffer
     * }
     */
    public static AddressLayout glad_debug_glFeedbackBuffer$layout() {
        return glad_debug_glFeedbackBuffer$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFEEDBACKBUFFERPROC glad_debug_glFeedbackBuffer
     * }
     */
    public static MemorySegment glad_debug_glFeedbackBuffer$segment() {
        return glad_debug_glFeedbackBuffer$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFEEDBACKBUFFERPROC glad_debug_glFeedbackBuffer
     * }
     */
    public static MemorySegment glad_debug_glFeedbackBuffer() {
        return glad_debug_glFeedbackBuffer$constants.SEGMENT.get(glad_debug_glFeedbackBuffer$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFEEDBACKBUFFERPROC glad_debug_glFeedbackBuffer
     * }
     */
    public static void glad_debug_glFeedbackBuffer(MemorySegment varValue) {
        glad_debug_glFeedbackBuffer$constants.SEGMENT.set(glad_debug_glFeedbackBuffer$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glFenceSync$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glFenceSync").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFENCESYNCPROC glad_glFenceSync
     * }
     */
    public static AddressLayout glad_glFenceSync$layout() {
        return glad_glFenceSync$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFENCESYNCPROC glad_glFenceSync
     * }
     */
    public static MemorySegment glad_glFenceSync$segment() {
        return glad_glFenceSync$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFENCESYNCPROC glad_glFenceSync
     * }
     */
    public static MemorySegment glad_glFenceSync() {
        return glad_glFenceSync$constants.SEGMENT.get(glad_glFenceSync$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFENCESYNCPROC glad_glFenceSync
     * }
     */
    public static void glad_glFenceSync(MemorySegment varValue) {
        glad_glFenceSync$constants.SEGMENT.set(glad_glFenceSync$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glFenceSync$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glFenceSync").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFENCESYNCPROC glad_debug_glFenceSync
     * }
     */
    public static AddressLayout glad_debug_glFenceSync$layout() {
        return glad_debug_glFenceSync$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFENCESYNCPROC glad_debug_glFenceSync
     * }
     */
    public static MemorySegment glad_debug_glFenceSync$segment() {
        return glad_debug_glFenceSync$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFENCESYNCPROC glad_debug_glFenceSync
     * }
     */
    public static MemorySegment glad_debug_glFenceSync() {
        return glad_debug_glFenceSync$constants.SEGMENT.get(glad_debug_glFenceSync$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFENCESYNCPROC glad_debug_glFenceSync
     * }
     */
    public static void glad_debug_glFenceSync(MemorySegment varValue) {
        glad_debug_glFenceSync$constants.SEGMENT.set(glad_debug_glFenceSync$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glFinish$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glFinish").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFINISHPROC glad_glFinish
     * }
     */
    public static AddressLayout glad_glFinish$layout() {
        return glad_glFinish$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFINISHPROC glad_glFinish
     * }
     */
    public static MemorySegment glad_glFinish$segment() {
        return glad_glFinish$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFINISHPROC glad_glFinish
     * }
     */
    public static MemorySegment glad_glFinish() {
        return glad_glFinish$constants.SEGMENT.get(glad_glFinish$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFINISHPROC glad_glFinish
     * }
     */
    public static void glad_glFinish(MemorySegment varValue) {
        glad_glFinish$constants.SEGMENT.set(glad_glFinish$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glFinish$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glFinish").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFINISHPROC glad_debug_glFinish
     * }
     */
    public static AddressLayout glad_debug_glFinish$layout() {
        return glad_debug_glFinish$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFINISHPROC glad_debug_glFinish
     * }
     */
    public static MemorySegment glad_debug_glFinish$segment() {
        return glad_debug_glFinish$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFINISHPROC glad_debug_glFinish
     * }
     */
    public static MemorySegment glad_debug_glFinish() {
        return glad_debug_glFinish$constants.SEGMENT.get(glad_debug_glFinish$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFINISHPROC glad_debug_glFinish
     * }
     */
    public static void glad_debug_glFinish(MemorySegment varValue) {
        glad_debug_glFinish$constants.SEGMENT.set(glad_debug_glFinish$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glFlush$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glFlush").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFLUSHPROC glad_glFlush
     * }
     */
    public static AddressLayout glad_glFlush$layout() {
        return glad_glFlush$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFLUSHPROC glad_glFlush
     * }
     */
    public static MemorySegment glad_glFlush$segment() {
        return glad_glFlush$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFLUSHPROC glad_glFlush
     * }
     */
    public static MemorySegment glad_glFlush() {
        return glad_glFlush$constants.SEGMENT.get(glad_glFlush$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFLUSHPROC glad_glFlush
     * }
     */
    public static void glad_glFlush(MemorySegment varValue) {
        glad_glFlush$constants.SEGMENT.set(glad_glFlush$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glFlush$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glFlush").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFLUSHPROC glad_debug_glFlush
     * }
     */
    public static AddressLayout glad_debug_glFlush$layout() {
        return glad_debug_glFlush$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFLUSHPROC glad_debug_glFlush
     * }
     */
    public static MemorySegment glad_debug_glFlush$segment() {
        return glad_debug_glFlush$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFLUSHPROC glad_debug_glFlush
     * }
     */
    public static MemorySegment glad_debug_glFlush() {
        return glad_debug_glFlush$constants.SEGMENT.get(glad_debug_glFlush$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFLUSHPROC glad_debug_glFlush
     * }
     */
    public static void glad_debug_glFlush(MemorySegment varValue) {
        glad_debug_glFlush$constants.SEGMENT.set(glad_debug_glFlush$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glFlushMappedBufferRange$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glFlushMappedBufferRange").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFLUSHMAPPEDBUFFERRANGEPROC glad_glFlushMappedBufferRange
     * }
     */
    public static AddressLayout glad_glFlushMappedBufferRange$layout() {
        return glad_glFlushMappedBufferRange$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFLUSHMAPPEDBUFFERRANGEPROC glad_glFlushMappedBufferRange
     * }
     */
    public static MemorySegment glad_glFlushMappedBufferRange$segment() {
        return glad_glFlushMappedBufferRange$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFLUSHMAPPEDBUFFERRANGEPROC glad_glFlushMappedBufferRange
     * }
     */
    public static MemorySegment glad_glFlushMappedBufferRange() {
        return glad_glFlushMappedBufferRange$constants.SEGMENT.get(glad_glFlushMappedBufferRange$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFLUSHMAPPEDBUFFERRANGEPROC glad_glFlushMappedBufferRange
     * }
     */
    public static void glad_glFlushMappedBufferRange(MemorySegment varValue) {
        glad_glFlushMappedBufferRange$constants.SEGMENT.set(glad_glFlushMappedBufferRange$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glFlushMappedBufferRange$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glFlushMappedBufferRange").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFLUSHMAPPEDBUFFERRANGEPROC glad_debug_glFlushMappedBufferRange
     * }
     */
    public static AddressLayout glad_debug_glFlushMappedBufferRange$layout() {
        return glad_debug_glFlushMappedBufferRange$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFLUSHMAPPEDBUFFERRANGEPROC glad_debug_glFlushMappedBufferRange
     * }
     */
    public static MemorySegment glad_debug_glFlushMappedBufferRange$segment() {
        return glad_debug_glFlushMappedBufferRange$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFLUSHMAPPEDBUFFERRANGEPROC glad_debug_glFlushMappedBufferRange
     * }
     */
    public static MemorySegment glad_debug_glFlushMappedBufferRange() {
        return glad_debug_glFlushMappedBufferRange$constants.SEGMENT.get(glad_debug_glFlushMappedBufferRange$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFLUSHMAPPEDBUFFERRANGEPROC glad_debug_glFlushMappedBufferRange
     * }
     */
    public static void glad_debug_glFlushMappedBufferRange(MemorySegment varValue) {
        glad_debug_glFlushMappedBufferRange$constants.SEGMENT.set(glad_debug_glFlushMappedBufferRange$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glFlushMappedBufferRangeAPPLE$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glFlushMappedBufferRangeAPPLE").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC glad_glFlushMappedBufferRangeAPPLE
     * }
     */
    public static AddressLayout glad_glFlushMappedBufferRangeAPPLE$layout() {
        return glad_glFlushMappedBufferRangeAPPLE$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC glad_glFlushMappedBufferRangeAPPLE
     * }
     */
    public static MemorySegment glad_glFlushMappedBufferRangeAPPLE$segment() {
        return glad_glFlushMappedBufferRangeAPPLE$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC glad_glFlushMappedBufferRangeAPPLE
     * }
     */
    public static MemorySegment glad_glFlushMappedBufferRangeAPPLE() {
        return glad_glFlushMappedBufferRangeAPPLE$constants.SEGMENT.get(glad_glFlushMappedBufferRangeAPPLE$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC glad_glFlushMappedBufferRangeAPPLE
     * }
     */
    public static void glad_glFlushMappedBufferRangeAPPLE(MemorySegment varValue) {
        glad_glFlushMappedBufferRangeAPPLE$constants.SEGMENT.set(glad_glFlushMappedBufferRangeAPPLE$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glFlushMappedBufferRangeAPPLE$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glFlushMappedBufferRangeAPPLE").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC glad_debug_glFlushMappedBufferRangeAPPLE
     * }
     */
    public static AddressLayout glad_debug_glFlushMappedBufferRangeAPPLE$layout() {
        return glad_debug_glFlushMappedBufferRangeAPPLE$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC glad_debug_glFlushMappedBufferRangeAPPLE
     * }
     */
    public static MemorySegment glad_debug_glFlushMappedBufferRangeAPPLE$segment() {
        return glad_debug_glFlushMappedBufferRangeAPPLE$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC glad_debug_glFlushMappedBufferRangeAPPLE
     * }
     */
    public static MemorySegment glad_debug_glFlushMappedBufferRangeAPPLE() {
        return glad_debug_glFlushMappedBufferRangeAPPLE$constants.SEGMENT.get(glad_debug_glFlushMappedBufferRangeAPPLE$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC glad_debug_glFlushMappedBufferRangeAPPLE
     * }
     */
    public static void glad_debug_glFlushMappedBufferRangeAPPLE(MemorySegment varValue) {
        glad_debug_glFlushMappedBufferRangeAPPLE$constants.SEGMENT.set(glad_debug_glFlushMappedBufferRangeAPPLE$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glFlushMappedNamedBufferRange$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glFlushMappedNamedBufferRange").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC glad_glFlushMappedNamedBufferRange
     * }
     */
    public static AddressLayout glad_glFlushMappedNamedBufferRange$layout() {
        return glad_glFlushMappedNamedBufferRange$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC glad_glFlushMappedNamedBufferRange
     * }
     */
    public static MemorySegment glad_glFlushMappedNamedBufferRange$segment() {
        return glad_glFlushMappedNamedBufferRange$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC glad_glFlushMappedNamedBufferRange
     * }
     */
    public static MemorySegment glad_glFlushMappedNamedBufferRange() {
        return glad_glFlushMappedNamedBufferRange$constants.SEGMENT.get(glad_glFlushMappedNamedBufferRange$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC glad_glFlushMappedNamedBufferRange
     * }
     */
    public static void glad_glFlushMappedNamedBufferRange(MemorySegment varValue) {
        glad_glFlushMappedNamedBufferRange$constants.SEGMENT.set(glad_glFlushMappedNamedBufferRange$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glFlushMappedNamedBufferRange$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glFlushMappedNamedBufferRange").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC glad_debug_glFlushMappedNamedBufferRange
     * }
     */
    public static AddressLayout glad_debug_glFlushMappedNamedBufferRange$layout() {
        return glad_debug_glFlushMappedNamedBufferRange$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC glad_debug_glFlushMappedNamedBufferRange
     * }
     */
    public static MemorySegment glad_debug_glFlushMappedNamedBufferRange$segment() {
        return glad_debug_glFlushMappedNamedBufferRange$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC glad_debug_glFlushMappedNamedBufferRange
     * }
     */
    public static MemorySegment glad_debug_glFlushMappedNamedBufferRange() {
        return glad_debug_glFlushMappedNamedBufferRange$constants.SEGMENT.get(glad_debug_glFlushMappedNamedBufferRange$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC glad_debug_glFlushMappedNamedBufferRange
     * }
     */
    public static void glad_debug_glFlushMappedNamedBufferRange(MemorySegment varValue) {
        glad_debug_glFlushMappedNamedBufferRange$constants.SEGMENT.set(glad_debug_glFlushMappedNamedBufferRange$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glFlushMappedNamedBufferRangeEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glFlushMappedNamedBufferRangeEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC glad_glFlushMappedNamedBufferRangeEXT
     * }
     */
    public static AddressLayout glad_glFlushMappedNamedBufferRangeEXT$layout() {
        return glad_glFlushMappedNamedBufferRangeEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC glad_glFlushMappedNamedBufferRangeEXT
     * }
     */
    public static MemorySegment glad_glFlushMappedNamedBufferRangeEXT$segment() {
        return glad_glFlushMappedNamedBufferRangeEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC glad_glFlushMappedNamedBufferRangeEXT
     * }
     */
    public static MemorySegment glad_glFlushMappedNamedBufferRangeEXT() {
        return glad_glFlushMappedNamedBufferRangeEXT$constants.SEGMENT.get(glad_glFlushMappedNamedBufferRangeEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC glad_glFlushMappedNamedBufferRangeEXT
     * }
     */
    public static void glad_glFlushMappedNamedBufferRangeEXT(MemorySegment varValue) {
        glad_glFlushMappedNamedBufferRangeEXT$constants.SEGMENT.set(glad_glFlushMappedNamedBufferRangeEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glFlushMappedNamedBufferRangeEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glFlushMappedNamedBufferRangeEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC glad_debug_glFlushMappedNamedBufferRangeEXT
     * }
     */
    public static AddressLayout glad_debug_glFlushMappedNamedBufferRangeEXT$layout() {
        return glad_debug_glFlushMappedNamedBufferRangeEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC glad_debug_glFlushMappedNamedBufferRangeEXT
     * }
     */
    public static MemorySegment glad_debug_glFlushMappedNamedBufferRangeEXT$segment() {
        return glad_debug_glFlushMappedNamedBufferRangeEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC glad_debug_glFlushMappedNamedBufferRangeEXT
     * }
     */
    public static MemorySegment glad_debug_glFlushMappedNamedBufferRangeEXT() {
        return glad_debug_glFlushMappedNamedBufferRangeEXT$constants.SEGMENT.get(glad_debug_glFlushMappedNamedBufferRangeEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC glad_debug_glFlushMappedNamedBufferRangeEXT
     * }
     */
    public static void glad_debug_glFlushMappedNamedBufferRangeEXT(MemorySegment varValue) {
        glad_debug_glFlushMappedNamedBufferRangeEXT$constants.SEGMENT.set(glad_debug_glFlushMappedNamedBufferRangeEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glFogCoordPointer$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glFogCoordPointer").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDPOINTERPROC glad_glFogCoordPointer
     * }
     */
    public static AddressLayout glad_glFogCoordPointer$layout() {
        return glad_glFogCoordPointer$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDPOINTERPROC glad_glFogCoordPointer
     * }
     */
    public static MemorySegment glad_glFogCoordPointer$segment() {
        return glad_glFogCoordPointer$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDPOINTERPROC glad_glFogCoordPointer
     * }
     */
    public static MemorySegment glad_glFogCoordPointer() {
        return glad_glFogCoordPointer$constants.SEGMENT.get(glad_glFogCoordPointer$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDPOINTERPROC glad_glFogCoordPointer
     * }
     */
    public static void glad_glFogCoordPointer(MemorySegment varValue) {
        glad_glFogCoordPointer$constants.SEGMENT.set(glad_glFogCoordPointer$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glFogCoordPointer$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glFogCoordPointer").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDPOINTERPROC glad_debug_glFogCoordPointer
     * }
     */
    public static AddressLayout glad_debug_glFogCoordPointer$layout() {
        return glad_debug_glFogCoordPointer$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDPOINTERPROC glad_debug_glFogCoordPointer
     * }
     */
    public static MemorySegment glad_debug_glFogCoordPointer$segment() {
        return glad_debug_glFogCoordPointer$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDPOINTERPROC glad_debug_glFogCoordPointer
     * }
     */
    public static MemorySegment glad_debug_glFogCoordPointer() {
        return glad_debug_glFogCoordPointer$constants.SEGMENT.get(glad_debug_glFogCoordPointer$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDPOINTERPROC glad_debug_glFogCoordPointer
     * }
     */
    public static void glad_debug_glFogCoordPointer(MemorySegment varValue) {
        glad_debug_glFogCoordPointer$constants.SEGMENT.set(glad_debug_glFogCoordPointer$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glFogCoordPointerEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glFogCoordPointerEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDPOINTEREXTPROC glad_glFogCoordPointerEXT
     * }
     */
    public static AddressLayout glad_glFogCoordPointerEXT$layout() {
        return glad_glFogCoordPointerEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDPOINTEREXTPROC glad_glFogCoordPointerEXT
     * }
     */
    public static MemorySegment glad_glFogCoordPointerEXT$segment() {
        return glad_glFogCoordPointerEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDPOINTEREXTPROC glad_glFogCoordPointerEXT
     * }
     */
    public static MemorySegment glad_glFogCoordPointerEXT() {
        return glad_glFogCoordPointerEXT$constants.SEGMENT.get(glad_glFogCoordPointerEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDPOINTEREXTPROC glad_glFogCoordPointerEXT
     * }
     */
    public static void glad_glFogCoordPointerEXT(MemorySegment varValue) {
        glad_glFogCoordPointerEXT$constants.SEGMENT.set(glad_glFogCoordPointerEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glFogCoordPointerEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glFogCoordPointerEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDPOINTEREXTPROC glad_debug_glFogCoordPointerEXT
     * }
     */
    public static AddressLayout glad_debug_glFogCoordPointerEXT$layout() {
        return glad_debug_glFogCoordPointerEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDPOINTEREXTPROC glad_debug_glFogCoordPointerEXT
     * }
     */
    public static MemorySegment glad_debug_glFogCoordPointerEXT$segment() {
        return glad_debug_glFogCoordPointerEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDPOINTEREXTPROC glad_debug_glFogCoordPointerEXT
     * }
     */
    public static MemorySegment glad_debug_glFogCoordPointerEXT() {
        return glad_debug_glFogCoordPointerEXT$constants.SEGMENT.get(glad_debug_glFogCoordPointerEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDPOINTEREXTPROC glad_debug_glFogCoordPointerEXT
     * }
     */
    public static void glad_debug_glFogCoordPointerEXT(MemorySegment varValue) {
        glad_debug_glFogCoordPointerEXT$constants.SEGMENT.set(glad_debug_glFogCoordPointerEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glFogCoordd$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glFogCoordd").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDDPROC glad_glFogCoordd
     * }
     */
    public static AddressLayout glad_glFogCoordd$layout() {
        return glad_glFogCoordd$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDDPROC glad_glFogCoordd
     * }
     */
    public static MemorySegment glad_glFogCoordd$segment() {
        return glad_glFogCoordd$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDDPROC glad_glFogCoordd
     * }
     */
    public static MemorySegment glad_glFogCoordd() {
        return glad_glFogCoordd$constants.SEGMENT.get(glad_glFogCoordd$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDDPROC glad_glFogCoordd
     * }
     */
    public static void glad_glFogCoordd(MemorySegment varValue) {
        glad_glFogCoordd$constants.SEGMENT.set(glad_glFogCoordd$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glFogCoordd$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glFogCoordd").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDDPROC glad_debug_glFogCoordd
     * }
     */
    public static AddressLayout glad_debug_glFogCoordd$layout() {
        return glad_debug_glFogCoordd$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDDPROC glad_debug_glFogCoordd
     * }
     */
    public static MemorySegment glad_debug_glFogCoordd$segment() {
        return glad_debug_glFogCoordd$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDDPROC glad_debug_glFogCoordd
     * }
     */
    public static MemorySegment glad_debug_glFogCoordd() {
        return glad_debug_glFogCoordd$constants.SEGMENT.get(glad_debug_glFogCoordd$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDDPROC glad_debug_glFogCoordd
     * }
     */
    public static void glad_debug_glFogCoordd(MemorySegment varValue) {
        glad_debug_glFogCoordd$constants.SEGMENT.set(glad_debug_glFogCoordd$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glFogCoorddEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glFogCoorddEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDDEXTPROC glad_glFogCoorddEXT
     * }
     */
    public static AddressLayout glad_glFogCoorddEXT$layout() {
        return glad_glFogCoorddEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDDEXTPROC glad_glFogCoorddEXT
     * }
     */
    public static MemorySegment glad_glFogCoorddEXT$segment() {
        return glad_glFogCoorddEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDDEXTPROC glad_glFogCoorddEXT
     * }
     */
    public static MemorySegment glad_glFogCoorddEXT() {
        return glad_glFogCoorddEXT$constants.SEGMENT.get(glad_glFogCoorddEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDDEXTPROC glad_glFogCoorddEXT
     * }
     */
    public static void glad_glFogCoorddEXT(MemorySegment varValue) {
        glad_glFogCoorddEXT$constants.SEGMENT.set(glad_glFogCoorddEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glFogCoorddEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glFogCoorddEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDDEXTPROC glad_debug_glFogCoorddEXT
     * }
     */
    public static AddressLayout glad_debug_glFogCoorddEXT$layout() {
        return glad_debug_glFogCoorddEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDDEXTPROC glad_debug_glFogCoorddEXT
     * }
     */
    public static MemorySegment glad_debug_glFogCoorddEXT$segment() {
        return glad_debug_glFogCoorddEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDDEXTPROC glad_debug_glFogCoorddEXT
     * }
     */
    public static MemorySegment glad_debug_glFogCoorddEXT() {
        return glad_debug_glFogCoorddEXT$constants.SEGMENT.get(glad_debug_glFogCoorddEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDDEXTPROC glad_debug_glFogCoorddEXT
     * }
     */
    public static void glad_debug_glFogCoorddEXT(MemorySegment varValue) {
        glad_debug_glFogCoorddEXT$constants.SEGMENT.set(glad_debug_glFogCoorddEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glFogCoorddv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glFogCoorddv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDDVPROC glad_glFogCoorddv
     * }
     */
    public static AddressLayout glad_glFogCoorddv$layout() {
        return glad_glFogCoorddv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDDVPROC glad_glFogCoorddv
     * }
     */
    public static MemorySegment glad_glFogCoorddv$segment() {
        return glad_glFogCoorddv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDDVPROC glad_glFogCoorddv
     * }
     */
    public static MemorySegment glad_glFogCoorddv() {
        return glad_glFogCoorddv$constants.SEGMENT.get(glad_glFogCoorddv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDDVPROC glad_glFogCoorddv
     * }
     */
    public static void glad_glFogCoorddv(MemorySegment varValue) {
        glad_glFogCoorddv$constants.SEGMENT.set(glad_glFogCoorddv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glFogCoorddv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glFogCoorddv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDDVPROC glad_debug_glFogCoorddv
     * }
     */
    public static AddressLayout glad_debug_glFogCoorddv$layout() {
        return glad_debug_glFogCoorddv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDDVPROC glad_debug_glFogCoorddv
     * }
     */
    public static MemorySegment glad_debug_glFogCoorddv$segment() {
        return glad_debug_glFogCoorddv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDDVPROC glad_debug_glFogCoorddv
     * }
     */
    public static MemorySegment glad_debug_glFogCoorddv() {
        return glad_debug_glFogCoorddv$constants.SEGMENT.get(glad_debug_glFogCoorddv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDDVPROC glad_debug_glFogCoorddv
     * }
     */
    public static void glad_debug_glFogCoorddv(MemorySegment varValue) {
        glad_debug_glFogCoorddv$constants.SEGMENT.set(glad_debug_glFogCoorddv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glFogCoorddvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glFogCoorddvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDDVEXTPROC glad_glFogCoorddvEXT
     * }
     */
    public static AddressLayout glad_glFogCoorddvEXT$layout() {
        return glad_glFogCoorddvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDDVEXTPROC glad_glFogCoorddvEXT
     * }
     */
    public static MemorySegment glad_glFogCoorddvEXT$segment() {
        return glad_glFogCoorddvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDDVEXTPROC glad_glFogCoorddvEXT
     * }
     */
    public static MemorySegment glad_glFogCoorddvEXT() {
        return glad_glFogCoorddvEXT$constants.SEGMENT.get(glad_glFogCoorddvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDDVEXTPROC glad_glFogCoorddvEXT
     * }
     */
    public static void glad_glFogCoorddvEXT(MemorySegment varValue) {
        glad_glFogCoorddvEXT$constants.SEGMENT.set(glad_glFogCoorddvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glFogCoorddvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glFogCoorddvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDDVEXTPROC glad_debug_glFogCoorddvEXT
     * }
     */
    public static AddressLayout glad_debug_glFogCoorddvEXT$layout() {
        return glad_debug_glFogCoorddvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDDVEXTPROC glad_debug_glFogCoorddvEXT
     * }
     */
    public static MemorySegment glad_debug_glFogCoorddvEXT$segment() {
        return glad_debug_glFogCoorddvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDDVEXTPROC glad_debug_glFogCoorddvEXT
     * }
     */
    public static MemorySegment glad_debug_glFogCoorddvEXT() {
        return glad_debug_glFogCoorddvEXT$constants.SEGMENT.get(glad_debug_glFogCoorddvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDDVEXTPROC glad_debug_glFogCoorddvEXT
     * }
     */
    public static void glad_debug_glFogCoorddvEXT(MemorySegment varValue) {
        glad_debug_glFogCoorddvEXT$constants.SEGMENT.set(glad_debug_glFogCoorddvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glFogCoordf$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glFogCoordf").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDFPROC glad_glFogCoordf
     * }
     */
    public static AddressLayout glad_glFogCoordf$layout() {
        return glad_glFogCoordf$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDFPROC glad_glFogCoordf
     * }
     */
    public static MemorySegment glad_glFogCoordf$segment() {
        return glad_glFogCoordf$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDFPROC glad_glFogCoordf
     * }
     */
    public static MemorySegment glad_glFogCoordf() {
        return glad_glFogCoordf$constants.SEGMENT.get(glad_glFogCoordf$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDFPROC glad_glFogCoordf
     * }
     */
    public static void glad_glFogCoordf(MemorySegment varValue) {
        glad_glFogCoordf$constants.SEGMENT.set(glad_glFogCoordf$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glFogCoordf$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glFogCoordf").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDFPROC glad_debug_glFogCoordf
     * }
     */
    public static AddressLayout glad_debug_glFogCoordf$layout() {
        return glad_debug_glFogCoordf$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDFPROC glad_debug_glFogCoordf
     * }
     */
    public static MemorySegment glad_debug_glFogCoordf$segment() {
        return glad_debug_glFogCoordf$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDFPROC glad_debug_glFogCoordf
     * }
     */
    public static MemorySegment glad_debug_glFogCoordf() {
        return glad_debug_glFogCoordf$constants.SEGMENT.get(glad_debug_glFogCoordf$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDFPROC glad_debug_glFogCoordf
     * }
     */
    public static void glad_debug_glFogCoordf(MemorySegment varValue) {
        glad_debug_glFogCoordf$constants.SEGMENT.set(glad_debug_glFogCoordf$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glFogCoordfEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glFogCoordfEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDFEXTPROC glad_glFogCoordfEXT
     * }
     */
    public static AddressLayout glad_glFogCoordfEXT$layout() {
        return glad_glFogCoordfEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDFEXTPROC glad_glFogCoordfEXT
     * }
     */
    public static MemorySegment glad_glFogCoordfEXT$segment() {
        return glad_glFogCoordfEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDFEXTPROC glad_glFogCoordfEXT
     * }
     */
    public static MemorySegment glad_glFogCoordfEXT() {
        return glad_glFogCoordfEXT$constants.SEGMENT.get(glad_glFogCoordfEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDFEXTPROC glad_glFogCoordfEXT
     * }
     */
    public static void glad_glFogCoordfEXT(MemorySegment varValue) {
        glad_glFogCoordfEXT$constants.SEGMENT.set(glad_glFogCoordfEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glFogCoordfEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glFogCoordfEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDFEXTPROC glad_debug_glFogCoordfEXT
     * }
     */
    public static AddressLayout glad_debug_glFogCoordfEXT$layout() {
        return glad_debug_glFogCoordfEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDFEXTPROC glad_debug_glFogCoordfEXT
     * }
     */
    public static MemorySegment glad_debug_glFogCoordfEXT$segment() {
        return glad_debug_glFogCoordfEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDFEXTPROC glad_debug_glFogCoordfEXT
     * }
     */
    public static MemorySegment glad_debug_glFogCoordfEXT() {
        return glad_debug_glFogCoordfEXT$constants.SEGMENT.get(glad_debug_glFogCoordfEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDFEXTPROC glad_debug_glFogCoordfEXT
     * }
     */
    public static void glad_debug_glFogCoordfEXT(MemorySegment varValue) {
        glad_debug_glFogCoordfEXT$constants.SEGMENT.set(glad_debug_glFogCoordfEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glFogCoordfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glFogCoordfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDFVPROC glad_glFogCoordfv
     * }
     */
    public static AddressLayout glad_glFogCoordfv$layout() {
        return glad_glFogCoordfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDFVPROC glad_glFogCoordfv
     * }
     */
    public static MemorySegment glad_glFogCoordfv$segment() {
        return glad_glFogCoordfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDFVPROC glad_glFogCoordfv
     * }
     */
    public static MemorySegment glad_glFogCoordfv() {
        return glad_glFogCoordfv$constants.SEGMENT.get(glad_glFogCoordfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDFVPROC glad_glFogCoordfv
     * }
     */
    public static void glad_glFogCoordfv(MemorySegment varValue) {
        glad_glFogCoordfv$constants.SEGMENT.set(glad_glFogCoordfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glFogCoordfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glFogCoordfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDFVPROC glad_debug_glFogCoordfv
     * }
     */
    public static AddressLayout glad_debug_glFogCoordfv$layout() {
        return glad_debug_glFogCoordfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDFVPROC glad_debug_glFogCoordfv
     * }
     */
    public static MemorySegment glad_debug_glFogCoordfv$segment() {
        return glad_debug_glFogCoordfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDFVPROC glad_debug_glFogCoordfv
     * }
     */
    public static MemorySegment glad_debug_glFogCoordfv() {
        return glad_debug_glFogCoordfv$constants.SEGMENT.get(glad_debug_glFogCoordfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDFVPROC glad_debug_glFogCoordfv
     * }
     */
    public static void glad_debug_glFogCoordfv(MemorySegment varValue) {
        glad_debug_glFogCoordfv$constants.SEGMENT.set(glad_debug_glFogCoordfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glFogCoordfvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glFogCoordfvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDFVEXTPROC glad_glFogCoordfvEXT
     * }
     */
    public static AddressLayout glad_glFogCoordfvEXT$layout() {
        return glad_glFogCoordfvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDFVEXTPROC glad_glFogCoordfvEXT
     * }
     */
    public static MemorySegment glad_glFogCoordfvEXT$segment() {
        return glad_glFogCoordfvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDFVEXTPROC glad_glFogCoordfvEXT
     * }
     */
    public static MemorySegment glad_glFogCoordfvEXT() {
        return glad_glFogCoordfvEXT$constants.SEGMENT.get(glad_glFogCoordfvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDFVEXTPROC glad_glFogCoordfvEXT
     * }
     */
    public static void glad_glFogCoordfvEXT(MemorySegment varValue) {
        glad_glFogCoordfvEXT$constants.SEGMENT.set(glad_glFogCoordfvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glFogCoordfvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glFogCoordfvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDFVEXTPROC glad_debug_glFogCoordfvEXT
     * }
     */
    public static AddressLayout glad_debug_glFogCoordfvEXT$layout() {
        return glad_debug_glFogCoordfvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDFVEXTPROC glad_debug_glFogCoordfvEXT
     * }
     */
    public static MemorySegment glad_debug_glFogCoordfvEXT$segment() {
        return glad_debug_glFogCoordfvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDFVEXTPROC glad_debug_glFogCoordfvEXT
     * }
     */
    public static MemorySegment glad_debug_glFogCoordfvEXT() {
        return glad_debug_glFogCoordfvEXT$constants.SEGMENT.get(glad_debug_glFogCoordfvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGCOORDFVEXTPROC glad_debug_glFogCoordfvEXT
     * }
     */
    public static void glad_debug_glFogCoordfvEXT(MemorySegment varValue) {
        glad_debug_glFogCoordfvEXT$constants.SEGMENT.set(glad_debug_glFogCoordfvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glFogf$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glFogf").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGFPROC glad_glFogf
     * }
     */
    public static AddressLayout glad_glFogf$layout() {
        return glad_glFogf$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGFPROC glad_glFogf
     * }
     */
    public static MemorySegment glad_glFogf$segment() {
        return glad_glFogf$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGFPROC glad_glFogf
     * }
     */
    public static MemorySegment glad_glFogf() {
        return glad_glFogf$constants.SEGMENT.get(glad_glFogf$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGFPROC glad_glFogf
     * }
     */
    public static void glad_glFogf(MemorySegment varValue) {
        glad_glFogf$constants.SEGMENT.set(glad_glFogf$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glFogf$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glFogf").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGFPROC glad_debug_glFogf
     * }
     */
    public static AddressLayout glad_debug_glFogf$layout() {
        return glad_debug_glFogf$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGFPROC glad_debug_glFogf
     * }
     */
    public static MemorySegment glad_debug_glFogf$segment() {
        return glad_debug_glFogf$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGFPROC glad_debug_glFogf
     * }
     */
    public static MemorySegment glad_debug_glFogf() {
        return glad_debug_glFogf$constants.SEGMENT.get(glad_debug_glFogf$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGFPROC glad_debug_glFogf
     * }
     */
    public static void glad_debug_glFogf(MemorySegment varValue) {
        glad_debug_glFogf$constants.SEGMENT.set(glad_debug_glFogf$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glFogfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glFogfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGFVPROC glad_glFogfv
     * }
     */
    public static AddressLayout glad_glFogfv$layout() {
        return glad_glFogfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGFVPROC glad_glFogfv
     * }
     */
    public static MemorySegment glad_glFogfv$segment() {
        return glad_glFogfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGFVPROC glad_glFogfv
     * }
     */
    public static MemorySegment glad_glFogfv() {
        return glad_glFogfv$constants.SEGMENT.get(glad_glFogfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGFVPROC glad_glFogfv
     * }
     */
    public static void glad_glFogfv(MemorySegment varValue) {
        glad_glFogfv$constants.SEGMENT.set(glad_glFogfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glFogfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glFogfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGFVPROC glad_debug_glFogfv
     * }
     */
    public static AddressLayout glad_debug_glFogfv$layout() {
        return glad_debug_glFogfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGFVPROC glad_debug_glFogfv
     * }
     */
    public static MemorySegment glad_debug_glFogfv$segment() {
        return glad_debug_glFogfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGFVPROC glad_debug_glFogfv
     * }
     */
    public static MemorySegment glad_debug_glFogfv() {
        return glad_debug_glFogfv$constants.SEGMENT.get(glad_debug_glFogfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGFVPROC glad_debug_glFogfv
     * }
     */
    public static void glad_debug_glFogfv(MemorySegment varValue) {
        glad_debug_glFogfv$constants.SEGMENT.set(glad_debug_glFogfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glFogi$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glFogi").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGIPROC glad_glFogi
     * }
     */
    public static AddressLayout glad_glFogi$layout() {
        return glad_glFogi$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGIPROC glad_glFogi
     * }
     */
    public static MemorySegment glad_glFogi$segment() {
        return glad_glFogi$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGIPROC glad_glFogi
     * }
     */
    public static MemorySegment glad_glFogi() {
        return glad_glFogi$constants.SEGMENT.get(glad_glFogi$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGIPROC glad_glFogi
     * }
     */
    public static void glad_glFogi(MemorySegment varValue) {
        glad_glFogi$constants.SEGMENT.set(glad_glFogi$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glFogi$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glFogi").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGIPROC glad_debug_glFogi
     * }
     */
    public static AddressLayout glad_debug_glFogi$layout() {
        return glad_debug_glFogi$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGIPROC glad_debug_glFogi
     * }
     */
    public static MemorySegment glad_debug_glFogi$segment() {
        return glad_debug_glFogi$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGIPROC glad_debug_glFogi
     * }
     */
    public static MemorySegment glad_debug_glFogi() {
        return glad_debug_glFogi$constants.SEGMENT.get(glad_debug_glFogi$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGIPROC glad_debug_glFogi
     * }
     */
    public static void glad_debug_glFogi(MemorySegment varValue) {
        glad_debug_glFogi$constants.SEGMENT.set(glad_debug_glFogi$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glFogiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glFogiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGIVPROC glad_glFogiv
     * }
     */
    public static AddressLayout glad_glFogiv$layout() {
        return glad_glFogiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGIVPROC glad_glFogiv
     * }
     */
    public static MemorySegment glad_glFogiv$segment() {
        return glad_glFogiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGIVPROC glad_glFogiv
     * }
     */
    public static MemorySegment glad_glFogiv() {
        return glad_glFogiv$constants.SEGMENT.get(glad_glFogiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGIVPROC glad_glFogiv
     * }
     */
    public static void glad_glFogiv(MemorySegment varValue) {
        glad_glFogiv$constants.SEGMENT.set(glad_glFogiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glFogiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glFogiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGIVPROC glad_debug_glFogiv
     * }
     */
    public static AddressLayout glad_debug_glFogiv$layout() {
        return glad_debug_glFogiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGIVPROC glad_debug_glFogiv
     * }
     */
    public static MemorySegment glad_debug_glFogiv$segment() {
        return glad_debug_glFogiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGIVPROC glad_debug_glFogiv
     * }
     */
    public static MemorySegment glad_debug_glFogiv() {
        return glad_debug_glFogiv$constants.SEGMENT.get(glad_debug_glFogiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFOGIVPROC glad_debug_glFogiv
     * }
     */
    public static void glad_debug_glFogiv(MemorySegment varValue) {
        glad_debug_glFogiv$constants.SEGMENT.set(glad_debug_glFogiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glFramebufferDrawBufferEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glFramebufferDrawBufferEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC glad_glFramebufferDrawBufferEXT
     * }
     */
    public static AddressLayout glad_glFramebufferDrawBufferEXT$layout() {
        return glad_glFramebufferDrawBufferEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC glad_glFramebufferDrawBufferEXT
     * }
     */
    public static MemorySegment glad_glFramebufferDrawBufferEXT$segment() {
        return glad_glFramebufferDrawBufferEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC glad_glFramebufferDrawBufferEXT
     * }
     */
    public static MemorySegment glad_glFramebufferDrawBufferEXT() {
        return glad_glFramebufferDrawBufferEXT$constants.SEGMENT.get(glad_glFramebufferDrawBufferEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC glad_glFramebufferDrawBufferEXT
     * }
     */
    public static void glad_glFramebufferDrawBufferEXT(MemorySegment varValue) {
        glad_glFramebufferDrawBufferEXT$constants.SEGMENT.set(glad_glFramebufferDrawBufferEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glFramebufferDrawBufferEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glFramebufferDrawBufferEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC glad_debug_glFramebufferDrawBufferEXT
     * }
     */
    public static AddressLayout glad_debug_glFramebufferDrawBufferEXT$layout() {
        return glad_debug_glFramebufferDrawBufferEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC glad_debug_glFramebufferDrawBufferEXT
     * }
     */
    public static MemorySegment glad_debug_glFramebufferDrawBufferEXT$segment() {
        return glad_debug_glFramebufferDrawBufferEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC glad_debug_glFramebufferDrawBufferEXT
     * }
     */
    public static MemorySegment glad_debug_glFramebufferDrawBufferEXT() {
        return glad_debug_glFramebufferDrawBufferEXT$constants.SEGMENT.get(glad_debug_glFramebufferDrawBufferEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC glad_debug_glFramebufferDrawBufferEXT
     * }
     */
    public static void glad_debug_glFramebufferDrawBufferEXT(MemorySegment varValue) {
        glad_debug_glFramebufferDrawBufferEXT$constants.SEGMENT.set(glad_debug_glFramebufferDrawBufferEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glFramebufferDrawBuffersEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glFramebufferDrawBuffersEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC glad_glFramebufferDrawBuffersEXT
     * }
     */
    public static AddressLayout glad_glFramebufferDrawBuffersEXT$layout() {
        return glad_glFramebufferDrawBuffersEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC glad_glFramebufferDrawBuffersEXT
     * }
     */
    public static MemorySegment glad_glFramebufferDrawBuffersEXT$segment() {
        return glad_glFramebufferDrawBuffersEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC glad_glFramebufferDrawBuffersEXT
     * }
     */
    public static MemorySegment glad_glFramebufferDrawBuffersEXT() {
        return glad_glFramebufferDrawBuffersEXT$constants.SEGMENT.get(glad_glFramebufferDrawBuffersEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC glad_glFramebufferDrawBuffersEXT
     * }
     */
    public static void glad_glFramebufferDrawBuffersEXT(MemorySegment varValue) {
        glad_glFramebufferDrawBuffersEXT$constants.SEGMENT.set(glad_glFramebufferDrawBuffersEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glFramebufferDrawBuffersEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glFramebufferDrawBuffersEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC glad_debug_glFramebufferDrawBuffersEXT
     * }
     */
    public static AddressLayout glad_debug_glFramebufferDrawBuffersEXT$layout() {
        return glad_debug_glFramebufferDrawBuffersEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC glad_debug_glFramebufferDrawBuffersEXT
     * }
     */
    public static MemorySegment glad_debug_glFramebufferDrawBuffersEXT$segment() {
        return glad_debug_glFramebufferDrawBuffersEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC glad_debug_glFramebufferDrawBuffersEXT
     * }
     */
    public static MemorySegment glad_debug_glFramebufferDrawBuffersEXT() {
        return glad_debug_glFramebufferDrawBuffersEXT$constants.SEGMENT.get(glad_debug_glFramebufferDrawBuffersEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC glad_debug_glFramebufferDrawBuffersEXT
     * }
     */
    public static void glad_debug_glFramebufferDrawBuffersEXT(MemorySegment varValue) {
        glad_debug_glFramebufferDrawBuffersEXT$constants.SEGMENT.set(glad_debug_glFramebufferDrawBuffersEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glFramebufferParameteri$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glFramebufferParameteri").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERPARAMETERIPROC glad_glFramebufferParameteri
     * }
     */
    public static AddressLayout glad_glFramebufferParameteri$layout() {
        return glad_glFramebufferParameteri$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERPARAMETERIPROC glad_glFramebufferParameteri
     * }
     */
    public static MemorySegment glad_glFramebufferParameteri$segment() {
        return glad_glFramebufferParameteri$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERPARAMETERIPROC glad_glFramebufferParameteri
     * }
     */
    public static MemorySegment glad_glFramebufferParameteri() {
        return glad_glFramebufferParameteri$constants.SEGMENT.get(glad_glFramebufferParameteri$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERPARAMETERIPROC glad_glFramebufferParameteri
     * }
     */
    public static void glad_glFramebufferParameteri(MemorySegment varValue) {
        glad_glFramebufferParameteri$constants.SEGMENT.set(glad_glFramebufferParameteri$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glFramebufferParameteri$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glFramebufferParameteri").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERPARAMETERIPROC glad_debug_glFramebufferParameteri
     * }
     */
    public static AddressLayout glad_debug_glFramebufferParameteri$layout() {
        return glad_debug_glFramebufferParameteri$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERPARAMETERIPROC glad_debug_glFramebufferParameteri
     * }
     */
    public static MemorySegment glad_debug_glFramebufferParameteri$segment() {
        return glad_debug_glFramebufferParameteri$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERPARAMETERIPROC glad_debug_glFramebufferParameteri
     * }
     */
    public static MemorySegment glad_debug_glFramebufferParameteri() {
        return glad_debug_glFramebufferParameteri$constants.SEGMENT.get(glad_debug_glFramebufferParameteri$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERPARAMETERIPROC glad_debug_glFramebufferParameteri
     * }
     */
    public static void glad_debug_glFramebufferParameteri(MemorySegment varValue) {
        glad_debug_glFramebufferParameteri$constants.SEGMENT.set(glad_debug_glFramebufferParameteri$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glFramebufferReadBufferEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glFramebufferReadBufferEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERREADBUFFEREXTPROC glad_glFramebufferReadBufferEXT
     * }
     */
    public static AddressLayout glad_glFramebufferReadBufferEXT$layout() {
        return glad_glFramebufferReadBufferEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERREADBUFFEREXTPROC glad_glFramebufferReadBufferEXT
     * }
     */
    public static MemorySegment glad_glFramebufferReadBufferEXT$segment() {
        return glad_glFramebufferReadBufferEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERREADBUFFEREXTPROC glad_glFramebufferReadBufferEXT
     * }
     */
    public static MemorySegment glad_glFramebufferReadBufferEXT() {
        return glad_glFramebufferReadBufferEXT$constants.SEGMENT.get(glad_glFramebufferReadBufferEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERREADBUFFEREXTPROC glad_glFramebufferReadBufferEXT
     * }
     */
    public static void glad_glFramebufferReadBufferEXT(MemorySegment varValue) {
        glad_glFramebufferReadBufferEXT$constants.SEGMENT.set(glad_glFramebufferReadBufferEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glFramebufferReadBufferEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glFramebufferReadBufferEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERREADBUFFEREXTPROC glad_debug_glFramebufferReadBufferEXT
     * }
     */
    public static AddressLayout glad_debug_glFramebufferReadBufferEXT$layout() {
        return glad_debug_glFramebufferReadBufferEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERREADBUFFEREXTPROC glad_debug_glFramebufferReadBufferEXT
     * }
     */
    public static MemorySegment glad_debug_glFramebufferReadBufferEXT$segment() {
        return glad_debug_glFramebufferReadBufferEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERREADBUFFEREXTPROC glad_debug_glFramebufferReadBufferEXT
     * }
     */
    public static MemorySegment glad_debug_glFramebufferReadBufferEXT() {
        return glad_debug_glFramebufferReadBufferEXT$constants.SEGMENT.get(glad_debug_glFramebufferReadBufferEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERREADBUFFEREXTPROC glad_debug_glFramebufferReadBufferEXT
     * }
     */
    public static void glad_debug_glFramebufferReadBufferEXT(MemorySegment varValue) {
        glad_debug_glFramebufferReadBufferEXT$constants.SEGMENT.set(glad_debug_glFramebufferReadBufferEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glFramebufferRenderbuffer$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glFramebufferRenderbuffer").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERRENDERBUFFERPROC glad_glFramebufferRenderbuffer
     * }
     */
    public static AddressLayout glad_glFramebufferRenderbuffer$layout() {
        return glad_glFramebufferRenderbuffer$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERRENDERBUFFERPROC glad_glFramebufferRenderbuffer
     * }
     */
    public static MemorySegment glad_glFramebufferRenderbuffer$segment() {
        return glad_glFramebufferRenderbuffer$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERRENDERBUFFERPROC glad_glFramebufferRenderbuffer
     * }
     */
    public static MemorySegment glad_glFramebufferRenderbuffer() {
        return glad_glFramebufferRenderbuffer$constants.SEGMENT.get(glad_glFramebufferRenderbuffer$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERRENDERBUFFERPROC glad_glFramebufferRenderbuffer
     * }
     */
    public static void glad_glFramebufferRenderbuffer(MemorySegment varValue) {
        glad_glFramebufferRenderbuffer$constants.SEGMENT.set(glad_glFramebufferRenderbuffer$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glFramebufferRenderbuffer$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glFramebufferRenderbuffer").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERRENDERBUFFERPROC glad_debug_glFramebufferRenderbuffer
     * }
     */
    public static AddressLayout glad_debug_glFramebufferRenderbuffer$layout() {
        return glad_debug_glFramebufferRenderbuffer$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERRENDERBUFFERPROC glad_debug_glFramebufferRenderbuffer
     * }
     */
    public static MemorySegment glad_debug_glFramebufferRenderbuffer$segment() {
        return glad_debug_glFramebufferRenderbuffer$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERRENDERBUFFERPROC glad_debug_glFramebufferRenderbuffer
     * }
     */
    public static MemorySegment glad_debug_glFramebufferRenderbuffer() {
        return glad_debug_glFramebufferRenderbuffer$constants.SEGMENT.get(glad_debug_glFramebufferRenderbuffer$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERRENDERBUFFERPROC glad_debug_glFramebufferRenderbuffer
     * }
     */
    public static void glad_debug_glFramebufferRenderbuffer(MemorySegment varValue) {
        glad_debug_glFramebufferRenderbuffer$constants.SEGMENT.set(glad_debug_glFramebufferRenderbuffer$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glFramebufferRenderbufferEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glFramebufferRenderbufferEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC glad_glFramebufferRenderbufferEXT
     * }
     */
    public static AddressLayout glad_glFramebufferRenderbufferEXT$layout() {
        return glad_glFramebufferRenderbufferEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC glad_glFramebufferRenderbufferEXT
     * }
     */
    public static MemorySegment glad_glFramebufferRenderbufferEXT$segment() {
        return glad_glFramebufferRenderbufferEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC glad_glFramebufferRenderbufferEXT
     * }
     */
    public static MemorySegment glad_glFramebufferRenderbufferEXT() {
        return glad_glFramebufferRenderbufferEXT$constants.SEGMENT.get(glad_glFramebufferRenderbufferEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC glad_glFramebufferRenderbufferEXT
     * }
     */
    public static void glad_glFramebufferRenderbufferEXT(MemorySegment varValue) {
        glad_glFramebufferRenderbufferEXT$constants.SEGMENT.set(glad_glFramebufferRenderbufferEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glFramebufferRenderbufferEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glFramebufferRenderbufferEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC glad_debug_glFramebufferRenderbufferEXT
     * }
     */
    public static AddressLayout glad_debug_glFramebufferRenderbufferEXT$layout() {
        return glad_debug_glFramebufferRenderbufferEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC glad_debug_glFramebufferRenderbufferEXT
     * }
     */
    public static MemorySegment glad_debug_glFramebufferRenderbufferEXT$segment() {
        return glad_debug_glFramebufferRenderbufferEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC glad_debug_glFramebufferRenderbufferEXT
     * }
     */
    public static MemorySegment glad_debug_glFramebufferRenderbufferEXT() {
        return glad_debug_glFramebufferRenderbufferEXT$constants.SEGMENT.get(glad_debug_glFramebufferRenderbufferEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC glad_debug_glFramebufferRenderbufferEXT
     * }
     */
    public static void glad_debug_glFramebufferRenderbufferEXT(MemorySegment varValue) {
        glad_debug_glFramebufferRenderbufferEXT$constants.SEGMENT.set(glad_debug_glFramebufferRenderbufferEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glFramebufferTexture$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glFramebufferTexture").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTUREPROC glad_glFramebufferTexture
     * }
     */
    public static AddressLayout glad_glFramebufferTexture$layout() {
        return glad_glFramebufferTexture$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTUREPROC glad_glFramebufferTexture
     * }
     */
    public static MemorySegment glad_glFramebufferTexture$segment() {
        return glad_glFramebufferTexture$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTUREPROC glad_glFramebufferTexture
     * }
     */
    public static MemorySegment glad_glFramebufferTexture() {
        return glad_glFramebufferTexture$constants.SEGMENT.get(glad_glFramebufferTexture$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTUREPROC glad_glFramebufferTexture
     * }
     */
    public static void glad_glFramebufferTexture(MemorySegment varValue) {
        glad_glFramebufferTexture$constants.SEGMENT.set(glad_glFramebufferTexture$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glFramebufferTexture$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glFramebufferTexture").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTUREPROC glad_debug_glFramebufferTexture
     * }
     */
    public static AddressLayout glad_debug_glFramebufferTexture$layout() {
        return glad_debug_glFramebufferTexture$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTUREPROC glad_debug_glFramebufferTexture
     * }
     */
    public static MemorySegment glad_debug_glFramebufferTexture$segment() {
        return glad_debug_glFramebufferTexture$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTUREPROC glad_debug_glFramebufferTexture
     * }
     */
    public static MemorySegment glad_debug_glFramebufferTexture() {
        return glad_debug_glFramebufferTexture$constants.SEGMENT.get(glad_debug_glFramebufferTexture$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTUREPROC glad_debug_glFramebufferTexture
     * }
     */
    public static void glad_debug_glFramebufferTexture(MemorySegment varValue) {
        glad_debug_glFramebufferTexture$constants.SEGMENT.set(glad_debug_glFramebufferTexture$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glFramebufferTexture1D$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glFramebufferTexture1D").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURE1DPROC glad_glFramebufferTexture1D
     * }
     */
    public static AddressLayout glad_glFramebufferTexture1D$layout() {
        return glad_glFramebufferTexture1D$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURE1DPROC glad_glFramebufferTexture1D
     * }
     */
    public static MemorySegment glad_glFramebufferTexture1D$segment() {
        return glad_glFramebufferTexture1D$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURE1DPROC glad_glFramebufferTexture1D
     * }
     */
    public static MemorySegment glad_glFramebufferTexture1D() {
        return glad_glFramebufferTexture1D$constants.SEGMENT.get(glad_glFramebufferTexture1D$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURE1DPROC glad_glFramebufferTexture1D
     * }
     */
    public static void glad_glFramebufferTexture1D(MemorySegment varValue) {
        glad_glFramebufferTexture1D$constants.SEGMENT.set(glad_glFramebufferTexture1D$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glFramebufferTexture1D$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glFramebufferTexture1D").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURE1DPROC glad_debug_glFramebufferTexture1D
     * }
     */
    public static AddressLayout glad_debug_glFramebufferTexture1D$layout() {
        return glad_debug_glFramebufferTexture1D$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURE1DPROC glad_debug_glFramebufferTexture1D
     * }
     */
    public static MemorySegment glad_debug_glFramebufferTexture1D$segment() {
        return glad_debug_glFramebufferTexture1D$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURE1DPROC glad_debug_glFramebufferTexture1D
     * }
     */
    public static MemorySegment glad_debug_glFramebufferTexture1D() {
        return glad_debug_glFramebufferTexture1D$constants.SEGMENT.get(glad_debug_glFramebufferTexture1D$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURE1DPROC glad_debug_glFramebufferTexture1D
     * }
     */
    public static void glad_debug_glFramebufferTexture1D(MemorySegment varValue) {
        glad_debug_glFramebufferTexture1D$constants.SEGMENT.set(glad_debug_glFramebufferTexture1D$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glFramebufferTexture1DEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glFramebufferTexture1DEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURE1DEXTPROC glad_glFramebufferTexture1DEXT
     * }
     */
    public static AddressLayout glad_glFramebufferTexture1DEXT$layout() {
        return glad_glFramebufferTexture1DEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURE1DEXTPROC glad_glFramebufferTexture1DEXT
     * }
     */
    public static MemorySegment glad_glFramebufferTexture1DEXT$segment() {
        return glad_glFramebufferTexture1DEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURE1DEXTPROC glad_glFramebufferTexture1DEXT
     * }
     */
    public static MemorySegment glad_glFramebufferTexture1DEXT() {
        return glad_glFramebufferTexture1DEXT$constants.SEGMENT.get(glad_glFramebufferTexture1DEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURE1DEXTPROC glad_glFramebufferTexture1DEXT
     * }
     */
    public static void glad_glFramebufferTexture1DEXT(MemorySegment varValue) {
        glad_glFramebufferTexture1DEXT$constants.SEGMENT.set(glad_glFramebufferTexture1DEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glFramebufferTexture1DEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glFramebufferTexture1DEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURE1DEXTPROC glad_debug_glFramebufferTexture1DEXT
     * }
     */
    public static AddressLayout glad_debug_glFramebufferTexture1DEXT$layout() {
        return glad_debug_glFramebufferTexture1DEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURE1DEXTPROC glad_debug_glFramebufferTexture1DEXT
     * }
     */
    public static MemorySegment glad_debug_glFramebufferTexture1DEXT$segment() {
        return glad_debug_glFramebufferTexture1DEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURE1DEXTPROC glad_debug_glFramebufferTexture1DEXT
     * }
     */
    public static MemorySegment glad_debug_glFramebufferTexture1DEXT() {
        return glad_debug_glFramebufferTexture1DEXT$constants.SEGMENT.get(glad_debug_glFramebufferTexture1DEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURE1DEXTPROC glad_debug_glFramebufferTexture1DEXT
     * }
     */
    public static void glad_debug_glFramebufferTexture1DEXT(MemorySegment varValue) {
        glad_debug_glFramebufferTexture1DEXT$constants.SEGMENT.set(glad_debug_glFramebufferTexture1DEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glFramebufferTexture2D$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glFramebufferTexture2D").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURE2DPROC glad_glFramebufferTexture2D
     * }
     */
    public static AddressLayout glad_glFramebufferTexture2D$layout() {
        return glad_glFramebufferTexture2D$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURE2DPROC glad_glFramebufferTexture2D
     * }
     */
    public static MemorySegment glad_glFramebufferTexture2D$segment() {
        return glad_glFramebufferTexture2D$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURE2DPROC glad_glFramebufferTexture2D
     * }
     */
    public static MemorySegment glad_glFramebufferTexture2D() {
        return glad_glFramebufferTexture2D$constants.SEGMENT.get(glad_glFramebufferTexture2D$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURE2DPROC glad_glFramebufferTexture2D
     * }
     */
    public static void glad_glFramebufferTexture2D(MemorySegment varValue) {
        glad_glFramebufferTexture2D$constants.SEGMENT.set(glad_glFramebufferTexture2D$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glFramebufferTexture2D$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glFramebufferTexture2D").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURE2DPROC glad_debug_glFramebufferTexture2D
     * }
     */
    public static AddressLayout glad_debug_glFramebufferTexture2D$layout() {
        return glad_debug_glFramebufferTexture2D$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURE2DPROC glad_debug_glFramebufferTexture2D
     * }
     */
    public static MemorySegment glad_debug_glFramebufferTexture2D$segment() {
        return glad_debug_glFramebufferTexture2D$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURE2DPROC glad_debug_glFramebufferTexture2D
     * }
     */
    public static MemorySegment glad_debug_glFramebufferTexture2D() {
        return glad_debug_glFramebufferTexture2D$constants.SEGMENT.get(glad_debug_glFramebufferTexture2D$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURE2DPROC glad_debug_glFramebufferTexture2D
     * }
     */
    public static void glad_debug_glFramebufferTexture2D(MemorySegment varValue) {
        glad_debug_glFramebufferTexture2D$constants.SEGMENT.set(glad_debug_glFramebufferTexture2D$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glFramebufferTexture2DEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glFramebufferTexture2DEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURE2DEXTPROC glad_glFramebufferTexture2DEXT
     * }
     */
    public static AddressLayout glad_glFramebufferTexture2DEXT$layout() {
        return glad_glFramebufferTexture2DEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURE2DEXTPROC glad_glFramebufferTexture2DEXT
     * }
     */
    public static MemorySegment glad_glFramebufferTexture2DEXT$segment() {
        return glad_glFramebufferTexture2DEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURE2DEXTPROC glad_glFramebufferTexture2DEXT
     * }
     */
    public static MemorySegment glad_glFramebufferTexture2DEXT() {
        return glad_glFramebufferTexture2DEXT$constants.SEGMENT.get(glad_glFramebufferTexture2DEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURE2DEXTPROC glad_glFramebufferTexture2DEXT
     * }
     */
    public static void glad_glFramebufferTexture2DEXT(MemorySegment varValue) {
        glad_glFramebufferTexture2DEXT$constants.SEGMENT.set(glad_glFramebufferTexture2DEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glFramebufferTexture2DEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glFramebufferTexture2DEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURE2DEXTPROC glad_debug_glFramebufferTexture2DEXT
     * }
     */
    public static AddressLayout glad_debug_glFramebufferTexture2DEXT$layout() {
        return glad_debug_glFramebufferTexture2DEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURE2DEXTPROC glad_debug_glFramebufferTexture2DEXT
     * }
     */
    public static MemorySegment glad_debug_glFramebufferTexture2DEXT$segment() {
        return glad_debug_glFramebufferTexture2DEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURE2DEXTPROC glad_debug_glFramebufferTexture2DEXT
     * }
     */
    public static MemorySegment glad_debug_glFramebufferTexture2DEXT() {
        return glad_debug_glFramebufferTexture2DEXT$constants.SEGMENT.get(glad_debug_glFramebufferTexture2DEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURE2DEXTPROC glad_debug_glFramebufferTexture2DEXT
     * }
     */
    public static void glad_debug_glFramebufferTexture2DEXT(MemorySegment varValue) {
        glad_debug_glFramebufferTexture2DEXT$constants.SEGMENT.set(glad_debug_glFramebufferTexture2DEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glFramebufferTexture3D$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glFramebufferTexture3D").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURE3DPROC glad_glFramebufferTexture3D
     * }
     */
    public static AddressLayout glad_glFramebufferTexture3D$layout() {
        return glad_glFramebufferTexture3D$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURE3DPROC glad_glFramebufferTexture3D
     * }
     */
    public static MemorySegment glad_glFramebufferTexture3D$segment() {
        return glad_glFramebufferTexture3D$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURE3DPROC glad_glFramebufferTexture3D
     * }
     */
    public static MemorySegment glad_glFramebufferTexture3D() {
        return glad_glFramebufferTexture3D$constants.SEGMENT.get(glad_glFramebufferTexture3D$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURE3DPROC glad_glFramebufferTexture3D
     * }
     */
    public static void glad_glFramebufferTexture3D(MemorySegment varValue) {
        glad_glFramebufferTexture3D$constants.SEGMENT.set(glad_glFramebufferTexture3D$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glFramebufferTexture3D$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glFramebufferTexture3D").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURE3DPROC glad_debug_glFramebufferTexture3D
     * }
     */
    public static AddressLayout glad_debug_glFramebufferTexture3D$layout() {
        return glad_debug_glFramebufferTexture3D$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURE3DPROC glad_debug_glFramebufferTexture3D
     * }
     */
    public static MemorySegment glad_debug_glFramebufferTexture3D$segment() {
        return glad_debug_glFramebufferTexture3D$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURE3DPROC glad_debug_glFramebufferTexture3D
     * }
     */
    public static MemorySegment glad_debug_glFramebufferTexture3D() {
        return glad_debug_glFramebufferTexture3D$constants.SEGMENT.get(glad_debug_glFramebufferTexture3D$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURE3DPROC glad_debug_glFramebufferTexture3D
     * }
     */
    public static void glad_debug_glFramebufferTexture3D(MemorySegment varValue) {
        glad_debug_glFramebufferTexture3D$constants.SEGMENT.set(glad_debug_glFramebufferTexture3D$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glFramebufferTexture3DEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glFramebufferTexture3DEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURE3DEXTPROC glad_glFramebufferTexture3DEXT
     * }
     */
    public static AddressLayout glad_glFramebufferTexture3DEXT$layout() {
        return glad_glFramebufferTexture3DEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURE3DEXTPROC glad_glFramebufferTexture3DEXT
     * }
     */
    public static MemorySegment glad_glFramebufferTexture3DEXT$segment() {
        return glad_glFramebufferTexture3DEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURE3DEXTPROC glad_glFramebufferTexture3DEXT
     * }
     */
    public static MemorySegment glad_glFramebufferTexture3DEXT() {
        return glad_glFramebufferTexture3DEXT$constants.SEGMENT.get(glad_glFramebufferTexture3DEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURE3DEXTPROC glad_glFramebufferTexture3DEXT
     * }
     */
    public static void glad_glFramebufferTexture3DEXT(MemorySegment varValue) {
        glad_glFramebufferTexture3DEXT$constants.SEGMENT.set(glad_glFramebufferTexture3DEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glFramebufferTexture3DEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glFramebufferTexture3DEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURE3DEXTPROC glad_debug_glFramebufferTexture3DEXT
     * }
     */
    public static AddressLayout glad_debug_glFramebufferTexture3DEXT$layout() {
        return glad_debug_glFramebufferTexture3DEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURE3DEXTPROC glad_debug_glFramebufferTexture3DEXT
     * }
     */
    public static MemorySegment glad_debug_glFramebufferTexture3DEXT$segment() {
        return glad_debug_glFramebufferTexture3DEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURE3DEXTPROC glad_debug_glFramebufferTexture3DEXT
     * }
     */
    public static MemorySegment glad_debug_glFramebufferTexture3DEXT() {
        return glad_debug_glFramebufferTexture3DEXT$constants.SEGMENT.get(glad_debug_glFramebufferTexture3DEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURE3DEXTPROC glad_debug_glFramebufferTexture3DEXT
     * }
     */
    public static void glad_debug_glFramebufferTexture3DEXT(MemorySegment varValue) {
        glad_debug_glFramebufferTexture3DEXT$constants.SEGMENT.set(glad_debug_glFramebufferTexture3DEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glFramebufferTextureARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glFramebufferTextureARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTUREARBPROC glad_glFramebufferTextureARB
     * }
     */
    public static AddressLayout glad_glFramebufferTextureARB$layout() {
        return glad_glFramebufferTextureARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTUREARBPROC glad_glFramebufferTextureARB
     * }
     */
    public static MemorySegment glad_glFramebufferTextureARB$segment() {
        return glad_glFramebufferTextureARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTUREARBPROC glad_glFramebufferTextureARB
     * }
     */
    public static MemorySegment glad_glFramebufferTextureARB() {
        return glad_glFramebufferTextureARB$constants.SEGMENT.get(glad_glFramebufferTextureARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTUREARBPROC glad_glFramebufferTextureARB
     * }
     */
    public static void glad_glFramebufferTextureARB(MemorySegment varValue) {
        glad_glFramebufferTextureARB$constants.SEGMENT.set(glad_glFramebufferTextureARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glFramebufferTextureARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glFramebufferTextureARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTUREARBPROC glad_debug_glFramebufferTextureARB
     * }
     */
    public static AddressLayout glad_debug_glFramebufferTextureARB$layout() {
        return glad_debug_glFramebufferTextureARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTUREARBPROC glad_debug_glFramebufferTextureARB
     * }
     */
    public static MemorySegment glad_debug_glFramebufferTextureARB$segment() {
        return glad_debug_glFramebufferTextureARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTUREARBPROC glad_debug_glFramebufferTextureARB
     * }
     */
    public static MemorySegment glad_debug_glFramebufferTextureARB() {
        return glad_debug_glFramebufferTextureARB$constants.SEGMENT.get(glad_debug_glFramebufferTextureARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTUREARBPROC glad_debug_glFramebufferTextureARB
     * }
     */
    public static void glad_debug_glFramebufferTextureARB(MemorySegment varValue) {
        glad_debug_glFramebufferTextureARB$constants.SEGMENT.set(glad_debug_glFramebufferTextureARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glFramebufferTextureEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glFramebufferTextureEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTUREEXTPROC glad_glFramebufferTextureEXT
     * }
     */
    public static AddressLayout glad_glFramebufferTextureEXT$layout() {
        return glad_glFramebufferTextureEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTUREEXTPROC glad_glFramebufferTextureEXT
     * }
     */
    public static MemorySegment glad_glFramebufferTextureEXT$segment() {
        return glad_glFramebufferTextureEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTUREEXTPROC glad_glFramebufferTextureEXT
     * }
     */
    public static MemorySegment glad_glFramebufferTextureEXT() {
        return glad_glFramebufferTextureEXT$constants.SEGMENT.get(glad_glFramebufferTextureEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTUREEXTPROC glad_glFramebufferTextureEXT
     * }
     */
    public static void glad_glFramebufferTextureEXT(MemorySegment varValue) {
        glad_glFramebufferTextureEXT$constants.SEGMENT.set(glad_glFramebufferTextureEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glFramebufferTextureEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glFramebufferTextureEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTUREEXTPROC glad_debug_glFramebufferTextureEXT
     * }
     */
    public static AddressLayout glad_debug_glFramebufferTextureEXT$layout() {
        return glad_debug_glFramebufferTextureEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTUREEXTPROC glad_debug_glFramebufferTextureEXT
     * }
     */
    public static MemorySegment glad_debug_glFramebufferTextureEXT$segment() {
        return glad_debug_glFramebufferTextureEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTUREEXTPROC glad_debug_glFramebufferTextureEXT
     * }
     */
    public static MemorySegment glad_debug_glFramebufferTextureEXT() {
        return glad_debug_glFramebufferTextureEXT$constants.SEGMENT.get(glad_debug_glFramebufferTextureEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTUREEXTPROC glad_debug_glFramebufferTextureEXT
     * }
     */
    public static void glad_debug_glFramebufferTextureEXT(MemorySegment varValue) {
        glad_debug_glFramebufferTextureEXT$constants.SEGMENT.set(glad_debug_glFramebufferTextureEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glFramebufferTextureFaceARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glFramebufferTextureFaceARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTUREFACEARBPROC glad_glFramebufferTextureFaceARB
     * }
     */
    public static AddressLayout glad_glFramebufferTextureFaceARB$layout() {
        return glad_glFramebufferTextureFaceARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTUREFACEARBPROC glad_glFramebufferTextureFaceARB
     * }
     */
    public static MemorySegment glad_glFramebufferTextureFaceARB$segment() {
        return glad_glFramebufferTextureFaceARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTUREFACEARBPROC glad_glFramebufferTextureFaceARB
     * }
     */
    public static MemorySegment glad_glFramebufferTextureFaceARB() {
        return glad_glFramebufferTextureFaceARB$constants.SEGMENT.get(glad_glFramebufferTextureFaceARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTUREFACEARBPROC glad_glFramebufferTextureFaceARB
     * }
     */
    public static void glad_glFramebufferTextureFaceARB(MemorySegment varValue) {
        glad_glFramebufferTextureFaceARB$constants.SEGMENT.set(glad_glFramebufferTextureFaceARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glFramebufferTextureFaceARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glFramebufferTextureFaceARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTUREFACEARBPROC glad_debug_glFramebufferTextureFaceARB
     * }
     */
    public static AddressLayout glad_debug_glFramebufferTextureFaceARB$layout() {
        return glad_debug_glFramebufferTextureFaceARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTUREFACEARBPROC glad_debug_glFramebufferTextureFaceARB
     * }
     */
    public static MemorySegment glad_debug_glFramebufferTextureFaceARB$segment() {
        return glad_debug_glFramebufferTextureFaceARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTUREFACEARBPROC glad_debug_glFramebufferTextureFaceARB
     * }
     */
    public static MemorySegment glad_debug_glFramebufferTextureFaceARB() {
        return glad_debug_glFramebufferTextureFaceARB$constants.SEGMENT.get(glad_debug_glFramebufferTextureFaceARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTUREFACEARBPROC glad_debug_glFramebufferTextureFaceARB
     * }
     */
    public static void glad_debug_glFramebufferTextureFaceARB(MemorySegment varValue) {
        glad_debug_glFramebufferTextureFaceARB$constants.SEGMENT.set(glad_debug_glFramebufferTextureFaceARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glFramebufferTextureFaceEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glFramebufferTextureFaceEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC glad_glFramebufferTextureFaceEXT
     * }
     */
    public static AddressLayout glad_glFramebufferTextureFaceEXT$layout() {
        return glad_glFramebufferTextureFaceEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC glad_glFramebufferTextureFaceEXT
     * }
     */
    public static MemorySegment glad_glFramebufferTextureFaceEXT$segment() {
        return glad_glFramebufferTextureFaceEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC glad_glFramebufferTextureFaceEXT
     * }
     */
    public static MemorySegment glad_glFramebufferTextureFaceEXT() {
        return glad_glFramebufferTextureFaceEXT$constants.SEGMENT.get(glad_glFramebufferTextureFaceEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC glad_glFramebufferTextureFaceEXT
     * }
     */
    public static void glad_glFramebufferTextureFaceEXT(MemorySegment varValue) {
        glad_glFramebufferTextureFaceEXT$constants.SEGMENT.set(glad_glFramebufferTextureFaceEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glFramebufferTextureFaceEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glFramebufferTextureFaceEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC glad_debug_glFramebufferTextureFaceEXT
     * }
     */
    public static AddressLayout glad_debug_glFramebufferTextureFaceEXT$layout() {
        return glad_debug_glFramebufferTextureFaceEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC glad_debug_glFramebufferTextureFaceEXT
     * }
     */
    public static MemorySegment glad_debug_glFramebufferTextureFaceEXT$segment() {
        return glad_debug_glFramebufferTextureFaceEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC glad_debug_glFramebufferTextureFaceEXT
     * }
     */
    public static MemorySegment glad_debug_glFramebufferTextureFaceEXT() {
        return glad_debug_glFramebufferTextureFaceEXT$constants.SEGMENT.get(glad_debug_glFramebufferTextureFaceEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC glad_debug_glFramebufferTextureFaceEXT
     * }
     */
    public static void glad_debug_glFramebufferTextureFaceEXT(MemorySegment varValue) {
        glad_debug_glFramebufferTextureFaceEXT$constants.SEGMENT.set(glad_debug_glFramebufferTextureFaceEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glFramebufferTextureLayer$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glFramebufferTextureLayer").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURELAYERPROC glad_glFramebufferTextureLayer
     * }
     */
    public static AddressLayout glad_glFramebufferTextureLayer$layout() {
        return glad_glFramebufferTextureLayer$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURELAYERPROC glad_glFramebufferTextureLayer
     * }
     */
    public static MemorySegment glad_glFramebufferTextureLayer$segment() {
        return glad_glFramebufferTextureLayer$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURELAYERPROC glad_glFramebufferTextureLayer
     * }
     */
    public static MemorySegment glad_glFramebufferTextureLayer() {
        return glad_glFramebufferTextureLayer$constants.SEGMENT.get(glad_glFramebufferTextureLayer$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURELAYERPROC glad_glFramebufferTextureLayer
     * }
     */
    public static void glad_glFramebufferTextureLayer(MemorySegment varValue) {
        glad_glFramebufferTextureLayer$constants.SEGMENT.set(glad_glFramebufferTextureLayer$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glFramebufferTextureLayer$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glFramebufferTextureLayer").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURELAYERPROC glad_debug_glFramebufferTextureLayer
     * }
     */
    public static AddressLayout glad_debug_glFramebufferTextureLayer$layout() {
        return glad_debug_glFramebufferTextureLayer$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURELAYERPROC glad_debug_glFramebufferTextureLayer
     * }
     */
    public static MemorySegment glad_debug_glFramebufferTextureLayer$segment() {
        return glad_debug_glFramebufferTextureLayer$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURELAYERPROC glad_debug_glFramebufferTextureLayer
     * }
     */
    public static MemorySegment glad_debug_glFramebufferTextureLayer() {
        return glad_debug_glFramebufferTextureLayer$constants.SEGMENT.get(glad_debug_glFramebufferTextureLayer$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURELAYERPROC glad_debug_glFramebufferTextureLayer
     * }
     */
    public static void glad_debug_glFramebufferTextureLayer(MemorySegment varValue) {
        glad_debug_glFramebufferTextureLayer$constants.SEGMENT.set(glad_debug_glFramebufferTextureLayer$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glFramebufferTextureLayerARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glFramebufferTextureLayerARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURELAYERARBPROC glad_glFramebufferTextureLayerARB
     * }
     */
    public static AddressLayout glad_glFramebufferTextureLayerARB$layout() {
        return glad_glFramebufferTextureLayerARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURELAYERARBPROC glad_glFramebufferTextureLayerARB
     * }
     */
    public static MemorySegment glad_glFramebufferTextureLayerARB$segment() {
        return glad_glFramebufferTextureLayerARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURELAYERARBPROC glad_glFramebufferTextureLayerARB
     * }
     */
    public static MemorySegment glad_glFramebufferTextureLayerARB() {
        return glad_glFramebufferTextureLayerARB$constants.SEGMENT.get(glad_glFramebufferTextureLayerARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURELAYERARBPROC glad_glFramebufferTextureLayerARB
     * }
     */
    public static void glad_glFramebufferTextureLayerARB(MemorySegment varValue) {
        glad_glFramebufferTextureLayerARB$constants.SEGMENT.set(glad_glFramebufferTextureLayerARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glFramebufferTextureLayerARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glFramebufferTextureLayerARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURELAYERARBPROC glad_debug_glFramebufferTextureLayerARB
     * }
     */
    public static AddressLayout glad_debug_glFramebufferTextureLayerARB$layout() {
        return glad_debug_glFramebufferTextureLayerARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURELAYERARBPROC glad_debug_glFramebufferTextureLayerARB
     * }
     */
    public static MemorySegment glad_debug_glFramebufferTextureLayerARB$segment() {
        return glad_debug_glFramebufferTextureLayerARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURELAYERARBPROC glad_debug_glFramebufferTextureLayerARB
     * }
     */
    public static MemorySegment glad_debug_glFramebufferTextureLayerARB() {
        return glad_debug_glFramebufferTextureLayerARB$constants.SEGMENT.get(glad_debug_glFramebufferTextureLayerARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURELAYERARBPROC glad_debug_glFramebufferTextureLayerARB
     * }
     */
    public static void glad_debug_glFramebufferTextureLayerARB(MemorySegment varValue) {
        glad_debug_glFramebufferTextureLayerARB$constants.SEGMENT.set(glad_debug_glFramebufferTextureLayerARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glFramebufferTextureLayerEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glFramebufferTextureLayerEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC glad_glFramebufferTextureLayerEXT
     * }
     */
    public static AddressLayout glad_glFramebufferTextureLayerEXT$layout() {
        return glad_glFramebufferTextureLayerEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC glad_glFramebufferTextureLayerEXT
     * }
     */
    public static MemorySegment glad_glFramebufferTextureLayerEXT$segment() {
        return glad_glFramebufferTextureLayerEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC glad_glFramebufferTextureLayerEXT
     * }
     */
    public static MemorySegment glad_glFramebufferTextureLayerEXT() {
        return glad_glFramebufferTextureLayerEXT$constants.SEGMENT.get(glad_glFramebufferTextureLayerEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC glad_glFramebufferTextureLayerEXT
     * }
     */
    public static void glad_glFramebufferTextureLayerEXT(MemorySegment varValue) {
        glad_glFramebufferTextureLayerEXT$constants.SEGMENT.set(glad_glFramebufferTextureLayerEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glFramebufferTextureLayerEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glFramebufferTextureLayerEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC glad_debug_glFramebufferTextureLayerEXT
     * }
     */
    public static AddressLayout glad_debug_glFramebufferTextureLayerEXT$layout() {
        return glad_debug_glFramebufferTextureLayerEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC glad_debug_glFramebufferTextureLayerEXT
     * }
     */
    public static MemorySegment glad_debug_glFramebufferTextureLayerEXT$segment() {
        return glad_debug_glFramebufferTextureLayerEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC glad_debug_glFramebufferTextureLayerEXT
     * }
     */
    public static MemorySegment glad_debug_glFramebufferTextureLayerEXT() {
        return glad_debug_glFramebufferTextureLayerEXT$constants.SEGMENT.get(glad_debug_glFramebufferTextureLayerEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC glad_debug_glFramebufferTextureLayerEXT
     * }
     */
    public static void glad_debug_glFramebufferTextureLayerEXT(MemorySegment varValue) {
        glad_debug_glFramebufferTextureLayerEXT$constants.SEGMENT.set(glad_debug_glFramebufferTextureLayerEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glFrontFace$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glFrontFace").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFRONTFACEPROC glad_glFrontFace
     * }
     */
    public static AddressLayout glad_glFrontFace$layout() {
        return glad_glFrontFace$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFRONTFACEPROC glad_glFrontFace
     * }
     */
    public static MemorySegment glad_glFrontFace$segment() {
        return glad_glFrontFace$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRONTFACEPROC glad_glFrontFace
     * }
     */
    public static MemorySegment glad_glFrontFace() {
        return glad_glFrontFace$constants.SEGMENT.get(glad_glFrontFace$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRONTFACEPROC glad_glFrontFace
     * }
     */
    public static void glad_glFrontFace(MemorySegment varValue) {
        glad_glFrontFace$constants.SEGMENT.set(glad_glFrontFace$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glFrontFace$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glFrontFace").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFRONTFACEPROC glad_debug_glFrontFace
     * }
     */
    public static AddressLayout glad_debug_glFrontFace$layout() {
        return glad_debug_glFrontFace$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFRONTFACEPROC glad_debug_glFrontFace
     * }
     */
    public static MemorySegment glad_debug_glFrontFace$segment() {
        return glad_debug_glFrontFace$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRONTFACEPROC glad_debug_glFrontFace
     * }
     */
    public static MemorySegment glad_debug_glFrontFace() {
        return glad_debug_glFrontFace$constants.SEGMENT.get(glad_debug_glFrontFace$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRONTFACEPROC glad_debug_glFrontFace
     * }
     */
    public static void glad_debug_glFrontFace(MemorySegment varValue) {
        glad_debug_glFrontFace$constants.SEGMENT.set(glad_debug_glFrontFace$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glFrustum$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glFrustum").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFRUSTUMPROC glad_glFrustum
     * }
     */
    public static AddressLayout glad_glFrustum$layout() {
        return glad_glFrustum$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFRUSTUMPROC glad_glFrustum
     * }
     */
    public static MemorySegment glad_glFrustum$segment() {
        return glad_glFrustum$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRUSTUMPROC glad_glFrustum
     * }
     */
    public static MemorySegment glad_glFrustum() {
        return glad_glFrustum$constants.SEGMENT.get(glad_glFrustum$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRUSTUMPROC glad_glFrustum
     * }
     */
    public static void glad_glFrustum(MemorySegment varValue) {
        glad_glFrustum$constants.SEGMENT.set(glad_glFrustum$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glFrustum$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glFrustum").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFRUSTUMPROC glad_debug_glFrustum
     * }
     */
    public static AddressLayout glad_debug_glFrustum$layout() {
        return glad_debug_glFrustum$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFRUSTUMPROC glad_debug_glFrustum
     * }
     */
    public static MemorySegment glad_debug_glFrustum$segment() {
        return glad_debug_glFrustum$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRUSTUMPROC glad_debug_glFrustum
     * }
     */
    public static MemorySegment glad_debug_glFrustum() {
        return glad_debug_glFrustum$constants.SEGMENT.get(glad_debug_glFrustum$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRUSTUMPROC glad_debug_glFrustum
     * }
     */
    public static void glad_debug_glFrustum(MemorySegment varValue) {
        glad_debug_glFrustum$constants.SEGMENT.set(glad_debug_glFrustum$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glFrustumfOES$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glFrustumfOES").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFRUSTUMFOESPROC glad_glFrustumfOES
     * }
     */
    public static AddressLayout glad_glFrustumfOES$layout() {
        return glad_glFrustumfOES$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFRUSTUMFOESPROC glad_glFrustumfOES
     * }
     */
    public static MemorySegment glad_glFrustumfOES$segment() {
        return glad_glFrustumfOES$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRUSTUMFOESPROC glad_glFrustumfOES
     * }
     */
    public static MemorySegment glad_glFrustumfOES() {
        return glad_glFrustumfOES$constants.SEGMENT.get(glad_glFrustumfOES$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRUSTUMFOESPROC glad_glFrustumfOES
     * }
     */
    public static void glad_glFrustumfOES(MemorySegment varValue) {
        glad_glFrustumfOES$constants.SEGMENT.set(glad_glFrustumfOES$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glFrustumfOES$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glFrustumfOES").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLFRUSTUMFOESPROC glad_debug_glFrustumfOES
     * }
     */
    public static AddressLayout glad_debug_glFrustumfOES$layout() {
        return glad_debug_glFrustumfOES$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLFRUSTUMFOESPROC glad_debug_glFrustumfOES
     * }
     */
    public static MemorySegment glad_debug_glFrustumfOES$segment() {
        return glad_debug_glFrustumfOES$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRUSTUMFOESPROC glad_debug_glFrustumfOES
     * }
     */
    public static MemorySegment glad_debug_glFrustumfOES() {
        return glad_debug_glFrustumfOES$constants.SEGMENT.get(glad_debug_glFrustumfOES$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLFRUSTUMFOESPROC glad_debug_glFrustumfOES
     * }
     */
    public static void glad_debug_glFrustumfOES(MemorySegment varValue) {
        glad_debug_glFrustumfOES$constants.SEGMENT.set(glad_debug_glFrustumfOES$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGenBuffers$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGenBuffers").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGENBUFFERSPROC glad_glGenBuffers
     * }
     */
    public static AddressLayout glad_glGenBuffers$layout() {
        return glad_glGenBuffers$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGENBUFFERSPROC glad_glGenBuffers
     * }
     */
    public static MemorySegment glad_glGenBuffers$segment() {
        return glad_glGenBuffers$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENBUFFERSPROC glad_glGenBuffers
     * }
     */
    public static MemorySegment glad_glGenBuffers() {
        return glad_glGenBuffers$constants.SEGMENT.get(glad_glGenBuffers$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENBUFFERSPROC glad_glGenBuffers
     * }
     */
    public static void glad_glGenBuffers(MemorySegment varValue) {
        glad_glGenBuffers$constants.SEGMENT.set(glad_glGenBuffers$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGenBuffers$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGenBuffers").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGENBUFFERSPROC glad_debug_glGenBuffers
     * }
     */
    public static AddressLayout glad_debug_glGenBuffers$layout() {
        return glad_debug_glGenBuffers$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGENBUFFERSPROC glad_debug_glGenBuffers
     * }
     */
    public static MemorySegment glad_debug_glGenBuffers$segment() {
        return glad_debug_glGenBuffers$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENBUFFERSPROC glad_debug_glGenBuffers
     * }
     */
    public static MemorySegment glad_debug_glGenBuffers() {
        return glad_debug_glGenBuffers$constants.SEGMENT.get(glad_debug_glGenBuffers$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENBUFFERSPROC glad_debug_glGenBuffers
     * }
     */
    public static void glad_debug_glGenBuffers(MemorySegment varValue) {
        glad_debug_glGenBuffers$constants.SEGMENT.set(glad_debug_glGenBuffers$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGenBuffersARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGenBuffersARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGENBUFFERSARBPROC glad_glGenBuffersARB
     * }
     */
    public static AddressLayout glad_glGenBuffersARB$layout() {
        return glad_glGenBuffersARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGENBUFFERSARBPROC glad_glGenBuffersARB
     * }
     */
    public static MemorySegment glad_glGenBuffersARB$segment() {
        return glad_glGenBuffersARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENBUFFERSARBPROC glad_glGenBuffersARB
     * }
     */
    public static MemorySegment glad_glGenBuffersARB() {
        return glad_glGenBuffersARB$constants.SEGMENT.get(glad_glGenBuffersARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENBUFFERSARBPROC glad_glGenBuffersARB
     * }
     */
    public static void glad_glGenBuffersARB(MemorySegment varValue) {
        glad_glGenBuffersARB$constants.SEGMENT.set(glad_glGenBuffersARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGenBuffersARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGenBuffersARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGENBUFFERSARBPROC glad_debug_glGenBuffersARB
     * }
     */
    public static AddressLayout glad_debug_glGenBuffersARB$layout() {
        return glad_debug_glGenBuffersARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGENBUFFERSARBPROC glad_debug_glGenBuffersARB
     * }
     */
    public static MemorySegment glad_debug_glGenBuffersARB$segment() {
        return glad_debug_glGenBuffersARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENBUFFERSARBPROC glad_debug_glGenBuffersARB
     * }
     */
    public static MemorySegment glad_debug_glGenBuffersARB() {
        return glad_debug_glGenBuffersARB$constants.SEGMENT.get(glad_debug_glGenBuffersARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENBUFFERSARBPROC glad_debug_glGenBuffersARB
     * }
     */
    public static void glad_debug_glGenBuffersARB(MemorySegment varValue) {
        glad_debug_glGenBuffersARB$constants.SEGMENT.set(glad_debug_glGenBuffersARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGenFramebuffers$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGenFramebuffers").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGENFRAMEBUFFERSPROC glad_glGenFramebuffers
     * }
     */
    public static AddressLayout glad_glGenFramebuffers$layout() {
        return glad_glGenFramebuffers$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGENFRAMEBUFFERSPROC glad_glGenFramebuffers
     * }
     */
    public static MemorySegment glad_glGenFramebuffers$segment() {
        return glad_glGenFramebuffers$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENFRAMEBUFFERSPROC glad_glGenFramebuffers
     * }
     */
    public static MemorySegment glad_glGenFramebuffers() {
        return glad_glGenFramebuffers$constants.SEGMENT.get(glad_glGenFramebuffers$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENFRAMEBUFFERSPROC glad_glGenFramebuffers
     * }
     */
    public static void glad_glGenFramebuffers(MemorySegment varValue) {
        glad_glGenFramebuffers$constants.SEGMENT.set(glad_glGenFramebuffers$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGenFramebuffers$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGenFramebuffers").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGENFRAMEBUFFERSPROC glad_debug_glGenFramebuffers
     * }
     */
    public static AddressLayout glad_debug_glGenFramebuffers$layout() {
        return glad_debug_glGenFramebuffers$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGENFRAMEBUFFERSPROC glad_debug_glGenFramebuffers
     * }
     */
    public static MemorySegment glad_debug_glGenFramebuffers$segment() {
        return glad_debug_glGenFramebuffers$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENFRAMEBUFFERSPROC glad_debug_glGenFramebuffers
     * }
     */
    public static MemorySegment glad_debug_glGenFramebuffers() {
        return glad_debug_glGenFramebuffers$constants.SEGMENT.get(glad_debug_glGenFramebuffers$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENFRAMEBUFFERSPROC glad_debug_glGenFramebuffers
     * }
     */
    public static void glad_debug_glGenFramebuffers(MemorySegment varValue) {
        glad_debug_glGenFramebuffers$constants.SEGMENT.set(glad_debug_glGenFramebuffers$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGenFramebuffersEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGenFramebuffersEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGENFRAMEBUFFERSEXTPROC glad_glGenFramebuffersEXT
     * }
     */
    public static AddressLayout glad_glGenFramebuffersEXT$layout() {
        return glad_glGenFramebuffersEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGENFRAMEBUFFERSEXTPROC glad_glGenFramebuffersEXT
     * }
     */
    public static MemorySegment glad_glGenFramebuffersEXT$segment() {
        return glad_glGenFramebuffersEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENFRAMEBUFFERSEXTPROC glad_glGenFramebuffersEXT
     * }
     */
    public static MemorySegment glad_glGenFramebuffersEXT() {
        return glad_glGenFramebuffersEXT$constants.SEGMENT.get(glad_glGenFramebuffersEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENFRAMEBUFFERSEXTPROC glad_glGenFramebuffersEXT
     * }
     */
    public static void glad_glGenFramebuffersEXT(MemorySegment varValue) {
        glad_glGenFramebuffersEXT$constants.SEGMENT.set(glad_glGenFramebuffersEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGenFramebuffersEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGenFramebuffersEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGENFRAMEBUFFERSEXTPROC glad_debug_glGenFramebuffersEXT
     * }
     */
    public static AddressLayout glad_debug_glGenFramebuffersEXT$layout() {
        return glad_debug_glGenFramebuffersEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGENFRAMEBUFFERSEXTPROC glad_debug_glGenFramebuffersEXT
     * }
     */
    public static MemorySegment glad_debug_glGenFramebuffersEXT$segment() {
        return glad_debug_glGenFramebuffersEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENFRAMEBUFFERSEXTPROC glad_debug_glGenFramebuffersEXT
     * }
     */
    public static MemorySegment glad_debug_glGenFramebuffersEXT() {
        return glad_debug_glGenFramebuffersEXT$constants.SEGMENT.get(glad_debug_glGenFramebuffersEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENFRAMEBUFFERSEXTPROC glad_debug_glGenFramebuffersEXT
     * }
     */
    public static void glad_debug_glGenFramebuffersEXT(MemorySegment varValue) {
        glad_debug_glGenFramebuffersEXT$constants.SEGMENT.set(glad_debug_glGenFramebuffersEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGenLists$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGenLists").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGENLISTSPROC glad_glGenLists
     * }
     */
    public static AddressLayout glad_glGenLists$layout() {
        return glad_glGenLists$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGENLISTSPROC glad_glGenLists
     * }
     */
    public static MemorySegment glad_glGenLists$segment() {
        return glad_glGenLists$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENLISTSPROC glad_glGenLists
     * }
     */
    public static MemorySegment glad_glGenLists() {
        return glad_glGenLists$constants.SEGMENT.get(glad_glGenLists$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENLISTSPROC glad_glGenLists
     * }
     */
    public static void glad_glGenLists(MemorySegment varValue) {
        glad_glGenLists$constants.SEGMENT.set(glad_glGenLists$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGenLists$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGenLists").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGENLISTSPROC glad_debug_glGenLists
     * }
     */
    public static AddressLayout glad_debug_glGenLists$layout() {
        return glad_debug_glGenLists$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGENLISTSPROC glad_debug_glGenLists
     * }
     */
    public static MemorySegment glad_debug_glGenLists$segment() {
        return glad_debug_glGenLists$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENLISTSPROC glad_debug_glGenLists
     * }
     */
    public static MemorySegment glad_debug_glGenLists() {
        return glad_debug_glGenLists$constants.SEGMENT.get(glad_debug_glGenLists$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENLISTSPROC glad_debug_glGenLists
     * }
     */
    public static void glad_debug_glGenLists(MemorySegment varValue) {
        glad_debug_glGenLists$constants.SEGMENT.set(glad_debug_glGenLists$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGenProgramPipelines$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGenProgramPipelines").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGENPROGRAMPIPELINESPROC glad_glGenProgramPipelines
     * }
     */
    public static AddressLayout glad_glGenProgramPipelines$layout() {
        return glad_glGenProgramPipelines$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGENPROGRAMPIPELINESPROC glad_glGenProgramPipelines
     * }
     */
    public static MemorySegment glad_glGenProgramPipelines$segment() {
        return glad_glGenProgramPipelines$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENPROGRAMPIPELINESPROC glad_glGenProgramPipelines
     * }
     */
    public static MemorySegment glad_glGenProgramPipelines() {
        return glad_glGenProgramPipelines$constants.SEGMENT.get(glad_glGenProgramPipelines$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENPROGRAMPIPELINESPROC glad_glGenProgramPipelines
     * }
     */
    public static void glad_glGenProgramPipelines(MemorySegment varValue) {
        glad_glGenProgramPipelines$constants.SEGMENT.set(glad_glGenProgramPipelines$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGenProgramPipelines$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGenProgramPipelines").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGENPROGRAMPIPELINESPROC glad_debug_glGenProgramPipelines
     * }
     */
    public static AddressLayout glad_debug_glGenProgramPipelines$layout() {
        return glad_debug_glGenProgramPipelines$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGENPROGRAMPIPELINESPROC glad_debug_glGenProgramPipelines
     * }
     */
    public static MemorySegment glad_debug_glGenProgramPipelines$segment() {
        return glad_debug_glGenProgramPipelines$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENPROGRAMPIPELINESPROC glad_debug_glGenProgramPipelines
     * }
     */
    public static MemorySegment glad_debug_glGenProgramPipelines() {
        return glad_debug_glGenProgramPipelines$constants.SEGMENT.get(glad_debug_glGenProgramPipelines$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENPROGRAMPIPELINESPROC glad_debug_glGenProgramPipelines
     * }
     */
    public static void glad_debug_glGenProgramPipelines(MemorySegment varValue) {
        glad_debug_glGenProgramPipelines$constants.SEGMENT.set(glad_debug_glGenProgramPipelines$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGenProgramsARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGenProgramsARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGENPROGRAMSARBPROC glad_glGenProgramsARB
     * }
     */
    public static AddressLayout glad_glGenProgramsARB$layout() {
        return glad_glGenProgramsARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGENPROGRAMSARBPROC glad_glGenProgramsARB
     * }
     */
    public static MemorySegment glad_glGenProgramsARB$segment() {
        return glad_glGenProgramsARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENPROGRAMSARBPROC glad_glGenProgramsARB
     * }
     */
    public static MemorySegment glad_glGenProgramsARB() {
        return glad_glGenProgramsARB$constants.SEGMENT.get(glad_glGenProgramsARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENPROGRAMSARBPROC glad_glGenProgramsARB
     * }
     */
    public static void glad_glGenProgramsARB(MemorySegment varValue) {
        glad_glGenProgramsARB$constants.SEGMENT.set(glad_glGenProgramsARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGenProgramsARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGenProgramsARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGENPROGRAMSARBPROC glad_debug_glGenProgramsARB
     * }
     */
    public static AddressLayout glad_debug_glGenProgramsARB$layout() {
        return glad_debug_glGenProgramsARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGENPROGRAMSARBPROC glad_debug_glGenProgramsARB
     * }
     */
    public static MemorySegment glad_debug_glGenProgramsARB$segment() {
        return glad_debug_glGenProgramsARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENPROGRAMSARBPROC glad_debug_glGenProgramsARB
     * }
     */
    public static MemorySegment glad_debug_glGenProgramsARB() {
        return glad_debug_glGenProgramsARB$constants.SEGMENT.get(glad_debug_glGenProgramsARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENPROGRAMSARBPROC glad_debug_glGenProgramsARB
     * }
     */
    public static void glad_debug_glGenProgramsARB(MemorySegment varValue) {
        glad_debug_glGenProgramsARB$constants.SEGMENT.set(glad_debug_glGenProgramsARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGenProgramsNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGenProgramsNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGENPROGRAMSNVPROC glad_glGenProgramsNV
     * }
     */
    public static AddressLayout glad_glGenProgramsNV$layout() {
        return glad_glGenProgramsNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGENPROGRAMSNVPROC glad_glGenProgramsNV
     * }
     */
    public static MemorySegment glad_glGenProgramsNV$segment() {
        return glad_glGenProgramsNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENPROGRAMSNVPROC glad_glGenProgramsNV
     * }
     */
    public static MemorySegment glad_glGenProgramsNV() {
        return glad_glGenProgramsNV$constants.SEGMENT.get(glad_glGenProgramsNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENPROGRAMSNVPROC glad_glGenProgramsNV
     * }
     */
    public static void glad_glGenProgramsNV(MemorySegment varValue) {
        glad_glGenProgramsNV$constants.SEGMENT.set(glad_glGenProgramsNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGenProgramsNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGenProgramsNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGENPROGRAMSNVPROC glad_debug_glGenProgramsNV
     * }
     */
    public static AddressLayout glad_debug_glGenProgramsNV$layout() {
        return glad_debug_glGenProgramsNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGENPROGRAMSNVPROC glad_debug_glGenProgramsNV
     * }
     */
    public static MemorySegment glad_debug_glGenProgramsNV$segment() {
        return glad_debug_glGenProgramsNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENPROGRAMSNVPROC glad_debug_glGenProgramsNV
     * }
     */
    public static MemorySegment glad_debug_glGenProgramsNV() {
        return glad_debug_glGenProgramsNV$constants.SEGMENT.get(glad_debug_glGenProgramsNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENPROGRAMSNVPROC glad_debug_glGenProgramsNV
     * }
     */
    public static void glad_debug_glGenProgramsNV(MemorySegment varValue) {
        glad_debug_glGenProgramsNV$constants.SEGMENT.set(glad_debug_glGenProgramsNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGenQueries$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGenQueries").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGENQUERIESPROC glad_glGenQueries
     * }
     */
    public static AddressLayout glad_glGenQueries$layout() {
        return glad_glGenQueries$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGENQUERIESPROC glad_glGenQueries
     * }
     */
    public static MemorySegment glad_glGenQueries$segment() {
        return glad_glGenQueries$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENQUERIESPROC glad_glGenQueries
     * }
     */
    public static MemorySegment glad_glGenQueries() {
        return glad_glGenQueries$constants.SEGMENT.get(glad_glGenQueries$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENQUERIESPROC glad_glGenQueries
     * }
     */
    public static void glad_glGenQueries(MemorySegment varValue) {
        glad_glGenQueries$constants.SEGMENT.set(glad_glGenQueries$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGenQueries$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGenQueries").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGENQUERIESPROC glad_debug_glGenQueries
     * }
     */
    public static AddressLayout glad_debug_glGenQueries$layout() {
        return glad_debug_glGenQueries$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGENQUERIESPROC glad_debug_glGenQueries
     * }
     */
    public static MemorySegment glad_debug_glGenQueries$segment() {
        return glad_debug_glGenQueries$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENQUERIESPROC glad_debug_glGenQueries
     * }
     */
    public static MemorySegment glad_debug_glGenQueries() {
        return glad_debug_glGenQueries$constants.SEGMENT.get(glad_debug_glGenQueries$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENQUERIESPROC glad_debug_glGenQueries
     * }
     */
    public static void glad_debug_glGenQueries(MemorySegment varValue) {
        glad_debug_glGenQueries$constants.SEGMENT.set(glad_debug_glGenQueries$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGenQueriesARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGenQueriesARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGENQUERIESARBPROC glad_glGenQueriesARB
     * }
     */
    public static AddressLayout glad_glGenQueriesARB$layout() {
        return glad_glGenQueriesARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGENQUERIESARBPROC glad_glGenQueriesARB
     * }
     */
    public static MemorySegment glad_glGenQueriesARB$segment() {
        return glad_glGenQueriesARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENQUERIESARBPROC glad_glGenQueriesARB
     * }
     */
    public static MemorySegment glad_glGenQueriesARB() {
        return glad_glGenQueriesARB$constants.SEGMENT.get(glad_glGenQueriesARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENQUERIESARBPROC glad_glGenQueriesARB
     * }
     */
    public static void glad_glGenQueriesARB(MemorySegment varValue) {
        glad_glGenQueriesARB$constants.SEGMENT.set(glad_glGenQueriesARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGenQueriesARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGenQueriesARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGENQUERIESARBPROC glad_debug_glGenQueriesARB
     * }
     */
    public static AddressLayout glad_debug_glGenQueriesARB$layout() {
        return glad_debug_glGenQueriesARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGENQUERIESARBPROC glad_debug_glGenQueriesARB
     * }
     */
    public static MemorySegment glad_debug_glGenQueriesARB$segment() {
        return glad_debug_glGenQueriesARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENQUERIESARBPROC glad_debug_glGenQueriesARB
     * }
     */
    public static MemorySegment glad_debug_glGenQueriesARB() {
        return glad_debug_glGenQueriesARB$constants.SEGMENT.get(glad_debug_glGenQueriesARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENQUERIESARBPROC glad_debug_glGenQueriesARB
     * }
     */
    public static void glad_debug_glGenQueriesARB(MemorySegment varValue) {
        glad_debug_glGenQueriesARB$constants.SEGMENT.set(glad_debug_glGenQueriesARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGenRenderbuffers$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGenRenderbuffers").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGENRENDERBUFFERSPROC glad_glGenRenderbuffers
     * }
     */
    public static AddressLayout glad_glGenRenderbuffers$layout() {
        return glad_glGenRenderbuffers$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGENRENDERBUFFERSPROC glad_glGenRenderbuffers
     * }
     */
    public static MemorySegment glad_glGenRenderbuffers$segment() {
        return glad_glGenRenderbuffers$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENRENDERBUFFERSPROC glad_glGenRenderbuffers
     * }
     */
    public static MemorySegment glad_glGenRenderbuffers() {
        return glad_glGenRenderbuffers$constants.SEGMENT.get(glad_glGenRenderbuffers$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENRENDERBUFFERSPROC glad_glGenRenderbuffers
     * }
     */
    public static void glad_glGenRenderbuffers(MemorySegment varValue) {
        glad_glGenRenderbuffers$constants.SEGMENT.set(glad_glGenRenderbuffers$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGenRenderbuffers$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGenRenderbuffers").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGENRENDERBUFFERSPROC glad_debug_glGenRenderbuffers
     * }
     */
    public static AddressLayout glad_debug_glGenRenderbuffers$layout() {
        return glad_debug_glGenRenderbuffers$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGENRENDERBUFFERSPROC glad_debug_glGenRenderbuffers
     * }
     */
    public static MemorySegment glad_debug_glGenRenderbuffers$segment() {
        return glad_debug_glGenRenderbuffers$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENRENDERBUFFERSPROC glad_debug_glGenRenderbuffers
     * }
     */
    public static MemorySegment glad_debug_glGenRenderbuffers() {
        return glad_debug_glGenRenderbuffers$constants.SEGMENT.get(glad_debug_glGenRenderbuffers$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENRENDERBUFFERSPROC glad_debug_glGenRenderbuffers
     * }
     */
    public static void glad_debug_glGenRenderbuffers(MemorySegment varValue) {
        glad_debug_glGenRenderbuffers$constants.SEGMENT.set(glad_debug_glGenRenderbuffers$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGenRenderbuffersEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGenRenderbuffersEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGENRENDERBUFFERSEXTPROC glad_glGenRenderbuffersEXT
     * }
     */
    public static AddressLayout glad_glGenRenderbuffersEXT$layout() {
        return glad_glGenRenderbuffersEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGENRENDERBUFFERSEXTPROC glad_glGenRenderbuffersEXT
     * }
     */
    public static MemorySegment glad_glGenRenderbuffersEXT$segment() {
        return glad_glGenRenderbuffersEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENRENDERBUFFERSEXTPROC glad_glGenRenderbuffersEXT
     * }
     */
    public static MemorySegment glad_glGenRenderbuffersEXT() {
        return glad_glGenRenderbuffersEXT$constants.SEGMENT.get(glad_glGenRenderbuffersEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENRENDERBUFFERSEXTPROC glad_glGenRenderbuffersEXT
     * }
     */
    public static void glad_glGenRenderbuffersEXT(MemorySegment varValue) {
        glad_glGenRenderbuffersEXT$constants.SEGMENT.set(glad_glGenRenderbuffersEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGenRenderbuffersEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGenRenderbuffersEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGENRENDERBUFFERSEXTPROC glad_debug_glGenRenderbuffersEXT
     * }
     */
    public static AddressLayout glad_debug_glGenRenderbuffersEXT$layout() {
        return glad_debug_glGenRenderbuffersEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGENRENDERBUFFERSEXTPROC glad_debug_glGenRenderbuffersEXT
     * }
     */
    public static MemorySegment glad_debug_glGenRenderbuffersEXT$segment() {
        return glad_debug_glGenRenderbuffersEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENRENDERBUFFERSEXTPROC glad_debug_glGenRenderbuffersEXT
     * }
     */
    public static MemorySegment glad_debug_glGenRenderbuffersEXT() {
        return glad_debug_glGenRenderbuffersEXT$constants.SEGMENT.get(glad_debug_glGenRenderbuffersEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENRENDERBUFFERSEXTPROC glad_debug_glGenRenderbuffersEXT
     * }
     */
    public static void glad_debug_glGenRenderbuffersEXT(MemorySegment varValue) {
        glad_debug_glGenRenderbuffersEXT$constants.SEGMENT.set(glad_debug_glGenRenderbuffersEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGenSamplers$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGenSamplers").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGENSAMPLERSPROC glad_glGenSamplers
     * }
     */
    public static AddressLayout glad_glGenSamplers$layout() {
        return glad_glGenSamplers$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGENSAMPLERSPROC glad_glGenSamplers
     * }
     */
    public static MemorySegment glad_glGenSamplers$segment() {
        return glad_glGenSamplers$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENSAMPLERSPROC glad_glGenSamplers
     * }
     */
    public static MemorySegment glad_glGenSamplers() {
        return glad_glGenSamplers$constants.SEGMENT.get(glad_glGenSamplers$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENSAMPLERSPROC glad_glGenSamplers
     * }
     */
    public static void glad_glGenSamplers(MemorySegment varValue) {
        glad_glGenSamplers$constants.SEGMENT.set(glad_glGenSamplers$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGenSamplers$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGenSamplers").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGENSAMPLERSPROC glad_debug_glGenSamplers
     * }
     */
    public static AddressLayout glad_debug_glGenSamplers$layout() {
        return glad_debug_glGenSamplers$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGENSAMPLERSPROC glad_debug_glGenSamplers
     * }
     */
    public static MemorySegment glad_debug_glGenSamplers$segment() {
        return glad_debug_glGenSamplers$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENSAMPLERSPROC glad_debug_glGenSamplers
     * }
     */
    public static MemorySegment glad_debug_glGenSamplers() {
        return glad_debug_glGenSamplers$constants.SEGMENT.get(glad_debug_glGenSamplers$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENSAMPLERSPROC glad_debug_glGenSamplers
     * }
     */
    public static void glad_debug_glGenSamplers(MemorySegment varValue) {
        glad_debug_glGenSamplers$constants.SEGMENT.set(glad_debug_glGenSamplers$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGenTextures$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGenTextures").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGENTEXTURESPROC glad_glGenTextures
     * }
     */
    public static AddressLayout glad_glGenTextures$layout() {
        return glad_glGenTextures$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGENTEXTURESPROC glad_glGenTextures
     * }
     */
    public static MemorySegment glad_glGenTextures$segment() {
        return glad_glGenTextures$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENTEXTURESPROC glad_glGenTextures
     * }
     */
    public static MemorySegment glad_glGenTextures() {
        return glad_glGenTextures$constants.SEGMENT.get(glad_glGenTextures$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENTEXTURESPROC glad_glGenTextures
     * }
     */
    public static void glad_glGenTextures(MemorySegment varValue) {
        glad_glGenTextures$constants.SEGMENT.set(glad_glGenTextures$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGenTextures$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGenTextures").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGENTEXTURESPROC glad_debug_glGenTextures
     * }
     */
    public static AddressLayout glad_debug_glGenTextures$layout() {
        return glad_debug_glGenTextures$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGENTEXTURESPROC glad_debug_glGenTextures
     * }
     */
    public static MemorySegment glad_debug_glGenTextures$segment() {
        return glad_debug_glGenTextures$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENTEXTURESPROC glad_debug_glGenTextures
     * }
     */
    public static MemorySegment glad_debug_glGenTextures() {
        return glad_debug_glGenTextures$constants.SEGMENT.get(glad_debug_glGenTextures$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENTEXTURESPROC glad_debug_glGenTextures
     * }
     */
    public static void glad_debug_glGenTextures(MemorySegment varValue) {
        glad_debug_glGenTextures$constants.SEGMENT.set(glad_debug_glGenTextures$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGenTexturesEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGenTexturesEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGENTEXTURESEXTPROC glad_glGenTexturesEXT
     * }
     */
    public static AddressLayout glad_glGenTexturesEXT$layout() {
        return glad_glGenTexturesEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGENTEXTURESEXTPROC glad_glGenTexturesEXT
     * }
     */
    public static MemorySegment glad_glGenTexturesEXT$segment() {
        return glad_glGenTexturesEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENTEXTURESEXTPROC glad_glGenTexturesEXT
     * }
     */
    public static MemorySegment glad_glGenTexturesEXT() {
        return glad_glGenTexturesEXT$constants.SEGMENT.get(glad_glGenTexturesEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENTEXTURESEXTPROC glad_glGenTexturesEXT
     * }
     */
    public static void glad_glGenTexturesEXT(MemorySegment varValue) {
        glad_glGenTexturesEXT$constants.SEGMENT.set(glad_glGenTexturesEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGenTexturesEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGenTexturesEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGENTEXTURESEXTPROC glad_debug_glGenTexturesEXT
     * }
     */
    public static AddressLayout glad_debug_glGenTexturesEXT$layout() {
        return glad_debug_glGenTexturesEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGENTEXTURESEXTPROC glad_debug_glGenTexturesEXT
     * }
     */
    public static MemorySegment glad_debug_glGenTexturesEXT$segment() {
        return glad_debug_glGenTexturesEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENTEXTURESEXTPROC glad_debug_glGenTexturesEXT
     * }
     */
    public static MemorySegment glad_debug_glGenTexturesEXT() {
        return glad_debug_glGenTexturesEXT$constants.SEGMENT.get(glad_debug_glGenTexturesEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENTEXTURESEXTPROC glad_debug_glGenTexturesEXT
     * }
     */
    public static void glad_debug_glGenTexturesEXT(MemorySegment varValue) {
        glad_debug_glGenTexturesEXT$constants.SEGMENT.set(glad_debug_glGenTexturesEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGenTransformFeedbacks$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGenTransformFeedbacks").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGENTRANSFORMFEEDBACKSPROC glad_glGenTransformFeedbacks
     * }
     */
    public static AddressLayout glad_glGenTransformFeedbacks$layout() {
        return glad_glGenTransformFeedbacks$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGENTRANSFORMFEEDBACKSPROC glad_glGenTransformFeedbacks
     * }
     */
    public static MemorySegment glad_glGenTransformFeedbacks$segment() {
        return glad_glGenTransformFeedbacks$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENTRANSFORMFEEDBACKSPROC glad_glGenTransformFeedbacks
     * }
     */
    public static MemorySegment glad_glGenTransformFeedbacks() {
        return glad_glGenTransformFeedbacks$constants.SEGMENT.get(glad_glGenTransformFeedbacks$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENTRANSFORMFEEDBACKSPROC glad_glGenTransformFeedbacks
     * }
     */
    public static void glad_glGenTransformFeedbacks(MemorySegment varValue) {
        glad_glGenTransformFeedbacks$constants.SEGMENT.set(glad_glGenTransformFeedbacks$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGenTransformFeedbacks$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGenTransformFeedbacks").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGENTRANSFORMFEEDBACKSPROC glad_debug_glGenTransformFeedbacks
     * }
     */
    public static AddressLayout glad_debug_glGenTransformFeedbacks$layout() {
        return glad_debug_glGenTransformFeedbacks$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGENTRANSFORMFEEDBACKSPROC glad_debug_glGenTransformFeedbacks
     * }
     */
    public static MemorySegment glad_debug_glGenTransformFeedbacks$segment() {
        return glad_debug_glGenTransformFeedbacks$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENTRANSFORMFEEDBACKSPROC glad_debug_glGenTransformFeedbacks
     * }
     */
    public static MemorySegment glad_debug_glGenTransformFeedbacks() {
        return glad_debug_glGenTransformFeedbacks$constants.SEGMENT.get(glad_debug_glGenTransformFeedbacks$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENTRANSFORMFEEDBACKSPROC glad_debug_glGenTransformFeedbacks
     * }
     */
    public static void glad_debug_glGenTransformFeedbacks(MemorySegment varValue) {
        glad_debug_glGenTransformFeedbacks$constants.SEGMENT.set(glad_debug_glGenTransformFeedbacks$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGenTransformFeedbacksNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGenTransformFeedbacksNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGENTRANSFORMFEEDBACKSNVPROC glad_glGenTransformFeedbacksNV
     * }
     */
    public static AddressLayout glad_glGenTransformFeedbacksNV$layout() {
        return glad_glGenTransformFeedbacksNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGENTRANSFORMFEEDBACKSNVPROC glad_glGenTransformFeedbacksNV
     * }
     */
    public static MemorySegment glad_glGenTransformFeedbacksNV$segment() {
        return glad_glGenTransformFeedbacksNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENTRANSFORMFEEDBACKSNVPROC glad_glGenTransformFeedbacksNV
     * }
     */
    public static MemorySegment glad_glGenTransformFeedbacksNV() {
        return glad_glGenTransformFeedbacksNV$constants.SEGMENT.get(glad_glGenTransformFeedbacksNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENTRANSFORMFEEDBACKSNVPROC glad_glGenTransformFeedbacksNV
     * }
     */
    public static void glad_glGenTransformFeedbacksNV(MemorySegment varValue) {
        glad_glGenTransformFeedbacksNV$constants.SEGMENT.set(glad_glGenTransformFeedbacksNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGenTransformFeedbacksNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGenTransformFeedbacksNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGENTRANSFORMFEEDBACKSNVPROC glad_debug_glGenTransformFeedbacksNV
     * }
     */
    public static AddressLayout glad_debug_glGenTransformFeedbacksNV$layout() {
        return glad_debug_glGenTransformFeedbacksNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGENTRANSFORMFEEDBACKSNVPROC glad_debug_glGenTransformFeedbacksNV
     * }
     */
    public static MemorySegment glad_debug_glGenTransformFeedbacksNV$segment() {
        return glad_debug_glGenTransformFeedbacksNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENTRANSFORMFEEDBACKSNVPROC glad_debug_glGenTransformFeedbacksNV
     * }
     */
    public static MemorySegment glad_debug_glGenTransformFeedbacksNV() {
        return glad_debug_glGenTransformFeedbacksNV$constants.SEGMENT.get(glad_debug_glGenTransformFeedbacksNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENTRANSFORMFEEDBACKSNVPROC glad_debug_glGenTransformFeedbacksNV
     * }
     */
    public static void glad_debug_glGenTransformFeedbacksNV(MemorySegment varValue) {
        glad_debug_glGenTransformFeedbacksNV$constants.SEGMENT.set(glad_debug_glGenTransformFeedbacksNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGenVertexArrays$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGenVertexArrays").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGENVERTEXARRAYSPROC glad_glGenVertexArrays
     * }
     */
    public static AddressLayout glad_glGenVertexArrays$layout() {
        return glad_glGenVertexArrays$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGENVERTEXARRAYSPROC glad_glGenVertexArrays
     * }
     */
    public static MemorySegment glad_glGenVertexArrays$segment() {
        return glad_glGenVertexArrays$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENVERTEXARRAYSPROC glad_glGenVertexArrays
     * }
     */
    public static MemorySegment glad_glGenVertexArrays() {
        return glad_glGenVertexArrays$constants.SEGMENT.get(glad_glGenVertexArrays$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENVERTEXARRAYSPROC glad_glGenVertexArrays
     * }
     */
    public static void glad_glGenVertexArrays(MemorySegment varValue) {
        glad_glGenVertexArrays$constants.SEGMENT.set(glad_glGenVertexArrays$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGenVertexArrays$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGenVertexArrays").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGENVERTEXARRAYSPROC glad_debug_glGenVertexArrays
     * }
     */
    public static AddressLayout glad_debug_glGenVertexArrays$layout() {
        return glad_debug_glGenVertexArrays$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGENVERTEXARRAYSPROC glad_debug_glGenVertexArrays
     * }
     */
    public static MemorySegment glad_debug_glGenVertexArrays$segment() {
        return glad_debug_glGenVertexArrays$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENVERTEXARRAYSPROC glad_debug_glGenVertexArrays
     * }
     */
    public static MemorySegment glad_debug_glGenVertexArrays() {
        return glad_debug_glGenVertexArrays$constants.SEGMENT.get(glad_debug_glGenVertexArrays$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENVERTEXARRAYSPROC glad_debug_glGenVertexArrays
     * }
     */
    public static void glad_debug_glGenVertexArrays(MemorySegment varValue) {
        glad_debug_glGenVertexArrays$constants.SEGMENT.set(glad_debug_glGenVertexArrays$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGenVertexArraysAPPLE$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGenVertexArraysAPPLE").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGENVERTEXARRAYSAPPLEPROC glad_glGenVertexArraysAPPLE
     * }
     */
    public static AddressLayout glad_glGenVertexArraysAPPLE$layout() {
        return glad_glGenVertexArraysAPPLE$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGENVERTEXARRAYSAPPLEPROC glad_glGenVertexArraysAPPLE
     * }
     */
    public static MemorySegment glad_glGenVertexArraysAPPLE$segment() {
        return glad_glGenVertexArraysAPPLE$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENVERTEXARRAYSAPPLEPROC glad_glGenVertexArraysAPPLE
     * }
     */
    public static MemorySegment glad_glGenVertexArraysAPPLE() {
        return glad_glGenVertexArraysAPPLE$constants.SEGMENT.get(glad_glGenVertexArraysAPPLE$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENVERTEXARRAYSAPPLEPROC glad_glGenVertexArraysAPPLE
     * }
     */
    public static void glad_glGenVertexArraysAPPLE(MemorySegment varValue) {
        glad_glGenVertexArraysAPPLE$constants.SEGMENT.set(glad_glGenVertexArraysAPPLE$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGenVertexArraysAPPLE$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGenVertexArraysAPPLE").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGENVERTEXARRAYSAPPLEPROC glad_debug_glGenVertexArraysAPPLE
     * }
     */
    public static AddressLayout glad_debug_glGenVertexArraysAPPLE$layout() {
        return glad_debug_glGenVertexArraysAPPLE$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGENVERTEXARRAYSAPPLEPROC glad_debug_glGenVertexArraysAPPLE
     * }
     */
    public static MemorySegment glad_debug_glGenVertexArraysAPPLE$segment() {
        return glad_debug_glGenVertexArraysAPPLE$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENVERTEXARRAYSAPPLEPROC glad_debug_glGenVertexArraysAPPLE
     * }
     */
    public static MemorySegment glad_debug_glGenVertexArraysAPPLE() {
        return glad_debug_glGenVertexArraysAPPLE$constants.SEGMENT.get(glad_debug_glGenVertexArraysAPPLE$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENVERTEXARRAYSAPPLEPROC glad_debug_glGenVertexArraysAPPLE
     * }
     */
    public static void glad_debug_glGenVertexArraysAPPLE(MemorySegment varValue) {
        glad_debug_glGenVertexArraysAPPLE$constants.SEGMENT.set(glad_debug_glGenVertexArraysAPPLE$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGenerateMipmap$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGenerateMipmap").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGENERATEMIPMAPPROC glad_glGenerateMipmap
     * }
     */
    public static AddressLayout glad_glGenerateMipmap$layout() {
        return glad_glGenerateMipmap$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGENERATEMIPMAPPROC glad_glGenerateMipmap
     * }
     */
    public static MemorySegment glad_glGenerateMipmap$segment() {
        return glad_glGenerateMipmap$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENERATEMIPMAPPROC glad_glGenerateMipmap
     * }
     */
    public static MemorySegment glad_glGenerateMipmap() {
        return glad_glGenerateMipmap$constants.SEGMENT.get(glad_glGenerateMipmap$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENERATEMIPMAPPROC glad_glGenerateMipmap
     * }
     */
    public static void glad_glGenerateMipmap(MemorySegment varValue) {
        glad_glGenerateMipmap$constants.SEGMENT.set(glad_glGenerateMipmap$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGenerateMipmap$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGenerateMipmap").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGENERATEMIPMAPPROC glad_debug_glGenerateMipmap
     * }
     */
    public static AddressLayout glad_debug_glGenerateMipmap$layout() {
        return glad_debug_glGenerateMipmap$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGENERATEMIPMAPPROC glad_debug_glGenerateMipmap
     * }
     */
    public static MemorySegment glad_debug_glGenerateMipmap$segment() {
        return glad_debug_glGenerateMipmap$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENERATEMIPMAPPROC glad_debug_glGenerateMipmap
     * }
     */
    public static MemorySegment glad_debug_glGenerateMipmap() {
        return glad_debug_glGenerateMipmap$constants.SEGMENT.get(glad_debug_glGenerateMipmap$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENERATEMIPMAPPROC glad_debug_glGenerateMipmap
     * }
     */
    public static void glad_debug_glGenerateMipmap(MemorySegment varValue) {
        glad_debug_glGenerateMipmap$constants.SEGMENT.set(glad_debug_glGenerateMipmap$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGenerateMipmapEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGenerateMipmapEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGENERATEMIPMAPEXTPROC glad_glGenerateMipmapEXT
     * }
     */
    public static AddressLayout glad_glGenerateMipmapEXT$layout() {
        return glad_glGenerateMipmapEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGENERATEMIPMAPEXTPROC glad_glGenerateMipmapEXT
     * }
     */
    public static MemorySegment glad_glGenerateMipmapEXT$segment() {
        return glad_glGenerateMipmapEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENERATEMIPMAPEXTPROC glad_glGenerateMipmapEXT
     * }
     */
    public static MemorySegment glad_glGenerateMipmapEXT() {
        return glad_glGenerateMipmapEXT$constants.SEGMENT.get(glad_glGenerateMipmapEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENERATEMIPMAPEXTPROC glad_glGenerateMipmapEXT
     * }
     */
    public static void glad_glGenerateMipmapEXT(MemorySegment varValue) {
        glad_glGenerateMipmapEXT$constants.SEGMENT.set(glad_glGenerateMipmapEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGenerateMipmapEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGenerateMipmapEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGENERATEMIPMAPEXTPROC glad_debug_glGenerateMipmapEXT
     * }
     */
    public static AddressLayout glad_debug_glGenerateMipmapEXT$layout() {
        return glad_debug_glGenerateMipmapEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGENERATEMIPMAPEXTPROC glad_debug_glGenerateMipmapEXT
     * }
     */
    public static MemorySegment glad_debug_glGenerateMipmapEXT$segment() {
        return glad_debug_glGenerateMipmapEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENERATEMIPMAPEXTPROC glad_debug_glGenerateMipmapEXT
     * }
     */
    public static MemorySegment glad_debug_glGenerateMipmapEXT() {
        return glad_debug_glGenerateMipmapEXT$constants.SEGMENT.get(glad_debug_glGenerateMipmapEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENERATEMIPMAPEXTPROC glad_debug_glGenerateMipmapEXT
     * }
     */
    public static void glad_debug_glGenerateMipmapEXT(MemorySegment varValue) {
        glad_debug_glGenerateMipmapEXT$constants.SEGMENT.set(glad_debug_glGenerateMipmapEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGenerateMultiTexMipmapEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGenerateMultiTexMipmapEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGENERATEMULTITEXMIPMAPEXTPROC glad_glGenerateMultiTexMipmapEXT
     * }
     */
    public static AddressLayout glad_glGenerateMultiTexMipmapEXT$layout() {
        return glad_glGenerateMultiTexMipmapEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGENERATEMULTITEXMIPMAPEXTPROC glad_glGenerateMultiTexMipmapEXT
     * }
     */
    public static MemorySegment glad_glGenerateMultiTexMipmapEXT$segment() {
        return glad_glGenerateMultiTexMipmapEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENERATEMULTITEXMIPMAPEXTPROC glad_glGenerateMultiTexMipmapEXT
     * }
     */
    public static MemorySegment glad_glGenerateMultiTexMipmapEXT() {
        return glad_glGenerateMultiTexMipmapEXT$constants.SEGMENT.get(glad_glGenerateMultiTexMipmapEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENERATEMULTITEXMIPMAPEXTPROC glad_glGenerateMultiTexMipmapEXT
     * }
     */
    public static void glad_glGenerateMultiTexMipmapEXT(MemorySegment varValue) {
        glad_glGenerateMultiTexMipmapEXT$constants.SEGMENT.set(glad_glGenerateMultiTexMipmapEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGenerateMultiTexMipmapEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGenerateMultiTexMipmapEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGENERATEMULTITEXMIPMAPEXTPROC glad_debug_glGenerateMultiTexMipmapEXT
     * }
     */
    public static AddressLayout glad_debug_glGenerateMultiTexMipmapEXT$layout() {
        return glad_debug_glGenerateMultiTexMipmapEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGENERATEMULTITEXMIPMAPEXTPROC glad_debug_glGenerateMultiTexMipmapEXT
     * }
     */
    public static MemorySegment glad_debug_glGenerateMultiTexMipmapEXT$segment() {
        return glad_debug_glGenerateMultiTexMipmapEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENERATEMULTITEXMIPMAPEXTPROC glad_debug_glGenerateMultiTexMipmapEXT
     * }
     */
    public static MemorySegment glad_debug_glGenerateMultiTexMipmapEXT() {
        return glad_debug_glGenerateMultiTexMipmapEXT$constants.SEGMENT.get(glad_debug_glGenerateMultiTexMipmapEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENERATEMULTITEXMIPMAPEXTPROC glad_debug_glGenerateMultiTexMipmapEXT
     * }
     */
    public static void glad_debug_glGenerateMultiTexMipmapEXT(MemorySegment varValue) {
        glad_debug_glGenerateMultiTexMipmapEXT$constants.SEGMENT.set(glad_debug_glGenerateMultiTexMipmapEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGenerateTextureMipmap$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGenerateTextureMipmap").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGENERATETEXTUREMIPMAPPROC glad_glGenerateTextureMipmap
     * }
     */
    public static AddressLayout glad_glGenerateTextureMipmap$layout() {
        return glad_glGenerateTextureMipmap$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGENERATETEXTUREMIPMAPPROC glad_glGenerateTextureMipmap
     * }
     */
    public static MemorySegment glad_glGenerateTextureMipmap$segment() {
        return glad_glGenerateTextureMipmap$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENERATETEXTUREMIPMAPPROC glad_glGenerateTextureMipmap
     * }
     */
    public static MemorySegment glad_glGenerateTextureMipmap() {
        return glad_glGenerateTextureMipmap$constants.SEGMENT.get(glad_glGenerateTextureMipmap$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENERATETEXTUREMIPMAPPROC glad_glGenerateTextureMipmap
     * }
     */
    public static void glad_glGenerateTextureMipmap(MemorySegment varValue) {
        glad_glGenerateTextureMipmap$constants.SEGMENT.set(glad_glGenerateTextureMipmap$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGenerateTextureMipmap$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGenerateTextureMipmap").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGENERATETEXTUREMIPMAPPROC glad_debug_glGenerateTextureMipmap
     * }
     */
    public static AddressLayout glad_debug_glGenerateTextureMipmap$layout() {
        return glad_debug_glGenerateTextureMipmap$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGENERATETEXTUREMIPMAPPROC glad_debug_glGenerateTextureMipmap
     * }
     */
    public static MemorySegment glad_debug_glGenerateTextureMipmap$segment() {
        return glad_debug_glGenerateTextureMipmap$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENERATETEXTUREMIPMAPPROC glad_debug_glGenerateTextureMipmap
     * }
     */
    public static MemorySegment glad_debug_glGenerateTextureMipmap() {
        return glad_debug_glGenerateTextureMipmap$constants.SEGMENT.get(glad_debug_glGenerateTextureMipmap$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENERATETEXTUREMIPMAPPROC glad_debug_glGenerateTextureMipmap
     * }
     */
    public static void glad_debug_glGenerateTextureMipmap(MemorySegment varValue) {
        glad_debug_glGenerateTextureMipmap$constants.SEGMENT.set(glad_debug_glGenerateTextureMipmap$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGenerateTextureMipmapEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGenerateTextureMipmapEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGENERATETEXTUREMIPMAPEXTPROC glad_glGenerateTextureMipmapEXT
     * }
     */
    public static AddressLayout glad_glGenerateTextureMipmapEXT$layout() {
        return glad_glGenerateTextureMipmapEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGENERATETEXTUREMIPMAPEXTPROC glad_glGenerateTextureMipmapEXT
     * }
     */
    public static MemorySegment glad_glGenerateTextureMipmapEXT$segment() {
        return glad_glGenerateTextureMipmapEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENERATETEXTUREMIPMAPEXTPROC glad_glGenerateTextureMipmapEXT
     * }
     */
    public static MemorySegment glad_glGenerateTextureMipmapEXT() {
        return glad_glGenerateTextureMipmapEXT$constants.SEGMENT.get(glad_glGenerateTextureMipmapEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENERATETEXTUREMIPMAPEXTPROC glad_glGenerateTextureMipmapEXT
     * }
     */
    public static void glad_glGenerateTextureMipmapEXT(MemorySegment varValue) {
        glad_glGenerateTextureMipmapEXT$constants.SEGMENT.set(glad_glGenerateTextureMipmapEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGenerateTextureMipmapEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGenerateTextureMipmapEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGENERATETEXTUREMIPMAPEXTPROC glad_debug_glGenerateTextureMipmapEXT
     * }
     */
    public static AddressLayout glad_debug_glGenerateTextureMipmapEXT$layout() {
        return glad_debug_glGenerateTextureMipmapEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGENERATETEXTUREMIPMAPEXTPROC glad_debug_glGenerateTextureMipmapEXT
     * }
     */
    public static MemorySegment glad_debug_glGenerateTextureMipmapEXT$segment() {
        return glad_debug_glGenerateTextureMipmapEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENERATETEXTUREMIPMAPEXTPROC glad_debug_glGenerateTextureMipmapEXT
     * }
     */
    public static MemorySegment glad_debug_glGenerateTextureMipmapEXT() {
        return glad_debug_glGenerateTextureMipmapEXT$constants.SEGMENT.get(glad_debug_glGenerateTextureMipmapEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGENERATETEXTUREMIPMAPEXTPROC glad_debug_glGenerateTextureMipmapEXT
     * }
     */
    public static void glad_debug_glGenerateTextureMipmapEXT(MemorySegment varValue) {
        glad_debug_glGenerateTextureMipmapEXT$constants.SEGMENT.set(glad_debug_glGenerateTextureMipmapEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetActiveAtomicCounterBufferiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetActiveAtomicCounterBufferiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC glad_glGetActiveAtomicCounterBufferiv
     * }
     */
    public static AddressLayout glad_glGetActiveAtomicCounterBufferiv$layout() {
        return glad_glGetActiveAtomicCounterBufferiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC glad_glGetActiveAtomicCounterBufferiv
     * }
     */
    public static MemorySegment glad_glGetActiveAtomicCounterBufferiv$segment() {
        return glad_glGetActiveAtomicCounterBufferiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC glad_glGetActiveAtomicCounterBufferiv
     * }
     */
    public static MemorySegment glad_glGetActiveAtomicCounterBufferiv() {
        return glad_glGetActiveAtomicCounterBufferiv$constants.SEGMENT.get(glad_glGetActiveAtomicCounterBufferiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC glad_glGetActiveAtomicCounterBufferiv
     * }
     */
    public static void glad_glGetActiveAtomicCounterBufferiv(MemorySegment varValue) {
        glad_glGetActiveAtomicCounterBufferiv$constants.SEGMENT.set(glad_glGetActiveAtomicCounterBufferiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetActiveAtomicCounterBufferiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetActiveAtomicCounterBufferiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC glad_debug_glGetActiveAtomicCounterBufferiv
     * }
     */
    public static AddressLayout glad_debug_glGetActiveAtomicCounterBufferiv$layout() {
        return glad_debug_glGetActiveAtomicCounterBufferiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC glad_debug_glGetActiveAtomicCounterBufferiv
     * }
     */
    public static MemorySegment glad_debug_glGetActiveAtomicCounterBufferiv$segment() {
        return glad_debug_glGetActiveAtomicCounterBufferiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC glad_debug_glGetActiveAtomicCounterBufferiv
     * }
     */
    public static MemorySegment glad_debug_glGetActiveAtomicCounterBufferiv() {
        return glad_debug_glGetActiveAtomicCounterBufferiv$constants.SEGMENT.get(glad_debug_glGetActiveAtomicCounterBufferiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC glad_debug_glGetActiveAtomicCounterBufferiv
     * }
     */
    public static void glad_debug_glGetActiveAtomicCounterBufferiv(MemorySegment varValue) {
        glad_debug_glGetActiveAtomicCounterBufferiv$constants.SEGMENT.set(glad_debug_glGetActiveAtomicCounterBufferiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetActiveAttrib$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetActiveAttrib").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEATTRIBPROC glad_glGetActiveAttrib
     * }
     */
    public static AddressLayout glad_glGetActiveAttrib$layout() {
        return glad_glGetActiveAttrib$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEATTRIBPROC glad_glGetActiveAttrib
     * }
     */
    public static MemorySegment glad_glGetActiveAttrib$segment() {
        return glad_glGetActiveAttrib$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEATTRIBPROC glad_glGetActiveAttrib
     * }
     */
    public static MemorySegment glad_glGetActiveAttrib() {
        return glad_glGetActiveAttrib$constants.SEGMENT.get(glad_glGetActiveAttrib$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEATTRIBPROC glad_glGetActiveAttrib
     * }
     */
    public static void glad_glGetActiveAttrib(MemorySegment varValue) {
        glad_glGetActiveAttrib$constants.SEGMENT.set(glad_glGetActiveAttrib$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetActiveAttrib$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetActiveAttrib").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEATTRIBPROC glad_debug_glGetActiveAttrib
     * }
     */
    public static AddressLayout glad_debug_glGetActiveAttrib$layout() {
        return glad_debug_glGetActiveAttrib$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEATTRIBPROC glad_debug_glGetActiveAttrib
     * }
     */
    public static MemorySegment glad_debug_glGetActiveAttrib$segment() {
        return glad_debug_glGetActiveAttrib$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEATTRIBPROC glad_debug_glGetActiveAttrib
     * }
     */
    public static MemorySegment glad_debug_glGetActiveAttrib() {
        return glad_debug_glGetActiveAttrib$constants.SEGMENT.get(glad_debug_glGetActiveAttrib$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEATTRIBPROC glad_debug_glGetActiveAttrib
     * }
     */
    public static void glad_debug_glGetActiveAttrib(MemorySegment varValue) {
        glad_debug_glGetActiveAttrib$constants.SEGMENT.set(glad_debug_glGetActiveAttrib$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetActiveAttribARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetActiveAttribARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEATTRIBARBPROC glad_glGetActiveAttribARB
     * }
     */
    public static AddressLayout glad_glGetActiveAttribARB$layout() {
        return glad_glGetActiveAttribARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEATTRIBARBPROC glad_glGetActiveAttribARB
     * }
     */
    public static MemorySegment glad_glGetActiveAttribARB$segment() {
        return glad_glGetActiveAttribARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEATTRIBARBPROC glad_glGetActiveAttribARB
     * }
     */
    public static MemorySegment glad_glGetActiveAttribARB() {
        return glad_glGetActiveAttribARB$constants.SEGMENT.get(glad_glGetActiveAttribARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEATTRIBARBPROC glad_glGetActiveAttribARB
     * }
     */
    public static void glad_glGetActiveAttribARB(MemorySegment varValue) {
        glad_glGetActiveAttribARB$constants.SEGMENT.set(glad_glGetActiveAttribARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetActiveAttribARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetActiveAttribARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEATTRIBARBPROC glad_debug_glGetActiveAttribARB
     * }
     */
    public static AddressLayout glad_debug_glGetActiveAttribARB$layout() {
        return glad_debug_glGetActiveAttribARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEATTRIBARBPROC glad_debug_glGetActiveAttribARB
     * }
     */
    public static MemorySegment glad_debug_glGetActiveAttribARB$segment() {
        return glad_debug_glGetActiveAttribARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEATTRIBARBPROC glad_debug_glGetActiveAttribARB
     * }
     */
    public static MemorySegment glad_debug_glGetActiveAttribARB() {
        return glad_debug_glGetActiveAttribARB$constants.SEGMENT.get(glad_debug_glGetActiveAttribARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEATTRIBARBPROC glad_debug_glGetActiveAttribARB
     * }
     */
    public static void glad_debug_glGetActiveAttribARB(MemorySegment varValue) {
        glad_debug_glGetActiveAttribARB$constants.SEGMENT.set(glad_debug_glGetActiveAttribARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetActiveSubroutineName$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetActiveSubroutineName").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVESUBROUTINENAMEPROC glad_glGetActiveSubroutineName
     * }
     */
    public static AddressLayout glad_glGetActiveSubroutineName$layout() {
        return glad_glGetActiveSubroutineName$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVESUBROUTINENAMEPROC glad_glGetActiveSubroutineName
     * }
     */
    public static MemorySegment glad_glGetActiveSubroutineName$segment() {
        return glad_glGetActiveSubroutineName$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVESUBROUTINENAMEPROC glad_glGetActiveSubroutineName
     * }
     */
    public static MemorySegment glad_glGetActiveSubroutineName() {
        return glad_glGetActiveSubroutineName$constants.SEGMENT.get(glad_glGetActiveSubroutineName$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVESUBROUTINENAMEPROC glad_glGetActiveSubroutineName
     * }
     */
    public static void glad_glGetActiveSubroutineName(MemorySegment varValue) {
        glad_glGetActiveSubroutineName$constants.SEGMENT.set(glad_glGetActiveSubroutineName$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetActiveSubroutineName$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetActiveSubroutineName").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVESUBROUTINENAMEPROC glad_debug_glGetActiveSubroutineName
     * }
     */
    public static AddressLayout glad_debug_glGetActiveSubroutineName$layout() {
        return glad_debug_glGetActiveSubroutineName$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVESUBROUTINENAMEPROC glad_debug_glGetActiveSubroutineName
     * }
     */
    public static MemorySegment glad_debug_glGetActiveSubroutineName$segment() {
        return glad_debug_glGetActiveSubroutineName$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVESUBROUTINENAMEPROC glad_debug_glGetActiveSubroutineName
     * }
     */
    public static MemorySegment glad_debug_glGetActiveSubroutineName() {
        return glad_debug_glGetActiveSubroutineName$constants.SEGMENT.get(glad_debug_glGetActiveSubroutineName$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVESUBROUTINENAMEPROC glad_debug_glGetActiveSubroutineName
     * }
     */
    public static void glad_debug_glGetActiveSubroutineName(MemorySegment varValue) {
        glad_debug_glGetActiveSubroutineName$constants.SEGMENT.set(glad_debug_glGetActiveSubroutineName$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetActiveSubroutineUniformName$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetActiveSubroutineUniformName").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC glad_glGetActiveSubroutineUniformName
     * }
     */
    public static AddressLayout glad_glGetActiveSubroutineUniformName$layout() {
        return glad_glGetActiveSubroutineUniformName$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC glad_glGetActiveSubroutineUniformName
     * }
     */
    public static MemorySegment glad_glGetActiveSubroutineUniformName$segment() {
        return glad_glGetActiveSubroutineUniformName$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC glad_glGetActiveSubroutineUniformName
     * }
     */
    public static MemorySegment glad_glGetActiveSubroutineUniformName() {
        return glad_glGetActiveSubroutineUniformName$constants.SEGMENT.get(glad_glGetActiveSubroutineUniformName$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC glad_glGetActiveSubroutineUniformName
     * }
     */
    public static void glad_glGetActiveSubroutineUniformName(MemorySegment varValue) {
        glad_glGetActiveSubroutineUniformName$constants.SEGMENT.set(glad_glGetActiveSubroutineUniformName$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetActiveSubroutineUniformName$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetActiveSubroutineUniformName").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC glad_debug_glGetActiveSubroutineUniformName
     * }
     */
    public static AddressLayout glad_debug_glGetActiveSubroutineUniformName$layout() {
        return glad_debug_glGetActiveSubroutineUniformName$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC glad_debug_glGetActiveSubroutineUniformName
     * }
     */
    public static MemorySegment glad_debug_glGetActiveSubroutineUniformName$segment() {
        return glad_debug_glGetActiveSubroutineUniformName$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC glad_debug_glGetActiveSubroutineUniformName
     * }
     */
    public static MemorySegment glad_debug_glGetActiveSubroutineUniformName() {
        return glad_debug_glGetActiveSubroutineUniformName$constants.SEGMENT.get(glad_debug_glGetActiveSubroutineUniformName$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC glad_debug_glGetActiveSubroutineUniformName
     * }
     */
    public static void glad_debug_glGetActiveSubroutineUniformName(MemorySegment varValue) {
        glad_debug_glGetActiveSubroutineUniformName$constants.SEGMENT.set(glad_debug_glGetActiveSubroutineUniformName$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetActiveSubroutineUniformiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetActiveSubroutineUniformiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC glad_glGetActiveSubroutineUniformiv
     * }
     */
    public static AddressLayout glad_glGetActiveSubroutineUniformiv$layout() {
        return glad_glGetActiveSubroutineUniformiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC glad_glGetActiveSubroutineUniformiv
     * }
     */
    public static MemorySegment glad_glGetActiveSubroutineUniformiv$segment() {
        return glad_glGetActiveSubroutineUniformiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC glad_glGetActiveSubroutineUniformiv
     * }
     */
    public static MemorySegment glad_glGetActiveSubroutineUniformiv() {
        return glad_glGetActiveSubroutineUniformiv$constants.SEGMENT.get(glad_glGetActiveSubroutineUniformiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC glad_glGetActiveSubroutineUniformiv
     * }
     */
    public static void glad_glGetActiveSubroutineUniformiv(MemorySegment varValue) {
        glad_glGetActiveSubroutineUniformiv$constants.SEGMENT.set(glad_glGetActiveSubroutineUniformiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetActiveSubroutineUniformiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetActiveSubroutineUniformiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC glad_debug_glGetActiveSubroutineUniformiv
     * }
     */
    public static AddressLayout glad_debug_glGetActiveSubroutineUniformiv$layout() {
        return glad_debug_glGetActiveSubroutineUniformiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC glad_debug_glGetActiveSubroutineUniformiv
     * }
     */
    public static MemorySegment glad_debug_glGetActiveSubroutineUniformiv$segment() {
        return glad_debug_glGetActiveSubroutineUniformiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC glad_debug_glGetActiveSubroutineUniformiv
     * }
     */
    public static MemorySegment glad_debug_glGetActiveSubroutineUniformiv() {
        return glad_debug_glGetActiveSubroutineUniformiv$constants.SEGMENT.get(glad_debug_glGetActiveSubroutineUniformiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC glad_debug_glGetActiveSubroutineUniformiv
     * }
     */
    public static void glad_debug_glGetActiveSubroutineUniformiv(MemorySegment varValue) {
        glad_debug_glGetActiveSubroutineUniformiv$constants.SEGMENT.set(glad_debug_glGetActiveSubroutineUniformiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetActiveUniform$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetActiveUniform").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEUNIFORMPROC glad_glGetActiveUniform
     * }
     */
    public static AddressLayout glad_glGetActiveUniform$layout() {
        return glad_glGetActiveUniform$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEUNIFORMPROC glad_glGetActiveUniform
     * }
     */
    public static MemorySegment glad_glGetActiveUniform$segment() {
        return glad_glGetActiveUniform$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEUNIFORMPROC glad_glGetActiveUniform
     * }
     */
    public static MemorySegment glad_glGetActiveUniform() {
        return glad_glGetActiveUniform$constants.SEGMENT.get(glad_glGetActiveUniform$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEUNIFORMPROC glad_glGetActiveUniform
     * }
     */
    public static void glad_glGetActiveUniform(MemorySegment varValue) {
        glad_glGetActiveUniform$constants.SEGMENT.set(glad_glGetActiveUniform$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetActiveUniform$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetActiveUniform").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEUNIFORMPROC glad_debug_glGetActiveUniform
     * }
     */
    public static AddressLayout glad_debug_glGetActiveUniform$layout() {
        return glad_debug_glGetActiveUniform$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEUNIFORMPROC glad_debug_glGetActiveUniform
     * }
     */
    public static MemorySegment glad_debug_glGetActiveUniform$segment() {
        return glad_debug_glGetActiveUniform$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEUNIFORMPROC glad_debug_glGetActiveUniform
     * }
     */
    public static MemorySegment glad_debug_glGetActiveUniform() {
        return glad_debug_glGetActiveUniform$constants.SEGMENT.get(glad_debug_glGetActiveUniform$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEUNIFORMPROC glad_debug_glGetActiveUniform
     * }
     */
    public static void glad_debug_glGetActiveUniform(MemorySegment varValue) {
        glad_debug_glGetActiveUniform$constants.SEGMENT.set(glad_debug_glGetActiveUniform$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetActiveUniformARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetActiveUniformARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEUNIFORMARBPROC glad_glGetActiveUniformARB
     * }
     */
    public static AddressLayout glad_glGetActiveUniformARB$layout() {
        return glad_glGetActiveUniformARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEUNIFORMARBPROC glad_glGetActiveUniformARB
     * }
     */
    public static MemorySegment glad_glGetActiveUniformARB$segment() {
        return glad_glGetActiveUniformARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEUNIFORMARBPROC glad_glGetActiveUniformARB
     * }
     */
    public static MemorySegment glad_glGetActiveUniformARB() {
        return glad_glGetActiveUniformARB$constants.SEGMENT.get(glad_glGetActiveUniformARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEUNIFORMARBPROC glad_glGetActiveUniformARB
     * }
     */
    public static void glad_glGetActiveUniformARB(MemorySegment varValue) {
        glad_glGetActiveUniformARB$constants.SEGMENT.set(glad_glGetActiveUniformARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetActiveUniformARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetActiveUniformARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEUNIFORMARBPROC glad_debug_glGetActiveUniformARB
     * }
     */
    public static AddressLayout glad_debug_glGetActiveUniformARB$layout() {
        return glad_debug_glGetActiveUniformARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEUNIFORMARBPROC glad_debug_glGetActiveUniformARB
     * }
     */
    public static MemorySegment glad_debug_glGetActiveUniformARB$segment() {
        return glad_debug_glGetActiveUniformARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEUNIFORMARBPROC glad_debug_glGetActiveUniformARB
     * }
     */
    public static MemorySegment glad_debug_glGetActiveUniformARB() {
        return glad_debug_glGetActiveUniformARB$constants.SEGMENT.get(glad_debug_glGetActiveUniformARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEUNIFORMARBPROC glad_debug_glGetActiveUniformARB
     * }
     */
    public static void glad_debug_glGetActiveUniformARB(MemorySegment varValue) {
        glad_debug_glGetActiveUniformARB$constants.SEGMENT.set(glad_debug_glGetActiveUniformARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetActiveUniformBlockName$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetActiveUniformBlockName").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC glad_glGetActiveUniformBlockName
     * }
     */
    public static AddressLayout glad_glGetActiveUniformBlockName$layout() {
        return glad_glGetActiveUniformBlockName$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC glad_glGetActiveUniformBlockName
     * }
     */
    public static MemorySegment glad_glGetActiveUniformBlockName$segment() {
        return glad_glGetActiveUniformBlockName$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC glad_glGetActiveUniformBlockName
     * }
     */
    public static MemorySegment glad_glGetActiveUniformBlockName() {
        return glad_glGetActiveUniformBlockName$constants.SEGMENT.get(glad_glGetActiveUniformBlockName$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC glad_glGetActiveUniformBlockName
     * }
     */
    public static void glad_glGetActiveUniformBlockName(MemorySegment varValue) {
        glad_glGetActiveUniformBlockName$constants.SEGMENT.set(glad_glGetActiveUniformBlockName$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetActiveUniformBlockName$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetActiveUniformBlockName").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC glad_debug_glGetActiveUniformBlockName
     * }
     */
    public static AddressLayout glad_debug_glGetActiveUniformBlockName$layout() {
        return glad_debug_glGetActiveUniformBlockName$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC glad_debug_glGetActiveUniformBlockName
     * }
     */
    public static MemorySegment glad_debug_glGetActiveUniformBlockName$segment() {
        return glad_debug_glGetActiveUniformBlockName$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC glad_debug_glGetActiveUniformBlockName
     * }
     */
    public static MemorySegment glad_debug_glGetActiveUniformBlockName() {
        return glad_debug_glGetActiveUniformBlockName$constants.SEGMENT.get(glad_debug_glGetActiveUniformBlockName$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC glad_debug_glGetActiveUniformBlockName
     * }
     */
    public static void glad_debug_glGetActiveUniformBlockName(MemorySegment varValue) {
        glad_debug_glGetActiveUniformBlockName$constants.SEGMENT.set(glad_debug_glGetActiveUniformBlockName$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetActiveUniformBlockiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetActiveUniformBlockiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEUNIFORMBLOCKIVPROC glad_glGetActiveUniformBlockiv
     * }
     */
    public static AddressLayout glad_glGetActiveUniformBlockiv$layout() {
        return glad_glGetActiveUniformBlockiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEUNIFORMBLOCKIVPROC glad_glGetActiveUniformBlockiv
     * }
     */
    public static MemorySegment glad_glGetActiveUniformBlockiv$segment() {
        return glad_glGetActiveUniformBlockiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEUNIFORMBLOCKIVPROC glad_glGetActiveUniformBlockiv
     * }
     */
    public static MemorySegment glad_glGetActiveUniformBlockiv() {
        return glad_glGetActiveUniformBlockiv$constants.SEGMENT.get(glad_glGetActiveUniformBlockiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEUNIFORMBLOCKIVPROC glad_glGetActiveUniformBlockiv
     * }
     */
    public static void glad_glGetActiveUniformBlockiv(MemorySegment varValue) {
        glad_glGetActiveUniformBlockiv$constants.SEGMENT.set(glad_glGetActiveUniformBlockiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetActiveUniformBlockiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetActiveUniformBlockiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEUNIFORMBLOCKIVPROC glad_debug_glGetActiveUniformBlockiv
     * }
     */
    public static AddressLayout glad_debug_glGetActiveUniformBlockiv$layout() {
        return glad_debug_glGetActiveUniformBlockiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEUNIFORMBLOCKIVPROC glad_debug_glGetActiveUniformBlockiv
     * }
     */
    public static MemorySegment glad_debug_glGetActiveUniformBlockiv$segment() {
        return glad_debug_glGetActiveUniformBlockiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEUNIFORMBLOCKIVPROC glad_debug_glGetActiveUniformBlockiv
     * }
     */
    public static MemorySegment glad_debug_glGetActiveUniformBlockiv() {
        return glad_debug_glGetActiveUniformBlockiv$constants.SEGMENT.get(glad_debug_glGetActiveUniformBlockiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEUNIFORMBLOCKIVPROC glad_debug_glGetActiveUniformBlockiv
     * }
     */
    public static void glad_debug_glGetActiveUniformBlockiv(MemorySegment varValue) {
        glad_debug_glGetActiveUniformBlockiv$constants.SEGMENT.set(glad_debug_glGetActiveUniformBlockiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetActiveUniformName$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetActiveUniformName").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEUNIFORMNAMEPROC glad_glGetActiveUniformName
     * }
     */
    public static AddressLayout glad_glGetActiveUniformName$layout() {
        return glad_glGetActiveUniformName$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEUNIFORMNAMEPROC glad_glGetActiveUniformName
     * }
     */
    public static MemorySegment glad_glGetActiveUniformName$segment() {
        return glad_glGetActiveUniformName$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEUNIFORMNAMEPROC glad_glGetActiveUniformName
     * }
     */
    public static MemorySegment glad_glGetActiveUniformName() {
        return glad_glGetActiveUniformName$constants.SEGMENT.get(glad_glGetActiveUniformName$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEUNIFORMNAMEPROC glad_glGetActiveUniformName
     * }
     */
    public static void glad_glGetActiveUniformName(MemorySegment varValue) {
        glad_glGetActiveUniformName$constants.SEGMENT.set(glad_glGetActiveUniformName$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetActiveUniformName$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetActiveUniformName").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEUNIFORMNAMEPROC glad_debug_glGetActiveUniformName
     * }
     */
    public static AddressLayout glad_debug_glGetActiveUniformName$layout() {
        return glad_debug_glGetActiveUniformName$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEUNIFORMNAMEPROC glad_debug_glGetActiveUniformName
     * }
     */
    public static MemorySegment glad_debug_glGetActiveUniformName$segment() {
        return glad_debug_glGetActiveUniformName$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEUNIFORMNAMEPROC glad_debug_glGetActiveUniformName
     * }
     */
    public static MemorySegment glad_debug_glGetActiveUniformName() {
        return glad_debug_glGetActiveUniformName$constants.SEGMENT.get(glad_debug_glGetActiveUniformName$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEUNIFORMNAMEPROC glad_debug_glGetActiveUniformName
     * }
     */
    public static void glad_debug_glGetActiveUniformName(MemorySegment varValue) {
        glad_debug_glGetActiveUniformName$constants.SEGMENT.set(glad_debug_glGetActiveUniformName$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetActiveUniformsiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetActiveUniformsiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEUNIFORMSIVPROC glad_glGetActiveUniformsiv
     * }
     */
    public static AddressLayout glad_glGetActiveUniformsiv$layout() {
        return glad_glGetActiveUniformsiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEUNIFORMSIVPROC glad_glGetActiveUniformsiv
     * }
     */
    public static MemorySegment glad_glGetActiveUniformsiv$segment() {
        return glad_glGetActiveUniformsiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEUNIFORMSIVPROC glad_glGetActiveUniformsiv
     * }
     */
    public static MemorySegment glad_glGetActiveUniformsiv() {
        return glad_glGetActiveUniformsiv$constants.SEGMENT.get(glad_glGetActiveUniformsiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEUNIFORMSIVPROC glad_glGetActiveUniformsiv
     * }
     */
    public static void glad_glGetActiveUniformsiv(MemorySegment varValue) {
        glad_glGetActiveUniformsiv$constants.SEGMENT.set(glad_glGetActiveUniformsiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetActiveUniformsiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetActiveUniformsiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEUNIFORMSIVPROC glad_debug_glGetActiveUniformsiv
     * }
     */
    public static AddressLayout glad_debug_glGetActiveUniformsiv$layout() {
        return glad_debug_glGetActiveUniformsiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEUNIFORMSIVPROC glad_debug_glGetActiveUniformsiv
     * }
     */
    public static MemorySegment glad_debug_glGetActiveUniformsiv$segment() {
        return glad_debug_glGetActiveUniformsiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEUNIFORMSIVPROC glad_debug_glGetActiveUniformsiv
     * }
     */
    public static MemorySegment glad_debug_glGetActiveUniformsiv() {
        return glad_debug_glGetActiveUniformsiv$constants.SEGMENT.get(glad_debug_glGetActiveUniformsiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEUNIFORMSIVPROC glad_debug_glGetActiveUniformsiv
     * }
     */
    public static void glad_debug_glGetActiveUniformsiv(MemorySegment varValue) {
        glad_debug_glGetActiveUniformsiv$constants.SEGMENT.set(glad_debug_glGetActiveUniformsiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetActiveVaryingNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetActiveVaryingNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEVARYINGNVPROC glad_glGetActiveVaryingNV
     * }
     */
    public static AddressLayout glad_glGetActiveVaryingNV$layout() {
        return glad_glGetActiveVaryingNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEVARYINGNVPROC glad_glGetActiveVaryingNV
     * }
     */
    public static MemorySegment glad_glGetActiveVaryingNV$segment() {
        return glad_glGetActiveVaryingNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEVARYINGNVPROC glad_glGetActiveVaryingNV
     * }
     */
    public static MemorySegment glad_glGetActiveVaryingNV() {
        return glad_glGetActiveVaryingNV$constants.SEGMENT.get(glad_glGetActiveVaryingNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEVARYINGNVPROC glad_glGetActiveVaryingNV
     * }
     */
    public static void glad_glGetActiveVaryingNV(MemorySegment varValue) {
        glad_glGetActiveVaryingNV$constants.SEGMENT.set(glad_glGetActiveVaryingNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetActiveVaryingNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetActiveVaryingNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEVARYINGNVPROC glad_debug_glGetActiveVaryingNV
     * }
     */
    public static AddressLayout glad_debug_glGetActiveVaryingNV$layout() {
        return glad_debug_glGetActiveVaryingNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEVARYINGNVPROC glad_debug_glGetActiveVaryingNV
     * }
     */
    public static MemorySegment glad_debug_glGetActiveVaryingNV$segment() {
        return glad_debug_glGetActiveVaryingNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEVARYINGNVPROC glad_debug_glGetActiveVaryingNV
     * }
     */
    public static MemorySegment glad_debug_glGetActiveVaryingNV() {
        return glad_debug_glGetActiveVaryingNV$constants.SEGMENT.get(glad_debug_glGetActiveVaryingNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETACTIVEVARYINGNVPROC glad_debug_glGetActiveVaryingNV
     * }
     */
    public static void glad_debug_glGetActiveVaryingNV(MemorySegment varValue) {
        glad_debug_glGetActiveVaryingNV$constants.SEGMENT.set(glad_debug_glGetActiveVaryingNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetAttachedObjectsARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetAttachedObjectsARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETATTACHEDOBJECTSARBPROC glad_glGetAttachedObjectsARB
     * }
     */
    public static AddressLayout glad_glGetAttachedObjectsARB$layout() {
        return glad_glGetAttachedObjectsARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETATTACHEDOBJECTSARBPROC glad_glGetAttachedObjectsARB
     * }
     */
    public static MemorySegment glad_glGetAttachedObjectsARB$segment() {
        return glad_glGetAttachedObjectsARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETATTACHEDOBJECTSARBPROC glad_glGetAttachedObjectsARB
     * }
     */
    public static MemorySegment glad_glGetAttachedObjectsARB() {
        return glad_glGetAttachedObjectsARB$constants.SEGMENT.get(glad_glGetAttachedObjectsARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETATTACHEDOBJECTSARBPROC glad_glGetAttachedObjectsARB
     * }
     */
    public static void glad_glGetAttachedObjectsARB(MemorySegment varValue) {
        glad_glGetAttachedObjectsARB$constants.SEGMENT.set(glad_glGetAttachedObjectsARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetAttachedObjectsARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetAttachedObjectsARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETATTACHEDOBJECTSARBPROC glad_debug_glGetAttachedObjectsARB
     * }
     */
    public static AddressLayout glad_debug_glGetAttachedObjectsARB$layout() {
        return glad_debug_glGetAttachedObjectsARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETATTACHEDOBJECTSARBPROC glad_debug_glGetAttachedObjectsARB
     * }
     */
    public static MemorySegment glad_debug_glGetAttachedObjectsARB$segment() {
        return glad_debug_glGetAttachedObjectsARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETATTACHEDOBJECTSARBPROC glad_debug_glGetAttachedObjectsARB
     * }
     */
    public static MemorySegment glad_debug_glGetAttachedObjectsARB() {
        return glad_debug_glGetAttachedObjectsARB$constants.SEGMENT.get(glad_debug_glGetAttachedObjectsARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETATTACHEDOBJECTSARBPROC glad_debug_glGetAttachedObjectsARB
     * }
     */
    public static void glad_debug_glGetAttachedObjectsARB(MemorySegment varValue) {
        glad_debug_glGetAttachedObjectsARB$constants.SEGMENT.set(glad_debug_glGetAttachedObjectsARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetAttachedShaders$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetAttachedShaders").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETATTACHEDSHADERSPROC glad_glGetAttachedShaders
     * }
     */
    public static AddressLayout glad_glGetAttachedShaders$layout() {
        return glad_glGetAttachedShaders$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETATTACHEDSHADERSPROC glad_glGetAttachedShaders
     * }
     */
    public static MemorySegment glad_glGetAttachedShaders$segment() {
        return glad_glGetAttachedShaders$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETATTACHEDSHADERSPROC glad_glGetAttachedShaders
     * }
     */
    public static MemorySegment glad_glGetAttachedShaders() {
        return glad_glGetAttachedShaders$constants.SEGMENT.get(glad_glGetAttachedShaders$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETATTACHEDSHADERSPROC glad_glGetAttachedShaders
     * }
     */
    public static void glad_glGetAttachedShaders(MemorySegment varValue) {
        glad_glGetAttachedShaders$constants.SEGMENT.set(glad_glGetAttachedShaders$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetAttachedShaders$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetAttachedShaders").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETATTACHEDSHADERSPROC glad_debug_glGetAttachedShaders
     * }
     */
    public static AddressLayout glad_debug_glGetAttachedShaders$layout() {
        return glad_debug_glGetAttachedShaders$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETATTACHEDSHADERSPROC glad_debug_glGetAttachedShaders
     * }
     */
    public static MemorySegment glad_debug_glGetAttachedShaders$segment() {
        return glad_debug_glGetAttachedShaders$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETATTACHEDSHADERSPROC glad_debug_glGetAttachedShaders
     * }
     */
    public static MemorySegment glad_debug_glGetAttachedShaders() {
        return glad_debug_glGetAttachedShaders$constants.SEGMENT.get(glad_debug_glGetAttachedShaders$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETATTACHEDSHADERSPROC glad_debug_glGetAttachedShaders
     * }
     */
    public static void glad_debug_glGetAttachedShaders(MemorySegment varValue) {
        glad_debug_glGetAttachedShaders$constants.SEGMENT.set(glad_debug_glGetAttachedShaders$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetAttribLocation$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetAttribLocation").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETATTRIBLOCATIONPROC glad_glGetAttribLocation
     * }
     */
    public static AddressLayout glad_glGetAttribLocation$layout() {
        return glad_glGetAttribLocation$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETATTRIBLOCATIONPROC glad_glGetAttribLocation
     * }
     */
    public static MemorySegment glad_glGetAttribLocation$segment() {
        return glad_glGetAttribLocation$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETATTRIBLOCATIONPROC glad_glGetAttribLocation
     * }
     */
    public static MemorySegment glad_glGetAttribLocation() {
        return glad_glGetAttribLocation$constants.SEGMENT.get(glad_glGetAttribLocation$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETATTRIBLOCATIONPROC glad_glGetAttribLocation
     * }
     */
    public static void glad_glGetAttribLocation(MemorySegment varValue) {
        glad_glGetAttribLocation$constants.SEGMENT.set(glad_glGetAttribLocation$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetAttribLocation$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetAttribLocation").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETATTRIBLOCATIONPROC glad_debug_glGetAttribLocation
     * }
     */
    public static AddressLayout glad_debug_glGetAttribLocation$layout() {
        return glad_debug_glGetAttribLocation$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETATTRIBLOCATIONPROC glad_debug_glGetAttribLocation
     * }
     */
    public static MemorySegment glad_debug_glGetAttribLocation$segment() {
        return glad_debug_glGetAttribLocation$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETATTRIBLOCATIONPROC glad_debug_glGetAttribLocation
     * }
     */
    public static MemorySegment glad_debug_glGetAttribLocation() {
        return glad_debug_glGetAttribLocation$constants.SEGMENT.get(glad_debug_glGetAttribLocation$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETATTRIBLOCATIONPROC glad_debug_glGetAttribLocation
     * }
     */
    public static void glad_debug_glGetAttribLocation(MemorySegment varValue) {
        glad_debug_glGetAttribLocation$constants.SEGMENT.set(glad_debug_glGetAttribLocation$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetAttribLocationARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetAttribLocationARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETATTRIBLOCATIONARBPROC glad_glGetAttribLocationARB
     * }
     */
    public static AddressLayout glad_glGetAttribLocationARB$layout() {
        return glad_glGetAttribLocationARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETATTRIBLOCATIONARBPROC glad_glGetAttribLocationARB
     * }
     */
    public static MemorySegment glad_glGetAttribLocationARB$segment() {
        return glad_glGetAttribLocationARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETATTRIBLOCATIONARBPROC glad_glGetAttribLocationARB
     * }
     */
    public static MemorySegment glad_glGetAttribLocationARB() {
        return glad_glGetAttribLocationARB$constants.SEGMENT.get(glad_glGetAttribLocationARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETATTRIBLOCATIONARBPROC glad_glGetAttribLocationARB
     * }
     */
    public static void glad_glGetAttribLocationARB(MemorySegment varValue) {
        glad_glGetAttribLocationARB$constants.SEGMENT.set(glad_glGetAttribLocationARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetAttribLocationARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetAttribLocationARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETATTRIBLOCATIONARBPROC glad_debug_glGetAttribLocationARB
     * }
     */
    public static AddressLayout glad_debug_glGetAttribLocationARB$layout() {
        return glad_debug_glGetAttribLocationARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETATTRIBLOCATIONARBPROC glad_debug_glGetAttribLocationARB
     * }
     */
    public static MemorySegment glad_debug_glGetAttribLocationARB$segment() {
        return glad_debug_glGetAttribLocationARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETATTRIBLOCATIONARBPROC glad_debug_glGetAttribLocationARB
     * }
     */
    public static MemorySegment glad_debug_glGetAttribLocationARB() {
        return glad_debug_glGetAttribLocationARB$constants.SEGMENT.get(glad_debug_glGetAttribLocationARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETATTRIBLOCATIONARBPROC glad_debug_glGetAttribLocationARB
     * }
     */
    public static void glad_debug_glGetAttribLocationARB(MemorySegment varValue) {
        glad_debug_glGetAttribLocationARB$constants.SEGMENT.set(glad_debug_glGetAttribLocationARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetBooleanIndexedvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetBooleanIndexedvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBOOLEANINDEXEDVEXTPROC glad_glGetBooleanIndexedvEXT
     * }
     */
    public static AddressLayout glad_glGetBooleanIndexedvEXT$layout() {
        return glad_glGetBooleanIndexedvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBOOLEANINDEXEDVEXTPROC glad_glGetBooleanIndexedvEXT
     * }
     */
    public static MemorySegment glad_glGetBooleanIndexedvEXT$segment() {
        return glad_glGetBooleanIndexedvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBOOLEANINDEXEDVEXTPROC glad_glGetBooleanIndexedvEXT
     * }
     */
    public static MemorySegment glad_glGetBooleanIndexedvEXT() {
        return glad_glGetBooleanIndexedvEXT$constants.SEGMENT.get(glad_glGetBooleanIndexedvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBOOLEANINDEXEDVEXTPROC glad_glGetBooleanIndexedvEXT
     * }
     */
    public static void glad_glGetBooleanIndexedvEXT(MemorySegment varValue) {
        glad_glGetBooleanIndexedvEXT$constants.SEGMENT.set(glad_glGetBooleanIndexedvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetBooleanIndexedvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetBooleanIndexedvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBOOLEANINDEXEDVEXTPROC glad_debug_glGetBooleanIndexedvEXT
     * }
     */
    public static AddressLayout glad_debug_glGetBooleanIndexedvEXT$layout() {
        return glad_debug_glGetBooleanIndexedvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBOOLEANINDEXEDVEXTPROC glad_debug_glGetBooleanIndexedvEXT
     * }
     */
    public static MemorySegment glad_debug_glGetBooleanIndexedvEXT$segment() {
        return glad_debug_glGetBooleanIndexedvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBOOLEANINDEXEDVEXTPROC glad_debug_glGetBooleanIndexedvEXT
     * }
     */
    public static MemorySegment glad_debug_glGetBooleanIndexedvEXT() {
        return glad_debug_glGetBooleanIndexedvEXT$constants.SEGMENT.get(glad_debug_glGetBooleanIndexedvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBOOLEANINDEXEDVEXTPROC glad_debug_glGetBooleanIndexedvEXT
     * }
     */
    public static void glad_debug_glGetBooleanIndexedvEXT(MemorySegment varValue) {
        glad_debug_glGetBooleanIndexedvEXT$constants.SEGMENT.set(glad_debug_glGetBooleanIndexedvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetBooleani_v$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetBooleani_v").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBOOLEANI_VPROC glad_glGetBooleani_v
     * }
     */
    public static AddressLayout glad_glGetBooleani_v$layout() {
        return glad_glGetBooleani_v$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBOOLEANI_VPROC glad_glGetBooleani_v
     * }
     */
    public static MemorySegment glad_glGetBooleani_v$segment() {
        return glad_glGetBooleani_v$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBOOLEANI_VPROC glad_glGetBooleani_v
     * }
     */
    public static MemorySegment glad_glGetBooleani_v() {
        return glad_glGetBooleani_v$constants.SEGMENT.get(glad_glGetBooleani_v$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBOOLEANI_VPROC glad_glGetBooleani_v
     * }
     */
    public static void glad_glGetBooleani_v(MemorySegment varValue) {
        glad_glGetBooleani_v$constants.SEGMENT.set(glad_glGetBooleani_v$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetBooleani_v$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetBooleani_v").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBOOLEANI_VPROC glad_debug_glGetBooleani_v
     * }
     */
    public static AddressLayout glad_debug_glGetBooleani_v$layout() {
        return glad_debug_glGetBooleani_v$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBOOLEANI_VPROC glad_debug_glGetBooleani_v
     * }
     */
    public static MemorySegment glad_debug_glGetBooleani_v$segment() {
        return glad_debug_glGetBooleani_v$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBOOLEANI_VPROC glad_debug_glGetBooleani_v
     * }
     */
    public static MemorySegment glad_debug_glGetBooleani_v() {
        return glad_debug_glGetBooleani_v$constants.SEGMENT.get(glad_debug_glGetBooleani_v$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBOOLEANI_VPROC glad_debug_glGetBooleani_v
     * }
     */
    public static void glad_debug_glGetBooleani_v(MemorySegment varValue) {
        glad_debug_glGetBooleani_v$constants.SEGMENT.set(glad_debug_glGetBooleani_v$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetBooleanv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetBooleanv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBOOLEANVPROC glad_glGetBooleanv
     * }
     */
    public static AddressLayout glad_glGetBooleanv$layout() {
        return glad_glGetBooleanv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBOOLEANVPROC glad_glGetBooleanv
     * }
     */
    public static MemorySegment glad_glGetBooleanv$segment() {
        return glad_glGetBooleanv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBOOLEANVPROC glad_glGetBooleanv
     * }
     */
    public static MemorySegment glad_glGetBooleanv() {
        return glad_glGetBooleanv$constants.SEGMENT.get(glad_glGetBooleanv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBOOLEANVPROC glad_glGetBooleanv
     * }
     */
    public static void glad_glGetBooleanv(MemorySegment varValue) {
        glad_glGetBooleanv$constants.SEGMENT.set(glad_glGetBooleanv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetBooleanv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetBooleanv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBOOLEANVPROC glad_debug_glGetBooleanv
     * }
     */
    public static AddressLayout glad_debug_glGetBooleanv$layout() {
        return glad_debug_glGetBooleanv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBOOLEANVPROC glad_debug_glGetBooleanv
     * }
     */
    public static MemorySegment glad_debug_glGetBooleanv$segment() {
        return glad_debug_glGetBooleanv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBOOLEANVPROC glad_debug_glGetBooleanv
     * }
     */
    public static MemorySegment glad_debug_glGetBooleanv() {
        return glad_debug_glGetBooleanv$constants.SEGMENT.get(glad_debug_glGetBooleanv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBOOLEANVPROC glad_debug_glGetBooleanv
     * }
     */
    public static void glad_debug_glGetBooleanv(MemorySegment varValue) {
        glad_debug_glGetBooleanv$constants.SEGMENT.set(glad_debug_glGetBooleanv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetBufferParameteri64v$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetBufferParameteri64v").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERPARAMETERI64VPROC glad_glGetBufferParameteri64v
     * }
     */
    public static AddressLayout glad_glGetBufferParameteri64v$layout() {
        return glad_glGetBufferParameteri64v$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERPARAMETERI64VPROC glad_glGetBufferParameteri64v
     * }
     */
    public static MemorySegment glad_glGetBufferParameteri64v$segment() {
        return glad_glGetBufferParameteri64v$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERPARAMETERI64VPROC glad_glGetBufferParameteri64v
     * }
     */
    public static MemorySegment glad_glGetBufferParameteri64v() {
        return glad_glGetBufferParameteri64v$constants.SEGMENT.get(glad_glGetBufferParameteri64v$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERPARAMETERI64VPROC glad_glGetBufferParameteri64v
     * }
     */
    public static void glad_glGetBufferParameteri64v(MemorySegment varValue) {
        glad_glGetBufferParameteri64v$constants.SEGMENT.set(glad_glGetBufferParameteri64v$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetBufferParameteri64v$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetBufferParameteri64v").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERPARAMETERI64VPROC glad_debug_glGetBufferParameteri64v
     * }
     */
    public static AddressLayout glad_debug_glGetBufferParameteri64v$layout() {
        return glad_debug_glGetBufferParameteri64v$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERPARAMETERI64VPROC glad_debug_glGetBufferParameteri64v
     * }
     */
    public static MemorySegment glad_debug_glGetBufferParameteri64v$segment() {
        return glad_debug_glGetBufferParameteri64v$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERPARAMETERI64VPROC glad_debug_glGetBufferParameteri64v
     * }
     */
    public static MemorySegment glad_debug_glGetBufferParameteri64v() {
        return glad_debug_glGetBufferParameteri64v$constants.SEGMENT.get(glad_debug_glGetBufferParameteri64v$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERPARAMETERI64VPROC glad_debug_glGetBufferParameteri64v
     * }
     */
    public static void glad_debug_glGetBufferParameteri64v(MemorySegment varValue) {
        glad_debug_glGetBufferParameteri64v$constants.SEGMENT.set(glad_debug_glGetBufferParameteri64v$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetBufferParameteriv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetBufferParameteriv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERPARAMETERIVPROC glad_glGetBufferParameteriv
     * }
     */
    public static AddressLayout glad_glGetBufferParameteriv$layout() {
        return glad_glGetBufferParameteriv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERPARAMETERIVPROC glad_glGetBufferParameteriv
     * }
     */
    public static MemorySegment glad_glGetBufferParameteriv$segment() {
        return glad_glGetBufferParameteriv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERPARAMETERIVPROC glad_glGetBufferParameteriv
     * }
     */
    public static MemorySegment glad_glGetBufferParameteriv() {
        return glad_glGetBufferParameteriv$constants.SEGMENT.get(glad_glGetBufferParameteriv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERPARAMETERIVPROC glad_glGetBufferParameteriv
     * }
     */
    public static void glad_glGetBufferParameteriv(MemorySegment varValue) {
        glad_glGetBufferParameteriv$constants.SEGMENT.set(glad_glGetBufferParameteriv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetBufferParameteriv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetBufferParameteriv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERPARAMETERIVPROC glad_debug_glGetBufferParameteriv
     * }
     */
    public static AddressLayout glad_debug_glGetBufferParameteriv$layout() {
        return glad_debug_glGetBufferParameteriv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERPARAMETERIVPROC glad_debug_glGetBufferParameteriv
     * }
     */
    public static MemorySegment glad_debug_glGetBufferParameteriv$segment() {
        return glad_debug_glGetBufferParameteriv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERPARAMETERIVPROC glad_debug_glGetBufferParameteriv
     * }
     */
    public static MemorySegment glad_debug_glGetBufferParameteriv() {
        return glad_debug_glGetBufferParameteriv$constants.SEGMENT.get(glad_debug_glGetBufferParameteriv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERPARAMETERIVPROC glad_debug_glGetBufferParameteriv
     * }
     */
    public static void glad_debug_glGetBufferParameteriv(MemorySegment varValue) {
        glad_debug_glGetBufferParameteriv$constants.SEGMENT.set(glad_debug_glGetBufferParameteriv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetBufferParameterivARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetBufferParameterivARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERPARAMETERIVARBPROC glad_glGetBufferParameterivARB
     * }
     */
    public static AddressLayout glad_glGetBufferParameterivARB$layout() {
        return glad_glGetBufferParameterivARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERPARAMETERIVARBPROC glad_glGetBufferParameterivARB
     * }
     */
    public static MemorySegment glad_glGetBufferParameterivARB$segment() {
        return glad_glGetBufferParameterivARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERPARAMETERIVARBPROC glad_glGetBufferParameterivARB
     * }
     */
    public static MemorySegment glad_glGetBufferParameterivARB() {
        return glad_glGetBufferParameterivARB$constants.SEGMENT.get(glad_glGetBufferParameterivARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERPARAMETERIVARBPROC glad_glGetBufferParameterivARB
     * }
     */
    public static void glad_glGetBufferParameterivARB(MemorySegment varValue) {
        glad_glGetBufferParameterivARB$constants.SEGMENT.set(glad_glGetBufferParameterivARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetBufferParameterivARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetBufferParameterivARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERPARAMETERIVARBPROC glad_debug_glGetBufferParameterivARB
     * }
     */
    public static AddressLayout glad_debug_glGetBufferParameterivARB$layout() {
        return glad_debug_glGetBufferParameterivARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERPARAMETERIVARBPROC glad_debug_glGetBufferParameterivARB
     * }
     */
    public static MemorySegment glad_debug_glGetBufferParameterivARB$segment() {
        return glad_debug_glGetBufferParameterivARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERPARAMETERIVARBPROC glad_debug_glGetBufferParameterivARB
     * }
     */
    public static MemorySegment glad_debug_glGetBufferParameterivARB() {
        return glad_debug_glGetBufferParameterivARB$constants.SEGMENT.get(glad_debug_glGetBufferParameterivARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERPARAMETERIVARBPROC glad_debug_glGetBufferParameterivARB
     * }
     */
    public static void glad_debug_glGetBufferParameterivARB(MemorySegment varValue) {
        glad_debug_glGetBufferParameterivARB$constants.SEGMENT.set(glad_debug_glGetBufferParameterivARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetBufferPointerv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetBufferPointerv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERPOINTERVPROC glad_glGetBufferPointerv
     * }
     */
    public static AddressLayout glad_glGetBufferPointerv$layout() {
        return glad_glGetBufferPointerv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERPOINTERVPROC glad_glGetBufferPointerv
     * }
     */
    public static MemorySegment glad_glGetBufferPointerv$segment() {
        return glad_glGetBufferPointerv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERPOINTERVPROC glad_glGetBufferPointerv
     * }
     */
    public static MemorySegment glad_glGetBufferPointerv() {
        return glad_glGetBufferPointerv$constants.SEGMENT.get(glad_glGetBufferPointerv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERPOINTERVPROC glad_glGetBufferPointerv
     * }
     */
    public static void glad_glGetBufferPointerv(MemorySegment varValue) {
        glad_glGetBufferPointerv$constants.SEGMENT.set(glad_glGetBufferPointerv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetBufferPointerv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetBufferPointerv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERPOINTERVPROC glad_debug_glGetBufferPointerv
     * }
     */
    public static AddressLayout glad_debug_glGetBufferPointerv$layout() {
        return glad_debug_glGetBufferPointerv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERPOINTERVPROC glad_debug_glGetBufferPointerv
     * }
     */
    public static MemorySegment glad_debug_glGetBufferPointerv$segment() {
        return glad_debug_glGetBufferPointerv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERPOINTERVPROC glad_debug_glGetBufferPointerv
     * }
     */
    public static MemorySegment glad_debug_glGetBufferPointerv() {
        return glad_debug_glGetBufferPointerv$constants.SEGMENT.get(glad_debug_glGetBufferPointerv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERPOINTERVPROC glad_debug_glGetBufferPointerv
     * }
     */
    public static void glad_debug_glGetBufferPointerv(MemorySegment varValue) {
        glad_debug_glGetBufferPointerv$constants.SEGMENT.set(glad_debug_glGetBufferPointerv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetBufferPointervARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetBufferPointervARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERPOINTERVARBPROC glad_glGetBufferPointervARB
     * }
     */
    public static AddressLayout glad_glGetBufferPointervARB$layout() {
        return glad_glGetBufferPointervARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERPOINTERVARBPROC glad_glGetBufferPointervARB
     * }
     */
    public static MemorySegment glad_glGetBufferPointervARB$segment() {
        return glad_glGetBufferPointervARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERPOINTERVARBPROC glad_glGetBufferPointervARB
     * }
     */
    public static MemorySegment glad_glGetBufferPointervARB() {
        return glad_glGetBufferPointervARB$constants.SEGMENT.get(glad_glGetBufferPointervARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERPOINTERVARBPROC glad_glGetBufferPointervARB
     * }
     */
    public static void glad_glGetBufferPointervARB(MemorySegment varValue) {
        glad_glGetBufferPointervARB$constants.SEGMENT.set(glad_glGetBufferPointervARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetBufferPointervARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetBufferPointervARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERPOINTERVARBPROC glad_debug_glGetBufferPointervARB
     * }
     */
    public static AddressLayout glad_debug_glGetBufferPointervARB$layout() {
        return glad_debug_glGetBufferPointervARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERPOINTERVARBPROC glad_debug_glGetBufferPointervARB
     * }
     */
    public static MemorySegment glad_debug_glGetBufferPointervARB$segment() {
        return glad_debug_glGetBufferPointervARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERPOINTERVARBPROC glad_debug_glGetBufferPointervARB
     * }
     */
    public static MemorySegment glad_debug_glGetBufferPointervARB() {
        return glad_debug_glGetBufferPointervARB$constants.SEGMENT.get(glad_debug_glGetBufferPointervARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERPOINTERVARBPROC glad_debug_glGetBufferPointervARB
     * }
     */
    public static void glad_debug_glGetBufferPointervARB(MemorySegment varValue) {
        glad_debug_glGetBufferPointervARB$constants.SEGMENT.set(glad_debug_glGetBufferPointervARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetBufferSubData$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetBufferSubData").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERSUBDATAPROC glad_glGetBufferSubData
     * }
     */
    public static AddressLayout glad_glGetBufferSubData$layout() {
        return glad_glGetBufferSubData$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERSUBDATAPROC glad_glGetBufferSubData
     * }
     */
    public static MemorySegment glad_glGetBufferSubData$segment() {
        return glad_glGetBufferSubData$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERSUBDATAPROC glad_glGetBufferSubData
     * }
     */
    public static MemorySegment glad_glGetBufferSubData() {
        return glad_glGetBufferSubData$constants.SEGMENT.get(glad_glGetBufferSubData$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERSUBDATAPROC glad_glGetBufferSubData
     * }
     */
    public static void glad_glGetBufferSubData(MemorySegment varValue) {
        glad_glGetBufferSubData$constants.SEGMENT.set(glad_glGetBufferSubData$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetBufferSubData$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetBufferSubData").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERSUBDATAPROC glad_debug_glGetBufferSubData
     * }
     */
    public static AddressLayout glad_debug_glGetBufferSubData$layout() {
        return glad_debug_glGetBufferSubData$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERSUBDATAPROC glad_debug_glGetBufferSubData
     * }
     */
    public static MemorySegment glad_debug_glGetBufferSubData$segment() {
        return glad_debug_glGetBufferSubData$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERSUBDATAPROC glad_debug_glGetBufferSubData
     * }
     */
    public static MemorySegment glad_debug_glGetBufferSubData() {
        return glad_debug_glGetBufferSubData$constants.SEGMENT.get(glad_debug_glGetBufferSubData$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERSUBDATAPROC glad_debug_glGetBufferSubData
     * }
     */
    public static void glad_debug_glGetBufferSubData(MemorySegment varValue) {
        glad_debug_glGetBufferSubData$constants.SEGMENT.set(glad_debug_glGetBufferSubData$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetBufferSubDataARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetBufferSubDataARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERSUBDATAARBPROC glad_glGetBufferSubDataARB
     * }
     */
    public static AddressLayout glad_glGetBufferSubDataARB$layout() {
        return glad_glGetBufferSubDataARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERSUBDATAARBPROC glad_glGetBufferSubDataARB
     * }
     */
    public static MemorySegment glad_glGetBufferSubDataARB$segment() {
        return glad_glGetBufferSubDataARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERSUBDATAARBPROC glad_glGetBufferSubDataARB
     * }
     */
    public static MemorySegment glad_glGetBufferSubDataARB() {
        return glad_glGetBufferSubDataARB$constants.SEGMENT.get(glad_glGetBufferSubDataARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERSUBDATAARBPROC glad_glGetBufferSubDataARB
     * }
     */
    public static void glad_glGetBufferSubDataARB(MemorySegment varValue) {
        glad_glGetBufferSubDataARB$constants.SEGMENT.set(glad_glGetBufferSubDataARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetBufferSubDataARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetBufferSubDataARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERSUBDATAARBPROC glad_debug_glGetBufferSubDataARB
     * }
     */
    public static AddressLayout glad_debug_glGetBufferSubDataARB$layout() {
        return glad_debug_glGetBufferSubDataARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERSUBDATAARBPROC glad_debug_glGetBufferSubDataARB
     * }
     */
    public static MemorySegment glad_debug_glGetBufferSubDataARB$segment() {
        return glad_debug_glGetBufferSubDataARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERSUBDATAARBPROC glad_debug_glGetBufferSubDataARB
     * }
     */
    public static MemorySegment glad_debug_glGetBufferSubDataARB() {
        return glad_debug_glGetBufferSubDataARB$constants.SEGMENT.get(glad_debug_glGetBufferSubDataARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETBUFFERSUBDATAARBPROC glad_debug_glGetBufferSubDataARB
     * }
     */
    public static void glad_debug_glGetBufferSubDataARB(MemorySegment varValue) {
        glad_debug_glGetBufferSubDataARB$constants.SEGMENT.set(glad_debug_glGetBufferSubDataARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetClipPlane$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetClipPlane").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCLIPPLANEPROC glad_glGetClipPlane
     * }
     */
    public static AddressLayout glad_glGetClipPlane$layout() {
        return glad_glGetClipPlane$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCLIPPLANEPROC glad_glGetClipPlane
     * }
     */
    public static MemorySegment glad_glGetClipPlane$segment() {
        return glad_glGetClipPlane$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCLIPPLANEPROC glad_glGetClipPlane
     * }
     */
    public static MemorySegment glad_glGetClipPlane() {
        return glad_glGetClipPlane$constants.SEGMENT.get(glad_glGetClipPlane$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCLIPPLANEPROC glad_glGetClipPlane
     * }
     */
    public static void glad_glGetClipPlane(MemorySegment varValue) {
        glad_glGetClipPlane$constants.SEGMENT.set(glad_glGetClipPlane$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetClipPlane$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetClipPlane").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCLIPPLANEPROC glad_debug_glGetClipPlane
     * }
     */
    public static AddressLayout glad_debug_glGetClipPlane$layout() {
        return glad_debug_glGetClipPlane$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCLIPPLANEPROC glad_debug_glGetClipPlane
     * }
     */
    public static MemorySegment glad_debug_glGetClipPlane$segment() {
        return glad_debug_glGetClipPlane$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCLIPPLANEPROC glad_debug_glGetClipPlane
     * }
     */
    public static MemorySegment glad_debug_glGetClipPlane() {
        return glad_debug_glGetClipPlane$constants.SEGMENT.get(glad_debug_glGetClipPlane$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCLIPPLANEPROC glad_debug_glGetClipPlane
     * }
     */
    public static void glad_debug_glGetClipPlane(MemorySegment varValue) {
        glad_debug_glGetClipPlane$constants.SEGMENT.set(glad_debug_glGetClipPlane$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetClipPlanefOES$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetClipPlanefOES").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCLIPPLANEFOESPROC glad_glGetClipPlanefOES
     * }
     */
    public static AddressLayout glad_glGetClipPlanefOES$layout() {
        return glad_glGetClipPlanefOES$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCLIPPLANEFOESPROC glad_glGetClipPlanefOES
     * }
     */
    public static MemorySegment glad_glGetClipPlanefOES$segment() {
        return glad_glGetClipPlanefOES$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCLIPPLANEFOESPROC glad_glGetClipPlanefOES
     * }
     */
    public static MemorySegment glad_glGetClipPlanefOES() {
        return glad_glGetClipPlanefOES$constants.SEGMENT.get(glad_glGetClipPlanefOES$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCLIPPLANEFOESPROC glad_glGetClipPlanefOES
     * }
     */
    public static void glad_glGetClipPlanefOES(MemorySegment varValue) {
        glad_glGetClipPlanefOES$constants.SEGMENT.set(glad_glGetClipPlanefOES$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetClipPlanefOES$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetClipPlanefOES").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCLIPPLANEFOESPROC glad_debug_glGetClipPlanefOES
     * }
     */
    public static AddressLayout glad_debug_glGetClipPlanefOES$layout() {
        return glad_debug_glGetClipPlanefOES$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCLIPPLANEFOESPROC glad_debug_glGetClipPlanefOES
     * }
     */
    public static MemorySegment glad_debug_glGetClipPlanefOES$segment() {
        return glad_debug_glGetClipPlanefOES$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCLIPPLANEFOESPROC glad_debug_glGetClipPlanefOES
     * }
     */
    public static MemorySegment glad_debug_glGetClipPlanefOES() {
        return glad_debug_glGetClipPlanefOES$constants.SEGMENT.get(glad_debug_glGetClipPlanefOES$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCLIPPLANEFOESPROC glad_debug_glGetClipPlanefOES
     * }
     */
    public static void glad_debug_glGetClipPlanefOES(MemorySegment varValue) {
        glad_debug_glGetClipPlanefOES$constants.SEGMENT.set(glad_debug_glGetClipPlanefOES$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetColorTable$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetColorTable").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOLORTABLEPROC glad_glGetColorTable
     * }
     */
    public static AddressLayout glad_glGetColorTable$layout() {
        return glad_glGetColorTable$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOLORTABLEPROC glad_glGetColorTable
     * }
     */
    public static MemorySegment glad_glGetColorTable$segment() {
        return glad_glGetColorTable$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOLORTABLEPROC glad_glGetColorTable
     * }
     */
    public static MemorySegment glad_glGetColorTable() {
        return glad_glGetColorTable$constants.SEGMENT.get(glad_glGetColorTable$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOLORTABLEPROC glad_glGetColorTable
     * }
     */
    public static void glad_glGetColorTable(MemorySegment varValue) {
        glad_glGetColorTable$constants.SEGMENT.set(glad_glGetColorTable$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetColorTable$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetColorTable").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOLORTABLEPROC glad_debug_glGetColorTable
     * }
     */
    public static AddressLayout glad_debug_glGetColorTable$layout() {
        return glad_debug_glGetColorTable$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOLORTABLEPROC glad_debug_glGetColorTable
     * }
     */
    public static MemorySegment glad_debug_glGetColorTable$segment() {
        return glad_debug_glGetColorTable$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOLORTABLEPROC glad_debug_glGetColorTable
     * }
     */
    public static MemorySegment glad_debug_glGetColorTable() {
        return glad_debug_glGetColorTable$constants.SEGMENT.get(glad_debug_glGetColorTable$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOLORTABLEPROC glad_debug_glGetColorTable
     * }
     */
    public static void glad_debug_glGetColorTable(MemorySegment varValue) {
        glad_debug_glGetColorTable$constants.SEGMENT.set(glad_debug_glGetColorTable$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetColorTableParameterfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetColorTableParameterfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOLORTABLEPARAMETERFVPROC glad_glGetColorTableParameterfv
     * }
     */
    public static AddressLayout glad_glGetColorTableParameterfv$layout() {
        return glad_glGetColorTableParameterfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOLORTABLEPARAMETERFVPROC glad_glGetColorTableParameterfv
     * }
     */
    public static MemorySegment glad_glGetColorTableParameterfv$segment() {
        return glad_glGetColorTableParameterfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOLORTABLEPARAMETERFVPROC glad_glGetColorTableParameterfv
     * }
     */
    public static MemorySegment glad_glGetColorTableParameterfv() {
        return glad_glGetColorTableParameterfv$constants.SEGMENT.get(glad_glGetColorTableParameterfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOLORTABLEPARAMETERFVPROC glad_glGetColorTableParameterfv
     * }
     */
    public static void glad_glGetColorTableParameterfv(MemorySegment varValue) {
        glad_glGetColorTableParameterfv$constants.SEGMENT.set(glad_glGetColorTableParameterfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetColorTableParameterfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetColorTableParameterfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOLORTABLEPARAMETERFVPROC glad_debug_glGetColorTableParameterfv
     * }
     */
    public static AddressLayout glad_debug_glGetColorTableParameterfv$layout() {
        return glad_debug_glGetColorTableParameterfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOLORTABLEPARAMETERFVPROC glad_debug_glGetColorTableParameterfv
     * }
     */
    public static MemorySegment glad_debug_glGetColorTableParameterfv$segment() {
        return glad_debug_glGetColorTableParameterfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOLORTABLEPARAMETERFVPROC glad_debug_glGetColorTableParameterfv
     * }
     */
    public static MemorySegment glad_debug_glGetColorTableParameterfv() {
        return glad_debug_glGetColorTableParameterfv$constants.SEGMENT.get(glad_debug_glGetColorTableParameterfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOLORTABLEPARAMETERFVPROC glad_debug_glGetColorTableParameterfv
     * }
     */
    public static void glad_debug_glGetColorTableParameterfv(MemorySegment varValue) {
        glad_debug_glGetColorTableParameterfv$constants.SEGMENT.set(glad_debug_glGetColorTableParameterfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetColorTableParameteriv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetColorTableParameteriv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOLORTABLEPARAMETERIVPROC glad_glGetColorTableParameteriv
     * }
     */
    public static AddressLayout glad_glGetColorTableParameteriv$layout() {
        return glad_glGetColorTableParameteriv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOLORTABLEPARAMETERIVPROC glad_glGetColorTableParameteriv
     * }
     */
    public static MemorySegment glad_glGetColorTableParameteriv$segment() {
        return glad_glGetColorTableParameteriv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOLORTABLEPARAMETERIVPROC glad_glGetColorTableParameteriv
     * }
     */
    public static MemorySegment glad_glGetColorTableParameteriv() {
        return glad_glGetColorTableParameteriv$constants.SEGMENT.get(glad_glGetColorTableParameteriv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOLORTABLEPARAMETERIVPROC glad_glGetColorTableParameteriv
     * }
     */
    public static void glad_glGetColorTableParameteriv(MemorySegment varValue) {
        glad_glGetColorTableParameteriv$constants.SEGMENT.set(glad_glGetColorTableParameteriv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetColorTableParameteriv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetColorTableParameteriv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOLORTABLEPARAMETERIVPROC glad_debug_glGetColorTableParameteriv
     * }
     */
    public static AddressLayout glad_debug_glGetColorTableParameteriv$layout() {
        return glad_debug_glGetColorTableParameteriv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOLORTABLEPARAMETERIVPROC glad_debug_glGetColorTableParameteriv
     * }
     */
    public static MemorySegment glad_debug_glGetColorTableParameteriv$segment() {
        return glad_debug_glGetColorTableParameteriv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOLORTABLEPARAMETERIVPROC glad_debug_glGetColorTableParameteriv
     * }
     */
    public static MemorySegment glad_debug_glGetColorTableParameteriv() {
        return glad_debug_glGetColorTableParameteriv$constants.SEGMENT.get(glad_debug_glGetColorTableParameteriv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOLORTABLEPARAMETERIVPROC glad_debug_glGetColorTableParameteriv
     * }
     */
    public static void glad_debug_glGetColorTableParameteriv(MemorySegment varValue) {
        glad_debug_glGetColorTableParameteriv$constants.SEGMENT.set(glad_debug_glGetColorTableParameteriv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetCompressedMultiTexImageEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetCompressedMultiTexImageEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC glad_glGetCompressedMultiTexImageEXT
     * }
     */
    public static AddressLayout glad_glGetCompressedMultiTexImageEXT$layout() {
        return glad_glGetCompressedMultiTexImageEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC glad_glGetCompressedMultiTexImageEXT
     * }
     */
    public static MemorySegment glad_glGetCompressedMultiTexImageEXT$segment() {
        return glad_glGetCompressedMultiTexImageEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC glad_glGetCompressedMultiTexImageEXT
     * }
     */
    public static MemorySegment glad_glGetCompressedMultiTexImageEXT() {
        return glad_glGetCompressedMultiTexImageEXT$constants.SEGMENT.get(glad_glGetCompressedMultiTexImageEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC glad_glGetCompressedMultiTexImageEXT
     * }
     */
    public static void glad_glGetCompressedMultiTexImageEXT(MemorySegment varValue) {
        glad_glGetCompressedMultiTexImageEXT$constants.SEGMENT.set(glad_glGetCompressedMultiTexImageEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetCompressedMultiTexImageEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetCompressedMultiTexImageEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC glad_debug_glGetCompressedMultiTexImageEXT
     * }
     */
    public static AddressLayout glad_debug_glGetCompressedMultiTexImageEXT$layout() {
        return glad_debug_glGetCompressedMultiTexImageEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC glad_debug_glGetCompressedMultiTexImageEXT
     * }
     */
    public static MemorySegment glad_debug_glGetCompressedMultiTexImageEXT$segment() {
        return glad_debug_glGetCompressedMultiTexImageEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC glad_debug_glGetCompressedMultiTexImageEXT
     * }
     */
    public static MemorySegment glad_debug_glGetCompressedMultiTexImageEXT() {
        return glad_debug_glGetCompressedMultiTexImageEXT$constants.SEGMENT.get(glad_debug_glGetCompressedMultiTexImageEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC glad_debug_glGetCompressedMultiTexImageEXT
     * }
     */
    public static void glad_debug_glGetCompressedMultiTexImageEXT(MemorySegment varValue) {
        glad_debug_glGetCompressedMultiTexImageEXT$constants.SEGMENT.set(glad_debug_glGetCompressedMultiTexImageEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetCompressedTexImage$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetCompressedTexImage").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOMPRESSEDTEXIMAGEPROC glad_glGetCompressedTexImage
     * }
     */
    public static AddressLayout glad_glGetCompressedTexImage$layout() {
        return glad_glGetCompressedTexImage$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOMPRESSEDTEXIMAGEPROC glad_glGetCompressedTexImage
     * }
     */
    public static MemorySegment glad_glGetCompressedTexImage$segment() {
        return glad_glGetCompressedTexImage$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOMPRESSEDTEXIMAGEPROC glad_glGetCompressedTexImage
     * }
     */
    public static MemorySegment glad_glGetCompressedTexImage() {
        return glad_glGetCompressedTexImage$constants.SEGMENT.get(glad_glGetCompressedTexImage$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOMPRESSEDTEXIMAGEPROC glad_glGetCompressedTexImage
     * }
     */
    public static void glad_glGetCompressedTexImage(MemorySegment varValue) {
        glad_glGetCompressedTexImage$constants.SEGMENT.set(glad_glGetCompressedTexImage$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetCompressedTexImage$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetCompressedTexImage").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOMPRESSEDTEXIMAGEPROC glad_debug_glGetCompressedTexImage
     * }
     */
    public static AddressLayout glad_debug_glGetCompressedTexImage$layout() {
        return glad_debug_glGetCompressedTexImage$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOMPRESSEDTEXIMAGEPROC glad_debug_glGetCompressedTexImage
     * }
     */
    public static MemorySegment glad_debug_glGetCompressedTexImage$segment() {
        return glad_debug_glGetCompressedTexImage$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOMPRESSEDTEXIMAGEPROC glad_debug_glGetCompressedTexImage
     * }
     */
    public static MemorySegment glad_debug_glGetCompressedTexImage() {
        return glad_debug_glGetCompressedTexImage$constants.SEGMENT.get(glad_debug_glGetCompressedTexImage$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOMPRESSEDTEXIMAGEPROC glad_debug_glGetCompressedTexImage
     * }
     */
    public static void glad_debug_glGetCompressedTexImage(MemorySegment varValue) {
        glad_debug_glGetCompressedTexImage$constants.SEGMENT.set(glad_debug_glGetCompressedTexImage$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetCompressedTexImageARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetCompressedTexImageARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOMPRESSEDTEXIMAGEARBPROC glad_glGetCompressedTexImageARB
     * }
     */
    public static AddressLayout glad_glGetCompressedTexImageARB$layout() {
        return glad_glGetCompressedTexImageARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOMPRESSEDTEXIMAGEARBPROC glad_glGetCompressedTexImageARB
     * }
     */
    public static MemorySegment glad_glGetCompressedTexImageARB$segment() {
        return glad_glGetCompressedTexImageARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOMPRESSEDTEXIMAGEARBPROC glad_glGetCompressedTexImageARB
     * }
     */
    public static MemorySegment glad_glGetCompressedTexImageARB() {
        return glad_glGetCompressedTexImageARB$constants.SEGMENT.get(glad_glGetCompressedTexImageARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOMPRESSEDTEXIMAGEARBPROC glad_glGetCompressedTexImageARB
     * }
     */
    public static void glad_glGetCompressedTexImageARB(MemorySegment varValue) {
        glad_glGetCompressedTexImageARB$constants.SEGMENT.set(glad_glGetCompressedTexImageARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetCompressedTexImageARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetCompressedTexImageARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOMPRESSEDTEXIMAGEARBPROC glad_debug_glGetCompressedTexImageARB
     * }
     */
    public static AddressLayout glad_debug_glGetCompressedTexImageARB$layout() {
        return glad_debug_glGetCompressedTexImageARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOMPRESSEDTEXIMAGEARBPROC glad_debug_glGetCompressedTexImageARB
     * }
     */
    public static MemorySegment glad_debug_glGetCompressedTexImageARB$segment() {
        return glad_debug_glGetCompressedTexImageARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOMPRESSEDTEXIMAGEARBPROC glad_debug_glGetCompressedTexImageARB
     * }
     */
    public static MemorySegment glad_debug_glGetCompressedTexImageARB() {
        return glad_debug_glGetCompressedTexImageARB$constants.SEGMENT.get(glad_debug_glGetCompressedTexImageARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOMPRESSEDTEXIMAGEARBPROC glad_debug_glGetCompressedTexImageARB
     * }
     */
    public static void glad_debug_glGetCompressedTexImageARB(MemorySegment varValue) {
        glad_debug_glGetCompressedTexImageARB$constants.SEGMENT.set(glad_debug_glGetCompressedTexImageARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetCompressedTextureImage$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetCompressedTextureImage").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC glad_glGetCompressedTextureImage
     * }
     */
    public static AddressLayout glad_glGetCompressedTextureImage$layout() {
        return glad_glGetCompressedTextureImage$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC glad_glGetCompressedTextureImage
     * }
     */
    public static MemorySegment glad_glGetCompressedTextureImage$segment() {
        return glad_glGetCompressedTextureImage$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC glad_glGetCompressedTextureImage
     * }
     */
    public static MemorySegment glad_glGetCompressedTextureImage() {
        return glad_glGetCompressedTextureImage$constants.SEGMENT.get(glad_glGetCompressedTextureImage$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC glad_glGetCompressedTextureImage
     * }
     */
    public static void glad_glGetCompressedTextureImage(MemorySegment varValue) {
        glad_glGetCompressedTextureImage$constants.SEGMENT.set(glad_glGetCompressedTextureImage$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetCompressedTextureImage$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetCompressedTextureImage").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC glad_debug_glGetCompressedTextureImage
     * }
     */
    public static AddressLayout glad_debug_glGetCompressedTextureImage$layout() {
        return glad_debug_glGetCompressedTextureImage$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC glad_debug_glGetCompressedTextureImage
     * }
     */
    public static MemorySegment glad_debug_glGetCompressedTextureImage$segment() {
        return glad_debug_glGetCompressedTextureImage$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC glad_debug_glGetCompressedTextureImage
     * }
     */
    public static MemorySegment glad_debug_glGetCompressedTextureImage() {
        return glad_debug_glGetCompressedTextureImage$constants.SEGMENT.get(glad_debug_glGetCompressedTextureImage$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC glad_debug_glGetCompressedTextureImage
     * }
     */
    public static void glad_debug_glGetCompressedTextureImage(MemorySegment varValue) {
        glad_debug_glGetCompressedTextureImage$constants.SEGMENT.set(glad_debug_glGetCompressedTextureImage$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetCompressedTextureImageEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetCompressedTextureImageEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC glad_glGetCompressedTextureImageEXT
     * }
     */
    public static AddressLayout glad_glGetCompressedTextureImageEXT$layout() {
        return glad_glGetCompressedTextureImageEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC glad_glGetCompressedTextureImageEXT
     * }
     */
    public static MemorySegment glad_glGetCompressedTextureImageEXT$segment() {
        return glad_glGetCompressedTextureImageEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC glad_glGetCompressedTextureImageEXT
     * }
     */
    public static MemorySegment glad_glGetCompressedTextureImageEXT() {
        return glad_glGetCompressedTextureImageEXT$constants.SEGMENT.get(glad_glGetCompressedTextureImageEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC glad_glGetCompressedTextureImageEXT
     * }
     */
    public static void glad_glGetCompressedTextureImageEXT(MemorySegment varValue) {
        glad_glGetCompressedTextureImageEXT$constants.SEGMENT.set(glad_glGetCompressedTextureImageEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetCompressedTextureImageEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetCompressedTextureImageEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC glad_debug_glGetCompressedTextureImageEXT
     * }
     */
    public static AddressLayout glad_debug_glGetCompressedTextureImageEXT$layout() {
        return glad_debug_glGetCompressedTextureImageEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC glad_debug_glGetCompressedTextureImageEXT
     * }
     */
    public static MemorySegment glad_debug_glGetCompressedTextureImageEXT$segment() {
        return glad_debug_glGetCompressedTextureImageEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC glad_debug_glGetCompressedTextureImageEXT
     * }
     */
    public static MemorySegment glad_debug_glGetCompressedTextureImageEXT() {
        return glad_debug_glGetCompressedTextureImageEXT$constants.SEGMENT.get(glad_debug_glGetCompressedTextureImageEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC glad_debug_glGetCompressedTextureImageEXT
     * }
     */
    public static void glad_debug_glGetCompressedTextureImageEXT(MemorySegment varValue) {
        glad_debug_glGetCompressedTextureImageEXT$constants.SEGMENT.set(glad_debug_glGetCompressedTextureImageEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetCompressedTextureSubImage$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetCompressedTextureSubImage").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC glad_glGetCompressedTextureSubImage
     * }
     */
    public static AddressLayout glad_glGetCompressedTextureSubImage$layout() {
        return glad_glGetCompressedTextureSubImage$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC glad_glGetCompressedTextureSubImage
     * }
     */
    public static MemorySegment glad_glGetCompressedTextureSubImage$segment() {
        return glad_glGetCompressedTextureSubImage$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC glad_glGetCompressedTextureSubImage
     * }
     */
    public static MemorySegment glad_glGetCompressedTextureSubImage() {
        return glad_glGetCompressedTextureSubImage$constants.SEGMENT.get(glad_glGetCompressedTextureSubImage$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC glad_glGetCompressedTextureSubImage
     * }
     */
    public static void glad_glGetCompressedTextureSubImage(MemorySegment varValue) {
        glad_glGetCompressedTextureSubImage$constants.SEGMENT.set(glad_glGetCompressedTextureSubImage$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetCompressedTextureSubImage$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetCompressedTextureSubImage").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC glad_debug_glGetCompressedTextureSubImage
     * }
     */
    public static AddressLayout glad_debug_glGetCompressedTextureSubImage$layout() {
        return glad_debug_glGetCompressedTextureSubImage$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC glad_debug_glGetCompressedTextureSubImage
     * }
     */
    public static MemorySegment glad_debug_glGetCompressedTextureSubImage$segment() {
        return glad_debug_glGetCompressedTextureSubImage$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC glad_debug_glGetCompressedTextureSubImage
     * }
     */
    public static MemorySegment glad_debug_glGetCompressedTextureSubImage() {
        return glad_debug_glGetCompressedTextureSubImage$constants.SEGMENT.get(glad_debug_glGetCompressedTextureSubImage$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC glad_debug_glGetCompressedTextureSubImage
     * }
     */
    public static void glad_debug_glGetCompressedTextureSubImage(MemorySegment varValue) {
        glad_debug_glGetCompressedTextureSubImage$constants.SEGMENT.set(glad_debug_glGetCompressedTextureSubImage$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetConvolutionFilter$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetConvolutionFilter").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCONVOLUTIONFILTERPROC glad_glGetConvolutionFilter
     * }
     */
    public static AddressLayout glad_glGetConvolutionFilter$layout() {
        return glad_glGetConvolutionFilter$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCONVOLUTIONFILTERPROC glad_glGetConvolutionFilter
     * }
     */
    public static MemorySegment glad_glGetConvolutionFilter$segment() {
        return glad_glGetConvolutionFilter$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCONVOLUTIONFILTERPROC glad_glGetConvolutionFilter
     * }
     */
    public static MemorySegment glad_glGetConvolutionFilter() {
        return glad_glGetConvolutionFilter$constants.SEGMENT.get(glad_glGetConvolutionFilter$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCONVOLUTIONFILTERPROC glad_glGetConvolutionFilter
     * }
     */
    public static void glad_glGetConvolutionFilter(MemorySegment varValue) {
        glad_glGetConvolutionFilter$constants.SEGMENT.set(glad_glGetConvolutionFilter$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetConvolutionFilter$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetConvolutionFilter").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCONVOLUTIONFILTERPROC glad_debug_glGetConvolutionFilter
     * }
     */
    public static AddressLayout glad_debug_glGetConvolutionFilter$layout() {
        return glad_debug_glGetConvolutionFilter$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCONVOLUTIONFILTERPROC glad_debug_glGetConvolutionFilter
     * }
     */
    public static MemorySegment glad_debug_glGetConvolutionFilter$segment() {
        return glad_debug_glGetConvolutionFilter$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCONVOLUTIONFILTERPROC glad_debug_glGetConvolutionFilter
     * }
     */
    public static MemorySegment glad_debug_glGetConvolutionFilter() {
        return glad_debug_glGetConvolutionFilter$constants.SEGMENT.get(glad_debug_glGetConvolutionFilter$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCONVOLUTIONFILTERPROC glad_debug_glGetConvolutionFilter
     * }
     */
    public static void glad_debug_glGetConvolutionFilter(MemorySegment varValue) {
        glad_debug_glGetConvolutionFilter$constants.SEGMENT.set(glad_debug_glGetConvolutionFilter$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetConvolutionParameterfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetConvolutionParameterfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCONVOLUTIONPARAMETERFVPROC glad_glGetConvolutionParameterfv
     * }
     */
    public static AddressLayout glad_glGetConvolutionParameterfv$layout() {
        return glad_glGetConvolutionParameterfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCONVOLUTIONPARAMETERFVPROC glad_glGetConvolutionParameterfv
     * }
     */
    public static MemorySegment glad_glGetConvolutionParameterfv$segment() {
        return glad_glGetConvolutionParameterfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCONVOLUTIONPARAMETERFVPROC glad_glGetConvolutionParameterfv
     * }
     */
    public static MemorySegment glad_glGetConvolutionParameterfv() {
        return glad_glGetConvolutionParameterfv$constants.SEGMENT.get(glad_glGetConvolutionParameterfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCONVOLUTIONPARAMETERFVPROC glad_glGetConvolutionParameterfv
     * }
     */
    public static void glad_glGetConvolutionParameterfv(MemorySegment varValue) {
        glad_glGetConvolutionParameterfv$constants.SEGMENT.set(glad_glGetConvolutionParameterfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetConvolutionParameterfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetConvolutionParameterfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCONVOLUTIONPARAMETERFVPROC glad_debug_glGetConvolutionParameterfv
     * }
     */
    public static AddressLayout glad_debug_glGetConvolutionParameterfv$layout() {
        return glad_debug_glGetConvolutionParameterfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCONVOLUTIONPARAMETERFVPROC glad_debug_glGetConvolutionParameterfv
     * }
     */
    public static MemorySegment glad_debug_glGetConvolutionParameterfv$segment() {
        return glad_debug_glGetConvolutionParameterfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCONVOLUTIONPARAMETERFVPROC glad_debug_glGetConvolutionParameterfv
     * }
     */
    public static MemorySegment glad_debug_glGetConvolutionParameterfv() {
        return glad_debug_glGetConvolutionParameterfv$constants.SEGMENT.get(glad_debug_glGetConvolutionParameterfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCONVOLUTIONPARAMETERFVPROC glad_debug_glGetConvolutionParameterfv
     * }
     */
    public static void glad_debug_glGetConvolutionParameterfv(MemorySegment varValue) {
        glad_debug_glGetConvolutionParameterfv$constants.SEGMENT.set(glad_debug_glGetConvolutionParameterfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetConvolutionParameteriv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetConvolutionParameteriv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCONVOLUTIONPARAMETERIVPROC glad_glGetConvolutionParameteriv
     * }
     */
    public static AddressLayout glad_glGetConvolutionParameteriv$layout() {
        return glad_glGetConvolutionParameteriv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCONVOLUTIONPARAMETERIVPROC glad_glGetConvolutionParameteriv
     * }
     */
    public static MemorySegment glad_glGetConvolutionParameteriv$segment() {
        return glad_glGetConvolutionParameteriv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCONVOLUTIONPARAMETERIVPROC glad_glGetConvolutionParameteriv
     * }
     */
    public static MemorySegment glad_glGetConvolutionParameteriv() {
        return glad_glGetConvolutionParameteriv$constants.SEGMENT.get(glad_glGetConvolutionParameteriv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCONVOLUTIONPARAMETERIVPROC glad_glGetConvolutionParameteriv
     * }
     */
    public static void glad_glGetConvolutionParameteriv(MemorySegment varValue) {
        glad_glGetConvolutionParameteriv$constants.SEGMENT.set(glad_glGetConvolutionParameteriv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetConvolutionParameteriv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetConvolutionParameteriv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCONVOLUTIONPARAMETERIVPROC glad_debug_glGetConvolutionParameteriv
     * }
     */
    public static AddressLayout glad_debug_glGetConvolutionParameteriv$layout() {
        return glad_debug_glGetConvolutionParameteriv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCONVOLUTIONPARAMETERIVPROC glad_debug_glGetConvolutionParameteriv
     * }
     */
    public static MemorySegment glad_debug_glGetConvolutionParameteriv$segment() {
        return glad_debug_glGetConvolutionParameteriv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCONVOLUTIONPARAMETERIVPROC glad_debug_glGetConvolutionParameteriv
     * }
     */
    public static MemorySegment glad_debug_glGetConvolutionParameteriv() {
        return glad_debug_glGetConvolutionParameteriv$constants.SEGMENT.get(glad_debug_glGetConvolutionParameteriv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETCONVOLUTIONPARAMETERIVPROC glad_debug_glGetConvolutionParameteriv
     * }
     */
    public static void glad_debug_glGetConvolutionParameteriv(MemorySegment varValue) {
        glad_debug_glGetConvolutionParameteriv$constants.SEGMENT.set(glad_debug_glGetConvolutionParameteriv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetDebugMessageLog$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetDebugMessageLog").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETDEBUGMESSAGELOGPROC glad_glGetDebugMessageLog
     * }
     */
    public static AddressLayout glad_glGetDebugMessageLog$layout() {
        return glad_glGetDebugMessageLog$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETDEBUGMESSAGELOGPROC glad_glGetDebugMessageLog
     * }
     */
    public static MemorySegment glad_glGetDebugMessageLog$segment() {
        return glad_glGetDebugMessageLog$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETDEBUGMESSAGELOGPROC glad_glGetDebugMessageLog
     * }
     */
    public static MemorySegment glad_glGetDebugMessageLog() {
        return glad_glGetDebugMessageLog$constants.SEGMENT.get(glad_glGetDebugMessageLog$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETDEBUGMESSAGELOGPROC glad_glGetDebugMessageLog
     * }
     */
    public static void glad_glGetDebugMessageLog(MemorySegment varValue) {
        glad_glGetDebugMessageLog$constants.SEGMENT.set(glad_glGetDebugMessageLog$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetDebugMessageLog$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetDebugMessageLog").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETDEBUGMESSAGELOGPROC glad_debug_glGetDebugMessageLog
     * }
     */
    public static AddressLayout glad_debug_glGetDebugMessageLog$layout() {
        return glad_debug_glGetDebugMessageLog$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETDEBUGMESSAGELOGPROC glad_debug_glGetDebugMessageLog
     * }
     */
    public static MemorySegment glad_debug_glGetDebugMessageLog$segment() {
        return glad_debug_glGetDebugMessageLog$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETDEBUGMESSAGELOGPROC glad_debug_glGetDebugMessageLog
     * }
     */
    public static MemorySegment glad_debug_glGetDebugMessageLog() {
        return glad_debug_glGetDebugMessageLog$constants.SEGMENT.get(glad_debug_glGetDebugMessageLog$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETDEBUGMESSAGELOGPROC glad_debug_glGetDebugMessageLog
     * }
     */
    public static void glad_debug_glGetDebugMessageLog(MemorySegment varValue) {
        glad_debug_glGetDebugMessageLog$constants.SEGMENT.set(glad_debug_glGetDebugMessageLog$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetDebugMessageLogARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetDebugMessageLogARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETDEBUGMESSAGELOGARBPROC glad_glGetDebugMessageLogARB
     * }
     */
    public static AddressLayout glad_glGetDebugMessageLogARB$layout() {
        return glad_glGetDebugMessageLogARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETDEBUGMESSAGELOGARBPROC glad_glGetDebugMessageLogARB
     * }
     */
    public static MemorySegment glad_glGetDebugMessageLogARB$segment() {
        return glad_glGetDebugMessageLogARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETDEBUGMESSAGELOGARBPROC glad_glGetDebugMessageLogARB
     * }
     */
    public static MemorySegment glad_glGetDebugMessageLogARB() {
        return glad_glGetDebugMessageLogARB$constants.SEGMENT.get(glad_glGetDebugMessageLogARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETDEBUGMESSAGELOGARBPROC glad_glGetDebugMessageLogARB
     * }
     */
    public static void glad_glGetDebugMessageLogARB(MemorySegment varValue) {
        glad_glGetDebugMessageLogARB$constants.SEGMENT.set(glad_glGetDebugMessageLogARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetDebugMessageLogARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetDebugMessageLogARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETDEBUGMESSAGELOGARBPROC glad_debug_glGetDebugMessageLogARB
     * }
     */
    public static AddressLayout glad_debug_glGetDebugMessageLogARB$layout() {
        return glad_debug_glGetDebugMessageLogARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETDEBUGMESSAGELOGARBPROC glad_debug_glGetDebugMessageLogARB
     * }
     */
    public static MemorySegment glad_debug_glGetDebugMessageLogARB$segment() {
        return glad_debug_glGetDebugMessageLogARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETDEBUGMESSAGELOGARBPROC glad_debug_glGetDebugMessageLogARB
     * }
     */
    public static MemorySegment glad_debug_glGetDebugMessageLogARB() {
        return glad_debug_glGetDebugMessageLogARB$constants.SEGMENT.get(glad_debug_glGetDebugMessageLogARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETDEBUGMESSAGELOGARBPROC glad_debug_glGetDebugMessageLogARB
     * }
     */
    public static void glad_debug_glGetDebugMessageLogARB(MemorySegment varValue) {
        glad_debug_glGetDebugMessageLogARB$constants.SEGMENT.set(glad_debug_glGetDebugMessageLogARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetDoubleIndexedvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetDoubleIndexedvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETDOUBLEINDEXEDVEXTPROC glad_glGetDoubleIndexedvEXT
     * }
     */
    public static AddressLayout glad_glGetDoubleIndexedvEXT$layout() {
        return glad_glGetDoubleIndexedvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETDOUBLEINDEXEDVEXTPROC glad_glGetDoubleIndexedvEXT
     * }
     */
    public static MemorySegment glad_glGetDoubleIndexedvEXT$segment() {
        return glad_glGetDoubleIndexedvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETDOUBLEINDEXEDVEXTPROC glad_glGetDoubleIndexedvEXT
     * }
     */
    public static MemorySegment glad_glGetDoubleIndexedvEXT() {
        return glad_glGetDoubleIndexedvEXT$constants.SEGMENT.get(glad_glGetDoubleIndexedvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETDOUBLEINDEXEDVEXTPROC glad_glGetDoubleIndexedvEXT
     * }
     */
    public static void glad_glGetDoubleIndexedvEXT(MemorySegment varValue) {
        glad_glGetDoubleIndexedvEXT$constants.SEGMENT.set(glad_glGetDoubleIndexedvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetDoubleIndexedvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetDoubleIndexedvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETDOUBLEINDEXEDVEXTPROC glad_debug_glGetDoubleIndexedvEXT
     * }
     */
    public static AddressLayout glad_debug_glGetDoubleIndexedvEXT$layout() {
        return glad_debug_glGetDoubleIndexedvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETDOUBLEINDEXEDVEXTPROC glad_debug_glGetDoubleIndexedvEXT
     * }
     */
    public static MemorySegment glad_debug_glGetDoubleIndexedvEXT$segment() {
        return glad_debug_glGetDoubleIndexedvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETDOUBLEINDEXEDVEXTPROC glad_debug_glGetDoubleIndexedvEXT
     * }
     */
    public static MemorySegment glad_debug_glGetDoubleIndexedvEXT() {
        return glad_debug_glGetDoubleIndexedvEXT$constants.SEGMENT.get(glad_debug_glGetDoubleIndexedvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETDOUBLEINDEXEDVEXTPROC glad_debug_glGetDoubleIndexedvEXT
     * }
     */
    public static void glad_debug_glGetDoubleIndexedvEXT(MemorySegment varValue) {
        glad_debug_glGetDoubleIndexedvEXT$constants.SEGMENT.set(glad_debug_glGetDoubleIndexedvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetDoublei_v$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetDoublei_v").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETDOUBLEI_VPROC glad_glGetDoublei_v
     * }
     */
    public static AddressLayout glad_glGetDoublei_v$layout() {
        return glad_glGetDoublei_v$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETDOUBLEI_VPROC glad_glGetDoublei_v
     * }
     */
    public static MemorySegment glad_glGetDoublei_v$segment() {
        return glad_glGetDoublei_v$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETDOUBLEI_VPROC glad_glGetDoublei_v
     * }
     */
    public static MemorySegment glad_glGetDoublei_v() {
        return glad_glGetDoublei_v$constants.SEGMENT.get(glad_glGetDoublei_v$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETDOUBLEI_VPROC glad_glGetDoublei_v
     * }
     */
    public static void glad_glGetDoublei_v(MemorySegment varValue) {
        glad_glGetDoublei_v$constants.SEGMENT.set(glad_glGetDoublei_v$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetDoublei_v$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetDoublei_v").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETDOUBLEI_VPROC glad_debug_glGetDoublei_v
     * }
     */
    public static AddressLayout glad_debug_glGetDoublei_v$layout() {
        return glad_debug_glGetDoublei_v$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETDOUBLEI_VPROC glad_debug_glGetDoublei_v
     * }
     */
    public static MemorySegment glad_debug_glGetDoublei_v$segment() {
        return glad_debug_glGetDoublei_v$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETDOUBLEI_VPROC glad_debug_glGetDoublei_v
     * }
     */
    public static MemorySegment glad_debug_glGetDoublei_v() {
        return glad_debug_glGetDoublei_v$constants.SEGMENT.get(glad_debug_glGetDoublei_v$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETDOUBLEI_VPROC glad_debug_glGetDoublei_v
     * }
     */
    public static void glad_debug_glGetDoublei_v(MemorySegment varValue) {
        glad_debug_glGetDoublei_v$constants.SEGMENT.set(glad_debug_glGetDoublei_v$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetDoublei_vEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetDoublei_vEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETDOUBLEI_VEXTPROC glad_glGetDoublei_vEXT
     * }
     */
    public static AddressLayout glad_glGetDoublei_vEXT$layout() {
        return glad_glGetDoublei_vEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETDOUBLEI_VEXTPROC glad_glGetDoublei_vEXT
     * }
     */
    public static MemorySegment glad_glGetDoublei_vEXT$segment() {
        return glad_glGetDoublei_vEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETDOUBLEI_VEXTPROC glad_glGetDoublei_vEXT
     * }
     */
    public static MemorySegment glad_glGetDoublei_vEXT() {
        return glad_glGetDoublei_vEXT$constants.SEGMENT.get(glad_glGetDoublei_vEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETDOUBLEI_VEXTPROC glad_glGetDoublei_vEXT
     * }
     */
    public static void glad_glGetDoublei_vEXT(MemorySegment varValue) {
        glad_glGetDoublei_vEXT$constants.SEGMENT.set(glad_glGetDoublei_vEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetDoublei_vEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetDoublei_vEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETDOUBLEI_VEXTPROC glad_debug_glGetDoublei_vEXT
     * }
     */
    public static AddressLayout glad_debug_glGetDoublei_vEXT$layout() {
        return glad_debug_glGetDoublei_vEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETDOUBLEI_VEXTPROC glad_debug_glGetDoublei_vEXT
     * }
     */
    public static MemorySegment glad_debug_glGetDoublei_vEXT$segment() {
        return glad_debug_glGetDoublei_vEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETDOUBLEI_VEXTPROC glad_debug_glGetDoublei_vEXT
     * }
     */
    public static MemorySegment glad_debug_glGetDoublei_vEXT() {
        return glad_debug_glGetDoublei_vEXT$constants.SEGMENT.get(glad_debug_glGetDoublei_vEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETDOUBLEI_VEXTPROC glad_debug_glGetDoublei_vEXT
     * }
     */
    public static void glad_debug_glGetDoublei_vEXT(MemorySegment varValue) {
        glad_debug_glGetDoublei_vEXT$constants.SEGMENT.set(glad_debug_glGetDoublei_vEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetDoublev$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetDoublev").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETDOUBLEVPROC glad_glGetDoublev
     * }
     */
    public static AddressLayout glad_glGetDoublev$layout() {
        return glad_glGetDoublev$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETDOUBLEVPROC glad_glGetDoublev
     * }
     */
    public static MemorySegment glad_glGetDoublev$segment() {
        return glad_glGetDoublev$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETDOUBLEVPROC glad_glGetDoublev
     * }
     */
    public static MemorySegment glad_glGetDoublev() {
        return glad_glGetDoublev$constants.SEGMENT.get(glad_glGetDoublev$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETDOUBLEVPROC glad_glGetDoublev
     * }
     */
    public static void glad_glGetDoublev(MemorySegment varValue) {
        glad_glGetDoublev$constants.SEGMENT.set(glad_glGetDoublev$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetDoublev$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetDoublev").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETDOUBLEVPROC glad_debug_glGetDoublev
     * }
     */
    public static AddressLayout glad_debug_glGetDoublev$layout() {
        return glad_debug_glGetDoublev$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETDOUBLEVPROC glad_debug_glGetDoublev
     * }
     */
    public static MemorySegment glad_debug_glGetDoublev$segment() {
        return glad_debug_glGetDoublev$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETDOUBLEVPROC glad_debug_glGetDoublev
     * }
     */
    public static MemorySegment glad_debug_glGetDoublev() {
        return glad_debug_glGetDoublev$constants.SEGMENT.get(glad_debug_glGetDoublev$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETDOUBLEVPROC glad_debug_glGetDoublev
     * }
     */
    public static void glad_debug_glGetDoublev(MemorySegment varValue) {
        glad_debug_glGetDoublev$constants.SEGMENT.set(glad_debug_glGetDoublev$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetError$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetError").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETERRORPROC glad_glGetError
     * }
     */
    public static AddressLayout glad_glGetError$layout() {
        return glad_glGetError$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETERRORPROC glad_glGetError
     * }
     */
    public static MemorySegment glad_glGetError$segment() {
        return glad_glGetError$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETERRORPROC glad_glGetError
     * }
     */
    public static MemorySegment glad_glGetError() {
        return glad_glGetError$constants.SEGMENT.get(glad_glGetError$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETERRORPROC glad_glGetError
     * }
     */
    public static void glad_glGetError(MemorySegment varValue) {
        glad_glGetError$constants.SEGMENT.set(glad_glGetError$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetError$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetError").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETERRORPROC glad_debug_glGetError
     * }
     */
    public static AddressLayout glad_debug_glGetError$layout() {
        return glad_debug_glGetError$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETERRORPROC glad_debug_glGetError
     * }
     */
    public static MemorySegment glad_debug_glGetError$segment() {
        return glad_debug_glGetError$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETERRORPROC glad_debug_glGetError
     * }
     */
    public static MemorySegment glad_debug_glGetError() {
        return glad_debug_glGetError$constants.SEGMENT.get(glad_debug_glGetError$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETERRORPROC glad_debug_glGetError
     * }
     */
    public static void glad_debug_glGetError(MemorySegment varValue) {
        glad_debug_glGetError$constants.SEGMENT.set(glad_debug_glGetError$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetFloatIndexedvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetFloatIndexedvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFLOATINDEXEDVEXTPROC glad_glGetFloatIndexedvEXT
     * }
     */
    public static AddressLayout glad_glGetFloatIndexedvEXT$layout() {
        return glad_glGetFloatIndexedvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFLOATINDEXEDVEXTPROC glad_glGetFloatIndexedvEXT
     * }
     */
    public static MemorySegment glad_glGetFloatIndexedvEXT$segment() {
        return glad_glGetFloatIndexedvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFLOATINDEXEDVEXTPROC glad_glGetFloatIndexedvEXT
     * }
     */
    public static MemorySegment glad_glGetFloatIndexedvEXT() {
        return glad_glGetFloatIndexedvEXT$constants.SEGMENT.get(glad_glGetFloatIndexedvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFLOATINDEXEDVEXTPROC glad_glGetFloatIndexedvEXT
     * }
     */
    public static void glad_glGetFloatIndexedvEXT(MemorySegment varValue) {
        glad_glGetFloatIndexedvEXT$constants.SEGMENT.set(glad_glGetFloatIndexedvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetFloatIndexedvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetFloatIndexedvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFLOATINDEXEDVEXTPROC glad_debug_glGetFloatIndexedvEXT
     * }
     */
    public static AddressLayout glad_debug_glGetFloatIndexedvEXT$layout() {
        return glad_debug_glGetFloatIndexedvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFLOATINDEXEDVEXTPROC glad_debug_glGetFloatIndexedvEXT
     * }
     */
    public static MemorySegment glad_debug_glGetFloatIndexedvEXT$segment() {
        return glad_debug_glGetFloatIndexedvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFLOATINDEXEDVEXTPROC glad_debug_glGetFloatIndexedvEXT
     * }
     */
    public static MemorySegment glad_debug_glGetFloatIndexedvEXT() {
        return glad_debug_glGetFloatIndexedvEXT$constants.SEGMENT.get(glad_debug_glGetFloatIndexedvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFLOATINDEXEDVEXTPROC glad_debug_glGetFloatIndexedvEXT
     * }
     */
    public static void glad_debug_glGetFloatIndexedvEXT(MemorySegment varValue) {
        glad_debug_glGetFloatIndexedvEXT$constants.SEGMENT.set(glad_debug_glGetFloatIndexedvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetFloati_v$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetFloati_v").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFLOATI_VPROC glad_glGetFloati_v
     * }
     */
    public static AddressLayout glad_glGetFloati_v$layout() {
        return glad_glGetFloati_v$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFLOATI_VPROC glad_glGetFloati_v
     * }
     */
    public static MemorySegment glad_glGetFloati_v$segment() {
        return glad_glGetFloati_v$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFLOATI_VPROC glad_glGetFloati_v
     * }
     */
    public static MemorySegment glad_glGetFloati_v() {
        return glad_glGetFloati_v$constants.SEGMENT.get(glad_glGetFloati_v$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFLOATI_VPROC glad_glGetFloati_v
     * }
     */
    public static void glad_glGetFloati_v(MemorySegment varValue) {
        glad_glGetFloati_v$constants.SEGMENT.set(glad_glGetFloati_v$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetFloati_v$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetFloati_v").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFLOATI_VPROC glad_debug_glGetFloati_v
     * }
     */
    public static AddressLayout glad_debug_glGetFloati_v$layout() {
        return glad_debug_glGetFloati_v$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFLOATI_VPROC glad_debug_glGetFloati_v
     * }
     */
    public static MemorySegment glad_debug_glGetFloati_v$segment() {
        return glad_debug_glGetFloati_v$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFLOATI_VPROC glad_debug_glGetFloati_v
     * }
     */
    public static MemorySegment glad_debug_glGetFloati_v() {
        return glad_debug_glGetFloati_v$constants.SEGMENT.get(glad_debug_glGetFloati_v$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFLOATI_VPROC glad_debug_glGetFloati_v
     * }
     */
    public static void glad_debug_glGetFloati_v(MemorySegment varValue) {
        glad_debug_glGetFloati_v$constants.SEGMENT.set(glad_debug_glGetFloati_v$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetFloati_vEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetFloati_vEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFLOATI_VEXTPROC glad_glGetFloati_vEXT
     * }
     */
    public static AddressLayout glad_glGetFloati_vEXT$layout() {
        return glad_glGetFloati_vEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFLOATI_VEXTPROC glad_glGetFloati_vEXT
     * }
     */
    public static MemorySegment glad_glGetFloati_vEXT$segment() {
        return glad_glGetFloati_vEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFLOATI_VEXTPROC glad_glGetFloati_vEXT
     * }
     */
    public static MemorySegment glad_glGetFloati_vEXT() {
        return glad_glGetFloati_vEXT$constants.SEGMENT.get(glad_glGetFloati_vEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFLOATI_VEXTPROC glad_glGetFloati_vEXT
     * }
     */
    public static void glad_glGetFloati_vEXT(MemorySegment varValue) {
        glad_glGetFloati_vEXT$constants.SEGMENT.set(glad_glGetFloati_vEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetFloati_vEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetFloati_vEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFLOATI_VEXTPROC glad_debug_glGetFloati_vEXT
     * }
     */
    public static AddressLayout glad_debug_glGetFloati_vEXT$layout() {
        return glad_debug_glGetFloati_vEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFLOATI_VEXTPROC glad_debug_glGetFloati_vEXT
     * }
     */
    public static MemorySegment glad_debug_glGetFloati_vEXT$segment() {
        return glad_debug_glGetFloati_vEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFLOATI_VEXTPROC glad_debug_glGetFloati_vEXT
     * }
     */
    public static MemorySegment glad_debug_glGetFloati_vEXT() {
        return glad_debug_glGetFloati_vEXT$constants.SEGMENT.get(glad_debug_glGetFloati_vEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFLOATI_VEXTPROC glad_debug_glGetFloati_vEXT
     * }
     */
    public static void glad_debug_glGetFloati_vEXT(MemorySegment varValue) {
        glad_debug_glGetFloati_vEXT$constants.SEGMENT.set(glad_debug_glGetFloati_vEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetFloatv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetFloatv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFLOATVPROC glad_glGetFloatv
     * }
     */
    public static AddressLayout glad_glGetFloatv$layout() {
        return glad_glGetFloatv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFLOATVPROC glad_glGetFloatv
     * }
     */
    public static MemorySegment glad_glGetFloatv$segment() {
        return glad_glGetFloatv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFLOATVPROC glad_glGetFloatv
     * }
     */
    public static MemorySegment glad_glGetFloatv() {
        return glad_glGetFloatv$constants.SEGMENT.get(glad_glGetFloatv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFLOATVPROC glad_glGetFloatv
     * }
     */
    public static void glad_glGetFloatv(MemorySegment varValue) {
        glad_glGetFloatv$constants.SEGMENT.set(glad_glGetFloatv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetFloatv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetFloatv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFLOATVPROC glad_debug_glGetFloatv
     * }
     */
    public static AddressLayout glad_debug_glGetFloatv$layout() {
        return glad_debug_glGetFloatv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFLOATVPROC glad_debug_glGetFloatv
     * }
     */
    public static MemorySegment glad_debug_glGetFloatv$segment() {
        return glad_debug_glGetFloatv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFLOATVPROC glad_debug_glGetFloatv
     * }
     */
    public static MemorySegment glad_debug_glGetFloatv() {
        return glad_debug_glGetFloatv$constants.SEGMENT.get(glad_debug_glGetFloatv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFLOATVPROC glad_debug_glGetFloatv
     * }
     */
    public static void glad_debug_glGetFloatv(MemorySegment varValue) {
        glad_debug_glGetFloatv$constants.SEGMENT.set(glad_debug_glGetFloatv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetFragDataIndex$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetFragDataIndex").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAGDATAINDEXPROC glad_glGetFragDataIndex
     * }
     */
    public static AddressLayout glad_glGetFragDataIndex$layout() {
        return glad_glGetFragDataIndex$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAGDATAINDEXPROC glad_glGetFragDataIndex
     * }
     */
    public static MemorySegment glad_glGetFragDataIndex$segment() {
        return glad_glGetFragDataIndex$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAGDATAINDEXPROC glad_glGetFragDataIndex
     * }
     */
    public static MemorySegment glad_glGetFragDataIndex() {
        return glad_glGetFragDataIndex$constants.SEGMENT.get(glad_glGetFragDataIndex$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAGDATAINDEXPROC glad_glGetFragDataIndex
     * }
     */
    public static void glad_glGetFragDataIndex(MemorySegment varValue) {
        glad_glGetFragDataIndex$constants.SEGMENT.set(glad_glGetFragDataIndex$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetFragDataIndex$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetFragDataIndex").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAGDATAINDEXPROC glad_debug_glGetFragDataIndex
     * }
     */
    public static AddressLayout glad_debug_glGetFragDataIndex$layout() {
        return glad_debug_glGetFragDataIndex$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAGDATAINDEXPROC glad_debug_glGetFragDataIndex
     * }
     */
    public static MemorySegment glad_debug_glGetFragDataIndex$segment() {
        return glad_debug_glGetFragDataIndex$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAGDATAINDEXPROC glad_debug_glGetFragDataIndex
     * }
     */
    public static MemorySegment glad_debug_glGetFragDataIndex() {
        return glad_debug_glGetFragDataIndex$constants.SEGMENT.get(glad_debug_glGetFragDataIndex$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAGDATAINDEXPROC glad_debug_glGetFragDataIndex
     * }
     */
    public static void glad_debug_glGetFragDataIndex(MemorySegment varValue) {
        glad_debug_glGetFragDataIndex$constants.SEGMENT.set(glad_debug_glGetFragDataIndex$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetFragDataLocation$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetFragDataLocation").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAGDATALOCATIONPROC glad_glGetFragDataLocation
     * }
     */
    public static AddressLayout glad_glGetFragDataLocation$layout() {
        return glad_glGetFragDataLocation$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAGDATALOCATIONPROC glad_glGetFragDataLocation
     * }
     */
    public static MemorySegment glad_glGetFragDataLocation$segment() {
        return glad_glGetFragDataLocation$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAGDATALOCATIONPROC glad_glGetFragDataLocation
     * }
     */
    public static MemorySegment glad_glGetFragDataLocation() {
        return glad_glGetFragDataLocation$constants.SEGMENT.get(glad_glGetFragDataLocation$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAGDATALOCATIONPROC glad_glGetFragDataLocation
     * }
     */
    public static void glad_glGetFragDataLocation(MemorySegment varValue) {
        glad_glGetFragDataLocation$constants.SEGMENT.set(glad_glGetFragDataLocation$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetFragDataLocation$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetFragDataLocation").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAGDATALOCATIONPROC glad_debug_glGetFragDataLocation
     * }
     */
    public static AddressLayout glad_debug_glGetFragDataLocation$layout() {
        return glad_debug_glGetFragDataLocation$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAGDATALOCATIONPROC glad_debug_glGetFragDataLocation
     * }
     */
    public static MemorySegment glad_debug_glGetFragDataLocation$segment() {
        return glad_debug_glGetFragDataLocation$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAGDATALOCATIONPROC glad_debug_glGetFragDataLocation
     * }
     */
    public static MemorySegment glad_debug_glGetFragDataLocation() {
        return glad_debug_glGetFragDataLocation$constants.SEGMENT.get(glad_debug_glGetFragDataLocation$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAGDATALOCATIONPROC glad_debug_glGetFragDataLocation
     * }
     */
    public static void glad_debug_glGetFragDataLocation(MemorySegment varValue) {
        glad_debug_glGetFragDataLocation$constants.SEGMENT.set(glad_debug_glGetFragDataLocation$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetFragDataLocationEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetFragDataLocationEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAGDATALOCATIONEXTPROC glad_glGetFragDataLocationEXT
     * }
     */
    public static AddressLayout glad_glGetFragDataLocationEXT$layout() {
        return glad_glGetFragDataLocationEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAGDATALOCATIONEXTPROC glad_glGetFragDataLocationEXT
     * }
     */
    public static MemorySegment glad_glGetFragDataLocationEXT$segment() {
        return glad_glGetFragDataLocationEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAGDATALOCATIONEXTPROC glad_glGetFragDataLocationEXT
     * }
     */
    public static MemorySegment glad_glGetFragDataLocationEXT() {
        return glad_glGetFragDataLocationEXT$constants.SEGMENT.get(glad_glGetFragDataLocationEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAGDATALOCATIONEXTPROC glad_glGetFragDataLocationEXT
     * }
     */
    public static void glad_glGetFragDataLocationEXT(MemorySegment varValue) {
        glad_glGetFragDataLocationEXT$constants.SEGMENT.set(glad_glGetFragDataLocationEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetFragDataLocationEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetFragDataLocationEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAGDATALOCATIONEXTPROC glad_debug_glGetFragDataLocationEXT
     * }
     */
    public static AddressLayout glad_debug_glGetFragDataLocationEXT$layout() {
        return glad_debug_glGetFragDataLocationEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAGDATALOCATIONEXTPROC glad_debug_glGetFragDataLocationEXT
     * }
     */
    public static MemorySegment glad_debug_glGetFragDataLocationEXT$segment() {
        return glad_debug_glGetFragDataLocationEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAGDATALOCATIONEXTPROC glad_debug_glGetFragDataLocationEXT
     * }
     */
    public static MemorySegment glad_debug_glGetFragDataLocationEXT() {
        return glad_debug_glGetFragDataLocationEXT$constants.SEGMENT.get(glad_debug_glGetFragDataLocationEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAGDATALOCATIONEXTPROC glad_debug_glGetFragDataLocationEXT
     * }
     */
    public static void glad_debug_glGetFragDataLocationEXT(MemorySegment varValue) {
        glad_debug_glGetFragDataLocationEXT$constants.SEGMENT.set(glad_debug_glGetFragDataLocationEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetFramebufferAttachmentParameteriv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetFramebufferAttachmentParameteriv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC glad_glGetFramebufferAttachmentParameteriv
     * }
     */
    public static AddressLayout glad_glGetFramebufferAttachmentParameteriv$layout() {
        return glad_glGetFramebufferAttachmentParameteriv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC glad_glGetFramebufferAttachmentParameteriv
     * }
     */
    public static MemorySegment glad_glGetFramebufferAttachmentParameteriv$segment() {
        return glad_glGetFramebufferAttachmentParameteriv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC glad_glGetFramebufferAttachmentParameteriv
     * }
     */
    public static MemorySegment glad_glGetFramebufferAttachmentParameteriv() {
        return glad_glGetFramebufferAttachmentParameteriv$constants.SEGMENT.get(glad_glGetFramebufferAttachmentParameteriv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC glad_glGetFramebufferAttachmentParameteriv
     * }
     */
    public static void glad_glGetFramebufferAttachmentParameteriv(MemorySegment varValue) {
        glad_glGetFramebufferAttachmentParameteriv$constants.SEGMENT.set(glad_glGetFramebufferAttachmentParameteriv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetFramebufferAttachmentParameteriv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetFramebufferAttachmentParameteriv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC glad_debug_glGetFramebufferAttachmentParameteriv
     * }
     */
    public static AddressLayout glad_debug_glGetFramebufferAttachmentParameteriv$layout() {
        return glad_debug_glGetFramebufferAttachmentParameteriv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC glad_debug_glGetFramebufferAttachmentParameteriv
     * }
     */
    public static MemorySegment glad_debug_glGetFramebufferAttachmentParameteriv$segment() {
        return glad_debug_glGetFramebufferAttachmentParameteriv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC glad_debug_glGetFramebufferAttachmentParameteriv
     * }
     */
    public static MemorySegment glad_debug_glGetFramebufferAttachmentParameteriv() {
        return glad_debug_glGetFramebufferAttachmentParameteriv$constants.SEGMENT.get(glad_debug_glGetFramebufferAttachmentParameteriv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC glad_debug_glGetFramebufferAttachmentParameteriv
     * }
     */
    public static void glad_debug_glGetFramebufferAttachmentParameteriv(MemorySegment varValue) {
        glad_debug_glGetFramebufferAttachmentParameteriv$constants.SEGMENT.set(glad_debug_glGetFramebufferAttachmentParameteriv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetFramebufferAttachmentParameterivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetFramebufferAttachmentParameterivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC glad_glGetFramebufferAttachmentParameterivEXT
     * }
     */
    public static AddressLayout glad_glGetFramebufferAttachmentParameterivEXT$layout() {
        return glad_glGetFramebufferAttachmentParameterivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC glad_glGetFramebufferAttachmentParameterivEXT
     * }
     */
    public static MemorySegment glad_glGetFramebufferAttachmentParameterivEXT$segment() {
        return glad_glGetFramebufferAttachmentParameterivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC glad_glGetFramebufferAttachmentParameterivEXT
     * }
     */
    public static MemorySegment glad_glGetFramebufferAttachmentParameterivEXT() {
        return glad_glGetFramebufferAttachmentParameterivEXT$constants.SEGMENT.get(glad_glGetFramebufferAttachmentParameterivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC glad_glGetFramebufferAttachmentParameterivEXT
     * }
     */
    public static void glad_glGetFramebufferAttachmentParameterivEXT(MemorySegment varValue) {
        glad_glGetFramebufferAttachmentParameterivEXT$constants.SEGMENT.set(glad_glGetFramebufferAttachmentParameterivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetFramebufferAttachmentParameterivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetFramebufferAttachmentParameterivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC glad_debug_glGetFramebufferAttachmentParameterivEXT
     * }
     */
    public static AddressLayout glad_debug_glGetFramebufferAttachmentParameterivEXT$layout() {
        return glad_debug_glGetFramebufferAttachmentParameterivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC glad_debug_glGetFramebufferAttachmentParameterivEXT
     * }
     */
    public static MemorySegment glad_debug_glGetFramebufferAttachmentParameterivEXT$segment() {
        return glad_debug_glGetFramebufferAttachmentParameterivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC glad_debug_glGetFramebufferAttachmentParameterivEXT
     * }
     */
    public static MemorySegment glad_debug_glGetFramebufferAttachmentParameterivEXT() {
        return glad_debug_glGetFramebufferAttachmentParameterivEXT$constants.SEGMENT.get(glad_debug_glGetFramebufferAttachmentParameterivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC glad_debug_glGetFramebufferAttachmentParameterivEXT
     * }
     */
    public static void glad_debug_glGetFramebufferAttachmentParameterivEXT(MemorySegment varValue) {
        glad_debug_glGetFramebufferAttachmentParameterivEXT$constants.SEGMENT.set(glad_debug_glGetFramebufferAttachmentParameterivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetFramebufferParameteriv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetFramebufferParameteriv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAMEBUFFERPARAMETERIVPROC glad_glGetFramebufferParameteriv
     * }
     */
    public static AddressLayout glad_glGetFramebufferParameteriv$layout() {
        return glad_glGetFramebufferParameteriv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAMEBUFFERPARAMETERIVPROC glad_glGetFramebufferParameteriv
     * }
     */
    public static MemorySegment glad_glGetFramebufferParameteriv$segment() {
        return glad_glGetFramebufferParameteriv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAMEBUFFERPARAMETERIVPROC glad_glGetFramebufferParameteriv
     * }
     */
    public static MemorySegment glad_glGetFramebufferParameteriv() {
        return glad_glGetFramebufferParameteriv$constants.SEGMENT.get(glad_glGetFramebufferParameteriv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAMEBUFFERPARAMETERIVPROC glad_glGetFramebufferParameteriv
     * }
     */
    public static void glad_glGetFramebufferParameteriv(MemorySegment varValue) {
        glad_glGetFramebufferParameteriv$constants.SEGMENT.set(glad_glGetFramebufferParameteriv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetFramebufferParameteriv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetFramebufferParameteriv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAMEBUFFERPARAMETERIVPROC glad_debug_glGetFramebufferParameteriv
     * }
     */
    public static AddressLayout glad_debug_glGetFramebufferParameteriv$layout() {
        return glad_debug_glGetFramebufferParameteriv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAMEBUFFERPARAMETERIVPROC glad_debug_glGetFramebufferParameteriv
     * }
     */
    public static MemorySegment glad_debug_glGetFramebufferParameteriv$segment() {
        return glad_debug_glGetFramebufferParameteriv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAMEBUFFERPARAMETERIVPROC glad_debug_glGetFramebufferParameteriv
     * }
     */
    public static MemorySegment glad_debug_glGetFramebufferParameteriv() {
        return glad_debug_glGetFramebufferParameteriv$constants.SEGMENT.get(glad_debug_glGetFramebufferParameteriv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAMEBUFFERPARAMETERIVPROC glad_debug_glGetFramebufferParameteriv
     * }
     */
    public static void glad_debug_glGetFramebufferParameteriv(MemorySegment varValue) {
        glad_debug_glGetFramebufferParameteriv$constants.SEGMENT.set(glad_debug_glGetFramebufferParameteriv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetFramebufferParameterivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetFramebufferParameterivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC glad_glGetFramebufferParameterivEXT
     * }
     */
    public static AddressLayout glad_glGetFramebufferParameterivEXT$layout() {
        return glad_glGetFramebufferParameterivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC glad_glGetFramebufferParameterivEXT
     * }
     */
    public static MemorySegment glad_glGetFramebufferParameterivEXT$segment() {
        return glad_glGetFramebufferParameterivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC glad_glGetFramebufferParameterivEXT
     * }
     */
    public static MemorySegment glad_glGetFramebufferParameterivEXT() {
        return glad_glGetFramebufferParameterivEXT$constants.SEGMENT.get(glad_glGetFramebufferParameterivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC glad_glGetFramebufferParameterivEXT
     * }
     */
    public static void glad_glGetFramebufferParameterivEXT(MemorySegment varValue) {
        glad_glGetFramebufferParameterivEXT$constants.SEGMENT.set(glad_glGetFramebufferParameterivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetFramebufferParameterivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetFramebufferParameterivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC glad_debug_glGetFramebufferParameterivEXT
     * }
     */
    public static AddressLayout glad_debug_glGetFramebufferParameterivEXT$layout() {
        return glad_debug_glGetFramebufferParameterivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC glad_debug_glGetFramebufferParameterivEXT
     * }
     */
    public static MemorySegment glad_debug_glGetFramebufferParameterivEXT$segment() {
        return glad_debug_glGetFramebufferParameterivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC glad_debug_glGetFramebufferParameterivEXT
     * }
     */
    public static MemorySegment glad_debug_glGetFramebufferParameterivEXT() {
        return glad_debug_glGetFramebufferParameterivEXT$constants.SEGMENT.get(glad_debug_glGetFramebufferParameterivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC glad_debug_glGetFramebufferParameterivEXT
     * }
     */
    public static void glad_debug_glGetFramebufferParameterivEXT(MemorySegment varValue) {
        glad_debug_glGetFramebufferParameterivEXT$constants.SEGMENT.set(glad_debug_glGetFramebufferParameterivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetGraphicsResetStatus$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetGraphicsResetStatus").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETGRAPHICSRESETSTATUSPROC glad_glGetGraphicsResetStatus
     * }
     */
    public static AddressLayout glad_glGetGraphicsResetStatus$layout() {
        return glad_glGetGraphicsResetStatus$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETGRAPHICSRESETSTATUSPROC glad_glGetGraphicsResetStatus
     * }
     */
    public static MemorySegment glad_glGetGraphicsResetStatus$segment() {
        return glad_glGetGraphicsResetStatus$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETGRAPHICSRESETSTATUSPROC glad_glGetGraphicsResetStatus
     * }
     */
    public static MemorySegment glad_glGetGraphicsResetStatus() {
        return glad_glGetGraphicsResetStatus$constants.SEGMENT.get(glad_glGetGraphicsResetStatus$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETGRAPHICSRESETSTATUSPROC glad_glGetGraphicsResetStatus
     * }
     */
    public static void glad_glGetGraphicsResetStatus(MemorySegment varValue) {
        glad_glGetGraphicsResetStatus$constants.SEGMENT.set(glad_glGetGraphicsResetStatus$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetGraphicsResetStatus$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetGraphicsResetStatus").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETGRAPHICSRESETSTATUSPROC glad_debug_glGetGraphicsResetStatus
     * }
     */
    public static AddressLayout glad_debug_glGetGraphicsResetStatus$layout() {
        return glad_debug_glGetGraphicsResetStatus$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETGRAPHICSRESETSTATUSPROC glad_debug_glGetGraphicsResetStatus
     * }
     */
    public static MemorySegment glad_debug_glGetGraphicsResetStatus$segment() {
        return glad_debug_glGetGraphicsResetStatus$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETGRAPHICSRESETSTATUSPROC glad_debug_glGetGraphicsResetStatus
     * }
     */
    public static MemorySegment glad_debug_glGetGraphicsResetStatus() {
        return glad_debug_glGetGraphicsResetStatus$constants.SEGMENT.get(glad_debug_glGetGraphicsResetStatus$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETGRAPHICSRESETSTATUSPROC glad_debug_glGetGraphicsResetStatus
     * }
     */
    public static void glad_debug_glGetGraphicsResetStatus(MemorySegment varValue) {
        glad_debug_glGetGraphicsResetStatus$constants.SEGMENT.set(glad_debug_glGetGraphicsResetStatus$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetGraphicsResetStatusARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetGraphicsResetStatusARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETGRAPHICSRESETSTATUSARBPROC glad_glGetGraphicsResetStatusARB
     * }
     */
    public static AddressLayout glad_glGetGraphicsResetStatusARB$layout() {
        return glad_glGetGraphicsResetStatusARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETGRAPHICSRESETSTATUSARBPROC glad_glGetGraphicsResetStatusARB
     * }
     */
    public static MemorySegment glad_glGetGraphicsResetStatusARB$segment() {
        return glad_glGetGraphicsResetStatusARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETGRAPHICSRESETSTATUSARBPROC glad_glGetGraphicsResetStatusARB
     * }
     */
    public static MemorySegment glad_glGetGraphicsResetStatusARB() {
        return glad_glGetGraphicsResetStatusARB$constants.SEGMENT.get(glad_glGetGraphicsResetStatusARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETGRAPHICSRESETSTATUSARBPROC glad_glGetGraphicsResetStatusARB
     * }
     */
    public static void glad_glGetGraphicsResetStatusARB(MemorySegment varValue) {
        glad_glGetGraphicsResetStatusARB$constants.SEGMENT.set(glad_glGetGraphicsResetStatusARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetGraphicsResetStatusARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetGraphicsResetStatusARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETGRAPHICSRESETSTATUSARBPROC glad_debug_glGetGraphicsResetStatusARB
     * }
     */
    public static AddressLayout glad_debug_glGetGraphicsResetStatusARB$layout() {
        return glad_debug_glGetGraphicsResetStatusARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETGRAPHICSRESETSTATUSARBPROC glad_debug_glGetGraphicsResetStatusARB
     * }
     */
    public static MemorySegment glad_debug_glGetGraphicsResetStatusARB$segment() {
        return glad_debug_glGetGraphicsResetStatusARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETGRAPHICSRESETSTATUSARBPROC glad_debug_glGetGraphicsResetStatusARB
     * }
     */
    public static MemorySegment glad_debug_glGetGraphicsResetStatusARB() {
        return glad_debug_glGetGraphicsResetStatusARB$constants.SEGMENT.get(glad_debug_glGetGraphicsResetStatusARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETGRAPHICSRESETSTATUSARBPROC glad_debug_glGetGraphicsResetStatusARB
     * }
     */
    public static void glad_debug_glGetGraphicsResetStatusARB(MemorySegment varValue) {
        glad_debug_glGetGraphicsResetStatusARB$constants.SEGMENT.set(glad_debug_glGetGraphicsResetStatusARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetHandleARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetHandleARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETHANDLEARBPROC glad_glGetHandleARB
     * }
     */
    public static AddressLayout glad_glGetHandleARB$layout() {
        return glad_glGetHandleARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETHANDLEARBPROC glad_glGetHandleARB
     * }
     */
    public static MemorySegment glad_glGetHandleARB$segment() {
        return glad_glGetHandleARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETHANDLEARBPROC glad_glGetHandleARB
     * }
     */
    public static MemorySegment glad_glGetHandleARB() {
        return glad_glGetHandleARB$constants.SEGMENT.get(glad_glGetHandleARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETHANDLEARBPROC glad_glGetHandleARB
     * }
     */
    public static void glad_glGetHandleARB(MemorySegment varValue) {
        glad_glGetHandleARB$constants.SEGMENT.set(glad_glGetHandleARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetHandleARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetHandleARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETHANDLEARBPROC glad_debug_glGetHandleARB
     * }
     */
    public static AddressLayout glad_debug_glGetHandleARB$layout() {
        return glad_debug_glGetHandleARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETHANDLEARBPROC glad_debug_glGetHandleARB
     * }
     */
    public static MemorySegment glad_debug_glGetHandleARB$segment() {
        return glad_debug_glGetHandleARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETHANDLEARBPROC glad_debug_glGetHandleARB
     * }
     */
    public static MemorySegment glad_debug_glGetHandleARB() {
        return glad_debug_glGetHandleARB$constants.SEGMENT.get(glad_debug_glGetHandleARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETHANDLEARBPROC glad_debug_glGetHandleARB
     * }
     */
    public static void glad_debug_glGetHandleARB(MemorySegment varValue) {
        glad_debug_glGetHandleARB$constants.SEGMENT.set(glad_debug_glGetHandleARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetHistogram$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetHistogram").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETHISTOGRAMPROC glad_glGetHistogram
     * }
     */
    public static AddressLayout glad_glGetHistogram$layout() {
        return glad_glGetHistogram$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETHISTOGRAMPROC glad_glGetHistogram
     * }
     */
    public static MemorySegment glad_glGetHistogram$segment() {
        return glad_glGetHistogram$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETHISTOGRAMPROC glad_glGetHistogram
     * }
     */
    public static MemorySegment glad_glGetHistogram() {
        return glad_glGetHistogram$constants.SEGMENT.get(glad_glGetHistogram$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETHISTOGRAMPROC glad_glGetHistogram
     * }
     */
    public static void glad_glGetHistogram(MemorySegment varValue) {
        glad_glGetHistogram$constants.SEGMENT.set(glad_glGetHistogram$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetHistogram$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetHistogram").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETHISTOGRAMPROC glad_debug_glGetHistogram
     * }
     */
    public static AddressLayout glad_debug_glGetHistogram$layout() {
        return glad_debug_glGetHistogram$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETHISTOGRAMPROC glad_debug_glGetHistogram
     * }
     */
    public static MemorySegment glad_debug_glGetHistogram$segment() {
        return glad_debug_glGetHistogram$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETHISTOGRAMPROC glad_debug_glGetHistogram
     * }
     */
    public static MemorySegment glad_debug_glGetHistogram() {
        return glad_debug_glGetHistogram$constants.SEGMENT.get(glad_debug_glGetHistogram$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETHISTOGRAMPROC glad_debug_glGetHistogram
     * }
     */
    public static void glad_debug_glGetHistogram(MemorySegment varValue) {
        glad_debug_glGetHistogram$constants.SEGMENT.set(glad_debug_glGetHistogram$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetHistogramParameterfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetHistogramParameterfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETHISTOGRAMPARAMETERFVPROC glad_glGetHistogramParameterfv
     * }
     */
    public static AddressLayout glad_glGetHistogramParameterfv$layout() {
        return glad_glGetHistogramParameterfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETHISTOGRAMPARAMETERFVPROC glad_glGetHistogramParameterfv
     * }
     */
    public static MemorySegment glad_glGetHistogramParameterfv$segment() {
        return glad_glGetHistogramParameterfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETHISTOGRAMPARAMETERFVPROC glad_glGetHistogramParameterfv
     * }
     */
    public static MemorySegment glad_glGetHistogramParameterfv() {
        return glad_glGetHistogramParameterfv$constants.SEGMENT.get(glad_glGetHistogramParameterfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETHISTOGRAMPARAMETERFVPROC glad_glGetHistogramParameterfv
     * }
     */
    public static void glad_glGetHistogramParameterfv(MemorySegment varValue) {
        glad_glGetHistogramParameterfv$constants.SEGMENT.set(glad_glGetHistogramParameterfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetHistogramParameterfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetHistogramParameterfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETHISTOGRAMPARAMETERFVPROC glad_debug_glGetHistogramParameterfv
     * }
     */
    public static AddressLayout glad_debug_glGetHistogramParameterfv$layout() {
        return glad_debug_glGetHistogramParameterfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETHISTOGRAMPARAMETERFVPROC glad_debug_glGetHistogramParameterfv
     * }
     */
    public static MemorySegment glad_debug_glGetHistogramParameterfv$segment() {
        return glad_debug_glGetHistogramParameterfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETHISTOGRAMPARAMETERFVPROC glad_debug_glGetHistogramParameterfv
     * }
     */
    public static MemorySegment glad_debug_glGetHistogramParameterfv() {
        return glad_debug_glGetHistogramParameterfv$constants.SEGMENT.get(glad_debug_glGetHistogramParameterfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETHISTOGRAMPARAMETERFVPROC glad_debug_glGetHistogramParameterfv
     * }
     */
    public static void glad_debug_glGetHistogramParameterfv(MemorySegment varValue) {
        glad_debug_glGetHistogramParameterfv$constants.SEGMENT.set(glad_debug_glGetHistogramParameterfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetHistogramParameteriv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetHistogramParameteriv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETHISTOGRAMPARAMETERIVPROC glad_glGetHistogramParameteriv
     * }
     */
    public static AddressLayout glad_glGetHistogramParameteriv$layout() {
        return glad_glGetHistogramParameteriv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETHISTOGRAMPARAMETERIVPROC glad_glGetHistogramParameteriv
     * }
     */
    public static MemorySegment glad_glGetHistogramParameteriv$segment() {
        return glad_glGetHistogramParameteriv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETHISTOGRAMPARAMETERIVPROC glad_glGetHistogramParameteriv
     * }
     */
    public static MemorySegment glad_glGetHistogramParameteriv() {
        return glad_glGetHistogramParameteriv$constants.SEGMENT.get(glad_glGetHistogramParameteriv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETHISTOGRAMPARAMETERIVPROC glad_glGetHistogramParameteriv
     * }
     */
    public static void glad_glGetHistogramParameteriv(MemorySegment varValue) {
        glad_glGetHistogramParameteriv$constants.SEGMENT.set(glad_glGetHistogramParameteriv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetHistogramParameteriv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetHistogramParameteriv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETHISTOGRAMPARAMETERIVPROC glad_debug_glGetHistogramParameteriv
     * }
     */
    public static AddressLayout glad_debug_glGetHistogramParameteriv$layout() {
        return glad_debug_glGetHistogramParameteriv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETHISTOGRAMPARAMETERIVPROC glad_debug_glGetHistogramParameteriv
     * }
     */
    public static MemorySegment glad_debug_glGetHistogramParameteriv$segment() {
        return glad_debug_glGetHistogramParameteriv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETHISTOGRAMPARAMETERIVPROC glad_debug_glGetHistogramParameteriv
     * }
     */
    public static MemorySegment glad_debug_glGetHistogramParameteriv() {
        return glad_debug_glGetHistogramParameteriv$constants.SEGMENT.get(glad_debug_glGetHistogramParameteriv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETHISTOGRAMPARAMETERIVPROC glad_debug_glGetHistogramParameteriv
     * }
     */
    public static void glad_debug_glGetHistogramParameteriv(MemorySegment varValue) {
        glad_debug_glGetHistogramParameteriv$constants.SEGMENT.set(glad_debug_glGetHistogramParameteriv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetInfoLogARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetInfoLogARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINFOLOGARBPROC glad_glGetInfoLogARB
     * }
     */
    public static AddressLayout glad_glGetInfoLogARB$layout() {
        return glad_glGetInfoLogARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINFOLOGARBPROC glad_glGetInfoLogARB
     * }
     */
    public static MemorySegment glad_glGetInfoLogARB$segment() {
        return glad_glGetInfoLogARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINFOLOGARBPROC glad_glGetInfoLogARB
     * }
     */
    public static MemorySegment glad_glGetInfoLogARB() {
        return glad_glGetInfoLogARB$constants.SEGMENT.get(glad_glGetInfoLogARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINFOLOGARBPROC glad_glGetInfoLogARB
     * }
     */
    public static void glad_glGetInfoLogARB(MemorySegment varValue) {
        glad_glGetInfoLogARB$constants.SEGMENT.set(glad_glGetInfoLogARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetInfoLogARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetInfoLogARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINFOLOGARBPROC glad_debug_glGetInfoLogARB
     * }
     */
    public static AddressLayout glad_debug_glGetInfoLogARB$layout() {
        return glad_debug_glGetInfoLogARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINFOLOGARBPROC glad_debug_glGetInfoLogARB
     * }
     */
    public static MemorySegment glad_debug_glGetInfoLogARB$segment() {
        return glad_debug_glGetInfoLogARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINFOLOGARBPROC glad_debug_glGetInfoLogARB
     * }
     */
    public static MemorySegment glad_debug_glGetInfoLogARB() {
        return glad_debug_glGetInfoLogARB$constants.SEGMENT.get(glad_debug_glGetInfoLogARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINFOLOGARBPROC glad_debug_glGetInfoLogARB
     * }
     */
    public static void glad_debug_glGetInfoLogARB(MemorySegment varValue) {
        glad_debug_glGetInfoLogARB$constants.SEGMENT.set(glad_debug_glGetInfoLogARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetInteger64i_v$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetInteger64i_v").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTEGER64I_VPROC glad_glGetInteger64i_v
     * }
     */
    public static AddressLayout glad_glGetInteger64i_v$layout() {
        return glad_glGetInteger64i_v$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTEGER64I_VPROC glad_glGetInteger64i_v
     * }
     */
    public static MemorySegment glad_glGetInteger64i_v$segment() {
        return glad_glGetInteger64i_v$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTEGER64I_VPROC glad_glGetInteger64i_v
     * }
     */
    public static MemorySegment glad_glGetInteger64i_v() {
        return glad_glGetInteger64i_v$constants.SEGMENT.get(glad_glGetInteger64i_v$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTEGER64I_VPROC glad_glGetInteger64i_v
     * }
     */
    public static void glad_glGetInteger64i_v(MemorySegment varValue) {
        glad_glGetInteger64i_v$constants.SEGMENT.set(glad_glGetInteger64i_v$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetInteger64i_v$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetInteger64i_v").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTEGER64I_VPROC glad_debug_glGetInteger64i_v
     * }
     */
    public static AddressLayout glad_debug_glGetInteger64i_v$layout() {
        return glad_debug_glGetInteger64i_v$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTEGER64I_VPROC glad_debug_glGetInteger64i_v
     * }
     */
    public static MemorySegment glad_debug_glGetInteger64i_v$segment() {
        return glad_debug_glGetInteger64i_v$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTEGER64I_VPROC glad_debug_glGetInteger64i_v
     * }
     */
    public static MemorySegment glad_debug_glGetInteger64i_v() {
        return glad_debug_glGetInteger64i_v$constants.SEGMENT.get(glad_debug_glGetInteger64i_v$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTEGER64I_VPROC glad_debug_glGetInteger64i_v
     * }
     */
    public static void glad_debug_glGetInteger64i_v(MemorySegment varValue) {
        glad_debug_glGetInteger64i_v$constants.SEGMENT.set(glad_debug_glGetInteger64i_v$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetInteger64v$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetInteger64v").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTEGER64VPROC glad_glGetInteger64v
     * }
     */
    public static AddressLayout glad_glGetInteger64v$layout() {
        return glad_glGetInteger64v$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTEGER64VPROC glad_glGetInteger64v
     * }
     */
    public static MemorySegment glad_glGetInteger64v$segment() {
        return glad_glGetInteger64v$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTEGER64VPROC glad_glGetInteger64v
     * }
     */
    public static MemorySegment glad_glGetInteger64v() {
        return glad_glGetInteger64v$constants.SEGMENT.get(glad_glGetInteger64v$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTEGER64VPROC glad_glGetInteger64v
     * }
     */
    public static void glad_glGetInteger64v(MemorySegment varValue) {
        glad_glGetInteger64v$constants.SEGMENT.set(glad_glGetInteger64v$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetInteger64v$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetInteger64v").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTEGER64VPROC glad_debug_glGetInteger64v
     * }
     */
    public static AddressLayout glad_debug_glGetInteger64v$layout() {
        return glad_debug_glGetInteger64v$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTEGER64VPROC glad_debug_glGetInteger64v
     * }
     */
    public static MemorySegment glad_debug_glGetInteger64v$segment() {
        return glad_debug_glGetInteger64v$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTEGER64VPROC glad_debug_glGetInteger64v
     * }
     */
    public static MemorySegment glad_debug_glGetInteger64v() {
        return glad_debug_glGetInteger64v$constants.SEGMENT.get(glad_debug_glGetInteger64v$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTEGER64VPROC glad_debug_glGetInteger64v
     * }
     */
    public static void glad_debug_glGetInteger64v(MemorySegment varValue) {
        glad_debug_glGetInteger64v$constants.SEGMENT.set(glad_debug_glGetInteger64v$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetIntegerIndexedvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetIntegerIndexedvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTEGERINDEXEDVEXTPROC glad_glGetIntegerIndexedvEXT
     * }
     */
    public static AddressLayout glad_glGetIntegerIndexedvEXT$layout() {
        return glad_glGetIntegerIndexedvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTEGERINDEXEDVEXTPROC glad_glGetIntegerIndexedvEXT
     * }
     */
    public static MemorySegment glad_glGetIntegerIndexedvEXT$segment() {
        return glad_glGetIntegerIndexedvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTEGERINDEXEDVEXTPROC glad_glGetIntegerIndexedvEXT
     * }
     */
    public static MemorySegment glad_glGetIntegerIndexedvEXT() {
        return glad_glGetIntegerIndexedvEXT$constants.SEGMENT.get(glad_glGetIntegerIndexedvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTEGERINDEXEDVEXTPROC glad_glGetIntegerIndexedvEXT
     * }
     */
    public static void glad_glGetIntegerIndexedvEXT(MemorySegment varValue) {
        glad_glGetIntegerIndexedvEXT$constants.SEGMENT.set(glad_glGetIntegerIndexedvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetIntegerIndexedvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetIntegerIndexedvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTEGERINDEXEDVEXTPROC glad_debug_glGetIntegerIndexedvEXT
     * }
     */
    public static AddressLayout glad_debug_glGetIntegerIndexedvEXT$layout() {
        return glad_debug_glGetIntegerIndexedvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTEGERINDEXEDVEXTPROC glad_debug_glGetIntegerIndexedvEXT
     * }
     */
    public static MemorySegment glad_debug_glGetIntegerIndexedvEXT$segment() {
        return glad_debug_glGetIntegerIndexedvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTEGERINDEXEDVEXTPROC glad_debug_glGetIntegerIndexedvEXT
     * }
     */
    public static MemorySegment glad_debug_glGetIntegerIndexedvEXT() {
        return glad_debug_glGetIntegerIndexedvEXT$constants.SEGMENT.get(glad_debug_glGetIntegerIndexedvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTEGERINDEXEDVEXTPROC glad_debug_glGetIntegerIndexedvEXT
     * }
     */
    public static void glad_debug_glGetIntegerIndexedvEXT(MemorySegment varValue) {
        glad_debug_glGetIntegerIndexedvEXT$constants.SEGMENT.set(glad_debug_glGetIntegerIndexedvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetIntegeri_v$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetIntegeri_v").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTEGERI_VPROC glad_glGetIntegeri_v
     * }
     */
    public static AddressLayout glad_glGetIntegeri_v$layout() {
        return glad_glGetIntegeri_v$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTEGERI_VPROC glad_glGetIntegeri_v
     * }
     */
    public static MemorySegment glad_glGetIntegeri_v$segment() {
        return glad_glGetIntegeri_v$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTEGERI_VPROC glad_glGetIntegeri_v
     * }
     */
    public static MemorySegment glad_glGetIntegeri_v() {
        return glad_glGetIntegeri_v$constants.SEGMENT.get(glad_glGetIntegeri_v$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTEGERI_VPROC glad_glGetIntegeri_v
     * }
     */
    public static void glad_glGetIntegeri_v(MemorySegment varValue) {
        glad_glGetIntegeri_v$constants.SEGMENT.set(glad_glGetIntegeri_v$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetIntegeri_v$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetIntegeri_v").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTEGERI_VPROC glad_debug_glGetIntegeri_v
     * }
     */
    public static AddressLayout glad_debug_glGetIntegeri_v$layout() {
        return glad_debug_glGetIntegeri_v$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTEGERI_VPROC glad_debug_glGetIntegeri_v
     * }
     */
    public static MemorySegment glad_debug_glGetIntegeri_v$segment() {
        return glad_debug_glGetIntegeri_v$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTEGERI_VPROC glad_debug_glGetIntegeri_v
     * }
     */
    public static MemorySegment glad_debug_glGetIntegeri_v() {
        return glad_debug_glGetIntegeri_v$constants.SEGMENT.get(glad_debug_glGetIntegeri_v$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTEGERI_VPROC glad_debug_glGetIntegeri_v
     * }
     */
    public static void glad_debug_glGetIntegeri_v(MemorySegment varValue) {
        glad_debug_glGetIntegeri_v$constants.SEGMENT.set(glad_debug_glGetIntegeri_v$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetIntegerv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetIntegerv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTEGERVPROC glad_glGetIntegerv
     * }
     */
    public static AddressLayout glad_glGetIntegerv$layout() {
        return glad_glGetIntegerv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTEGERVPROC glad_glGetIntegerv
     * }
     */
    public static MemorySegment glad_glGetIntegerv$segment() {
        return glad_glGetIntegerv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTEGERVPROC glad_glGetIntegerv
     * }
     */
    public static MemorySegment glad_glGetIntegerv() {
        return glad_glGetIntegerv$constants.SEGMENT.get(glad_glGetIntegerv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTEGERVPROC glad_glGetIntegerv
     * }
     */
    public static void glad_glGetIntegerv(MemorySegment varValue) {
        glad_glGetIntegerv$constants.SEGMENT.set(glad_glGetIntegerv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetIntegerv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetIntegerv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTEGERVPROC glad_debug_glGetIntegerv
     * }
     */
    public static AddressLayout glad_debug_glGetIntegerv$layout() {
        return glad_debug_glGetIntegerv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTEGERVPROC glad_debug_glGetIntegerv
     * }
     */
    public static MemorySegment glad_debug_glGetIntegerv$segment() {
        return glad_debug_glGetIntegerv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTEGERVPROC glad_debug_glGetIntegerv
     * }
     */
    public static MemorySegment glad_debug_glGetIntegerv() {
        return glad_debug_glGetIntegerv$constants.SEGMENT.get(glad_debug_glGetIntegerv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTEGERVPROC glad_debug_glGetIntegerv
     * }
     */
    public static void glad_debug_glGetIntegerv(MemorySegment varValue) {
        glad_debug_glGetIntegerv$constants.SEGMENT.set(glad_debug_glGetIntegerv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetInternalformati64v$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetInternalformati64v").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTERNALFORMATI64VPROC glad_glGetInternalformati64v
     * }
     */
    public static AddressLayout glad_glGetInternalformati64v$layout() {
        return glad_glGetInternalformati64v$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTERNALFORMATI64VPROC glad_glGetInternalformati64v
     * }
     */
    public static MemorySegment glad_glGetInternalformati64v$segment() {
        return glad_glGetInternalformati64v$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTERNALFORMATI64VPROC glad_glGetInternalformati64v
     * }
     */
    public static MemorySegment glad_glGetInternalformati64v() {
        return glad_glGetInternalformati64v$constants.SEGMENT.get(glad_glGetInternalformati64v$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTERNALFORMATI64VPROC glad_glGetInternalformati64v
     * }
     */
    public static void glad_glGetInternalformati64v(MemorySegment varValue) {
        glad_glGetInternalformati64v$constants.SEGMENT.set(glad_glGetInternalformati64v$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetInternalformati64v$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetInternalformati64v").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTERNALFORMATI64VPROC glad_debug_glGetInternalformati64v
     * }
     */
    public static AddressLayout glad_debug_glGetInternalformati64v$layout() {
        return glad_debug_glGetInternalformati64v$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTERNALFORMATI64VPROC glad_debug_glGetInternalformati64v
     * }
     */
    public static MemorySegment glad_debug_glGetInternalformati64v$segment() {
        return glad_debug_glGetInternalformati64v$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTERNALFORMATI64VPROC glad_debug_glGetInternalformati64v
     * }
     */
    public static MemorySegment glad_debug_glGetInternalformati64v() {
        return glad_debug_glGetInternalformati64v$constants.SEGMENT.get(glad_debug_glGetInternalformati64v$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTERNALFORMATI64VPROC glad_debug_glGetInternalformati64v
     * }
     */
    public static void glad_debug_glGetInternalformati64v(MemorySegment varValue) {
        glad_debug_glGetInternalformati64v$constants.SEGMENT.set(glad_debug_glGetInternalformati64v$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetInternalformativ$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetInternalformativ").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTERNALFORMATIVPROC glad_glGetInternalformativ
     * }
     */
    public static AddressLayout glad_glGetInternalformativ$layout() {
        return glad_glGetInternalformativ$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTERNALFORMATIVPROC glad_glGetInternalformativ
     * }
     */
    public static MemorySegment glad_glGetInternalformativ$segment() {
        return glad_glGetInternalformativ$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTERNALFORMATIVPROC glad_glGetInternalformativ
     * }
     */
    public static MemorySegment glad_glGetInternalformativ() {
        return glad_glGetInternalformativ$constants.SEGMENT.get(glad_glGetInternalformativ$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTERNALFORMATIVPROC glad_glGetInternalformativ
     * }
     */
    public static void glad_glGetInternalformativ(MemorySegment varValue) {
        glad_glGetInternalformativ$constants.SEGMENT.set(glad_glGetInternalformativ$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetInternalformativ$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetInternalformativ").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTERNALFORMATIVPROC glad_debug_glGetInternalformativ
     * }
     */
    public static AddressLayout glad_debug_glGetInternalformativ$layout() {
        return glad_debug_glGetInternalformativ$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTERNALFORMATIVPROC glad_debug_glGetInternalformativ
     * }
     */
    public static MemorySegment glad_debug_glGetInternalformativ$segment() {
        return glad_debug_glGetInternalformativ$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTERNALFORMATIVPROC glad_debug_glGetInternalformativ
     * }
     */
    public static MemorySegment glad_debug_glGetInternalformativ() {
        return glad_debug_glGetInternalformativ$constants.SEGMENT.get(glad_debug_glGetInternalformativ$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETINTERNALFORMATIVPROC glad_debug_glGetInternalformativ
     * }
     */
    public static void glad_debug_glGetInternalformativ(MemorySegment varValue) {
        glad_debug_glGetInternalformativ$constants.SEGMENT.set(glad_debug_glGetInternalformativ$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetLightfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetLightfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETLIGHTFVPROC glad_glGetLightfv
     * }
     */
    public static AddressLayout glad_glGetLightfv$layout() {
        return glad_glGetLightfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETLIGHTFVPROC glad_glGetLightfv
     * }
     */
    public static MemorySegment glad_glGetLightfv$segment() {
        return glad_glGetLightfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETLIGHTFVPROC glad_glGetLightfv
     * }
     */
    public static MemorySegment glad_glGetLightfv() {
        return glad_glGetLightfv$constants.SEGMENT.get(glad_glGetLightfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETLIGHTFVPROC glad_glGetLightfv
     * }
     */
    public static void glad_glGetLightfv(MemorySegment varValue) {
        glad_glGetLightfv$constants.SEGMENT.set(glad_glGetLightfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetLightfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetLightfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETLIGHTFVPROC glad_debug_glGetLightfv
     * }
     */
    public static AddressLayout glad_debug_glGetLightfv$layout() {
        return glad_debug_glGetLightfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETLIGHTFVPROC glad_debug_glGetLightfv
     * }
     */
    public static MemorySegment glad_debug_glGetLightfv$segment() {
        return glad_debug_glGetLightfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETLIGHTFVPROC glad_debug_glGetLightfv
     * }
     */
    public static MemorySegment glad_debug_glGetLightfv() {
        return glad_debug_glGetLightfv$constants.SEGMENT.get(glad_debug_glGetLightfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETLIGHTFVPROC glad_debug_glGetLightfv
     * }
     */
    public static void glad_debug_glGetLightfv(MemorySegment varValue) {
        glad_debug_glGetLightfv$constants.SEGMENT.set(glad_debug_glGetLightfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetLightiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetLightiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETLIGHTIVPROC glad_glGetLightiv
     * }
     */
    public static AddressLayout glad_glGetLightiv$layout() {
        return glad_glGetLightiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETLIGHTIVPROC glad_glGetLightiv
     * }
     */
    public static MemorySegment glad_glGetLightiv$segment() {
        return glad_glGetLightiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETLIGHTIVPROC glad_glGetLightiv
     * }
     */
    public static MemorySegment glad_glGetLightiv() {
        return glad_glGetLightiv$constants.SEGMENT.get(glad_glGetLightiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETLIGHTIVPROC glad_glGetLightiv
     * }
     */
    public static void glad_glGetLightiv(MemorySegment varValue) {
        glad_glGetLightiv$constants.SEGMENT.set(glad_glGetLightiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetLightiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetLightiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETLIGHTIVPROC glad_debug_glGetLightiv
     * }
     */
    public static AddressLayout glad_debug_glGetLightiv$layout() {
        return glad_debug_glGetLightiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETLIGHTIVPROC glad_debug_glGetLightiv
     * }
     */
    public static MemorySegment glad_debug_glGetLightiv$segment() {
        return glad_debug_glGetLightiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETLIGHTIVPROC glad_debug_glGetLightiv
     * }
     */
    public static MemorySegment glad_debug_glGetLightiv() {
        return glad_debug_glGetLightiv$constants.SEGMENT.get(glad_debug_glGetLightiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETLIGHTIVPROC glad_debug_glGetLightiv
     * }
     */
    public static void glad_debug_glGetLightiv(MemorySegment varValue) {
        glad_debug_glGetLightiv$constants.SEGMENT.set(glad_debug_glGetLightiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetMapdv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetMapdv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMAPDVPROC glad_glGetMapdv
     * }
     */
    public static AddressLayout glad_glGetMapdv$layout() {
        return glad_glGetMapdv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMAPDVPROC glad_glGetMapdv
     * }
     */
    public static MemorySegment glad_glGetMapdv$segment() {
        return glad_glGetMapdv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMAPDVPROC glad_glGetMapdv
     * }
     */
    public static MemorySegment glad_glGetMapdv() {
        return glad_glGetMapdv$constants.SEGMENT.get(glad_glGetMapdv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMAPDVPROC glad_glGetMapdv
     * }
     */
    public static void glad_glGetMapdv(MemorySegment varValue) {
        glad_glGetMapdv$constants.SEGMENT.set(glad_glGetMapdv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetMapdv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetMapdv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMAPDVPROC glad_debug_glGetMapdv
     * }
     */
    public static AddressLayout glad_debug_glGetMapdv$layout() {
        return glad_debug_glGetMapdv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMAPDVPROC glad_debug_glGetMapdv
     * }
     */
    public static MemorySegment glad_debug_glGetMapdv$segment() {
        return glad_debug_glGetMapdv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMAPDVPROC glad_debug_glGetMapdv
     * }
     */
    public static MemorySegment glad_debug_glGetMapdv() {
        return glad_debug_glGetMapdv$constants.SEGMENT.get(glad_debug_glGetMapdv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMAPDVPROC glad_debug_glGetMapdv
     * }
     */
    public static void glad_debug_glGetMapdv(MemorySegment varValue) {
        glad_debug_glGetMapdv$constants.SEGMENT.set(glad_debug_glGetMapdv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetMapfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetMapfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMAPFVPROC glad_glGetMapfv
     * }
     */
    public static AddressLayout glad_glGetMapfv$layout() {
        return glad_glGetMapfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMAPFVPROC glad_glGetMapfv
     * }
     */
    public static MemorySegment glad_glGetMapfv$segment() {
        return glad_glGetMapfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMAPFVPROC glad_glGetMapfv
     * }
     */
    public static MemorySegment glad_glGetMapfv() {
        return glad_glGetMapfv$constants.SEGMENT.get(glad_glGetMapfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMAPFVPROC glad_glGetMapfv
     * }
     */
    public static void glad_glGetMapfv(MemorySegment varValue) {
        glad_glGetMapfv$constants.SEGMENT.set(glad_glGetMapfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetMapfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetMapfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMAPFVPROC glad_debug_glGetMapfv
     * }
     */
    public static AddressLayout glad_debug_glGetMapfv$layout() {
        return glad_debug_glGetMapfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMAPFVPROC glad_debug_glGetMapfv
     * }
     */
    public static MemorySegment glad_debug_glGetMapfv$segment() {
        return glad_debug_glGetMapfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMAPFVPROC glad_debug_glGetMapfv
     * }
     */
    public static MemorySegment glad_debug_glGetMapfv() {
        return glad_debug_glGetMapfv$constants.SEGMENT.get(glad_debug_glGetMapfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMAPFVPROC glad_debug_glGetMapfv
     * }
     */
    public static void glad_debug_glGetMapfv(MemorySegment varValue) {
        glad_debug_glGetMapfv$constants.SEGMENT.set(glad_debug_glGetMapfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetMapiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetMapiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMAPIVPROC glad_glGetMapiv
     * }
     */
    public static AddressLayout glad_glGetMapiv$layout() {
        return glad_glGetMapiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMAPIVPROC glad_glGetMapiv
     * }
     */
    public static MemorySegment glad_glGetMapiv$segment() {
        return glad_glGetMapiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMAPIVPROC glad_glGetMapiv
     * }
     */
    public static MemorySegment glad_glGetMapiv() {
        return glad_glGetMapiv$constants.SEGMENT.get(glad_glGetMapiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMAPIVPROC glad_glGetMapiv
     * }
     */
    public static void glad_glGetMapiv(MemorySegment varValue) {
        glad_glGetMapiv$constants.SEGMENT.set(glad_glGetMapiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetMapiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetMapiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMAPIVPROC glad_debug_glGetMapiv
     * }
     */
    public static AddressLayout glad_debug_glGetMapiv$layout() {
        return glad_debug_glGetMapiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMAPIVPROC glad_debug_glGetMapiv
     * }
     */
    public static MemorySegment glad_debug_glGetMapiv$segment() {
        return glad_debug_glGetMapiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMAPIVPROC glad_debug_glGetMapiv
     * }
     */
    public static MemorySegment glad_debug_glGetMapiv() {
        return glad_debug_glGetMapiv$constants.SEGMENT.get(glad_debug_glGetMapiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMAPIVPROC glad_debug_glGetMapiv
     * }
     */
    public static void glad_debug_glGetMapiv(MemorySegment varValue) {
        glad_debug_glGetMapiv$constants.SEGMENT.set(glad_debug_glGetMapiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetMaterialfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetMaterialfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMATERIALFVPROC glad_glGetMaterialfv
     * }
     */
    public static AddressLayout glad_glGetMaterialfv$layout() {
        return glad_glGetMaterialfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMATERIALFVPROC glad_glGetMaterialfv
     * }
     */
    public static MemorySegment glad_glGetMaterialfv$segment() {
        return glad_glGetMaterialfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMATERIALFVPROC glad_glGetMaterialfv
     * }
     */
    public static MemorySegment glad_glGetMaterialfv() {
        return glad_glGetMaterialfv$constants.SEGMENT.get(glad_glGetMaterialfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMATERIALFVPROC glad_glGetMaterialfv
     * }
     */
    public static void glad_glGetMaterialfv(MemorySegment varValue) {
        glad_glGetMaterialfv$constants.SEGMENT.set(glad_glGetMaterialfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetMaterialfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetMaterialfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMATERIALFVPROC glad_debug_glGetMaterialfv
     * }
     */
    public static AddressLayout glad_debug_glGetMaterialfv$layout() {
        return glad_debug_glGetMaterialfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMATERIALFVPROC glad_debug_glGetMaterialfv
     * }
     */
    public static MemorySegment glad_debug_glGetMaterialfv$segment() {
        return glad_debug_glGetMaterialfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMATERIALFVPROC glad_debug_glGetMaterialfv
     * }
     */
    public static MemorySegment glad_debug_glGetMaterialfv() {
        return glad_debug_glGetMaterialfv$constants.SEGMENT.get(glad_debug_glGetMaterialfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMATERIALFVPROC glad_debug_glGetMaterialfv
     * }
     */
    public static void glad_debug_glGetMaterialfv(MemorySegment varValue) {
        glad_debug_glGetMaterialfv$constants.SEGMENT.set(glad_debug_glGetMaterialfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetMaterialiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetMaterialiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMATERIALIVPROC glad_glGetMaterialiv
     * }
     */
    public static AddressLayout glad_glGetMaterialiv$layout() {
        return glad_glGetMaterialiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMATERIALIVPROC glad_glGetMaterialiv
     * }
     */
    public static MemorySegment glad_glGetMaterialiv$segment() {
        return glad_glGetMaterialiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMATERIALIVPROC glad_glGetMaterialiv
     * }
     */
    public static MemorySegment glad_glGetMaterialiv() {
        return glad_glGetMaterialiv$constants.SEGMENT.get(glad_glGetMaterialiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMATERIALIVPROC glad_glGetMaterialiv
     * }
     */
    public static void glad_glGetMaterialiv(MemorySegment varValue) {
        glad_glGetMaterialiv$constants.SEGMENT.set(glad_glGetMaterialiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetMaterialiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetMaterialiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMATERIALIVPROC glad_debug_glGetMaterialiv
     * }
     */
    public static AddressLayout glad_debug_glGetMaterialiv$layout() {
        return glad_debug_glGetMaterialiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMATERIALIVPROC glad_debug_glGetMaterialiv
     * }
     */
    public static MemorySegment glad_debug_glGetMaterialiv$segment() {
        return glad_debug_glGetMaterialiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMATERIALIVPROC glad_debug_glGetMaterialiv
     * }
     */
    public static MemorySegment glad_debug_glGetMaterialiv() {
        return glad_debug_glGetMaterialiv$constants.SEGMENT.get(glad_debug_glGetMaterialiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMATERIALIVPROC glad_debug_glGetMaterialiv
     * }
     */
    public static void glad_debug_glGetMaterialiv(MemorySegment varValue) {
        glad_debug_glGetMaterialiv$constants.SEGMENT.set(glad_debug_glGetMaterialiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetMinmax$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetMinmax").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMINMAXPROC glad_glGetMinmax
     * }
     */
    public static AddressLayout glad_glGetMinmax$layout() {
        return glad_glGetMinmax$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMINMAXPROC glad_glGetMinmax
     * }
     */
    public static MemorySegment glad_glGetMinmax$segment() {
        return glad_glGetMinmax$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMINMAXPROC glad_glGetMinmax
     * }
     */
    public static MemorySegment glad_glGetMinmax() {
        return glad_glGetMinmax$constants.SEGMENT.get(glad_glGetMinmax$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMINMAXPROC glad_glGetMinmax
     * }
     */
    public static void glad_glGetMinmax(MemorySegment varValue) {
        glad_glGetMinmax$constants.SEGMENT.set(glad_glGetMinmax$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetMinmax$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetMinmax").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMINMAXPROC glad_debug_glGetMinmax
     * }
     */
    public static AddressLayout glad_debug_glGetMinmax$layout() {
        return glad_debug_glGetMinmax$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMINMAXPROC glad_debug_glGetMinmax
     * }
     */
    public static MemorySegment glad_debug_glGetMinmax$segment() {
        return glad_debug_glGetMinmax$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMINMAXPROC glad_debug_glGetMinmax
     * }
     */
    public static MemorySegment glad_debug_glGetMinmax() {
        return glad_debug_glGetMinmax$constants.SEGMENT.get(glad_debug_glGetMinmax$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMINMAXPROC glad_debug_glGetMinmax
     * }
     */
    public static void glad_debug_glGetMinmax(MemorySegment varValue) {
        glad_debug_glGetMinmax$constants.SEGMENT.set(glad_debug_glGetMinmax$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetMinmaxParameterfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetMinmaxParameterfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMINMAXPARAMETERFVPROC glad_glGetMinmaxParameterfv
     * }
     */
    public static AddressLayout glad_glGetMinmaxParameterfv$layout() {
        return glad_glGetMinmaxParameterfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMINMAXPARAMETERFVPROC glad_glGetMinmaxParameterfv
     * }
     */
    public static MemorySegment glad_glGetMinmaxParameterfv$segment() {
        return glad_glGetMinmaxParameterfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMINMAXPARAMETERFVPROC glad_glGetMinmaxParameterfv
     * }
     */
    public static MemorySegment glad_glGetMinmaxParameterfv() {
        return glad_glGetMinmaxParameterfv$constants.SEGMENT.get(glad_glGetMinmaxParameterfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMINMAXPARAMETERFVPROC glad_glGetMinmaxParameterfv
     * }
     */
    public static void glad_glGetMinmaxParameterfv(MemorySegment varValue) {
        glad_glGetMinmaxParameterfv$constants.SEGMENT.set(glad_glGetMinmaxParameterfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetMinmaxParameterfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetMinmaxParameterfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMINMAXPARAMETERFVPROC glad_debug_glGetMinmaxParameterfv
     * }
     */
    public static AddressLayout glad_debug_glGetMinmaxParameterfv$layout() {
        return glad_debug_glGetMinmaxParameterfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMINMAXPARAMETERFVPROC glad_debug_glGetMinmaxParameterfv
     * }
     */
    public static MemorySegment glad_debug_glGetMinmaxParameterfv$segment() {
        return glad_debug_glGetMinmaxParameterfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMINMAXPARAMETERFVPROC glad_debug_glGetMinmaxParameterfv
     * }
     */
    public static MemorySegment glad_debug_glGetMinmaxParameterfv() {
        return glad_debug_glGetMinmaxParameterfv$constants.SEGMENT.get(glad_debug_glGetMinmaxParameterfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMINMAXPARAMETERFVPROC glad_debug_glGetMinmaxParameterfv
     * }
     */
    public static void glad_debug_glGetMinmaxParameterfv(MemorySegment varValue) {
        glad_debug_glGetMinmaxParameterfv$constants.SEGMENT.set(glad_debug_glGetMinmaxParameterfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetMinmaxParameteriv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetMinmaxParameteriv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMINMAXPARAMETERIVPROC glad_glGetMinmaxParameteriv
     * }
     */
    public static AddressLayout glad_glGetMinmaxParameteriv$layout() {
        return glad_glGetMinmaxParameteriv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMINMAXPARAMETERIVPROC glad_glGetMinmaxParameteriv
     * }
     */
    public static MemorySegment glad_glGetMinmaxParameteriv$segment() {
        return glad_glGetMinmaxParameteriv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMINMAXPARAMETERIVPROC glad_glGetMinmaxParameteriv
     * }
     */
    public static MemorySegment glad_glGetMinmaxParameteriv() {
        return glad_glGetMinmaxParameteriv$constants.SEGMENT.get(glad_glGetMinmaxParameteriv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMINMAXPARAMETERIVPROC glad_glGetMinmaxParameteriv
     * }
     */
    public static void glad_glGetMinmaxParameteriv(MemorySegment varValue) {
        glad_glGetMinmaxParameteriv$constants.SEGMENT.set(glad_glGetMinmaxParameteriv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetMinmaxParameteriv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetMinmaxParameteriv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMINMAXPARAMETERIVPROC glad_debug_glGetMinmaxParameteriv
     * }
     */
    public static AddressLayout glad_debug_glGetMinmaxParameteriv$layout() {
        return glad_debug_glGetMinmaxParameteriv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMINMAXPARAMETERIVPROC glad_debug_glGetMinmaxParameteriv
     * }
     */
    public static MemorySegment glad_debug_glGetMinmaxParameteriv$segment() {
        return glad_debug_glGetMinmaxParameteriv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMINMAXPARAMETERIVPROC glad_debug_glGetMinmaxParameteriv
     * }
     */
    public static MemorySegment glad_debug_glGetMinmaxParameteriv() {
        return glad_debug_glGetMinmaxParameteriv$constants.SEGMENT.get(glad_debug_glGetMinmaxParameteriv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMINMAXPARAMETERIVPROC glad_debug_glGetMinmaxParameteriv
     * }
     */
    public static void glad_debug_glGetMinmaxParameteriv(MemorySegment varValue) {
        glad_debug_glGetMinmaxParameteriv$constants.SEGMENT.set(glad_debug_glGetMinmaxParameteriv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetMultiTexEnvfvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetMultiTexEnvfvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXENVFVEXTPROC glad_glGetMultiTexEnvfvEXT
     * }
     */
    public static AddressLayout glad_glGetMultiTexEnvfvEXT$layout() {
        return glad_glGetMultiTexEnvfvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXENVFVEXTPROC glad_glGetMultiTexEnvfvEXT
     * }
     */
    public static MemorySegment glad_glGetMultiTexEnvfvEXT$segment() {
        return glad_glGetMultiTexEnvfvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXENVFVEXTPROC glad_glGetMultiTexEnvfvEXT
     * }
     */
    public static MemorySegment glad_glGetMultiTexEnvfvEXT() {
        return glad_glGetMultiTexEnvfvEXT$constants.SEGMENT.get(glad_glGetMultiTexEnvfvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXENVFVEXTPROC glad_glGetMultiTexEnvfvEXT
     * }
     */
    public static void glad_glGetMultiTexEnvfvEXT(MemorySegment varValue) {
        glad_glGetMultiTexEnvfvEXT$constants.SEGMENT.set(glad_glGetMultiTexEnvfvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetMultiTexEnvfvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetMultiTexEnvfvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXENVFVEXTPROC glad_debug_glGetMultiTexEnvfvEXT
     * }
     */
    public static AddressLayout glad_debug_glGetMultiTexEnvfvEXT$layout() {
        return glad_debug_glGetMultiTexEnvfvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXENVFVEXTPROC glad_debug_glGetMultiTexEnvfvEXT
     * }
     */
    public static MemorySegment glad_debug_glGetMultiTexEnvfvEXT$segment() {
        return glad_debug_glGetMultiTexEnvfvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXENVFVEXTPROC glad_debug_glGetMultiTexEnvfvEXT
     * }
     */
    public static MemorySegment glad_debug_glGetMultiTexEnvfvEXT() {
        return glad_debug_glGetMultiTexEnvfvEXT$constants.SEGMENT.get(glad_debug_glGetMultiTexEnvfvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXENVFVEXTPROC glad_debug_glGetMultiTexEnvfvEXT
     * }
     */
    public static void glad_debug_glGetMultiTexEnvfvEXT(MemorySegment varValue) {
        glad_debug_glGetMultiTexEnvfvEXT$constants.SEGMENT.set(glad_debug_glGetMultiTexEnvfvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetMultiTexEnvivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetMultiTexEnvivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXENVIVEXTPROC glad_glGetMultiTexEnvivEXT
     * }
     */
    public static AddressLayout glad_glGetMultiTexEnvivEXT$layout() {
        return glad_glGetMultiTexEnvivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXENVIVEXTPROC glad_glGetMultiTexEnvivEXT
     * }
     */
    public static MemorySegment glad_glGetMultiTexEnvivEXT$segment() {
        return glad_glGetMultiTexEnvivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXENVIVEXTPROC glad_glGetMultiTexEnvivEXT
     * }
     */
    public static MemorySegment glad_glGetMultiTexEnvivEXT() {
        return glad_glGetMultiTexEnvivEXT$constants.SEGMENT.get(glad_glGetMultiTexEnvivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXENVIVEXTPROC glad_glGetMultiTexEnvivEXT
     * }
     */
    public static void glad_glGetMultiTexEnvivEXT(MemorySegment varValue) {
        glad_glGetMultiTexEnvivEXT$constants.SEGMENT.set(glad_glGetMultiTexEnvivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetMultiTexEnvivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetMultiTexEnvivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXENVIVEXTPROC glad_debug_glGetMultiTexEnvivEXT
     * }
     */
    public static AddressLayout glad_debug_glGetMultiTexEnvivEXT$layout() {
        return glad_debug_glGetMultiTexEnvivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXENVIVEXTPROC glad_debug_glGetMultiTexEnvivEXT
     * }
     */
    public static MemorySegment glad_debug_glGetMultiTexEnvivEXT$segment() {
        return glad_debug_glGetMultiTexEnvivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXENVIVEXTPROC glad_debug_glGetMultiTexEnvivEXT
     * }
     */
    public static MemorySegment glad_debug_glGetMultiTexEnvivEXT() {
        return glad_debug_glGetMultiTexEnvivEXT$constants.SEGMENT.get(glad_debug_glGetMultiTexEnvivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXENVIVEXTPROC glad_debug_glGetMultiTexEnvivEXT
     * }
     */
    public static void glad_debug_glGetMultiTexEnvivEXT(MemorySegment varValue) {
        glad_debug_glGetMultiTexEnvivEXT$constants.SEGMENT.set(glad_debug_glGetMultiTexEnvivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetMultiTexGendvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetMultiTexGendvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXGENDVEXTPROC glad_glGetMultiTexGendvEXT
     * }
     */
    public static AddressLayout glad_glGetMultiTexGendvEXT$layout() {
        return glad_glGetMultiTexGendvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXGENDVEXTPROC glad_glGetMultiTexGendvEXT
     * }
     */
    public static MemorySegment glad_glGetMultiTexGendvEXT$segment() {
        return glad_glGetMultiTexGendvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXGENDVEXTPROC glad_glGetMultiTexGendvEXT
     * }
     */
    public static MemorySegment glad_glGetMultiTexGendvEXT() {
        return glad_glGetMultiTexGendvEXT$constants.SEGMENT.get(glad_glGetMultiTexGendvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXGENDVEXTPROC glad_glGetMultiTexGendvEXT
     * }
     */
    public static void glad_glGetMultiTexGendvEXT(MemorySegment varValue) {
        glad_glGetMultiTexGendvEXT$constants.SEGMENT.set(glad_glGetMultiTexGendvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetMultiTexGendvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetMultiTexGendvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXGENDVEXTPROC glad_debug_glGetMultiTexGendvEXT
     * }
     */
    public static AddressLayout glad_debug_glGetMultiTexGendvEXT$layout() {
        return glad_debug_glGetMultiTexGendvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXGENDVEXTPROC glad_debug_glGetMultiTexGendvEXT
     * }
     */
    public static MemorySegment glad_debug_glGetMultiTexGendvEXT$segment() {
        return glad_debug_glGetMultiTexGendvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXGENDVEXTPROC glad_debug_glGetMultiTexGendvEXT
     * }
     */
    public static MemorySegment glad_debug_glGetMultiTexGendvEXT() {
        return glad_debug_glGetMultiTexGendvEXT$constants.SEGMENT.get(glad_debug_glGetMultiTexGendvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXGENDVEXTPROC glad_debug_glGetMultiTexGendvEXT
     * }
     */
    public static void glad_debug_glGetMultiTexGendvEXT(MemorySegment varValue) {
        glad_debug_glGetMultiTexGendvEXT$constants.SEGMENT.set(glad_debug_glGetMultiTexGendvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetMultiTexGenfvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetMultiTexGenfvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXGENFVEXTPROC glad_glGetMultiTexGenfvEXT
     * }
     */
    public static AddressLayout glad_glGetMultiTexGenfvEXT$layout() {
        return glad_glGetMultiTexGenfvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXGENFVEXTPROC glad_glGetMultiTexGenfvEXT
     * }
     */
    public static MemorySegment glad_glGetMultiTexGenfvEXT$segment() {
        return glad_glGetMultiTexGenfvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXGENFVEXTPROC glad_glGetMultiTexGenfvEXT
     * }
     */
    public static MemorySegment glad_glGetMultiTexGenfvEXT() {
        return glad_glGetMultiTexGenfvEXT$constants.SEGMENT.get(glad_glGetMultiTexGenfvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXGENFVEXTPROC glad_glGetMultiTexGenfvEXT
     * }
     */
    public static void glad_glGetMultiTexGenfvEXT(MemorySegment varValue) {
        glad_glGetMultiTexGenfvEXT$constants.SEGMENT.set(glad_glGetMultiTexGenfvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetMultiTexGenfvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetMultiTexGenfvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXGENFVEXTPROC glad_debug_glGetMultiTexGenfvEXT
     * }
     */
    public static AddressLayout glad_debug_glGetMultiTexGenfvEXT$layout() {
        return glad_debug_glGetMultiTexGenfvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXGENFVEXTPROC glad_debug_glGetMultiTexGenfvEXT
     * }
     */
    public static MemorySegment glad_debug_glGetMultiTexGenfvEXT$segment() {
        return glad_debug_glGetMultiTexGenfvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXGENFVEXTPROC glad_debug_glGetMultiTexGenfvEXT
     * }
     */
    public static MemorySegment glad_debug_glGetMultiTexGenfvEXT() {
        return glad_debug_glGetMultiTexGenfvEXT$constants.SEGMENT.get(glad_debug_glGetMultiTexGenfvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXGENFVEXTPROC glad_debug_glGetMultiTexGenfvEXT
     * }
     */
    public static void glad_debug_glGetMultiTexGenfvEXT(MemorySegment varValue) {
        glad_debug_glGetMultiTexGenfvEXT$constants.SEGMENT.set(glad_debug_glGetMultiTexGenfvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetMultiTexGenivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetMultiTexGenivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXGENIVEXTPROC glad_glGetMultiTexGenivEXT
     * }
     */
    public static AddressLayout glad_glGetMultiTexGenivEXT$layout() {
        return glad_glGetMultiTexGenivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXGENIVEXTPROC glad_glGetMultiTexGenivEXT
     * }
     */
    public static MemorySegment glad_glGetMultiTexGenivEXT$segment() {
        return glad_glGetMultiTexGenivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXGENIVEXTPROC glad_glGetMultiTexGenivEXT
     * }
     */
    public static MemorySegment glad_glGetMultiTexGenivEXT() {
        return glad_glGetMultiTexGenivEXT$constants.SEGMENT.get(glad_glGetMultiTexGenivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXGENIVEXTPROC glad_glGetMultiTexGenivEXT
     * }
     */
    public static void glad_glGetMultiTexGenivEXT(MemorySegment varValue) {
        glad_glGetMultiTexGenivEXT$constants.SEGMENT.set(glad_glGetMultiTexGenivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetMultiTexGenivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetMultiTexGenivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXGENIVEXTPROC glad_debug_glGetMultiTexGenivEXT
     * }
     */
    public static AddressLayout glad_debug_glGetMultiTexGenivEXT$layout() {
        return glad_debug_glGetMultiTexGenivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXGENIVEXTPROC glad_debug_glGetMultiTexGenivEXT
     * }
     */
    public static MemorySegment glad_debug_glGetMultiTexGenivEXT$segment() {
        return glad_debug_glGetMultiTexGenivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXGENIVEXTPROC glad_debug_glGetMultiTexGenivEXT
     * }
     */
    public static MemorySegment glad_debug_glGetMultiTexGenivEXT() {
        return glad_debug_glGetMultiTexGenivEXT$constants.SEGMENT.get(glad_debug_glGetMultiTexGenivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXGENIVEXTPROC glad_debug_glGetMultiTexGenivEXT
     * }
     */
    public static void glad_debug_glGetMultiTexGenivEXT(MemorySegment varValue) {
        glad_debug_glGetMultiTexGenivEXT$constants.SEGMENT.set(glad_debug_glGetMultiTexGenivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetMultiTexImageEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetMultiTexImageEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXIMAGEEXTPROC glad_glGetMultiTexImageEXT
     * }
     */
    public static AddressLayout glad_glGetMultiTexImageEXT$layout() {
        return glad_glGetMultiTexImageEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXIMAGEEXTPROC glad_glGetMultiTexImageEXT
     * }
     */
    public static MemorySegment glad_glGetMultiTexImageEXT$segment() {
        return glad_glGetMultiTexImageEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXIMAGEEXTPROC glad_glGetMultiTexImageEXT
     * }
     */
    public static MemorySegment glad_glGetMultiTexImageEXT() {
        return glad_glGetMultiTexImageEXT$constants.SEGMENT.get(glad_glGetMultiTexImageEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXIMAGEEXTPROC glad_glGetMultiTexImageEXT
     * }
     */
    public static void glad_glGetMultiTexImageEXT(MemorySegment varValue) {
        glad_glGetMultiTexImageEXT$constants.SEGMENT.set(glad_glGetMultiTexImageEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetMultiTexImageEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetMultiTexImageEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXIMAGEEXTPROC glad_debug_glGetMultiTexImageEXT
     * }
     */
    public static AddressLayout glad_debug_glGetMultiTexImageEXT$layout() {
        return glad_debug_glGetMultiTexImageEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXIMAGEEXTPROC glad_debug_glGetMultiTexImageEXT
     * }
     */
    public static MemorySegment glad_debug_glGetMultiTexImageEXT$segment() {
        return glad_debug_glGetMultiTexImageEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXIMAGEEXTPROC glad_debug_glGetMultiTexImageEXT
     * }
     */
    public static MemorySegment glad_debug_glGetMultiTexImageEXT() {
        return glad_debug_glGetMultiTexImageEXT$constants.SEGMENT.get(glad_debug_glGetMultiTexImageEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXIMAGEEXTPROC glad_debug_glGetMultiTexImageEXT
     * }
     */
    public static void glad_debug_glGetMultiTexImageEXT(MemorySegment varValue) {
        glad_debug_glGetMultiTexImageEXT$constants.SEGMENT.set(glad_debug_glGetMultiTexImageEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetMultiTexLevelParameterfvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetMultiTexLevelParameterfvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC glad_glGetMultiTexLevelParameterfvEXT
     * }
     */
    public static AddressLayout glad_glGetMultiTexLevelParameterfvEXT$layout() {
        return glad_glGetMultiTexLevelParameterfvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC glad_glGetMultiTexLevelParameterfvEXT
     * }
     */
    public static MemorySegment glad_glGetMultiTexLevelParameterfvEXT$segment() {
        return glad_glGetMultiTexLevelParameterfvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC glad_glGetMultiTexLevelParameterfvEXT
     * }
     */
    public static MemorySegment glad_glGetMultiTexLevelParameterfvEXT() {
        return glad_glGetMultiTexLevelParameterfvEXT$constants.SEGMENT.get(glad_glGetMultiTexLevelParameterfvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC glad_glGetMultiTexLevelParameterfvEXT
     * }
     */
    public static void glad_glGetMultiTexLevelParameterfvEXT(MemorySegment varValue) {
        glad_glGetMultiTexLevelParameterfvEXT$constants.SEGMENT.set(glad_glGetMultiTexLevelParameterfvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetMultiTexLevelParameterfvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetMultiTexLevelParameterfvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC glad_debug_glGetMultiTexLevelParameterfvEXT
     * }
     */
    public static AddressLayout glad_debug_glGetMultiTexLevelParameterfvEXT$layout() {
        return glad_debug_glGetMultiTexLevelParameterfvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC glad_debug_glGetMultiTexLevelParameterfvEXT
     * }
     */
    public static MemorySegment glad_debug_glGetMultiTexLevelParameterfvEXT$segment() {
        return glad_debug_glGetMultiTexLevelParameterfvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC glad_debug_glGetMultiTexLevelParameterfvEXT
     * }
     */
    public static MemorySegment glad_debug_glGetMultiTexLevelParameterfvEXT() {
        return glad_debug_glGetMultiTexLevelParameterfvEXT$constants.SEGMENT.get(glad_debug_glGetMultiTexLevelParameterfvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC glad_debug_glGetMultiTexLevelParameterfvEXT
     * }
     */
    public static void glad_debug_glGetMultiTexLevelParameterfvEXT(MemorySegment varValue) {
        glad_debug_glGetMultiTexLevelParameterfvEXT$constants.SEGMENT.set(glad_debug_glGetMultiTexLevelParameterfvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetMultiTexLevelParameterivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetMultiTexLevelParameterivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC glad_glGetMultiTexLevelParameterivEXT
     * }
     */
    public static AddressLayout glad_glGetMultiTexLevelParameterivEXT$layout() {
        return glad_glGetMultiTexLevelParameterivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC glad_glGetMultiTexLevelParameterivEXT
     * }
     */
    public static MemorySegment glad_glGetMultiTexLevelParameterivEXT$segment() {
        return glad_glGetMultiTexLevelParameterivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC glad_glGetMultiTexLevelParameterivEXT
     * }
     */
    public static MemorySegment glad_glGetMultiTexLevelParameterivEXT() {
        return glad_glGetMultiTexLevelParameterivEXT$constants.SEGMENT.get(glad_glGetMultiTexLevelParameterivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC glad_glGetMultiTexLevelParameterivEXT
     * }
     */
    public static void glad_glGetMultiTexLevelParameterivEXT(MemorySegment varValue) {
        glad_glGetMultiTexLevelParameterivEXT$constants.SEGMENT.set(glad_glGetMultiTexLevelParameterivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetMultiTexLevelParameterivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetMultiTexLevelParameterivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC glad_debug_glGetMultiTexLevelParameterivEXT
     * }
     */
    public static AddressLayout glad_debug_glGetMultiTexLevelParameterivEXT$layout() {
        return glad_debug_glGetMultiTexLevelParameterivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC glad_debug_glGetMultiTexLevelParameterivEXT
     * }
     */
    public static MemorySegment glad_debug_glGetMultiTexLevelParameterivEXT$segment() {
        return glad_debug_glGetMultiTexLevelParameterivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC glad_debug_glGetMultiTexLevelParameterivEXT
     * }
     */
    public static MemorySegment glad_debug_glGetMultiTexLevelParameterivEXT() {
        return glad_debug_glGetMultiTexLevelParameterivEXT$constants.SEGMENT.get(glad_debug_glGetMultiTexLevelParameterivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC glad_debug_glGetMultiTexLevelParameterivEXT
     * }
     */
    public static void glad_debug_glGetMultiTexLevelParameterivEXT(MemorySegment varValue) {
        glad_debug_glGetMultiTexLevelParameterivEXT$constants.SEGMENT.set(glad_debug_glGetMultiTexLevelParameterivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetMultiTexParameterIivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetMultiTexParameterIivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXPARAMETERIIVEXTPROC glad_glGetMultiTexParameterIivEXT
     * }
     */
    public static AddressLayout glad_glGetMultiTexParameterIivEXT$layout() {
        return glad_glGetMultiTexParameterIivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXPARAMETERIIVEXTPROC glad_glGetMultiTexParameterIivEXT
     * }
     */
    public static MemorySegment glad_glGetMultiTexParameterIivEXT$segment() {
        return glad_glGetMultiTexParameterIivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXPARAMETERIIVEXTPROC glad_glGetMultiTexParameterIivEXT
     * }
     */
    public static MemorySegment glad_glGetMultiTexParameterIivEXT() {
        return glad_glGetMultiTexParameterIivEXT$constants.SEGMENT.get(glad_glGetMultiTexParameterIivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXPARAMETERIIVEXTPROC glad_glGetMultiTexParameterIivEXT
     * }
     */
    public static void glad_glGetMultiTexParameterIivEXT(MemorySegment varValue) {
        glad_glGetMultiTexParameterIivEXT$constants.SEGMENT.set(glad_glGetMultiTexParameterIivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetMultiTexParameterIivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetMultiTexParameterIivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXPARAMETERIIVEXTPROC glad_debug_glGetMultiTexParameterIivEXT
     * }
     */
    public static AddressLayout glad_debug_glGetMultiTexParameterIivEXT$layout() {
        return glad_debug_glGetMultiTexParameterIivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXPARAMETERIIVEXTPROC glad_debug_glGetMultiTexParameterIivEXT
     * }
     */
    public static MemorySegment glad_debug_glGetMultiTexParameterIivEXT$segment() {
        return glad_debug_glGetMultiTexParameterIivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXPARAMETERIIVEXTPROC glad_debug_glGetMultiTexParameterIivEXT
     * }
     */
    public static MemorySegment glad_debug_glGetMultiTexParameterIivEXT() {
        return glad_debug_glGetMultiTexParameterIivEXT$constants.SEGMENT.get(glad_debug_glGetMultiTexParameterIivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXPARAMETERIIVEXTPROC glad_debug_glGetMultiTexParameterIivEXT
     * }
     */
    public static void glad_debug_glGetMultiTexParameterIivEXT(MemorySegment varValue) {
        glad_debug_glGetMultiTexParameterIivEXT$constants.SEGMENT.set(glad_debug_glGetMultiTexParameterIivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetMultiTexParameterIuivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetMultiTexParameterIuivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXPARAMETERIUIVEXTPROC glad_glGetMultiTexParameterIuivEXT
     * }
     */
    public static AddressLayout glad_glGetMultiTexParameterIuivEXT$layout() {
        return glad_glGetMultiTexParameterIuivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXPARAMETERIUIVEXTPROC glad_glGetMultiTexParameterIuivEXT
     * }
     */
    public static MemorySegment glad_glGetMultiTexParameterIuivEXT$segment() {
        return glad_glGetMultiTexParameterIuivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXPARAMETERIUIVEXTPROC glad_glGetMultiTexParameterIuivEXT
     * }
     */
    public static MemorySegment glad_glGetMultiTexParameterIuivEXT() {
        return glad_glGetMultiTexParameterIuivEXT$constants.SEGMENT.get(glad_glGetMultiTexParameterIuivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXPARAMETERIUIVEXTPROC glad_glGetMultiTexParameterIuivEXT
     * }
     */
    public static void glad_glGetMultiTexParameterIuivEXT(MemorySegment varValue) {
        glad_glGetMultiTexParameterIuivEXT$constants.SEGMENT.set(glad_glGetMultiTexParameterIuivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetMultiTexParameterIuivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetMultiTexParameterIuivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXPARAMETERIUIVEXTPROC glad_debug_glGetMultiTexParameterIuivEXT
     * }
     */
    public static AddressLayout glad_debug_glGetMultiTexParameterIuivEXT$layout() {
        return glad_debug_glGetMultiTexParameterIuivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXPARAMETERIUIVEXTPROC glad_debug_glGetMultiTexParameterIuivEXT
     * }
     */
    public static MemorySegment glad_debug_glGetMultiTexParameterIuivEXT$segment() {
        return glad_debug_glGetMultiTexParameterIuivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXPARAMETERIUIVEXTPROC glad_debug_glGetMultiTexParameterIuivEXT
     * }
     */
    public static MemorySegment glad_debug_glGetMultiTexParameterIuivEXT() {
        return glad_debug_glGetMultiTexParameterIuivEXT$constants.SEGMENT.get(glad_debug_glGetMultiTexParameterIuivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXPARAMETERIUIVEXTPROC glad_debug_glGetMultiTexParameterIuivEXT
     * }
     */
    public static void glad_debug_glGetMultiTexParameterIuivEXT(MemorySegment varValue) {
        glad_debug_glGetMultiTexParameterIuivEXT$constants.SEGMENT.set(glad_debug_glGetMultiTexParameterIuivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetMultiTexParameterfvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetMultiTexParameterfvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXPARAMETERFVEXTPROC glad_glGetMultiTexParameterfvEXT
     * }
     */
    public static AddressLayout glad_glGetMultiTexParameterfvEXT$layout() {
        return glad_glGetMultiTexParameterfvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXPARAMETERFVEXTPROC glad_glGetMultiTexParameterfvEXT
     * }
     */
    public static MemorySegment glad_glGetMultiTexParameterfvEXT$segment() {
        return glad_glGetMultiTexParameterfvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXPARAMETERFVEXTPROC glad_glGetMultiTexParameterfvEXT
     * }
     */
    public static MemorySegment glad_glGetMultiTexParameterfvEXT() {
        return glad_glGetMultiTexParameterfvEXT$constants.SEGMENT.get(glad_glGetMultiTexParameterfvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXPARAMETERFVEXTPROC glad_glGetMultiTexParameterfvEXT
     * }
     */
    public static void glad_glGetMultiTexParameterfvEXT(MemorySegment varValue) {
        glad_glGetMultiTexParameterfvEXT$constants.SEGMENT.set(glad_glGetMultiTexParameterfvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetMultiTexParameterfvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetMultiTexParameterfvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXPARAMETERFVEXTPROC glad_debug_glGetMultiTexParameterfvEXT
     * }
     */
    public static AddressLayout glad_debug_glGetMultiTexParameterfvEXT$layout() {
        return glad_debug_glGetMultiTexParameterfvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXPARAMETERFVEXTPROC glad_debug_glGetMultiTexParameterfvEXT
     * }
     */
    public static MemorySegment glad_debug_glGetMultiTexParameterfvEXT$segment() {
        return glad_debug_glGetMultiTexParameterfvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXPARAMETERFVEXTPROC glad_debug_glGetMultiTexParameterfvEXT
     * }
     */
    public static MemorySegment glad_debug_glGetMultiTexParameterfvEXT() {
        return glad_debug_glGetMultiTexParameterfvEXT$constants.SEGMENT.get(glad_debug_glGetMultiTexParameterfvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXPARAMETERFVEXTPROC glad_debug_glGetMultiTexParameterfvEXT
     * }
     */
    public static void glad_debug_glGetMultiTexParameterfvEXT(MemorySegment varValue) {
        glad_debug_glGetMultiTexParameterfvEXT$constants.SEGMENT.set(glad_debug_glGetMultiTexParameterfvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetMultiTexParameterivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetMultiTexParameterivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXPARAMETERIVEXTPROC glad_glGetMultiTexParameterivEXT
     * }
     */
    public static AddressLayout glad_glGetMultiTexParameterivEXT$layout() {
        return glad_glGetMultiTexParameterivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXPARAMETERIVEXTPROC glad_glGetMultiTexParameterivEXT
     * }
     */
    public static MemorySegment glad_glGetMultiTexParameterivEXT$segment() {
        return glad_glGetMultiTexParameterivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXPARAMETERIVEXTPROC glad_glGetMultiTexParameterivEXT
     * }
     */
    public static MemorySegment glad_glGetMultiTexParameterivEXT() {
        return glad_glGetMultiTexParameterivEXT$constants.SEGMENT.get(glad_glGetMultiTexParameterivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXPARAMETERIVEXTPROC glad_glGetMultiTexParameterivEXT
     * }
     */
    public static void glad_glGetMultiTexParameterivEXT(MemorySegment varValue) {
        glad_glGetMultiTexParameterivEXT$constants.SEGMENT.set(glad_glGetMultiTexParameterivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetMultiTexParameterivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetMultiTexParameterivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXPARAMETERIVEXTPROC glad_debug_glGetMultiTexParameterivEXT
     * }
     */
    public static AddressLayout glad_debug_glGetMultiTexParameterivEXT$layout() {
        return glad_debug_glGetMultiTexParameterivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXPARAMETERIVEXTPROC glad_debug_glGetMultiTexParameterivEXT
     * }
     */
    public static MemorySegment glad_debug_glGetMultiTexParameterivEXT$segment() {
        return glad_debug_glGetMultiTexParameterivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXPARAMETERIVEXTPROC glad_debug_glGetMultiTexParameterivEXT
     * }
     */
    public static MemorySegment glad_debug_glGetMultiTexParameterivEXT() {
        return glad_debug_glGetMultiTexParameterivEXT$constants.SEGMENT.get(glad_debug_glGetMultiTexParameterivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTITEXPARAMETERIVEXTPROC glad_debug_glGetMultiTexParameterivEXT
     * }
     */
    public static void glad_debug_glGetMultiTexParameterivEXT(MemorySegment varValue) {
        glad_debug_glGetMultiTexParameterivEXT$constants.SEGMENT.set(glad_debug_glGetMultiTexParameterivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetMultisamplefv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetMultisamplefv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTISAMPLEFVPROC glad_glGetMultisamplefv
     * }
     */
    public static AddressLayout glad_glGetMultisamplefv$layout() {
        return glad_glGetMultisamplefv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTISAMPLEFVPROC glad_glGetMultisamplefv
     * }
     */
    public static MemorySegment glad_glGetMultisamplefv$segment() {
        return glad_glGetMultisamplefv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTISAMPLEFVPROC glad_glGetMultisamplefv
     * }
     */
    public static MemorySegment glad_glGetMultisamplefv() {
        return glad_glGetMultisamplefv$constants.SEGMENT.get(glad_glGetMultisamplefv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTISAMPLEFVPROC glad_glGetMultisamplefv
     * }
     */
    public static void glad_glGetMultisamplefv(MemorySegment varValue) {
        glad_glGetMultisamplefv$constants.SEGMENT.set(glad_glGetMultisamplefv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetMultisamplefv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetMultisamplefv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTISAMPLEFVPROC glad_debug_glGetMultisamplefv
     * }
     */
    public static AddressLayout glad_debug_glGetMultisamplefv$layout() {
        return glad_debug_glGetMultisamplefv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTISAMPLEFVPROC glad_debug_glGetMultisamplefv
     * }
     */
    public static MemorySegment glad_debug_glGetMultisamplefv$segment() {
        return glad_debug_glGetMultisamplefv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTISAMPLEFVPROC glad_debug_glGetMultisamplefv
     * }
     */
    public static MemorySegment glad_debug_glGetMultisamplefv() {
        return glad_debug_glGetMultisamplefv$constants.SEGMENT.get(glad_debug_glGetMultisamplefv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTISAMPLEFVPROC glad_debug_glGetMultisamplefv
     * }
     */
    public static void glad_debug_glGetMultisamplefv(MemorySegment varValue) {
        glad_debug_glGetMultisamplefv$constants.SEGMENT.set(glad_debug_glGetMultisamplefv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetMultisamplefvNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetMultisamplefvNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTISAMPLEFVNVPROC glad_glGetMultisamplefvNV
     * }
     */
    public static AddressLayout glad_glGetMultisamplefvNV$layout() {
        return glad_glGetMultisamplefvNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTISAMPLEFVNVPROC glad_glGetMultisamplefvNV
     * }
     */
    public static MemorySegment glad_glGetMultisamplefvNV$segment() {
        return glad_glGetMultisamplefvNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTISAMPLEFVNVPROC glad_glGetMultisamplefvNV
     * }
     */
    public static MemorySegment glad_glGetMultisamplefvNV() {
        return glad_glGetMultisamplefvNV$constants.SEGMENT.get(glad_glGetMultisamplefvNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTISAMPLEFVNVPROC glad_glGetMultisamplefvNV
     * }
     */
    public static void glad_glGetMultisamplefvNV(MemorySegment varValue) {
        glad_glGetMultisamplefvNV$constants.SEGMENT.set(glad_glGetMultisamplefvNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetMultisamplefvNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetMultisamplefvNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTISAMPLEFVNVPROC glad_debug_glGetMultisamplefvNV
     * }
     */
    public static AddressLayout glad_debug_glGetMultisamplefvNV$layout() {
        return glad_debug_glGetMultisamplefvNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTISAMPLEFVNVPROC glad_debug_glGetMultisamplefvNV
     * }
     */
    public static MemorySegment glad_debug_glGetMultisamplefvNV$segment() {
        return glad_debug_glGetMultisamplefvNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTISAMPLEFVNVPROC glad_debug_glGetMultisamplefvNV
     * }
     */
    public static MemorySegment glad_debug_glGetMultisamplefvNV() {
        return glad_debug_glGetMultisamplefvNV$constants.SEGMENT.get(glad_debug_glGetMultisamplefvNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETMULTISAMPLEFVNVPROC glad_debug_glGetMultisamplefvNV
     * }
     */
    public static void glad_debug_glGetMultisamplefvNV(MemorySegment varValue) {
        glad_debug_glGetMultisamplefvNV$constants.SEGMENT.set(glad_debug_glGetMultisamplefvNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetNamedBufferParameteri64v$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetNamedBufferParameteri64v").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERPARAMETERI64VPROC glad_glGetNamedBufferParameteri64v
     * }
     */
    public static AddressLayout glad_glGetNamedBufferParameteri64v$layout() {
        return glad_glGetNamedBufferParameteri64v$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERPARAMETERI64VPROC glad_glGetNamedBufferParameteri64v
     * }
     */
    public static MemorySegment glad_glGetNamedBufferParameteri64v$segment() {
        return glad_glGetNamedBufferParameteri64v$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERPARAMETERI64VPROC glad_glGetNamedBufferParameteri64v
     * }
     */
    public static MemorySegment glad_glGetNamedBufferParameteri64v() {
        return glad_glGetNamedBufferParameteri64v$constants.SEGMENT.get(glad_glGetNamedBufferParameteri64v$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERPARAMETERI64VPROC glad_glGetNamedBufferParameteri64v
     * }
     */
    public static void glad_glGetNamedBufferParameteri64v(MemorySegment varValue) {
        glad_glGetNamedBufferParameteri64v$constants.SEGMENT.set(glad_glGetNamedBufferParameteri64v$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetNamedBufferParameteri64v$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetNamedBufferParameteri64v").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERPARAMETERI64VPROC glad_debug_glGetNamedBufferParameteri64v
     * }
     */
    public static AddressLayout glad_debug_glGetNamedBufferParameteri64v$layout() {
        return glad_debug_glGetNamedBufferParameteri64v$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERPARAMETERI64VPROC glad_debug_glGetNamedBufferParameteri64v
     * }
     */
    public static MemorySegment glad_debug_glGetNamedBufferParameteri64v$segment() {
        return glad_debug_glGetNamedBufferParameteri64v$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERPARAMETERI64VPROC glad_debug_glGetNamedBufferParameteri64v
     * }
     */
    public static MemorySegment glad_debug_glGetNamedBufferParameteri64v() {
        return glad_debug_glGetNamedBufferParameteri64v$constants.SEGMENT.get(glad_debug_glGetNamedBufferParameteri64v$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERPARAMETERI64VPROC glad_debug_glGetNamedBufferParameteri64v
     * }
     */
    public static void glad_debug_glGetNamedBufferParameteri64v(MemorySegment varValue) {
        glad_debug_glGetNamedBufferParameteri64v$constants.SEGMENT.set(glad_debug_glGetNamedBufferParameteri64v$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetNamedBufferParameteriv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetNamedBufferParameteriv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERPARAMETERIVPROC glad_glGetNamedBufferParameteriv
     * }
     */
    public static AddressLayout glad_glGetNamedBufferParameteriv$layout() {
        return glad_glGetNamedBufferParameteriv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERPARAMETERIVPROC glad_glGetNamedBufferParameteriv
     * }
     */
    public static MemorySegment glad_glGetNamedBufferParameteriv$segment() {
        return glad_glGetNamedBufferParameteriv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERPARAMETERIVPROC glad_glGetNamedBufferParameteriv
     * }
     */
    public static MemorySegment glad_glGetNamedBufferParameteriv() {
        return glad_glGetNamedBufferParameteriv$constants.SEGMENT.get(glad_glGetNamedBufferParameteriv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERPARAMETERIVPROC glad_glGetNamedBufferParameteriv
     * }
     */
    public static void glad_glGetNamedBufferParameteriv(MemorySegment varValue) {
        glad_glGetNamedBufferParameteriv$constants.SEGMENT.set(glad_glGetNamedBufferParameteriv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetNamedBufferParameteriv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetNamedBufferParameteriv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERPARAMETERIVPROC glad_debug_glGetNamedBufferParameteriv
     * }
     */
    public static AddressLayout glad_debug_glGetNamedBufferParameteriv$layout() {
        return glad_debug_glGetNamedBufferParameteriv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERPARAMETERIVPROC glad_debug_glGetNamedBufferParameteriv
     * }
     */
    public static MemorySegment glad_debug_glGetNamedBufferParameteriv$segment() {
        return glad_debug_glGetNamedBufferParameteriv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERPARAMETERIVPROC glad_debug_glGetNamedBufferParameteriv
     * }
     */
    public static MemorySegment glad_debug_glGetNamedBufferParameteriv() {
        return glad_debug_glGetNamedBufferParameteriv$constants.SEGMENT.get(glad_debug_glGetNamedBufferParameteriv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERPARAMETERIVPROC glad_debug_glGetNamedBufferParameteriv
     * }
     */
    public static void glad_debug_glGetNamedBufferParameteriv(MemorySegment varValue) {
        glad_debug_glGetNamedBufferParameteriv$constants.SEGMENT.set(glad_debug_glGetNamedBufferParameteriv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetNamedBufferParameterivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetNamedBufferParameterivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC glad_glGetNamedBufferParameterivEXT
     * }
     */
    public static AddressLayout glad_glGetNamedBufferParameterivEXT$layout() {
        return glad_glGetNamedBufferParameterivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC glad_glGetNamedBufferParameterivEXT
     * }
     */
    public static MemorySegment glad_glGetNamedBufferParameterivEXT$segment() {
        return glad_glGetNamedBufferParameterivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC glad_glGetNamedBufferParameterivEXT
     * }
     */
    public static MemorySegment glad_glGetNamedBufferParameterivEXT() {
        return glad_glGetNamedBufferParameterivEXT$constants.SEGMENT.get(glad_glGetNamedBufferParameterivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC glad_glGetNamedBufferParameterivEXT
     * }
     */
    public static void glad_glGetNamedBufferParameterivEXT(MemorySegment varValue) {
        glad_glGetNamedBufferParameterivEXT$constants.SEGMENT.set(glad_glGetNamedBufferParameterivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetNamedBufferParameterivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetNamedBufferParameterivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC glad_debug_glGetNamedBufferParameterivEXT
     * }
     */
    public static AddressLayout glad_debug_glGetNamedBufferParameterivEXT$layout() {
        return glad_debug_glGetNamedBufferParameterivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC glad_debug_glGetNamedBufferParameterivEXT
     * }
     */
    public static MemorySegment glad_debug_glGetNamedBufferParameterivEXT$segment() {
        return glad_debug_glGetNamedBufferParameterivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC glad_debug_glGetNamedBufferParameterivEXT
     * }
     */
    public static MemorySegment glad_debug_glGetNamedBufferParameterivEXT() {
        return glad_debug_glGetNamedBufferParameterivEXT$constants.SEGMENT.get(glad_debug_glGetNamedBufferParameterivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC glad_debug_glGetNamedBufferParameterivEXT
     * }
     */
    public static void glad_debug_glGetNamedBufferParameterivEXT(MemorySegment varValue) {
        glad_debug_glGetNamedBufferParameterivEXT$constants.SEGMENT.set(glad_debug_glGetNamedBufferParameterivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetNamedBufferPointerv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetNamedBufferPointerv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERPOINTERVPROC glad_glGetNamedBufferPointerv
     * }
     */
    public static AddressLayout glad_glGetNamedBufferPointerv$layout() {
        return glad_glGetNamedBufferPointerv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERPOINTERVPROC glad_glGetNamedBufferPointerv
     * }
     */
    public static MemorySegment glad_glGetNamedBufferPointerv$segment() {
        return glad_glGetNamedBufferPointerv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERPOINTERVPROC glad_glGetNamedBufferPointerv
     * }
     */
    public static MemorySegment glad_glGetNamedBufferPointerv() {
        return glad_glGetNamedBufferPointerv$constants.SEGMENT.get(glad_glGetNamedBufferPointerv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERPOINTERVPROC glad_glGetNamedBufferPointerv
     * }
     */
    public static void glad_glGetNamedBufferPointerv(MemorySegment varValue) {
        glad_glGetNamedBufferPointerv$constants.SEGMENT.set(glad_glGetNamedBufferPointerv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetNamedBufferPointerv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetNamedBufferPointerv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERPOINTERVPROC glad_debug_glGetNamedBufferPointerv
     * }
     */
    public static AddressLayout glad_debug_glGetNamedBufferPointerv$layout() {
        return glad_debug_glGetNamedBufferPointerv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERPOINTERVPROC glad_debug_glGetNamedBufferPointerv
     * }
     */
    public static MemorySegment glad_debug_glGetNamedBufferPointerv$segment() {
        return glad_debug_glGetNamedBufferPointerv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERPOINTERVPROC glad_debug_glGetNamedBufferPointerv
     * }
     */
    public static MemorySegment glad_debug_glGetNamedBufferPointerv() {
        return glad_debug_glGetNamedBufferPointerv$constants.SEGMENT.get(glad_debug_glGetNamedBufferPointerv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERPOINTERVPROC glad_debug_glGetNamedBufferPointerv
     * }
     */
    public static void glad_debug_glGetNamedBufferPointerv(MemorySegment varValue) {
        glad_debug_glGetNamedBufferPointerv$constants.SEGMENT.set(glad_debug_glGetNamedBufferPointerv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetNamedBufferPointervEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetNamedBufferPointervEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERPOINTERVEXTPROC glad_glGetNamedBufferPointervEXT
     * }
     */
    public static AddressLayout glad_glGetNamedBufferPointervEXT$layout() {
        return glad_glGetNamedBufferPointervEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERPOINTERVEXTPROC glad_glGetNamedBufferPointervEXT
     * }
     */
    public static MemorySegment glad_glGetNamedBufferPointervEXT$segment() {
        return glad_glGetNamedBufferPointervEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERPOINTERVEXTPROC glad_glGetNamedBufferPointervEXT
     * }
     */
    public static MemorySegment glad_glGetNamedBufferPointervEXT() {
        return glad_glGetNamedBufferPointervEXT$constants.SEGMENT.get(glad_glGetNamedBufferPointervEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERPOINTERVEXTPROC glad_glGetNamedBufferPointervEXT
     * }
     */
    public static void glad_glGetNamedBufferPointervEXT(MemorySegment varValue) {
        glad_glGetNamedBufferPointervEXT$constants.SEGMENT.set(glad_glGetNamedBufferPointervEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetNamedBufferPointervEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetNamedBufferPointervEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERPOINTERVEXTPROC glad_debug_glGetNamedBufferPointervEXT
     * }
     */
    public static AddressLayout glad_debug_glGetNamedBufferPointervEXT$layout() {
        return glad_debug_glGetNamedBufferPointervEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERPOINTERVEXTPROC glad_debug_glGetNamedBufferPointervEXT
     * }
     */
    public static MemorySegment glad_debug_glGetNamedBufferPointervEXT$segment() {
        return glad_debug_glGetNamedBufferPointervEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERPOINTERVEXTPROC glad_debug_glGetNamedBufferPointervEXT
     * }
     */
    public static MemorySegment glad_debug_glGetNamedBufferPointervEXT() {
        return glad_debug_glGetNamedBufferPointervEXT$constants.SEGMENT.get(glad_debug_glGetNamedBufferPointervEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERPOINTERVEXTPROC glad_debug_glGetNamedBufferPointervEXT
     * }
     */
    public static void glad_debug_glGetNamedBufferPointervEXT(MemorySegment varValue) {
        glad_debug_glGetNamedBufferPointervEXT$constants.SEGMENT.set(glad_debug_glGetNamedBufferPointervEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetNamedBufferSubData$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetNamedBufferSubData").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERSUBDATAPROC glad_glGetNamedBufferSubData
     * }
     */
    public static AddressLayout glad_glGetNamedBufferSubData$layout() {
        return glad_glGetNamedBufferSubData$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERSUBDATAPROC glad_glGetNamedBufferSubData
     * }
     */
    public static MemorySegment glad_glGetNamedBufferSubData$segment() {
        return glad_glGetNamedBufferSubData$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERSUBDATAPROC glad_glGetNamedBufferSubData
     * }
     */
    public static MemorySegment glad_glGetNamedBufferSubData() {
        return glad_glGetNamedBufferSubData$constants.SEGMENT.get(glad_glGetNamedBufferSubData$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERSUBDATAPROC glad_glGetNamedBufferSubData
     * }
     */
    public static void glad_glGetNamedBufferSubData(MemorySegment varValue) {
        glad_glGetNamedBufferSubData$constants.SEGMENT.set(glad_glGetNamedBufferSubData$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetNamedBufferSubData$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetNamedBufferSubData").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERSUBDATAPROC glad_debug_glGetNamedBufferSubData
     * }
     */
    public static AddressLayout glad_debug_glGetNamedBufferSubData$layout() {
        return glad_debug_glGetNamedBufferSubData$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERSUBDATAPROC glad_debug_glGetNamedBufferSubData
     * }
     */
    public static MemorySegment glad_debug_glGetNamedBufferSubData$segment() {
        return glad_debug_glGetNamedBufferSubData$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERSUBDATAPROC glad_debug_glGetNamedBufferSubData
     * }
     */
    public static MemorySegment glad_debug_glGetNamedBufferSubData() {
        return glad_debug_glGetNamedBufferSubData$constants.SEGMENT.get(glad_debug_glGetNamedBufferSubData$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERSUBDATAPROC glad_debug_glGetNamedBufferSubData
     * }
     */
    public static void glad_debug_glGetNamedBufferSubData(MemorySegment varValue) {
        glad_debug_glGetNamedBufferSubData$constants.SEGMENT.set(glad_debug_glGetNamedBufferSubData$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetNamedBufferSubDataEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetNamedBufferSubDataEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERSUBDATAEXTPROC glad_glGetNamedBufferSubDataEXT
     * }
     */
    public static AddressLayout glad_glGetNamedBufferSubDataEXT$layout() {
        return glad_glGetNamedBufferSubDataEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERSUBDATAEXTPROC glad_glGetNamedBufferSubDataEXT
     * }
     */
    public static MemorySegment glad_glGetNamedBufferSubDataEXT$segment() {
        return glad_glGetNamedBufferSubDataEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERSUBDATAEXTPROC glad_glGetNamedBufferSubDataEXT
     * }
     */
    public static MemorySegment glad_glGetNamedBufferSubDataEXT() {
        return glad_glGetNamedBufferSubDataEXT$constants.SEGMENT.get(glad_glGetNamedBufferSubDataEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERSUBDATAEXTPROC glad_glGetNamedBufferSubDataEXT
     * }
     */
    public static void glad_glGetNamedBufferSubDataEXT(MemorySegment varValue) {
        glad_glGetNamedBufferSubDataEXT$constants.SEGMENT.set(glad_glGetNamedBufferSubDataEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetNamedBufferSubDataEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetNamedBufferSubDataEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERSUBDATAEXTPROC glad_debug_glGetNamedBufferSubDataEXT
     * }
     */
    public static AddressLayout glad_debug_glGetNamedBufferSubDataEXT$layout() {
        return glad_debug_glGetNamedBufferSubDataEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERSUBDATAEXTPROC glad_debug_glGetNamedBufferSubDataEXT
     * }
     */
    public static MemorySegment glad_debug_glGetNamedBufferSubDataEXT$segment() {
        return glad_debug_glGetNamedBufferSubDataEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERSUBDATAEXTPROC glad_debug_glGetNamedBufferSubDataEXT
     * }
     */
    public static MemorySegment glad_debug_glGetNamedBufferSubDataEXT() {
        return glad_debug_glGetNamedBufferSubDataEXT$constants.SEGMENT.get(glad_debug_glGetNamedBufferSubDataEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDBUFFERSUBDATAEXTPROC glad_debug_glGetNamedBufferSubDataEXT
     * }
     */
    public static void glad_debug_glGetNamedBufferSubDataEXT(MemorySegment varValue) {
        glad_debug_glGetNamedBufferSubDataEXT$constants.SEGMENT.set(glad_debug_glGetNamedBufferSubDataEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetNamedFramebufferAttachmentParameteriv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetNamedFramebufferAttachmentParameteriv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC glad_glGetNamedFramebufferAttachmentParameteriv
     * }
     */
    public static AddressLayout glad_glGetNamedFramebufferAttachmentParameteriv$layout() {
        return glad_glGetNamedFramebufferAttachmentParameteriv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC glad_glGetNamedFramebufferAttachmentParameteriv
     * }
     */
    public static MemorySegment glad_glGetNamedFramebufferAttachmentParameteriv$segment() {
        return glad_glGetNamedFramebufferAttachmentParameteriv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC glad_glGetNamedFramebufferAttachmentParameteriv
     * }
     */
    public static MemorySegment glad_glGetNamedFramebufferAttachmentParameteriv() {
        return glad_glGetNamedFramebufferAttachmentParameteriv$constants.SEGMENT.get(glad_glGetNamedFramebufferAttachmentParameteriv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC glad_glGetNamedFramebufferAttachmentParameteriv
     * }
     */
    public static void glad_glGetNamedFramebufferAttachmentParameteriv(MemorySegment varValue) {
        glad_glGetNamedFramebufferAttachmentParameteriv$constants.SEGMENT.set(glad_glGetNamedFramebufferAttachmentParameteriv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetNamedFramebufferAttachmentParameteriv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetNamedFramebufferAttachmentParameteriv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC glad_debug_glGetNamedFramebufferAttachmentParameteriv
     * }
     */
    public static AddressLayout glad_debug_glGetNamedFramebufferAttachmentParameteriv$layout() {
        return glad_debug_glGetNamedFramebufferAttachmentParameteriv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC glad_debug_glGetNamedFramebufferAttachmentParameteriv
     * }
     */
    public static MemorySegment glad_debug_glGetNamedFramebufferAttachmentParameteriv$segment() {
        return glad_debug_glGetNamedFramebufferAttachmentParameteriv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC glad_debug_glGetNamedFramebufferAttachmentParameteriv
     * }
     */
    public static MemorySegment glad_debug_glGetNamedFramebufferAttachmentParameteriv() {
        return glad_debug_glGetNamedFramebufferAttachmentParameteriv$constants.SEGMENT.get(glad_debug_glGetNamedFramebufferAttachmentParameteriv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC glad_debug_glGetNamedFramebufferAttachmentParameteriv
     * }
     */
    public static void glad_debug_glGetNamedFramebufferAttachmentParameteriv(MemorySegment varValue) {
        glad_debug_glGetNamedFramebufferAttachmentParameteriv$constants.SEGMENT.set(glad_debug_glGetNamedFramebufferAttachmentParameteriv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetNamedFramebufferAttachmentParameterivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetNamedFramebufferAttachmentParameterivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC glad_glGetNamedFramebufferAttachmentParameterivEXT
     * }
     */
    public static AddressLayout glad_glGetNamedFramebufferAttachmentParameterivEXT$layout() {
        return glad_glGetNamedFramebufferAttachmentParameterivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC glad_glGetNamedFramebufferAttachmentParameterivEXT
     * }
     */
    public static MemorySegment glad_glGetNamedFramebufferAttachmentParameterivEXT$segment() {
        return glad_glGetNamedFramebufferAttachmentParameterivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC glad_glGetNamedFramebufferAttachmentParameterivEXT
     * }
     */
    public static MemorySegment glad_glGetNamedFramebufferAttachmentParameterivEXT() {
        return glad_glGetNamedFramebufferAttachmentParameterivEXT$constants.SEGMENT.get(glad_glGetNamedFramebufferAttachmentParameterivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC glad_glGetNamedFramebufferAttachmentParameterivEXT
     * }
     */
    public static void glad_glGetNamedFramebufferAttachmentParameterivEXT(MemorySegment varValue) {
        glad_glGetNamedFramebufferAttachmentParameterivEXT$constants.SEGMENT.set(glad_glGetNamedFramebufferAttachmentParameterivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetNamedFramebufferAttachmentParameterivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetNamedFramebufferAttachmentParameterivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC glad_debug_glGetNamedFramebufferAttachmentParameterivEXT
     * }
     */
    public static AddressLayout glad_debug_glGetNamedFramebufferAttachmentParameterivEXT$layout() {
        return glad_debug_glGetNamedFramebufferAttachmentParameterivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC glad_debug_glGetNamedFramebufferAttachmentParameterivEXT
     * }
     */
    public static MemorySegment glad_debug_glGetNamedFramebufferAttachmentParameterivEXT$segment() {
        return glad_debug_glGetNamedFramebufferAttachmentParameterivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC glad_debug_glGetNamedFramebufferAttachmentParameterivEXT
     * }
     */
    public static MemorySegment glad_debug_glGetNamedFramebufferAttachmentParameterivEXT() {
        return glad_debug_glGetNamedFramebufferAttachmentParameterivEXT$constants.SEGMENT.get(glad_debug_glGetNamedFramebufferAttachmentParameterivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC glad_debug_glGetNamedFramebufferAttachmentParameterivEXT
     * }
     */
    public static void glad_debug_glGetNamedFramebufferAttachmentParameterivEXT(MemorySegment varValue) {
        glad_debug_glGetNamedFramebufferAttachmentParameterivEXT$constants.SEGMENT.set(glad_debug_glGetNamedFramebufferAttachmentParameterivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetNamedFramebufferParameteriv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetNamedFramebufferParameteriv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC glad_glGetNamedFramebufferParameteriv
     * }
     */
    public static AddressLayout glad_glGetNamedFramebufferParameteriv$layout() {
        return glad_glGetNamedFramebufferParameteriv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC glad_glGetNamedFramebufferParameteriv
     * }
     */
    public static MemorySegment glad_glGetNamedFramebufferParameteriv$segment() {
        return glad_glGetNamedFramebufferParameteriv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC glad_glGetNamedFramebufferParameteriv
     * }
     */
    public static MemorySegment glad_glGetNamedFramebufferParameteriv() {
        return glad_glGetNamedFramebufferParameteriv$constants.SEGMENT.get(glad_glGetNamedFramebufferParameteriv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC glad_glGetNamedFramebufferParameteriv
     * }
     */
    public static void glad_glGetNamedFramebufferParameteriv(MemorySegment varValue) {
        glad_glGetNamedFramebufferParameteriv$constants.SEGMENT.set(glad_glGetNamedFramebufferParameteriv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetNamedFramebufferParameteriv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetNamedFramebufferParameteriv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC glad_debug_glGetNamedFramebufferParameteriv
     * }
     */
    public static AddressLayout glad_debug_glGetNamedFramebufferParameteriv$layout() {
        return glad_debug_glGetNamedFramebufferParameteriv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC glad_debug_glGetNamedFramebufferParameteriv
     * }
     */
    public static MemorySegment glad_debug_glGetNamedFramebufferParameteriv$segment() {
        return glad_debug_glGetNamedFramebufferParameteriv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC glad_debug_glGetNamedFramebufferParameteriv
     * }
     */
    public static MemorySegment glad_debug_glGetNamedFramebufferParameteriv() {
        return glad_debug_glGetNamedFramebufferParameteriv$constants.SEGMENT.get(glad_debug_glGetNamedFramebufferParameteriv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC glad_debug_glGetNamedFramebufferParameteriv
     * }
     */
    public static void glad_debug_glGetNamedFramebufferParameteriv(MemorySegment varValue) {
        glad_debug_glGetNamedFramebufferParameteriv$constants.SEGMENT.set(glad_debug_glGetNamedFramebufferParameteriv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetNamedFramebufferParameterivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetNamedFramebufferParameterivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC glad_glGetNamedFramebufferParameterivEXT
     * }
     */
    public static AddressLayout glad_glGetNamedFramebufferParameterivEXT$layout() {
        return glad_glGetNamedFramebufferParameterivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC glad_glGetNamedFramebufferParameterivEXT
     * }
     */
    public static MemorySegment glad_glGetNamedFramebufferParameterivEXT$segment() {
        return glad_glGetNamedFramebufferParameterivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC glad_glGetNamedFramebufferParameterivEXT
     * }
     */
    public static MemorySegment glad_glGetNamedFramebufferParameterivEXT() {
        return glad_glGetNamedFramebufferParameterivEXT$constants.SEGMENT.get(glad_glGetNamedFramebufferParameterivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC glad_glGetNamedFramebufferParameterivEXT
     * }
     */
    public static void glad_glGetNamedFramebufferParameterivEXT(MemorySegment varValue) {
        glad_glGetNamedFramebufferParameterivEXT$constants.SEGMENT.set(glad_glGetNamedFramebufferParameterivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetNamedFramebufferParameterivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetNamedFramebufferParameterivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC glad_debug_glGetNamedFramebufferParameterivEXT
     * }
     */
    public static AddressLayout glad_debug_glGetNamedFramebufferParameterivEXT$layout() {
        return glad_debug_glGetNamedFramebufferParameterivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC glad_debug_glGetNamedFramebufferParameterivEXT
     * }
     */
    public static MemorySegment glad_debug_glGetNamedFramebufferParameterivEXT$segment() {
        return glad_debug_glGetNamedFramebufferParameterivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC glad_debug_glGetNamedFramebufferParameterivEXT
     * }
     */
    public static MemorySegment glad_debug_glGetNamedFramebufferParameterivEXT() {
        return glad_debug_glGetNamedFramebufferParameterivEXT$constants.SEGMENT.get(glad_debug_glGetNamedFramebufferParameterivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC glad_debug_glGetNamedFramebufferParameterivEXT
     * }
     */
    public static void glad_debug_glGetNamedFramebufferParameterivEXT(MemorySegment varValue) {
        glad_debug_glGetNamedFramebufferParameterivEXT$constants.SEGMENT.set(glad_debug_glGetNamedFramebufferParameterivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetNamedProgramLocalParameterIivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetNamedProgramLocalParameterIivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC glad_glGetNamedProgramLocalParameterIivEXT
     * }
     */
    public static AddressLayout glad_glGetNamedProgramLocalParameterIivEXT$layout() {
        return glad_glGetNamedProgramLocalParameterIivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC glad_glGetNamedProgramLocalParameterIivEXT
     * }
     */
    public static MemorySegment glad_glGetNamedProgramLocalParameterIivEXT$segment() {
        return glad_glGetNamedProgramLocalParameterIivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC glad_glGetNamedProgramLocalParameterIivEXT
     * }
     */
    public static MemorySegment glad_glGetNamedProgramLocalParameterIivEXT() {
        return glad_glGetNamedProgramLocalParameterIivEXT$constants.SEGMENT.get(glad_glGetNamedProgramLocalParameterIivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC glad_glGetNamedProgramLocalParameterIivEXT
     * }
     */
    public static void glad_glGetNamedProgramLocalParameterIivEXT(MemorySegment varValue) {
        glad_glGetNamedProgramLocalParameterIivEXT$constants.SEGMENT.set(glad_glGetNamedProgramLocalParameterIivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetNamedProgramLocalParameterIivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetNamedProgramLocalParameterIivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC glad_debug_glGetNamedProgramLocalParameterIivEXT
     * }
     */
    public static AddressLayout glad_debug_glGetNamedProgramLocalParameterIivEXT$layout() {
        return glad_debug_glGetNamedProgramLocalParameterIivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC glad_debug_glGetNamedProgramLocalParameterIivEXT
     * }
     */
    public static MemorySegment glad_debug_glGetNamedProgramLocalParameterIivEXT$segment() {
        return glad_debug_glGetNamedProgramLocalParameterIivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC glad_debug_glGetNamedProgramLocalParameterIivEXT
     * }
     */
    public static MemorySegment glad_debug_glGetNamedProgramLocalParameterIivEXT() {
        return glad_debug_glGetNamedProgramLocalParameterIivEXT$constants.SEGMENT.get(glad_debug_glGetNamedProgramLocalParameterIivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC glad_debug_glGetNamedProgramLocalParameterIivEXT
     * }
     */
    public static void glad_debug_glGetNamedProgramLocalParameterIivEXT(MemorySegment varValue) {
        glad_debug_glGetNamedProgramLocalParameterIivEXT$constants.SEGMENT.set(glad_debug_glGetNamedProgramLocalParameterIivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetNamedProgramLocalParameterIuivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetNamedProgramLocalParameterIuivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC glad_glGetNamedProgramLocalParameterIuivEXT
     * }
     */
    public static AddressLayout glad_glGetNamedProgramLocalParameterIuivEXT$layout() {
        return glad_glGetNamedProgramLocalParameterIuivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC glad_glGetNamedProgramLocalParameterIuivEXT
     * }
     */
    public static MemorySegment glad_glGetNamedProgramLocalParameterIuivEXT$segment() {
        return glad_glGetNamedProgramLocalParameterIuivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC glad_glGetNamedProgramLocalParameterIuivEXT
     * }
     */
    public static MemorySegment glad_glGetNamedProgramLocalParameterIuivEXT() {
        return glad_glGetNamedProgramLocalParameterIuivEXT$constants.SEGMENT.get(glad_glGetNamedProgramLocalParameterIuivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC glad_glGetNamedProgramLocalParameterIuivEXT
     * }
     */
    public static void glad_glGetNamedProgramLocalParameterIuivEXT(MemorySegment varValue) {
        glad_glGetNamedProgramLocalParameterIuivEXT$constants.SEGMENT.set(glad_glGetNamedProgramLocalParameterIuivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetNamedProgramLocalParameterIuivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetNamedProgramLocalParameterIuivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC glad_debug_glGetNamedProgramLocalParameterIuivEXT
     * }
     */
    public static AddressLayout glad_debug_glGetNamedProgramLocalParameterIuivEXT$layout() {
        return glad_debug_glGetNamedProgramLocalParameterIuivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC glad_debug_glGetNamedProgramLocalParameterIuivEXT
     * }
     */
    public static MemorySegment glad_debug_glGetNamedProgramLocalParameterIuivEXT$segment() {
        return glad_debug_glGetNamedProgramLocalParameterIuivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC glad_debug_glGetNamedProgramLocalParameterIuivEXT
     * }
     */
    public static MemorySegment glad_debug_glGetNamedProgramLocalParameterIuivEXT() {
        return glad_debug_glGetNamedProgramLocalParameterIuivEXT$constants.SEGMENT.get(glad_debug_glGetNamedProgramLocalParameterIuivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC glad_debug_glGetNamedProgramLocalParameterIuivEXT
     * }
     */
    public static void glad_debug_glGetNamedProgramLocalParameterIuivEXT(MemorySegment varValue) {
        glad_debug_glGetNamedProgramLocalParameterIuivEXT$constants.SEGMENT.set(glad_debug_glGetNamedProgramLocalParameterIuivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetNamedProgramLocalParameterdvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetNamedProgramLocalParameterdvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC glad_glGetNamedProgramLocalParameterdvEXT
     * }
     */
    public static AddressLayout glad_glGetNamedProgramLocalParameterdvEXT$layout() {
        return glad_glGetNamedProgramLocalParameterdvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC glad_glGetNamedProgramLocalParameterdvEXT
     * }
     */
    public static MemorySegment glad_glGetNamedProgramLocalParameterdvEXT$segment() {
        return glad_glGetNamedProgramLocalParameterdvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC glad_glGetNamedProgramLocalParameterdvEXT
     * }
     */
    public static MemorySegment glad_glGetNamedProgramLocalParameterdvEXT() {
        return glad_glGetNamedProgramLocalParameterdvEXT$constants.SEGMENT.get(glad_glGetNamedProgramLocalParameterdvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC glad_glGetNamedProgramLocalParameterdvEXT
     * }
     */
    public static void glad_glGetNamedProgramLocalParameterdvEXT(MemorySegment varValue) {
        glad_glGetNamedProgramLocalParameterdvEXT$constants.SEGMENT.set(glad_glGetNamedProgramLocalParameterdvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetNamedProgramLocalParameterdvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetNamedProgramLocalParameterdvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC glad_debug_glGetNamedProgramLocalParameterdvEXT
     * }
     */
    public static AddressLayout glad_debug_glGetNamedProgramLocalParameterdvEXT$layout() {
        return glad_debug_glGetNamedProgramLocalParameterdvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC glad_debug_glGetNamedProgramLocalParameterdvEXT
     * }
     */
    public static MemorySegment glad_debug_glGetNamedProgramLocalParameterdvEXT$segment() {
        return glad_debug_glGetNamedProgramLocalParameterdvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC glad_debug_glGetNamedProgramLocalParameterdvEXT
     * }
     */
    public static MemorySegment glad_debug_glGetNamedProgramLocalParameterdvEXT() {
        return glad_debug_glGetNamedProgramLocalParameterdvEXT$constants.SEGMENT.get(glad_debug_glGetNamedProgramLocalParameterdvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC glad_debug_glGetNamedProgramLocalParameterdvEXT
     * }
     */
    public static void glad_debug_glGetNamedProgramLocalParameterdvEXT(MemorySegment varValue) {
        glad_debug_glGetNamedProgramLocalParameterdvEXT$constants.SEGMENT.set(glad_debug_glGetNamedProgramLocalParameterdvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetNamedProgramLocalParameterfvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetNamedProgramLocalParameterfvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC glad_glGetNamedProgramLocalParameterfvEXT
     * }
     */
    public static AddressLayout glad_glGetNamedProgramLocalParameterfvEXT$layout() {
        return glad_glGetNamedProgramLocalParameterfvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC glad_glGetNamedProgramLocalParameterfvEXT
     * }
     */
    public static MemorySegment glad_glGetNamedProgramLocalParameterfvEXT$segment() {
        return glad_glGetNamedProgramLocalParameterfvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC glad_glGetNamedProgramLocalParameterfvEXT
     * }
     */
    public static MemorySegment glad_glGetNamedProgramLocalParameterfvEXT() {
        return glad_glGetNamedProgramLocalParameterfvEXT$constants.SEGMENT.get(glad_glGetNamedProgramLocalParameterfvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC glad_glGetNamedProgramLocalParameterfvEXT
     * }
     */
    public static void glad_glGetNamedProgramLocalParameterfvEXT(MemorySegment varValue) {
        glad_glGetNamedProgramLocalParameterfvEXT$constants.SEGMENT.set(glad_glGetNamedProgramLocalParameterfvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetNamedProgramLocalParameterfvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetNamedProgramLocalParameterfvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC glad_debug_glGetNamedProgramLocalParameterfvEXT
     * }
     */
    public static AddressLayout glad_debug_glGetNamedProgramLocalParameterfvEXT$layout() {
        return glad_debug_glGetNamedProgramLocalParameterfvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC glad_debug_glGetNamedProgramLocalParameterfvEXT
     * }
     */
    public static MemorySegment glad_debug_glGetNamedProgramLocalParameterfvEXT$segment() {
        return glad_debug_glGetNamedProgramLocalParameterfvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC glad_debug_glGetNamedProgramLocalParameterfvEXT
     * }
     */
    public static MemorySegment glad_debug_glGetNamedProgramLocalParameterfvEXT() {
        return glad_debug_glGetNamedProgramLocalParameterfvEXT$constants.SEGMENT.get(glad_debug_glGetNamedProgramLocalParameterfvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC glad_debug_glGetNamedProgramLocalParameterfvEXT
     * }
     */
    public static void glad_debug_glGetNamedProgramLocalParameterfvEXT(MemorySegment varValue) {
        glad_debug_glGetNamedProgramLocalParameterfvEXT$constants.SEGMENT.set(glad_debug_glGetNamedProgramLocalParameterfvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetNamedProgramStringEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetNamedProgramStringEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDPROGRAMSTRINGEXTPROC glad_glGetNamedProgramStringEXT
     * }
     */
    public static AddressLayout glad_glGetNamedProgramStringEXT$layout() {
        return glad_glGetNamedProgramStringEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDPROGRAMSTRINGEXTPROC glad_glGetNamedProgramStringEXT
     * }
     */
    public static MemorySegment glad_glGetNamedProgramStringEXT$segment() {
        return glad_glGetNamedProgramStringEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDPROGRAMSTRINGEXTPROC glad_glGetNamedProgramStringEXT
     * }
     */
    public static MemorySegment glad_glGetNamedProgramStringEXT() {
        return glad_glGetNamedProgramStringEXT$constants.SEGMENT.get(glad_glGetNamedProgramStringEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDPROGRAMSTRINGEXTPROC glad_glGetNamedProgramStringEXT
     * }
     */
    public static void glad_glGetNamedProgramStringEXT(MemorySegment varValue) {
        glad_glGetNamedProgramStringEXT$constants.SEGMENT.set(glad_glGetNamedProgramStringEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetNamedProgramStringEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetNamedProgramStringEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDPROGRAMSTRINGEXTPROC glad_debug_glGetNamedProgramStringEXT
     * }
     */
    public static AddressLayout glad_debug_glGetNamedProgramStringEXT$layout() {
        return glad_debug_glGetNamedProgramStringEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDPROGRAMSTRINGEXTPROC glad_debug_glGetNamedProgramStringEXT
     * }
     */
    public static MemorySegment glad_debug_glGetNamedProgramStringEXT$segment() {
        return glad_debug_glGetNamedProgramStringEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDPROGRAMSTRINGEXTPROC glad_debug_glGetNamedProgramStringEXT
     * }
     */
    public static MemorySegment glad_debug_glGetNamedProgramStringEXT() {
        return glad_debug_glGetNamedProgramStringEXT$constants.SEGMENT.get(glad_debug_glGetNamedProgramStringEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDPROGRAMSTRINGEXTPROC glad_debug_glGetNamedProgramStringEXT
     * }
     */
    public static void glad_debug_glGetNamedProgramStringEXT(MemorySegment varValue) {
        glad_debug_glGetNamedProgramStringEXT$constants.SEGMENT.set(glad_debug_glGetNamedProgramStringEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetNamedProgramivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetNamedProgramivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDPROGRAMIVEXTPROC glad_glGetNamedProgramivEXT
     * }
     */
    public static AddressLayout glad_glGetNamedProgramivEXT$layout() {
        return glad_glGetNamedProgramivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDPROGRAMIVEXTPROC glad_glGetNamedProgramivEXT
     * }
     */
    public static MemorySegment glad_glGetNamedProgramivEXT$segment() {
        return glad_glGetNamedProgramivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDPROGRAMIVEXTPROC glad_glGetNamedProgramivEXT
     * }
     */
    public static MemorySegment glad_glGetNamedProgramivEXT() {
        return glad_glGetNamedProgramivEXT$constants.SEGMENT.get(glad_glGetNamedProgramivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDPROGRAMIVEXTPROC glad_glGetNamedProgramivEXT
     * }
     */
    public static void glad_glGetNamedProgramivEXT(MemorySegment varValue) {
        glad_glGetNamedProgramivEXT$constants.SEGMENT.set(glad_glGetNamedProgramivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetNamedProgramivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetNamedProgramivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDPROGRAMIVEXTPROC glad_debug_glGetNamedProgramivEXT
     * }
     */
    public static AddressLayout glad_debug_glGetNamedProgramivEXT$layout() {
        return glad_debug_glGetNamedProgramivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDPROGRAMIVEXTPROC glad_debug_glGetNamedProgramivEXT
     * }
     */
    public static MemorySegment glad_debug_glGetNamedProgramivEXT$segment() {
        return glad_debug_glGetNamedProgramivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDPROGRAMIVEXTPROC glad_debug_glGetNamedProgramivEXT
     * }
     */
    public static MemorySegment glad_debug_glGetNamedProgramivEXT() {
        return glad_debug_glGetNamedProgramivEXT$constants.SEGMENT.get(glad_debug_glGetNamedProgramivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDPROGRAMIVEXTPROC glad_debug_glGetNamedProgramivEXT
     * }
     */
    public static void glad_debug_glGetNamedProgramivEXT(MemorySegment varValue) {
        glad_debug_glGetNamedProgramivEXT$constants.SEGMENT.set(glad_debug_glGetNamedProgramivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetNamedRenderbufferParameteriv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetNamedRenderbufferParameteriv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC glad_glGetNamedRenderbufferParameteriv
     * }
     */
    public static AddressLayout glad_glGetNamedRenderbufferParameteriv$layout() {
        return glad_glGetNamedRenderbufferParameteriv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC glad_glGetNamedRenderbufferParameteriv
     * }
     */
    public static MemorySegment glad_glGetNamedRenderbufferParameteriv$segment() {
        return glad_glGetNamedRenderbufferParameteriv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC glad_glGetNamedRenderbufferParameteriv
     * }
     */
    public static MemorySegment glad_glGetNamedRenderbufferParameteriv() {
        return glad_glGetNamedRenderbufferParameteriv$constants.SEGMENT.get(glad_glGetNamedRenderbufferParameteriv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC glad_glGetNamedRenderbufferParameteriv
     * }
     */
    public static void glad_glGetNamedRenderbufferParameteriv(MemorySegment varValue) {
        glad_glGetNamedRenderbufferParameteriv$constants.SEGMENT.set(glad_glGetNamedRenderbufferParameteriv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetNamedRenderbufferParameteriv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetNamedRenderbufferParameteriv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC glad_debug_glGetNamedRenderbufferParameteriv
     * }
     */
    public static AddressLayout glad_debug_glGetNamedRenderbufferParameteriv$layout() {
        return glad_debug_glGetNamedRenderbufferParameteriv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC glad_debug_glGetNamedRenderbufferParameteriv
     * }
     */
    public static MemorySegment glad_debug_glGetNamedRenderbufferParameteriv$segment() {
        return glad_debug_glGetNamedRenderbufferParameteriv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC glad_debug_glGetNamedRenderbufferParameteriv
     * }
     */
    public static MemorySegment glad_debug_glGetNamedRenderbufferParameteriv() {
        return glad_debug_glGetNamedRenderbufferParameteriv$constants.SEGMENT.get(glad_debug_glGetNamedRenderbufferParameteriv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC glad_debug_glGetNamedRenderbufferParameteriv
     * }
     */
    public static void glad_debug_glGetNamedRenderbufferParameteriv(MemorySegment varValue) {
        glad_debug_glGetNamedRenderbufferParameteriv$constants.SEGMENT.set(glad_debug_glGetNamedRenderbufferParameteriv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetNamedRenderbufferParameterivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetNamedRenderbufferParameterivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC glad_glGetNamedRenderbufferParameterivEXT
     * }
     */
    public static AddressLayout glad_glGetNamedRenderbufferParameterivEXT$layout() {
        return glad_glGetNamedRenderbufferParameterivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC glad_glGetNamedRenderbufferParameterivEXT
     * }
     */
    public static MemorySegment glad_glGetNamedRenderbufferParameterivEXT$segment() {
        return glad_glGetNamedRenderbufferParameterivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC glad_glGetNamedRenderbufferParameterivEXT
     * }
     */
    public static MemorySegment glad_glGetNamedRenderbufferParameterivEXT() {
        return glad_glGetNamedRenderbufferParameterivEXT$constants.SEGMENT.get(glad_glGetNamedRenderbufferParameterivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC glad_glGetNamedRenderbufferParameterivEXT
     * }
     */
    public static void glad_glGetNamedRenderbufferParameterivEXT(MemorySegment varValue) {
        glad_glGetNamedRenderbufferParameterivEXT$constants.SEGMENT.set(glad_glGetNamedRenderbufferParameterivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetNamedRenderbufferParameterivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetNamedRenderbufferParameterivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC glad_debug_glGetNamedRenderbufferParameterivEXT
     * }
     */
    public static AddressLayout glad_debug_glGetNamedRenderbufferParameterivEXT$layout() {
        return glad_debug_glGetNamedRenderbufferParameterivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC glad_debug_glGetNamedRenderbufferParameterivEXT
     * }
     */
    public static MemorySegment glad_debug_glGetNamedRenderbufferParameterivEXT$segment() {
        return glad_debug_glGetNamedRenderbufferParameterivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC glad_debug_glGetNamedRenderbufferParameterivEXT
     * }
     */
    public static MemorySegment glad_debug_glGetNamedRenderbufferParameterivEXT() {
        return glad_debug_glGetNamedRenderbufferParameterivEXT$constants.SEGMENT.get(glad_debug_glGetNamedRenderbufferParameterivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC glad_debug_glGetNamedRenderbufferParameterivEXT
     * }
     */
    public static void glad_debug_glGetNamedRenderbufferParameterivEXT(MemorySegment varValue) {
        glad_debug_glGetNamedRenderbufferParameterivEXT$constants.SEGMENT.set(glad_debug_glGetNamedRenderbufferParameterivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetObjectLabel$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetObjectLabel").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETOBJECTLABELPROC glad_glGetObjectLabel
     * }
     */
    public static AddressLayout glad_glGetObjectLabel$layout() {
        return glad_glGetObjectLabel$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETOBJECTLABELPROC glad_glGetObjectLabel
     * }
     */
    public static MemorySegment glad_glGetObjectLabel$segment() {
        return glad_glGetObjectLabel$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETOBJECTLABELPROC glad_glGetObjectLabel
     * }
     */
    public static MemorySegment glad_glGetObjectLabel() {
        return glad_glGetObjectLabel$constants.SEGMENT.get(glad_glGetObjectLabel$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETOBJECTLABELPROC glad_glGetObjectLabel
     * }
     */
    public static void glad_glGetObjectLabel(MemorySegment varValue) {
        glad_glGetObjectLabel$constants.SEGMENT.set(glad_glGetObjectLabel$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetObjectLabel$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetObjectLabel").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETOBJECTLABELPROC glad_debug_glGetObjectLabel
     * }
     */
    public static AddressLayout glad_debug_glGetObjectLabel$layout() {
        return glad_debug_glGetObjectLabel$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETOBJECTLABELPROC glad_debug_glGetObjectLabel
     * }
     */
    public static MemorySegment glad_debug_glGetObjectLabel$segment() {
        return glad_debug_glGetObjectLabel$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETOBJECTLABELPROC glad_debug_glGetObjectLabel
     * }
     */
    public static MemorySegment glad_debug_glGetObjectLabel() {
        return glad_debug_glGetObjectLabel$constants.SEGMENT.get(glad_debug_glGetObjectLabel$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETOBJECTLABELPROC glad_debug_glGetObjectLabel
     * }
     */
    public static void glad_debug_glGetObjectLabel(MemorySegment varValue) {
        glad_debug_glGetObjectLabel$constants.SEGMENT.set(glad_debug_glGetObjectLabel$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetObjectParameterfvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetObjectParameterfvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETOBJECTPARAMETERFVARBPROC glad_glGetObjectParameterfvARB
     * }
     */
    public static AddressLayout glad_glGetObjectParameterfvARB$layout() {
        return glad_glGetObjectParameterfvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETOBJECTPARAMETERFVARBPROC glad_glGetObjectParameterfvARB
     * }
     */
    public static MemorySegment glad_glGetObjectParameterfvARB$segment() {
        return glad_glGetObjectParameterfvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETOBJECTPARAMETERFVARBPROC glad_glGetObjectParameterfvARB
     * }
     */
    public static MemorySegment glad_glGetObjectParameterfvARB() {
        return glad_glGetObjectParameterfvARB$constants.SEGMENT.get(glad_glGetObjectParameterfvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETOBJECTPARAMETERFVARBPROC glad_glGetObjectParameterfvARB
     * }
     */
    public static void glad_glGetObjectParameterfvARB(MemorySegment varValue) {
        glad_glGetObjectParameterfvARB$constants.SEGMENT.set(glad_glGetObjectParameterfvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetObjectParameterfvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetObjectParameterfvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETOBJECTPARAMETERFVARBPROC glad_debug_glGetObjectParameterfvARB
     * }
     */
    public static AddressLayout glad_debug_glGetObjectParameterfvARB$layout() {
        return glad_debug_glGetObjectParameterfvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETOBJECTPARAMETERFVARBPROC glad_debug_glGetObjectParameterfvARB
     * }
     */
    public static MemorySegment glad_debug_glGetObjectParameterfvARB$segment() {
        return glad_debug_glGetObjectParameterfvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETOBJECTPARAMETERFVARBPROC glad_debug_glGetObjectParameterfvARB
     * }
     */
    public static MemorySegment glad_debug_glGetObjectParameterfvARB() {
        return glad_debug_glGetObjectParameterfvARB$constants.SEGMENT.get(glad_debug_glGetObjectParameterfvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETOBJECTPARAMETERFVARBPROC glad_debug_glGetObjectParameterfvARB
     * }
     */
    public static void glad_debug_glGetObjectParameterfvARB(MemorySegment varValue) {
        glad_debug_glGetObjectParameterfvARB$constants.SEGMENT.set(glad_debug_glGetObjectParameterfvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetObjectParameterivARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetObjectParameterivARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETOBJECTPARAMETERIVARBPROC glad_glGetObjectParameterivARB
     * }
     */
    public static AddressLayout glad_glGetObjectParameterivARB$layout() {
        return glad_glGetObjectParameterivARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETOBJECTPARAMETERIVARBPROC glad_glGetObjectParameterivARB
     * }
     */
    public static MemorySegment glad_glGetObjectParameterivARB$segment() {
        return glad_glGetObjectParameterivARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETOBJECTPARAMETERIVARBPROC glad_glGetObjectParameterivARB
     * }
     */
    public static MemorySegment glad_glGetObjectParameterivARB() {
        return glad_glGetObjectParameterivARB$constants.SEGMENT.get(glad_glGetObjectParameterivARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETOBJECTPARAMETERIVARBPROC glad_glGetObjectParameterivARB
     * }
     */
    public static void glad_glGetObjectParameterivARB(MemorySegment varValue) {
        glad_glGetObjectParameterivARB$constants.SEGMENT.set(glad_glGetObjectParameterivARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetObjectParameterivARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetObjectParameterivARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETOBJECTPARAMETERIVARBPROC glad_debug_glGetObjectParameterivARB
     * }
     */
    public static AddressLayout glad_debug_glGetObjectParameterivARB$layout() {
        return glad_debug_glGetObjectParameterivARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETOBJECTPARAMETERIVARBPROC glad_debug_glGetObjectParameterivARB
     * }
     */
    public static MemorySegment glad_debug_glGetObjectParameterivARB$segment() {
        return glad_debug_glGetObjectParameterivARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETOBJECTPARAMETERIVARBPROC glad_debug_glGetObjectParameterivARB
     * }
     */
    public static MemorySegment glad_debug_glGetObjectParameterivARB() {
        return glad_debug_glGetObjectParameterivARB$constants.SEGMENT.get(glad_debug_glGetObjectParameterivARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETOBJECTPARAMETERIVARBPROC glad_debug_glGetObjectParameterivARB
     * }
     */
    public static void glad_debug_glGetObjectParameterivARB(MemorySegment varValue) {
        glad_debug_glGetObjectParameterivARB$constants.SEGMENT.set(glad_debug_glGetObjectParameterivARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetObjectPtrLabel$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetObjectPtrLabel").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETOBJECTPTRLABELPROC glad_glGetObjectPtrLabel
     * }
     */
    public static AddressLayout glad_glGetObjectPtrLabel$layout() {
        return glad_glGetObjectPtrLabel$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETOBJECTPTRLABELPROC glad_glGetObjectPtrLabel
     * }
     */
    public static MemorySegment glad_glGetObjectPtrLabel$segment() {
        return glad_glGetObjectPtrLabel$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETOBJECTPTRLABELPROC glad_glGetObjectPtrLabel
     * }
     */
    public static MemorySegment glad_glGetObjectPtrLabel() {
        return glad_glGetObjectPtrLabel$constants.SEGMENT.get(glad_glGetObjectPtrLabel$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETOBJECTPTRLABELPROC glad_glGetObjectPtrLabel
     * }
     */
    public static void glad_glGetObjectPtrLabel(MemorySegment varValue) {
        glad_glGetObjectPtrLabel$constants.SEGMENT.set(glad_glGetObjectPtrLabel$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetObjectPtrLabel$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetObjectPtrLabel").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETOBJECTPTRLABELPROC glad_debug_glGetObjectPtrLabel
     * }
     */
    public static AddressLayout glad_debug_glGetObjectPtrLabel$layout() {
        return glad_debug_glGetObjectPtrLabel$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETOBJECTPTRLABELPROC glad_debug_glGetObjectPtrLabel
     * }
     */
    public static MemorySegment glad_debug_glGetObjectPtrLabel$segment() {
        return glad_debug_glGetObjectPtrLabel$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETOBJECTPTRLABELPROC glad_debug_glGetObjectPtrLabel
     * }
     */
    public static MemorySegment glad_debug_glGetObjectPtrLabel() {
        return glad_debug_glGetObjectPtrLabel$constants.SEGMENT.get(glad_debug_glGetObjectPtrLabel$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETOBJECTPTRLABELPROC glad_debug_glGetObjectPtrLabel
     * }
     */
    public static void glad_debug_glGetObjectPtrLabel(MemorySegment varValue) {
        glad_debug_glGetObjectPtrLabel$constants.SEGMENT.set(glad_debug_glGetObjectPtrLabel$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetPixelMapfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetPixelMapfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPIXELMAPFVPROC glad_glGetPixelMapfv
     * }
     */
    public static AddressLayout glad_glGetPixelMapfv$layout() {
        return glad_glGetPixelMapfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPIXELMAPFVPROC glad_glGetPixelMapfv
     * }
     */
    public static MemorySegment glad_glGetPixelMapfv$segment() {
        return glad_glGetPixelMapfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPIXELMAPFVPROC glad_glGetPixelMapfv
     * }
     */
    public static MemorySegment glad_glGetPixelMapfv() {
        return glad_glGetPixelMapfv$constants.SEGMENT.get(glad_glGetPixelMapfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPIXELMAPFVPROC glad_glGetPixelMapfv
     * }
     */
    public static void glad_glGetPixelMapfv(MemorySegment varValue) {
        glad_glGetPixelMapfv$constants.SEGMENT.set(glad_glGetPixelMapfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetPixelMapfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetPixelMapfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPIXELMAPFVPROC glad_debug_glGetPixelMapfv
     * }
     */
    public static AddressLayout glad_debug_glGetPixelMapfv$layout() {
        return glad_debug_glGetPixelMapfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPIXELMAPFVPROC glad_debug_glGetPixelMapfv
     * }
     */
    public static MemorySegment glad_debug_glGetPixelMapfv$segment() {
        return glad_debug_glGetPixelMapfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPIXELMAPFVPROC glad_debug_glGetPixelMapfv
     * }
     */
    public static MemorySegment glad_debug_glGetPixelMapfv() {
        return glad_debug_glGetPixelMapfv$constants.SEGMENT.get(glad_debug_glGetPixelMapfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPIXELMAPFVPROC glad_debug_glGetPixelMapfv
     * }
     */
    public static void glad_debug_glGetPixelMapfv(MemorySegment varValue) {
        glad_debug_glGetPixelMapfv$constants.SEGMENT.set(glad_debug_glGetPixelMapfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetPixelMapuiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetPixelMapuiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPIXELMAPUIVPROC glad_glGetPixelMapuiv
     * }
     */
    public static AddressLayout glad_glGetPixelMapuiv$layout() {
        return glad_glGetPixelMapuiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPIXELMAPUIVPROC glad_glGetPixelMapuiv
     * }
     */
    public static MemorySegment glad_glGetPixelMapuiv$segment() {
        return glad_glGetPixelMapuiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPIXELMAPUIVPROC glad_glGetPixelMapuiv
     * }
     */
    public static MemorySegment glad_glGetPixelMapuiv() {
        return glad_glGetPixelMapuiv$constants.SEGMENT.get(glad_glGetPixelMapuiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPIXELMAPUIVPROC glad_glGetPixelMapuiv
     * }
     */
    public static void glad_glGetPixelMapuiv(MemorySegment varValue) {
        glad_glGetPixelMapuiv$constants.SEGMENT.set(glad_glGetPixelMapuiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetPixelMapuiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetPixelMapuiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPIXELMAPUIVPROC glad_debug_glGetPixelMapuiv
     * }
     */
    public static AddressLayout glad_debug_glGetPixelMapuiv$layout() {
        return glad_debug_glGetPixelMapuiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPIXELMAPUIVPROC glad_debug_glGetPixelMapuiv
     * }
     */
    public static MemorySegment glad_debug_glGetPixelMapuiv$segment() {
        return glad_debug_glGetPixelMapuiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPIXELMAPUIVPROC glad_debug_glGetPixelMapuiv
     * }
     */
    public static MemorySegment glad_debug_glGetPixelMapuiv() {
        return glad_debug_glGetPixelMapuiv$constants.SEGMENT.get(glad_debug_glGetPixelMapuiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPIXELMAPUIVPROC glad_debug_glGetPixelMapuiv
     * }
     */
    public static void glad_debug_glGetPixelMapuiv(MemorySegment varValue) {
        glad_debug_glGetPixelMapuiv$constants.SEGMENT.set(glad_debug_glGetPixelMapuiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetPixelMapusv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetPixelMapusv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPIXELMAPUSVPROC glad_glGetPixelMapusv
     * }
     */
    public static AddressLayout glad_glGetPixelMapusv$layout() {
        return glad_glGetPixelMapusv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPIXELMAPUSVPROC glad_glGetPixelMapusv
     * }
     */
    public static MemorySegment glad_glGetPixelMapusv$segment() {
        return glad_glGetPixelMapusv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPIXELMAPUSVPROC glad_glGetPixelMapusv
     * }
     */
    public static MemorySegment glad_glGetPixelMapusv() {
        return glad_glGetPixelMapusv$constants.SEGMENT.get(glad_glGetPixelMapusv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPIXELMAPUSVPROC glad_glGetPixelMapusv
     * }
     */
    public static void glad_glGetPixelMapusv(MemorySegment varValue) {
        glad_glGetPixelMapusv$constants.SEGMENT.set(glad_glGetPixelMapusv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetPixelMapusv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetPixelMapusv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPIXELMAPUSVPROC glad_debug_glGetPixelMapusv
     * }
     */
    public static AddressLayout glad_debug_glGetPixelMapusv$layout() {
        return glad_debug_glGetPixelMapusv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPIXELMAPUSVPROC glad_debug_glGetPixelMapusv
     * }
     */
    public static MemorySegment glad_debug_glGetPixelMapusv$segment() {
        return glad_debug_glGetPixelMapusv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPIXELMAPUSVPROC glad_debug_glGetPixelMapusv
     * }
     */
    public static MemorySegment glad_debug_glGetPixelMapusv() {
        return glad_debug_glGetPixelMapusv$constants.SEGMENT.get(glad_debug_glGetPixelMapusv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPIXELMAPUSVPROC glad_debug_glGetPixelMapusv
     * }
     */
    public static void glad_debug_glGetPixelMapusv(MemorySegment varValue) {
        glad_debug_glGetPixelMapusv$constants.SEGMENT.set(glad_debug_glGetPixelMapusv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetPointerIndexedvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetPointerIndexedvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPOINTERINDEXEDVEXTPROC glad_glGetPointerIndexedvEXT
     * }
     */
    public static AddressLayout glad_glGetPointerIndexedvEXT$layout() {
        return glad_glGetPointerIndexedvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPOINTERINDEXEDVEXTPROC glad_glGetPointerIndexedvEXT
     * }
     */
    public static MemorySegment glad_glGetPointerIndexedvEXT$segment() {
        return glad_glGetPointerIndexedvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPOINTERINDEXEDVEXTPROC glad_glGetPointerIndexedvEXT
     * }
     */
    public static MemorySegment glad_glGetPointerIndexedvEXT() {
        return glad_glGetPointerIndexedvEXT$constants.SEGMENT.get(glad_glGetPointerIndexedvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPOINTERINDEXEDVEXTPROC glad_glGetPointerIndexedvEXT
     * }
     */
    public static void glad_glGetPointerIndexedvEXT(MemorySegment varValue) {
        glad_glGetPointerIndexedvEXT$constants.SEGMENT.set(glad_glGetPointerIndexedvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetPointerIndexedvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetPointerIndexedvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPOINTERINDEXEDVEXTPROC glad_debug_glGetPointerIndexedvEXT
     * }
     */
    public static AddressLayout glad_debug_glGetPointerIndexedvEXT$layout() {
        return glad_debug_glGetPointerIndexedvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPOINTERINDEXEDVEXTPROC glad_debug_glGetPointerIndexedvEXT
     * }
     */
    public static MemorySegment glad_debug_glGetPointerIndexedvEXT$segment() {
        return glad_debug_glGetPointerIndexedvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPOINTERINDEXEDVEXTPROC glad_debug_glGetPointerIndexedvEXT
     * }
     */
    public static MemorySegment glad_debug_glGetPointerIndexedvEXT() {
        return glad_debug_glGetPointerIndexedvEXT$constants.SEGMENT.get(glad_debug_glGetPointerIndexedvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPOINTERINDEXEDVEXTPROC glad_debug_glGetPointerIndexedvEXT
     * }
     */
    public static void glad_debug_glGetPointerIndexedvEXT(MemorySegment varValue) {
        glad_debug_glGetPointerIndexedvEXT$constants.SEGMENT.set(glad_debug_glGetPointerIndexedvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetPointeri_vEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetPointeri_vEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPOINTERI_VEXTPROC glad_glGetPointeri_vEXT
     * }
     */
    public static AddressLayout glad_glGetPointeri_vEXT$layout() {
        return glad_glGetPointeri_vEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPOINTERI_VEXTPROC glad_glGetPointeri_vEXT
     * }
     */
    public static MemorySegment glad_glGetPointeri_vEXT$segment() {
        return glad_glGetPointeri_vEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPOINTERI_VEXTPROC glad_glGetPointeri_vEXT
     * }
     */
    public static MemorySegment glad_glGetPointeri_vEXT() {
        return glad_glGetPointeri_vEXT$constants.SEGMENT.get(glad_glGetPointeri_vEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPOINTERI_VEXTPROC glad_glGetPointeri_vEXT
     * }
     */
    public static void glad_glGetPointeri_vEXT(MemorySegment varValue) {
        glad_glGetPointeri_vEXT$constants.SEGMENT.set(glad_glGetPointeri_vEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetPointeri_vEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetPointeri_vEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPOINTERI_VEXTPROC glad_debug_glGetPointeri_vEXT
     * }
     */
    public static AddressLayout glad_debug_glGetPointeri_vEXT$layout() {
        return glad_debug_glGetPointeri_vEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPOINTERI_VEXTPROC glad_debug_glGetPointeri_vEXT
     * }
     */
    public static MemorySegment glad_debug_glGetPointeri_vEXT$segment() {
        return glad_debug_glGetPointeri_vEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPOINTERI_VEXTPROC glad_debug_glGetPointeri_vEXT
     * }
     */
    public static MemorySegment glad_debug_glGetPointeri_vEXT() {
        return glad_debug_glGetPointeri_vEXT$constants.SEGMENT.get(glad_debug_glGetPointeri_vEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPOINTERI_VEXTPROC glad_debug_glGetPointeri_vEXT
     * }
     */
    public static void glad_debug_glGetPointeri_vEXT(MemorySegment varValue) {
        glad_debug_glGetPointeri_vEXT$constants.SEGMENT.set(glad_debug_glGetPointeri_vEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetPointerv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetPointerv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPOINTERVPROC glad_glGetPointerv
     * }
     */
    public static AddressLayout glad_glGetPointerv$layout() {
        return glad_glGetPointerv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPOINTERVPROC glad_glGetPointerv
     * }
     */
    public static MemorySegment glad_glGetPointerv$segment() {
        return glad_glGetPointerv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPOINTERVPROC glad_glGetPointerv
     * }
     */
    public static MemorySegment glad_glGetPointerv() {
        return glad_glGetPointerv$constants.SEGMENT.get(glad_glGetPointerv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPOINTERVPROC glad_glGetPointerv
     * }
     */
    public static void glad_glGetPointerv(MemorySegment varValue) {
        glad_glGetPointerv$constants.SEGMENT.set(glad_glGetPointerv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetPointerv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetPointerv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPOINTERVPROC glad_debug_glGetPointerv
     * }
     */
    public static AddressLayout glad_debug_glGetPointerv$layout() {
        return glad_debug_glGetPointerv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPOINTERVPROC glad_debug_glGetPointerv
     * }
     */
    public static MemorySegment glad_debug_glGetPointerv$segment() {
        return glad_debug_glGetPointerv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPOINTERVPROC glad_debug_glGetPointerv
     * }
     */
    public static MemorySegment glad_debug_glGetPointerv() {
        return glad_debug_glGetPointerv$constants.SEGMENT.get(glad_debug_glGetPointerv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPOINTERVPROC glad_debug_glGetPointerv
     * }
     */
    public static void glad_debug_glGetPointerv(MemorySegment varValue) {
        glad_debug_glGetPointerv$constants.SEGMENT.set(glad_debug_glGetPointerv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetPointervEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetPointervEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPOINTERVEXTPROC glad_glGetPointervEXT
     * }
     */
    public static AddressLayout glad_glGetPointervEXT$layout() {
        return glad_glGetPointervEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPOINTERVEXTPROC glad_glGetPointervEXT
     * }
     */
    public static MemorySegment glad_glGetPointervEXT$segment() {
        return glad_glGetPointervEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPOINTERVEXTPROC glad_glGetPointervEXT
     * }
     */
    public static MemorySegment glad_glGetPointervEXT() {
        return glad_glGetPointervEXT$constants.SEGMENT.get(glad_glGetPointervEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPOINTERVEXTPROC glad_glGetPointervEXT
     * }
     */
    public static void glad_glGetPointervEXT(MemorySegment varValue) {
        glad_glGetPointervEXT$constants.SEGMENT.set(glad_glGetPointervEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetPointervEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetPointervEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPOINTERVEXTPROC glad_debug_glGetPointervEXT
     * }
     */
    public static AddressLayout glad_debug_glGetPointervEXT$layout() {
        return glad_debug_glGetPointervEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPOINTERVEXTPROC glad_debug_glGetPointervEXT
     * }
     */
    public static MemorySegment glad_debug_glGetPointervEXT$segment() {
        return glad_debug_glGetPointervEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPOINTERVEXTPROC glad_debug_glGetPointervEXT
     * }
     */
    public static MemorySegment glad_debug_glGetPointervEXT() {
        return glad_debug_glGetPointervEXT$constants.SEGMENT.get(glad_debug_glGetPointervEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPOINTERVEXTPROC glad_debug_glGetPointervEXT
     * }
     */
    public static void glad_debug_glGetPointervEXT(MemorySegment varValue) {
        glad_debug_glGetPointervEXT$constants.SEGMENT.set(glad_debug_glGetPointervEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetPolygonStipple$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetPolygonStipple").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPOLYGONSTIPPLEPROC glad_glGetPolygonStipple
     * }
     */
    public static AddressLayout glad_glGetPolygonStipple$layout() {
        return glad_glGetPolygonStipple$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPOLYGONSTIPPLEPROC glad_glGetPolygonStipple
     * }
     */
    public static MemorySegment glad_glGetPolygonStipple$segment() {
        return glad_glGetPolygonStipple$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPOLYGONSTIPPLEPROC glad_glGetPolygonStipple
     * }
     */
    public static MemorySegment glad_glGetPolygonStipple() {
        return glad_glGetPolygonStipple$constants.SEGMENT.get(glad_glGetPolygonStipple$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPOLYGONSTIPPLEPROC glad_glGetPolygonStipple
     * }
     */
    public static void glad_glGetPolygonStipple(MemorySegment varValue) {
        glad_glGetPolygonStipple$constants.SEGMENT.set(glad_glGetPolygonStipple$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetPolygonStipple$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetPolygonStipple").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPOLYGONSTIPPLEPROC glad_debug_glGetPolygonStipple
     * }
     */
    public static AddressLayout glad_debug_glGetPolygonStipple$layout() {
        return glad_debug_glGetPolygonStipple$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPOLYGONSTIPPLEPROC glad_debug_glGetPolygonStipple
     * }
     */
    public static MemorySegment glad_debug_glGetPolygonStipple$segment() {
        return glad_debug_glGetPolygonStipple$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPOLYGONSTIPPLEPROC glad_debug_glGetPolygonStipple
     * }
     */
    public static MemorySegment glad_debug_glGetPolygonStipple() {
        return glad_debug_glGetPolygonStipple$constants.SEGMENT.get(glad_debug_glGetPolygonStipple$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPOLYGONSTIPPLEPROC glad_debug_glGetPolygonStipple
     * }
     */
    public static void glad_debug_glGetPolygonStipple(MemorySegment varValue) {
        glad_debug_glGetPolygonStipple$constants.SEGMENT.set(glad_debug_glGetPolygonStipple$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetProgramBinary$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetProgramBinary").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMBINARYPROC glad_glGetProgramBinary
     * }
     */
    public static AddressLayout glad_glGetProgramBinary$layout() {
        return glad_glGetProgramBinary$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMBINARYPROC glad_glGetProgramBinary
     * }
     */
    public static MemorySegment glad_glGetProgramBinary$segment() {
        return glad_glGetProgramBinary$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMBINARYPROC glad_glGetProgramBinary
     * }
     */
    public static MemorySegment glad_glGetProgramBinary() {
        return glad_glGetProgramBinary$constants.SEGMENT.get(glad_glGetProgramBinary$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMBINARYPROC glad_glGetProgramBinary
     * }
     */
    public static void glad_glGetProgramBinary(MemorySegment varValue) {
        glad_glGetProgramBinary$constants.SEGMENT.set(glad_glGetProgramBinary$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetProgramBinary$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetProgramBinary").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMBINARYPROC glad_debug_glGetProgramBinary
     * }
     */
    public static AddressLayout glad_debug_glGetProgramBinary$layout() {
        return glad_debug_glGetProgramBinary$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMBINARYPROC glad_debug_glGetProgramBinary
     * }
     */
    public static MemorySegment glad_debug_glGetProgramBinary$segment() {
        return glad_debug_glGetProgramBinary$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMBINARYPROC glad_debug_glGetProgramBinary
     * }
     */
    public static MemorySegment glad_debug_glGetProgramBinary() {
        return glad_debug_glGetProgramBinary$constants.SEGMENT.get(glad_debug_glGetProgramBinary$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMBINARYPROC glad_debug_glGetProgramBinary
     * }
     */
    public static void glad_debug_glGetProgramBinary(MemorySegment varValue) {
        glad_debug_glGetProgramBinary$constants.SEGMENT.set(glad_debug_glGetProgramBinary$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetProgramEnvParameterdvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetProgramEnvParameterdvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMENVPARAMETERDVARBPROC glad_glGetProgramEnvParameterdvARB
     * }
     */
    public static AddressLayout glad_glGetProgramEnvParameterdvARB$layout() {
        return glad_glGetProgramEnvParameterdvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMENVPARAMETERDVARBPROC glad_glGetProgramEnvParameterdvARB
     * }
     */
    public static MemorySegment glad_glGetProgramEnvParameterdvARB$segment() {
        return glad_glGetProgramEnvParameterdvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMENVPARAMETERDVARBPROC glad_glGetProgramEnvParameterdvARB
     * }
     */
    public static MemorySegment glad_glGetProgramEnvParameterdvARB() {
        return glad_glGetProgramEnvParameterdvARB$constants.SEGMENT.get(glad_glGetProgramEnvParameterdvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMENVPARAMETERDVARBPROC glad_glGetProgramEnvParameterdvARB
     * }
     */
    public static void glad_glGetProgramEnvParameterdvARB(MemorySegment varValue) {
        glad_glGetProgramEnvParameterdvARB$constants.SEGMENT.set(glad_glGetProgramEnvParameterdvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetProgramEnvParameterdvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetProgramEnvParameterdvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMENVPARAMETERDVARBPROC glad_debug_glGetProgramEnvParameterdvARB
     * }
     */
    public static AddressLayout glad_debug_glGetProgramEnvParameterdvARB$layout() {
        return glad_debug_glGetProgramEnvParameterdvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMENVPARAMETERDVARBPROC glad_debug_glGetProgramEnvParameterdvARB
     * }
     */
    public static MemorySegment glad_debug_glGetProgramEnvParameterdvARB$segment() {
        return glad_debug_glGetProgramEnvParameterdvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMENVPARAMETERDVARBPROC glad_debug_glGetProgramEnvParameterdvARB
     * }
     */
    public static MemorySegment glad_debug_glGetProgramEnvParameterdvARB() {
        return glad_debug_glGetProgramEnvParameterdvARB$constants.SEGMENT.get(glad_debug_glGetProgramEnvParameterdvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMENVPARAMETERDVARBPROC glad_debug_glGetProgramEnvParameterdvARB
     * }
     */
    public static void glad_debug_glGetProgramEnvParameterdvARB(MemorySegment varValue) {
        glad_debug_glGetProgramEnvParameterdvARB$constants.SEGMENT.set(glad_debug_glGetProgramEnvParameterdvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetProgramEnvParameterfvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetProgramEnvParameterfvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMENVPARAMETERFVARBPROC glad_glGetProgramEnvParameterfvARB
     * }
     */
    public static AddressLayout glad_glGetProgramEnvParameterfvARB$layout() {
        return glad_glGetProgramEnvParameterfvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMENVPARAMETERFVARBPROC glad_glGetProgramEnvParameterfvARB
     * }
     */
    public static MemorySegment glad_glGetProgramEnvParameterfvARB$segment() {
        return glad_glGetProgramEnvParameterfvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMENVPARAMETERFVARBPROC glad_glGetProgramEnvParameterfvARB
     * }
     */
    public static MemorySegment glad_glGetProgramEnvParameterfvARB() {
        return glad_glGetProgramEnvParameterfvARB$constants.SEGMENT.get(glad_glGetProgramEnvParameterfvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMENVPARAMETERFVARBPROC glad_glGetProgramEnvParameterfvARB
     * }
     */
    public static void glad_glGetProgramEnvParameterfvARB(MemorySegment varValue) {
        glad_glGetProgramEnvParameterfvARB$constants.SEGMENT.set(glad_glGetProgramEnvParameterfvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetProgramEnvParameterfvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetProgramEnvParameterfvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMENVPARAMETERFVARBPROC glad_debug_glGetProgramEnvParameterfvARB
     * }
     */
    public static AddressLayout glad_debug_glGetProgramEnvParameterfvARB$layout() {
        return glad_debug_glGetProgramEnvParameterfvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMENVPARAMETERFVARBPROC glad_debug_glGetProgramEnvParameterfvARB
     * }
     */
    public static MemorySegment glad_debug_glGetProgramEnvParameterfvARB$segment() {
        return glad_debug_glGetProgramEnvParameterfvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMENVPARAMETERFVARBPROC glad_debug_glGetProgramEnvParameterfvARB
     * }
     */
    public static MemorySegment glad_debug_glGetProgramEnvParameterfvARB() {
        return glad_debug_glGetProgramEnvParameterfvARB$constants.SEGMENT.get(glad_debug_glGetProgramEnvParameterfvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMENVPARAMETERFVARBPROC glad_debug_glGetProgramEnvParameterfvARB
     * }
     */
    public static void glad_debug_glGetProgramEnvParameterfvARB(MemorySegment varValue) {
        glad_debug_glGetProgramEnvParameterfvARB$constants.SEGMENT.set(glad_debug_glGetProgramEnvParameterfvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetProgramInfoLog$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetProgramInfoLog").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMINFOLOGPROC glad_glGetProgramInfoLog
     * }
     */
    public static AddressLayout glad_glGetProgramInfoLog$layout() {
        return glad_glGetProgramInfoLog$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMINFOLOGPROC glad_glGetProgramInfoLog
     * }
     */
    public static MemorySegment glad_glGetProgramInfoLog$segment() {
        return glad_glGetProgramInfoLog$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMINFOLOGPROC glad_glGetProgramInfoLog
     * }
     */
    public static MemorySegment glad_glGetProgramInfoLog() {
        return glad_glGetProgramInfoLog$constants.SEGMENT.get(glad_glGetProgramInfoLog$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMINFOLOGPROC glad_glGetProgramInfoLog
     * }
     */
    public static void glad_glGetProgramInfoLog(MemorySegment varValue) {
        glad_glGetProgramInfoLog$constants.SEGMENT.set(glad_glGetProgramInfoLog$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetProgramInfoLog$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetProgramInfoLog").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMINFOLOGPROC glad_debug_glGetProgramInfoLog
     * }
     */
    public static AddressLayout glad_debug_glGetProgramInfoLog$layout() {
        return glad_debug_glGetProgramInfoLog$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMINFOLOGPROC glad_debug_glGetProgramInfoLog
     * }
     */
    public static MemorySegment glad_debug_glGetProgramInfoLog$segment() {
        return glad_debug_glGetProgramInfoLog$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMINFOLOGPROC glad_debug_glGetProgramInfoLog
     * }
     */
    public static MemorySegment glad_debug_glGetProgramInfoLog() {
        return glad_debug_glGetProgramInfoLog$constants.SEGMENT.get(glad_debug_glGetProgramInfoLog$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMINFOLOGPROC glad_debug_glGetProgramInfoLog
     * }
     */
    public static void glad_debug_glGetProgramInfoLog(MemorySegment varValue) {
        glad_debug_glGetProgramInfoLog$constants.SEGMENT.set(glad_debug_glGetProgramInfoLog$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetProgramInterfaceiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetProgramInterfaceiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMINTERFACEIVPROC glad_glGetProgramInterfaceiv
     * }
     */
    public static AddressLayout glad_glGetProgramInterfaceiv$layout() {
        return glad_glGetProgramInterfaceiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMINTERFACEIVPROC glad_glGetProgramInterfaceiv
     * }
     */
    public static MemorySegment glad_glGetProgramInterfaceiv$segment() {
        return glad_glGetProgramInterfaceiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMINTERFACEIVPROC glad_glGetProgramInterfaceiv
     * }
     */
    public static MemorySegment glad_glGetProgramInterfaceiv() {
        return glad_glGetProgramInterfaceiv$constants.SEGMENT.get(glad_glGetProgramInterfaceiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMINTERFACEIVPROC glad_glGetProgramInterfaceiv
     * }
     */
    public static void glad_glGetProgramInterfaceiv(MemorySegment varValue) {
        glad_glGetProgramInterfaceiv$constants.SEGMENT.set(glad_glGetProgramInterfaceiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetProgramInterfaceiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetProgramInterfaceiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMINTERFACEIVPROC glad_debug_glGetProgramInterfaceiv
     * }
     */
    public static AddressLayout glad_debug_glGetProgramInterfaceiv$layout() {
        return glad_debug_glGetProgramInterfaceiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMINTERFACEIVPROC glad_debug_glGetProgramInterfaceiv
     * }
     */
    public static MemorySegment glad_debug_glGetProgramInterfaceiv$segment() {
        return glad_debug_glGetProgramInterfaceiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMINTERFACEIVPROC glad_debug_glGetProgramInterfaceiv
     * }
     */
    public static MemorySegment glad_debug_glGetProgramInterfaceiv() {
        return glad_debug_glGetProgramInterfaceiv$constants.SEGMENT.get(glad_debug_glGetProgramInterfaceiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMINTERFACEIVPROC glad_debug_glGetProgramInterfaceiv
     * }
     */
    public static void glad_debug_glGetProgramInterfaceiv(MemorySegment varValue) {
        glad_debug_glGetProgramInterfaceiv$constants.SEGMENT.set(glad_debug_glGetProgramInterfaceiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetProgramLocalParameterdvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetProgramLocalParameterdvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC glad_glGetProgramLocalParameterdvARB
     * }
     */
    public static AddressLayout glad_glGetProgramLocalParameterdvARB$layout() {
        return glad_glGetProgramLocalParameterdvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC glad_glGetProgramLocalParameterdvARB
     * }
     */
    public static MemorySegment glad_glGetProgramLocalParameterdvARB$segment() {
        return glad_glGetProgramLocalParameterdvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC glad_glGetProgramLocalParameterdvARB
     * }
     */
    public static MemorySegment glad_glGetProgramLocalParameterdvARB() {
        return glad_glGetProgramLocalParameterdvARB$constants.SEGMENT.get(glad_glGetProgramLocalParameterdvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC glad_glGetProgramLocalParameterdvARB
     * }
     */
    public static void glad_glGetProgramLocalParameterdvARB(MemorySegment varValue) {
        glad_glGetProgramLocalParameterdvARB$constants.SEGMENT.set(glad_glGetProgramLocalParameterdvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetProgramLocalParameterdvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetProgramLocalParameterdvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC glad_debug_glGetProgramLocalParameterdvARB
     * }
     */
    public static AddressLayout glad_debug_glGetProgramLocalParameterdvARB$layout() {
        return glad_debug_glGetProgramLocalParameterdvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC glad_debug_glGetProgramLocalParameterdvARB
     * }
     */
    public static MemorySegment glad_debug_glGetProgramLocalParameterdvARB$segment() {
        return glad_debug_glGetProgramLocalParameterdvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC glad_debug_glGetProgramLocalParameterdvARB
     * }
     */
    public static MemorySegment glad_debug_glGetProgramLocalParameterdvARB() {
        return glad_debug_glGetProgramLocalParameterdvARB$constants.SEGMENT.get(glad_debug_glGetProgramLocalParameterdvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC glad_debug_glGetProgramLocalParameterdvARB
     * }
     */
    public static void glad_debug_glGetProgramLocalParameterdvARB(MemorySegment varValue) {
        glad_debug_glGetProgramLocalParameterdvARB$constants.SEGMENT.set(glad_debug_glGetProgramLocalParameterdvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetProgramLocalParameterfvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetProgramLocalParameterfvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC glad_glGetProgramLocalParameterfvARB
     * }
     */
    public static AddressLayout glad_glGetProgramLocalParameterfvARB$layout() {
        return glad_glGetProgramLocalParameterfvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC glad_glGetProgramLocalParameterfvARB
     * }
     */
    public static MemorySegment glad_glGetProgramLocalParameterfvARB$segment() {
        return glad_glGetProgramLocalParameterfvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC glad_glGetProgramLocalParameterfvARB
     * }
     */
    public static MemorySegment glad_glGetProgramLocalParameterfvARB() {
        return glad_glGetProgramLocalParameterfvARB$constants.SEGMENT.get(glad_glGetProgramLocalParameterfvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC glad_glGetProgramLocalParameterfvARB
     * }
     */
    public static void glad_glGetProgramLocalParameterfvARB(MemorySegment varValue) {
        glad_glGetProgramLocalParameterfvARB$constants.SEGMENT.set(glad_glGetProgramLocalParameterfvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetProgramLocalParameterfvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetProgramLocalParameterfvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC glad_debug_glGetProgramLocalParameterfvARB
     * }
     */
    public static AddressLayout glad_debug_glGetProgramLocalParameterfvARB$layout() {
        return glad_debug_glGetProgramLocalParameterfvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC glad_debug_glGetProgramLocalParameterfvARB
     * }
     */
    public static MemorySegment glad_debug_glGetProgramLocalParameterfvARB$segment() {
        return glad_debug_glGetProgramLocalParameterfvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC glad_debug_glGetProgramLocalParameterfvARB
     * }
     */
    public static MemorySegment glad_debug_glGetProgramLocalParameterfvARB() {
        return glad_debug_glGetProgramLocalParameterfvARB$constants.SEGMENT.get(glad_debug_glGetProgramLocalParameterfvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC glad_debug_glGetProgramLocalParameterfvARB
     * }
     */
    public static void glad_debug_glGetProgramLocalParameterfvARB(MemorySegment varValue) {
        glad_debug_glGetProgramLocalParameterfvARB$constants.SEGMENT.set(glad_debug_glGetProgramLocalParameterfvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetProgramParameterdvNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetProgramParameterdvNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMPARAMETERDVNVPROC glad_glGetProgramParameterdvNV
     * }
     */
    public static AddressLayout glad_glGetProgramParameterdvNV$layout() {
        return glad_glGetProgramParameterdvNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMPARAMETERDVNVPROC glad_glGetProgramParameterdvNV
     * }
     */
    public static MemorySegment glad_glGetProgramParameterdvNV$segment() {
        return glad_glGetProgramParameterdvNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMPARAMETERDVNVPROC glad_glGetProgramParameterdvNV
     * }
     */
    public static MemorySegment glad_glGetProgramParameterdvNV() {
        return glad_glGetProgramParameterdvNV$constants.SEGMENT.get(glad_glGetProgramParameterdvNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMPARAMETERDVNVPROC glad_glGetProgramParameterdvNV
     * }
     */
    public static void glad_glGetProgramParameterdvNV(MemorySegment varValue) {
        glad_glGetProgramParameterdvNV$constants.SEGMENT.set(glad_glGetProgramParameterdvNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetProgramParameterdvNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetProgramParameterdvNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMPARAMETERDVNVPROC glad_debug_glGetProgramParameterdvNV
     * }
     */
    public static AddressLayout glad_debug_glGetProgramParameterdvNV$layout() {
        return glad_debug_glGetProgramParameterdvNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMPARAMETERDVNVPROC glad_debug_glGetProgramParameterdvNV
     * }
     */
    public static MemorySegment glad_debug_glGetProgramParameterdvNV$segment() {
        return glad_debug_glGetProgramParameterdvNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMPARAMETERDVNVPROC glad_debug_glGetProgramParameterdvNV
     * }
     */
    public static MemorySegment glad_debug_glGetProgramParameterdvNV() {
        return glad_debug_glGetProgramParameterdvNV$constants.SEGMENT.get(glad_debug_glGetProgramParameterdvNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMPARAMETERDVNVPROC glad_debug_glGetProgramParameterdvNV
     * }
     */
    public static void glad_debug_glGetProgramParameterdvNV(MemorySegment varValue) {
        glad_debug_glGetProgramParameterdvNV$constants.SEGMENT.set(glad_debug_glGetProgramParameterdvNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetProgramParameterfvNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetProgramParameterfvNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMPARAMETERFVNVPROC glad_glGetProgramParameterfvNV
     * }
     */
    public static AddressLayout glad_glGetProgramParameterfvNV$layout() {
        return glad_glGetProgramParameterfvNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMPARAMETERFVNVPROC glad_glGetProgramParameterfvNV
     * }
     */
    public static MemorySegment glad_glGetProgramParameterfvNV$segment() {
        return glad_glGetProgramParameterfvNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMPARAMETERFVNVPROC glad_glGetProgramParameterfvNV
     * }
     */
    public static MemorySegment glad_glGetProgramParameterfvNV() {
        return glad_glGetProgramParameterfvNV$constants.SEGMENT.get(glad_glGetProgramParameterfvNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMPARAMETERFVNVPROC glad_glGetProgramParameterfvNV
     * }
     */
    public static void glad_glGetProgramParameterfvNV(MemorySegment varValue) {
        glad_glGetProgramParameterfvNV$constants.SEGMENT.set(glad_glGetProgramParameterfvNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetProgramParameterfvNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetProgramParameterfvNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMPARAMETERFVNVPROC glad_debug_glGetProgramParameterfvNV
     * }
     */
    public static AddressLayout glad_debug_glGetProgramParameterfvNV$layout() {
        return glad_debug_glGetProgramParameterfvNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMPARAMETERFVNVPROC glad_debug_glGetProgramParameterfvNV
     * }
     */
    public static MemorySegment glad_debug_glGetProgramParameterfvNV$segment() {
        return glad_debug_glGetProgramParameterfvNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMPARAMETERFVNVPROC glad_debug_glGetProgramParameterfvNV
     * }
     */
    public static MemorySegment glad_debug_glGetProgramParameterfvNV() {
        return glad_debug_glGetProgramParameterfvNV$constants.SEGMENT.get(glad_debug_glGetProgramParameterfvNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMPARAMETERFVNVPROC glad_debug_glGetProgramParameterfvNV
     * }
     */
    public static void glad_debug_glGetProgramParameterfvNV(MemorySegment varValue) {
        glad_debug_glGetProgramParameterfvNV$constants.SEGMENT.set(glad_debug_glGetProgramParameterfvNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetProgramPipelineInfoLog$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetProgramPipelineInfoLog").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMPIPELINEINFOLOGPROC glad_glGetProgramPipelineInfoLog
     * }
     */
    public static AddressLayout glad_glGetProgramPipelineInfoLog$layout() {
        return glad_glGetProgramPipelineInfoLog$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMPIPELINEINFOLOGPROC glad_glGetProgramPipelineInfoLog
     * }
     */
    public static MemorySegment glad_glGetProgramPipelineInfoLog$segment() {
        return glad_glGetProgramPipelineInfoLog$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMPIPELINEINFOLOGPROC glad_glGetProgramPipelineInfoLog
     * }
     */
    public static MemorySegment glad_glGetProgramPipelineInfoLog() {
        return glad_glGetProgramPipelineInfoLog$constants.SEGMENT.get(glad_glGetProgramPipelineInfoLog$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMPIPELINEINFOLOGPROC glad_glGetProgramPipelineInfoLog
     * }
     */
    public static void glad_glGetProgramPipelineInfoLog(MemorySegment varValue) {
        glad_glGetProgramPipelineInfoLog$constants.SEGMENT.set(glad_glGetProgramPipelineInfoLog$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetProgramPipelineInfoLog$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetProgramPipelineInfoLog").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMPIPELINEINFOLOGPROC glad_debug_glGetProgramPipelineInfoLog
     * }
     */
    public static AddressLayout glad_debug_glGetProgramPipelineInfoLog$layout() {
        return glad_debug_glGetProgramPipelineInfoLog$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMPIPELINEINFOLOGPROC glad_debug_glGetProgramPipelineInfoLog
     * }
     */
    public static MemorySegment glad_debug_glGetProgramPipelineInfoLog$segment() {
        return glad_debug_glGetProgramPipelineInfoLog$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMPIPELINEINFOLOGPROC glad_debug_glGetProgramPipelineInfoLog
     * }
     */
    public static MemorySegment glad_debug_glGetProgramPipelineInfoLog() {
        return glad_debug_glGetProgramPipelineInfoLog$constants.SEGMENT.get(glad_debug_glGetProgramPipelineInfoLog$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMPIPELINEINFOLOGPROC glad_debug_glGetProgramPipelineInfoLog
     * }
     */
    public static void glad_debug_glGetProgramPipelineInfoLog(MemorySegment varValue) {
        glad_debug_glGetProgramPipelineInfoLog$constants.SEGMENT.set(glad_debug_glGetProgramPipelineInfoLog$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetProgramPipelineiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetProgramPipelineiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMPIPELINEIVPROC glad_glGetProgramPipelineiv
     * }
     */
    public static AddressLayout glad_glGetProgramPipelineiv$layout() {
        return glad_glGetProgramPipelineiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMPIPELINEIVPROC glad_glGetProgramPipelineiv
     * }
     */
    public static MemorySegment glad_glGetProgramPipelineiv$segment() {
        return glad_glGetProgramPipelineiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMPIPELINEIVPROC glad_glGetProgramPipelineiv
     * }
     */
    public static MemorySegment glad_glGetProgramPipelineiv() {
        return glad_glGetProgramPipelineiv$constants.SEGMENT.get(glad_glGetProgramPipelineiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMPIPELINEIVPROC glad_glGetProgramPipelineiv
     * }
     */
    public static void glad_glGetProgramPipelineiv(MemorySegment varValue) {
        glad_glGetProgramPipelineiv$constants.SEGMENT.set(glad_glGetProgramPipelineiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetProgramPipelineiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetProgramPipelineiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMPIPELINEIVPROC glad_debug_glGetProgramPipelineiv
     * }
     */
    public static AddressLayout glad_debug_glGetProgramPipelineiv$layout() {
        return glad_debug_glGetProgramPipelineiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMPIPELINEIVPROC glad_debug_glGetProgramPipelineiv
     * }
     */
    public static MemorySegment glad_debug_glGetProgramPipelineiv$segment() {
        return glad_debug_glGetProgramPipelineiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMPIPELINEIVPROC glad_debug_glGetProgramPipelineiv
     * }
     */
    public static MemorySegment glad_debug_glGetProgramPipelineiv() {
        return glad_debug_glGetProgramPipelineiv$constants.SEGMENT.get(glad_debug_glGetProgramPipelineiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMPIPELINEIVPROC glad_debug_glGetProgramPipelineiv
     * }
     */
    public static void glad_debug_glGetProgramPipelineiv(MemorySegment varValue) {
        glad_debug_glGetProgramPipelineiv$constants.SEGMENT.set(glad_debug_glGetProgramPipelineiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetProgramResourceIndex$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetProgramResourceIndex").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMRESOURCEINDEXPROC glad_glGetProgramResourceIndex
     * }
     */
    public static AddressLayout glad_glGetProgramResourceIndex$layout() {
        return glad_glGetProgramResourceIndex$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMRESOURCEINDEXPROC glad_glGetProgramResourceIndex
     * }
     */
    public static MemorySegment glad_glGetProgramResourceIndex$segment() {
        return glad_glGetProgramResourceIndex$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMRESOURCEINDEXPROC glad_glGetProgramResourceIndex
     * }
     */
    public static MemorySegment glad_glGetProgramResourceIndex() {
        return glad_glGetProgramResourceIndex$constants.SEGMENT.get(glad_glGetProgramResourceIndex$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMRESOURCEINDEXPROC glad_glGetProgramResourceIndex
     * }
     */
    public static void glad_glGetProgramResourceIndex(MemorySegment varValue) {
        glad_glGetProgramResourceIndex$constants.SEGMENT.set(glad_glGetProgramResourceIndex$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetProgramResourceIndex$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetProgramResourceIndex").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMRESOURCEINDEXPROC glad_debug_glGetProgramResourceIndex
     * }
     */
    public static AddressLayout glad_debug_glGetProgramResourceIndex$layout() {
        return glad_debug_glGetProgramResourceIndex$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMRESOURCEINDEXPROC glad_debug_glGetProgramResourceIndex
     * }
     */
    public static MemorySegment glad_debug_glGetProgramResourceIndex$segment() {
        return glad_debug_glGetProgramResourceIndex$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMRESOURCEINDEXPROC glad_debug_glGetProgramResourceIndex
     * }
     */
    public static MemorySegment glad_debug_glGetProgramResourceIndex() {
        return glad_debug_glGetProgramResourceIndex$constants.SEGMENT.get(glad_debug_glGetProgramResourceIndex$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMRESOURCEINDEXPROC glad_debug_glGetProgramResourceIndex
     * }
     */
    public static void glad_debug_glGetProgramResourceIndex(MemorySegment varValue) {
        glad_debug_glGetProgramResourceIndex$constants.SEGMENT.set(glad_debug_glGetProgramResourceIndex$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetProgramResourceLocation$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetProgramResourceLocation").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMRESOURCELOCATIONPROC glad_glGetProgramResourceLocation
     * }
     */
    public static AddressLayout glad_glGetProgramResourceLocation$layout() {
        return glad_glGetProgramResourceLocation$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMRESOURCELOCATIONPROC glad_glGetProgramResourceLocation
     * }
     */
    public static MemorySegment glad_glGetProgramResourceLocation$segment() {
        return glad_glGetProgramResourceLocation$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMRESOURCELOCATIONPROC glad_glGetProgramResourceLocation
     * }
     */
    public static MemorySegment glad_glGetProgramResourceLocation() {
        return glad_glGetProgramResourceLocation$constants.SEGMENT.get(glad_glGetProgramResourceLocation$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMRESOURCELOCATIONPROC glad_glGetProgramResourceLocation
     * }
     */
    public static void glad_glGetProgramResourceLocation(MemorySegment varValue) {
        glad_glGetProgramResourceLocation$constants.SEGMENT.set(glad_glGetProgramResourceLocation$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetProgramResourceLocation$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetProgramResourceLocation").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMRESOURCELOCATIONPROC glad_debug_glGetProgramResourceLocation
     * }
     */
    public static AddressLayout glad_debug_glGetProgramResourceLocation$layout() {
        return glad_debug_glGetProgramResourceLocation$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMRESOURCELOCATIONPROC glad_debug_glGetProgramResourceLocation
     * }
     */
    public static MemorySegment glad_debug_glGetProgramResourceLocation$segment() {
        return glad_debug_glGetProgramResourceLocation$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMRESOURCELOCATIONPROC glad_debug_glGetProgramResourceLocation
     * }
     */
    public static MemorySegment glad_debug_glGetProgramResourceLocation() {
        return glad_debug_glGetProgramResourceLocation$constants.SEGMENT.get(glad_debug_glGetProgramResourceLocation$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMRESOURCELOCATIONPROC glad_debug_glGetProgramResourceLocation
     * }
     */
    public static void glad_debug_glGetProgramResourceLocation(MemorySegment varValue) {
        glad_debug_glGetProgramResourceLocation$constants.SEGMENT.set(glad_debug_glGetProgramResourceLocation$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetProgramResourceLocationIndex$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetProgramResourceLocationIndex").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC glad_glGetProgramResourceLocationIndex
     * }
     */
    public static AddressLayout glad_glGetProgramResourceLocationIndex$layout() {
        return glad_glGetProgramResourceLocationIndex$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC glad_glGetProgramResourceLocationIndex
     * }
     */
    public static MemorySegment glad_glGetProgramResourceLocationIndex$segment() {
        return glad_glGetProgramResourceLocationIndex$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC glad_glGetProgramResourceLocationIndex
     * }
     */
    public static MemorySegment glad_glGetProgramResourceLocationIndex() {
        return glad_glGetProgramResourceLocationIndex$constants.SEGMENT.get(glad_glGetProgramResourceLocationIndex$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC glad_glGetProgramResourceLocationIndex
     * }
     */
    public static void glad_glGetProgramResourceLocationIndex(MemorySegment varValue) {
        glad_glGetProgramResourceLocationIndex$constants.SEGMENT.set(glad_glGetProgramResourceLocationIndex$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetProgramResourceLocationIndex$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetProgramResourceLocationIndex").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC glad_debug_glGetProgramResourceLocationIndex
     * }
     */
    public static AddressLayout glad_debug_glGetProgramResourceLocationIndex$layout() {
        return glad_debug_glGetProgramResourceLocationIndex$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC glad_debug_glGetProgramResourceLocationIndex
     * }
     */
    public static MemorySegment glad_debug_glGetProgramResourceLocationIndex$segment() {
        return glad_debug_glGetProgramResourceLocationIndex$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC glad_debug_glGetProgramResourceLocationIndex
     * }
     */
    public static MemorySegment glad_debug_glGetProgramResourceLocationIndex() {
        return glad_debug_glGetProgramResourceLocationIndex$constants.SEGMENT.get(glad_debug_glGetProgramResourceLocationIndex$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC glad_debug_glGetProgramResourceLocationIndex
     * }
     */
    public static void glad_debug_glGetProgramResourceLocationIndex(MemorySegment varValue) {
        glad_debug_glGetProgramResourceLocationIndex$constants.SEGMENT.set(glad_debug_glGetProgramResourceLocationIndex$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetProgramResourceName$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetProgramResourceName").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMRESOURCENAMEPROC glad_glGetProgramResourceName
     * }
     */
    public static AddressLayout glad_glGetProgramResourceName$layout() {
        return glad_glGetProgramResourceName$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMRESOURCENAMEPROC glad_glGetProgramResourceName
     * }
     */
    public static MemorySegment glad_glGetProgramResourceName$segment() {
        return glad_glGetProgramResourceName$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMRESOURCENAMEPROC glad_glGetProgramResourceName
     * }
     */
    public static MemorySegment glad_glGetProgramResourceName() {
        return glad_glGetProgramResourceName$constants.SEGMENT.get(glad_glGetProgramResourceName$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMRESOURCENAMEPROC glad_glGetProgramResourceName
     * }
     */
    public static void glad_glGetProgramResourceName(MemorySegment varValue) {
        glad_glGetProgramResourceName$constants.SEGMENT.set(glad_glGetProgramResourceName$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetProgramResourceName$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetProgramResourceName").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMRESOURCENAMEPROC glad_debug_glGetProgramResourceName
     * }
     */
    public static AddressLayout glad_debug_glGetProgramResourceName$layout() {
        return glad_debug_glGetProgramResourceName$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMRESOURCENAMEPROC glad_debug_glGetProgramResourceName
     * }
     */
    public static MemorySegment glad_debug_glGetProgramResourceName$segment() {
        return glad_debug_glGetProgramResourceName$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMRESOURCENAMEPROC glad_debug_glGetProgramResourceName
     * }
     */
    public static MemorySegment glad_debug_glGetProgramResourceName() {
        return glad_debug_glGetProgramResourceName$constants.SEGMENT.get(glad_debug_glGetProgramResourceName$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMRESOURCENAMEPROC glad_debug_glGetProgramResourceName
     * }
     */
    public static void glad_debug_glGetProgramResourceName(MemorySegment varValue) {
        glad_debug_glGetProgramResourceName$constants.SEGMENT.set(glad_debug_glGetProgramResourceName$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetProgramResourceiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetProgramResourceiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMRESOURCEIVPROC glad_glGetProgramResourceiv
     * }
     */
    public static AddressLayout glad_glGetProgramResourceiv$layout() {
        return glad_glGetProgramResourceiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMRESOURCEIVPROC glad_glGetProgramResourceiv
     * }
     */
    public static MemorySegment glad_glGetProgramResourceiv$segment() {
        return glad_glGetProgramResourceiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMRESOURCEIVPROC glad_glGetProgramResourceiv
     * }
     */
    public static MemorySegment glad_glGetProgramResourceiv() {
        return glad_glGetProgramResourceiv$constants.SEGMENT.get(glad_glGetProgramResourceiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMRESOURCEIVPROC glad_glGetProgramResourceiv
     * }
     */
    public static void glad_glGetProgramResourceiv(MemorySegment varValue) {
        glad_glGetProgramResourceiv$constants.SEGMENT.set(glad_glGetProgramResourceiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetProgramResourceiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetProgramResourceiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMRESOURCEIVPROC glad_debug_glGetProgramResourceiv
     * }
     */
    public static AddressLayout glad_debug_glGetProgramResourceiv$layout() {
        return glad_debug_glGetProgramResourceiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMRESOURCEIVPROC glad_debug_glGetProgramResourceiv
     * }
     */
    public static MemorySegment glad_debug_glGetProgramResourceiv$segment() {
        return glad_debug_glGetProgramResourceiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMRESOURCEIVPROC glad_debug_glGetProgramResourceiv
     * }
     */
    public static MemorySegment glad_debug_glGetProgramResourceiv() {
        return glad_debug_glGetProgramResourceiv$constants.SEGMENT.get(glad_debug_glGetProgramResourceiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMRESOURCEIVPROC glad_debug_glGetProgramResourceiv
     * }
     */
    public static void glad_debug_glGetProgramResourceiv(MemorySegment varValue) {
        glad_debug_glGetProgramResourceiv$constants.SEGMENT.set(glad_debug_glGetProgramResourceiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetProgramStageiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetProgramStageiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMSTAGEIVPROC glad_glGetProgramStageiv
     * }
     */
    public static AddressLayout glad_glGetProgramStageiv$layout() {
        return glad_glGetProgramStageiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMSTAGEIVPROC glad_glGetProgramStageiv
     * }
     */
    public static MemorySegment glad_glGetProgramStageiv$segment() {
        return glad_glGetProgramStageiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMSTAGEIVPROC glad_glGetProgramStageiv
     * }
     */
    public static MemorySegment glad_glGetProgramStageiv() {
        return glad_glGetProgramStageiv$constants.SEGMENT.get(glad_glGetProgramStageiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMSTAGEIVPROC glad_glGetProgramStageiv
     * }
     */
    public static void glad_glGetProgramStageiv(MemorySegment varValue) {
        glad_glGetProgramStageiv$constants.SEGMENT.set(glad_glGetProgramStageiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetProgramStageiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetProgramStageiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMSTAGEIVPROC glad_debug_glGetProgramStageiv
     * }
     */
    public static AddressLayout glad_debug_glGetProgramStageiv$layout() {
        return glad_debug_glGetProgramStageiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMSTAGEIVPROC glad_debug_glGetProgramStageiv
     * }
     */
    public static MemorySegment glad_debug_glGetProgramStageiv$segment() {
        return glad_debug_glGetProgramStageiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMSTAGEIVPROC glad_debug_glGetProgramStageiv
     * }
     */
    public static MemorySegment glad_debug_glGetProgramStageiv() {
        return glad_debug_glGetProgramStageiv$constants.SEGMENT.get(glad_debug_glGetProgramStageiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMSTAGEIVPROC glad_debug_glGetProgramStageiv
     * }
     */
    public static void glad_debug_glGetProgramStageiv(MemorySegment varValue) {
        glad_debug_glGetProgramStageiv$constants.SEGMENT.set(glad_debug_glGetProgramStageiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetProgramStringARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetProgramStringARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMSTRINGARBPROC glad_glGetProgramStringARB
     * }
     */
    public static AddressLayout glad_glGetProgramStringARB$layout() {
        return glad_glGetProgramStringARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMSTRINGARBPROC glad_glGetProgramStringARB
     * }
     */
    public static MemorySegment glad_glGetProgramStringARB$segment() {
        return glad_glGetProgramStringARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMSTRINGARBPROC glad_glGetProgramStringARB
     * }
     */
    public static MemorySegment glad_glGetProgramStringARB() {
        return glad_glGetProgramStringARB$constants.SEGMENT.get(glad_glGetProgramStringARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMSTRINGARBPROC glad_glGetProgramStringARB
     * }
     */
    public static void glad_glGetProgramStringARB(MemorySegment varValue) {
        glad_glGetProgramStringARB$constants.SEGMENT.set(glad_glGetProgramStringARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetProgramStringARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetProgramStringARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMSTRINGARBPROC glad_debug_glGetProgramStringARB
     * }
     */
    public static AddressLayout glad_debug_glGetProgramStringARB$layout() {
        return glad_debug_glGetProgramStringARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMSTRINGARBPROC glad_debug_glGetProgramStringARB
     * }
     */
    public static MemorySegment glad_debug_glGetProgramStringARB$segment() {
        return glad_debug_glGetProgramStringARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMSTRINGARBPROC glad_debug_glGetProgramStringARB
     * }
     */
    public static MemorySegment glad_debug_glGetProgramStringARB() {
        return glad_debug_glGetProgramStringARB$constants.SEGMENT.get(glad_debug_glGetProgramStringARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMSTRINGARBPROC glad_debug_glGetProgramStringARB
     * }
     */
    public static void glad_debug_glGetProgramStringARB(MemorySegment varValue) {
        glad_debug_glGetProgramStringARB$constants.SEGMENT.set(glad_debug_glGetProgramStringARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetProgramStringNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetProgramStringNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMSTRINGNVPROC glad_glGetProgramStringNV
     * }
     */
    public static AddressLayout glad_glGetProgramStringNV$layout() {
        return glad_glGetProgramStringNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMSTRINGNVPROC glad_glGetProgramStringNV
     * }
     */
    public static MemorySegment glad_glGetProgramStringNV$segment() {
        return glad_glGetProgramStringNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMSTRINGNVPROC glad_glGetProgramStringNV
     * }
     */
    public static MemorySegment glad_glGetProgramStringNV() {
        return glad_glGetProgramStringNV$constants.SEGMENT.get(glad_glGetProgramStringNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMSTRINGNVPROC glad_glGetProgramStringNV
     * }
     */
    public static void glad_glGetProgramStringNV(MemorySegment varValue) {
        glad_glGetProgramStringNV$constants.SEGMENT.set(glad_glGetProgramStringNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetProgramStringNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetProgramStringNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMSTRINGNVPROC glad_debug_glGetProgramStringNV
     * }
     */
    public static AddressLayout glad_debug_glGetProgramStringNV$layout() {
        return glad_debug_glGetProgramStringNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMSTRINGNVPROC glad_debug_glGetProgramStringNV
     * }
     */
    public static MemorySegment glad_debug_glGetProgramStringNV$segment() {
        return glad_debug_glGetProgramStringNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMSTRINGNVPROC glad_debug_glGetProgramStringNV
     * }
     */
    public static MemorySegment glad_debug_glGetProgramStringNV() {
        return glad_debug_glGetProgramStringNV$constants.SEGMENT.get(glad_debug_glGetProgramStringNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMSTRINGNVPROC glad_debug_glGetProgramStringNV
     * }
     */
    public static void glad_debug_glGetProgramStringNV(MemorySegment varValue) {
        glad_debug_glGetProgramStringNV$constants.SEGMENT.set(glad_debug_glGetProgramStringNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetProgramiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetProgramiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMIVPROC glad_glGetProgramiv
     * }
     */
    public static AddressLayout glad_glGetProgramiv$layout() {
        return glad_glGetProgramiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMIVPROC glad_glGetProgramiv
     * }
     */
    public static MemorySegment glad_glGetProgramiv$segment() {
        return glad_glGetProgramiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMIVPROC glad_glGetProgramiv
     * }
     */
    public static MemorySegment glad_glGetProgramiv() {
        return glad_glGetProgramiv$constants.SEGMENT.get(glad_glGetProgramiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMIVPROC glad_glGetProgramiv
     * }
     */
    public static void glad_glGetProgramiv(MemorySegment varValue) {
        glad_glGetProgramiv$constants.SEGMENT.set(glad_glGetProgramiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetProgramiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetProgramiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMIVPROC glad_debug_glGetProgramiv
     * }
     */
    public static AddressLayout glad_debug_glGetProgramiv$layout() {
        return glad_debug_glGetProgramiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMIVPROC glad_debug_glGetProgramiv
     * }
     */
    public static MemorySegment glad_debug_glGetProgramiv$segment() {
        return glad_debug_glGetProgramiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMIVPROC glad_debug_glGetProgramiv
     * }
     */
    public static MemorySegment glad_debug_glGetProgramiv() {
        return glad_debug_glGetProgramiv$constants.SEGMENT.get(glad_debug_glGetProgramiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMIVPROC glad_debug_glGetProgramiv
     * }
     */
    public static void glad_debug_glGetProgramiv(MemorySegment varValue) {
        glad_debug_glGetProgramiv$constants.SEGMENT.set(glad_debug_glGetProgramiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetProgramivARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetProgramivARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMIVARBPROC glad_glGetProgramivARB
     * }
     */
    public static AddressLayout glad_glGetProgramivARB$layout() {
        return glad_glGetProgramivARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMIVARBPROC glad_glGetProgramivARB
     * }
     */
    public static MemorySegment glad_glGetProgramivARB$segment() {
        return glad_glGetProgramivARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMIVARBPROC glad_glGetProgramivARB
     * }
     */
    public static MemorySegment glad_glGetProgramivARB() {
        return glad_glGetProgramivARB$constants.SEGMENT.get(glad_glGetProgramivARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMIVARBPROC glad_glGetProgramivARB
     * }
     */
    public static void glad_glGetProgramivARB(MemorySegment varValue) {
        glad_glGetProgramivARB$constants.SEGMENT.set(glad_glGetProgramivARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetProgramivARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetProgramivARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMIVARBPROC glad_debug_glGetProgramivARB
     * }
     */
    public static AddressLayout glad_debug_glGetProgramivARB$layout() {
        return glad_debug_glGetProgramivARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMIVARBPROC glad_debug_glGetProgramivARB
     * }
     */
    public static MemorySegment glad_debug_glGetProgramivARB$segment() {
        return glad_debug_glGetProgramivARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMIVARBPROC glad_debug_glGetProgramivARB
     * }
     */
    public static MemorySegment glad_debug_glGetProgramivARB() {
        return glad_debug_glGetProgramivARB$constants.SEGMENT.get(glad_debug_glGetProgramivARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMIVARBPROC glad_debug_glGetProgramivARB
     * }
     */
    public static void glad_debug_glGetProgramivARB(MemorySegment varValue) {
        glad_debug_glGetProgramivARB$constants.SEGMENT.set(glad_debug_glGetProgramivARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetProgramivNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetProgramivNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMIVNVPROC glad_glGetProgramivNV
     * }
     */
    public static AddressLayout glad_glGetProgramivNV$layout() {
        return glad_glGetProgramivNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMIVNVPROC glad_glGetProgramivNV
     * }
     */
    public static MemorySegment glad_glGetProgramivNV$segment() {
        return glad_glGetProgramivNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMIVNVPROC glad_glGetProgramivNV
     * }
     */
    public static MemorySegment glad_glGetProgramivNV() {
        return glad_glGetProgramivNV$constants.SEGMENT.get(glad_glGetProgramivNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMIVNVPROC glad_glGetProgramivNV
     * }
     */
    public static void glad_glGetProgramivNV(MemorySegment varValue) {
        glad_glGetProgramivNV$constants.SEGMENT.set(glad_glGetProgramivNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetProgramivNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetProgramivNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMIVNVPROC glad_debug_glGetProgramivNV
     * }
     */
    public static AddressLayout glad_debug_glGetProgramivNV$layout() {
        return glad_debug_glGetProgramivNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMIVNVPROC glad_debug_glGetProgramivNV
     * }
     */
    public static MemorySegment glad_debug_glGetProgramivNV$segment() {
        return glad_debug_glGetProgramivNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMIVNVPROC glad_debug_glGetProgramivNV
     * }
     */
    public static MemorySegment glad_debug_glGetProgramivNV() {
        return glad_debug_glGetProgramivNV$constants.SEGMENT.get(glad_debug_glGetProgramivNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETPROGRAMIVNVPROC glad_debug_glGetProgramivNV
     * }
     */
    public static void glad_debug_glGetProgramivNV(MemorySegment varValue) {
        glad_debug_glGetProgramivNV$constants.SEGMENT.set(glad_debug_glGetProgramivNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetQueryBufferObjecti64v$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetQueryBufferObjecti64v").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYBUFFEROBJECTI64VPROC glad_glGetQueryBufferObjecti64v
     * }
     */
    public static AddressLayout glad_glGetQueryBufferObjecti64v$layout() {
        return glad_glGetQueryBufferObjecti64v$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYBUFFEROBJECTI64VPROC glad_glGetQueryBufferObjecti64v
     * }
     */
    public static MemorySegment glad_glGetQueryBufferObjecti64v$segment() {
        return glad_glGetQueryBufferObjecti64v$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYBUFFEROBJECTI64VPROC glad_glGetQueryBufferObjecti64v
     * }
     */
    public static MemorySegment glad_glGetQueryBufferObjecti64v() {
        return glad_glGetQueryBufferObjecti64v$constants.SEGMENT.get(glad_glGetQueryBufferObjecti64v$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYBUFFEROBJECTI64VPROC glad_glGetQueryBufferObjecti64v
     * }
     */
    public static void glad_glGetQueryBufferObjecti64v(MemorySegment varValue) {
        glad_glGetQueryBufferObjecti64v$constants.SEGMENT.set(glad_glGetQueryBufferObjecti64v$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetQueryBufferObjecti64v$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetQueryBufferObjecti64v").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYBUFFEROBJECTI64VPROC glad_debug_glGetQueryBufferObjecti64v
     * }
     */
    public static AddressLayout glad_debug_glGetQueryBufferObjecti64v$layout() {
        return glad_debug_glGetQueryBufferObjecti64v$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYBUFFEROBJECTI64VPROC glad_debug_glGetQueryBufferObjecti64v
     * }
     */
    public static MemorySegment glad_debug_glGetQueryBufferObjecti64v$segment() {
        return glad_debug_glGetQueryBufferObjecti64v$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYBUFFEROBJECTI64VPROC glad_debug_glGetQueryBufferObjecti64v
     * }
     */
    public static MemorySegment glad_debug_glGetQueryBufferObjecti64v() {
        return glad_debug_glGetQueryBufferObjecti64v$constants.SEGMENT.get(glad_debug_glGetQueryBufferObjecti64v$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYBUFFEROBJECTI64VPROC glad_debug_glGetQueryBufferObjecti64v
     * }
     */
    public static void glad_debug_glGetQueryBufferObjecti64v(MemorySegment varValue) {
        glad_debug_glGetQueryBufferObjecti64v$constants.SEGMENT.set(glad_debug_glGetQueryBufferObjecti64v$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetQueryBufferObjectiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetQueryBufferObjectiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYBUFFEROBJECTIVPROC glad_glGetQueryBufferObjectiv
     * }
     */
    public static AddressLayout glad_glGetQueryBufferObjectiv$layout() {
        return glad_glGetQueryBufferObjectiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYBUFFEROBJECTIVPROC glad_glGetQueryBufferObjectiv
     * }
     */
    public static MemorySegment glad_glGetQueryBufferObjectiv$segment() {
        return glad_glGetQueryBufferObjectiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYBUFFEROBJECTIVPROC glad_glGetQueryBufferObjectiv
     * }
     */
    public static MemorySegment glad_glGetQueryBufferObjectiv() {
        return glad_glGetQueryBufferObjectiv$constants.SEGMENT.get(glad_glGetQueryBufferObjectiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYBUFFEROBJECTIVPROC glad_glGetQueryBufferObjectiv
     * }
     */
    public static void glad_glGetQueryBufferObjectiv(MemorySegment varValue) {
        glad_glGetQueryBufferObjectiv$constants.SEGMENT.set(glad_glGetQueryBufferObjectiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetQueryBufferObjectiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetQueryBufferObjectiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYBUFFEROBJECTIVPROC glad_debug_glGetQueryBufferObjectiv
     * }
     */
    public static AddressLayout glad_debug_glGetQueryBufferObjectiv$layout() {
        return glad_debug_glGetQueryBufferObjectiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYBUFFEROBJECTIVPROC glad_debug_glGetQueryBufferObjectiv
     * }
     */
    public static MemorySegment glad_debug_glGetQueryBufferObjectiv$segment() {
        return glad_debug_glGetQueryBufferObjectiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYBUFFEROBJECTIVPROC glad_debug_glGetQueryBufferObjectiv
     * }
     */
    public static MemorySegment glad_debug_glGetQueryBufferObjectiv() {
        return glad_debug_glGetQueryBufferObjectiv$constants.SEGMENT.get(glad_debug_glGetQueryBufferObjectiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYBUFFEROBJECTIVPROC glad_debug_glGetQueryBufferObjectiv
     * }
     */
    public static void glad_debug_glGetQueryBufferObjectiv(MemorySegment varValue) {
        glad_debug_glGetQueryBufferObjectiv$constants.SEGMENT.set(glad_debug_glGetQueryBufferObjectiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetQueryBufferObjectui64v$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetQueryBufferObjectui64v").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYBUFFEROBJECTUI64VPROC glad_glGetQueryBufferObjectui64v
     * }
     */
    public static AddressLayout glad_glGetQueryBufferObjectui64v$layout() {
        return glad_glGetQueryBufferObjectui64v$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYBUFFEROBJECTUI64VPROC glad_glGetQueryBufferObjectui64v
     * }
     */
    public static MemorySegment glad_glGetQueryBufferObjectui64v$segment() {
        return glad_glGetQueryBufferObjectui64v$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYBUFFEROBJECTUI64VPROC glad_glGetQueryBufferObjectui64v
     * }
     */
    public static MemorySegment glad_glGetQueryBufferObjectui64v() {
        return glad_glGetQueryBufferObjectui64v$constants.SEGMENT.get(glad_glGetQueryBufferObjectui64v$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYBUFFEROBJECTUI64VPROC glad_glGetQueryBufferObjectui64v
     * }
     */
    public static void glad_glGetQueryBufferObjectui64v(MemorySegment varValue) {
        glad_glGetQueryBufferObjectui64v$constants.SEGMENT.set(glad_glGetQueryBufferObjectui64v$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetQueryBufferObjectui64v$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetQueryBufferObjectui64v").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYBUFFEROBJECTUI64VPROC glad_debug_glGetQueryBufferObjectui64v
     * }
     */
    public static AddressLayout glad_debug_glGetQueryBufferObjectui64v$layout() {
        return glad_debug_glGetQueryBufferObjectui64v$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYBUFFEROBJECTUI64VPROC glad_debug_glGetQueryBufferObjectui64v
     * }
     */
    public static MemorySegment glad_debug_glGetQueryBufferObjectui64v$segment() {
        return glad_debug_glGetQueryBufferObjectui64v$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYBUFFEROBJECTUI64VPROC glad_debug_glGetQueryBufferObjectui64v
     * }
     */
    public static MemorySegment glad_debug_glGetQueryBufferObjectui64v() {
        return glad_debug_glGetQueryBufferObjectui64v$constants.SEGMENT.get(glad_debug_glGetQueryBufferObjectui64v$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYBUFFEROBJECTUI64VPROC glad_debug_glGetQueryBufferObjectui64v
     * }
     */
    public static void glad_debug_glGetQueryBufferObjectui64v(MemorySegment varValue) {
        glad_debug_glGetQueryBufferObjectui64v$constants.SEGMENT.set(glad_debug_glGetQueryBufferObjectui64v$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetQueryBufferObjectuiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetQueryBufferObjectuiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYBUFFEROBJECTUIVPROC glad_glGetQueryBufferObjectuiv
     * }
     */
    public static AddressLayout glad_glGetQueryBufferObjectuiv$layout() {
        return glad_glGetQueryBufferObjectuiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYBUFFEROBJECTUIVPROC glad_glGetQueryBufferObjectuiv
     * }
     */
    public static MemorySegment glad_glGetQueryBufferObjectuiv$segment() {
        return glad_glGetQueryBufferObjectuiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYBUFFEROBJECTUIVPROC glad_glGetQueryBufferObjectuiv
     * }
     */
    public static MemorySegment glad_glGetQueryBufferObjectuiv() {
        return glad_glGetQueryBufferObjectuiv$constants.SEGMENT.get(glad_glGetQueryBufferObjectuiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYBUFFEROBJECTUIVPROC glad_glGetQueryBufferObjectuiv
     * }
     */
    public static void glad_glGetQueryBufferObjectuiv(MemorySegment varValue) {
        glad_glGetQueryBufferObjectuiv$constants.SEGMENT.set(glad_glGetQueryBufferObjectuiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetQueryBufferObjectuiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetQueryBufferObjectuiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYBUFFEROBJECTUIVPROC glad_debug_glGetQueryBufferObjectuiv
     * }
     */
    public static AddressLayout glad_debug_glGetQueryBufferObjectuiv$layout() {
        return glad_debug_glGetQueryBufferObjectuiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYBUFFEROBJECTUIVPROC glad_debug_glGetQueryBufferObjectuiv
     * }
     */
    public static MemorySegment glad_debug_glGetQueryBufferObjectuiv$segment() {
        return glad_debug_glGetQueryBufferObjectuiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYBUFFEROBJECTUIVPROC glad_debug_glGetQueryBufferObjectuiv
     * }
     */
    public static MemorySegment glad_debug_glGetQueryBufferObjectuiv() {
        return glad_debug_glGetQueryBufferObjectuiv$constants.SEGMENT.get(glad_debug_glGetQueryBufferObjectuiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYBUFFEROBJECTUIVPROC glad_debug_glGetQueryBufferObjectuiv
     * }
     */
    public static void glad_debug_glGetQueryBufferObjectuiv(MemorySegment varValue) {
        glad_debug_glGetQueryBufferObjectuiv$constants.SEGMENT.set(glad_debug_glGetQueryBufferObjectuiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetQueryIndexediv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetQueryIndexediv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYINDEXEDIVPROC glad_glGetQueryIndexediv
     * }
     */
    public static AddressLayout glad_glGetQueryIndexediv$layout() {
        return glad_glGetQueryIndexediv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYINDEXEDIVPROC glad_glGetQueryIndexediv
     * }
     */
    public static MemorySegment glad_glGetQueryIndexediv$segment() {
        return glad_glGetQueryIndexediv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYINDEXEDIVPROC glad_glGetQueryIndexediv
     * }
     */
    public static MemorySegment glad_glGetQueryIndexediv() {
        return glad_glGetQueryIndexediv$constants.SEGMENT.get(glad_glGetQueryIndexediv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYINDEXEDIVPROC glad_glGetQueryIndexediv
     * }
     */
    public static void glad_glGetQueryIndexediv(MemorySegment varValue) {
        glad_glGetQueryIndexediv$constants.SEGMENT.set(glad_glGetQueryIndexediv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetQueryIndexediv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetQueryIndexediv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYINDEXEDIVPROC glad_debug_glGetQueryIndexediv
     * }
     */
    public static AddressLayout glad_debug_glGetQueryIndexediv$layout() {
        return glad_debug_glGetQueryIndexediv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYINDEXEDIVPROC glad_debug_glGetQueryIndexediv
     * }
     */
    public static MemorySegment glad_debug_glGetQueryIndexediv$segment() {
        return glad_debug_glGetQueryIndexediv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYINDEXEDIVPROC glad_debug_glGetQueryIndexediv
     * }
     */
    public static MemorySegment glad_debug_glGetQueryIndexediv() {
        return glad_debug_glGetQueryIndexediv$constants.SEGMENT.get(glad_debug_glGetQueryIndexediv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYINDEXEDIVPROC glad_debug_glGetQueryIndexediv
     * }
     */
    public static void glad_debug_glGetQueryIndexediv(MemorySegment varValue) {
        glad_debug_glGetQueryIndexediv$constants.SEGMENT.set(glad_debug_glGetQueryIndexediv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetQueryObjecti64v$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetQueryObjecti64v").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTI64VPROC glad_glGetQueryObjecti64v
     * }
     */
    public static AddressLayout glad_glGetQueryObjecti64v$layout() {
        return glad_glGetQueryObjecti64v$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTI64VPROC glad_glGetQueryObjecti64v
     * }
     */
    public static MemorySegment glad_glGetQueryObjecti64v$segment() {
        return glad_glGetQueryObjecti64v$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTI64VPROC glad_glGetQueryObjecti64v
     * }
     */
    public static MemorySegment glad_glGetQueryObjecti64v() {
        return glad_glGetQueryObjecti64v$constants.SEGMENT.get(glad_glGetQueryObjecti64v$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTI64VPROC glad_glGetQueryObjecti64v
     * }
     */
    public static void glad_glGetQueryObjecti64v(MemorySegment varValue) {
        glad_glGetQueryObjecti64v$constants.SEGMENT.set(glad_glGetQueryObjecti64v$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetQueryObjecti64v$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetQueryObjecti64v").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTI64VPROC glad_debug_glGetQueryObjecti64v
     * }
     */
    public static AddressLayout glad_debug_glGetQueryObjecti64v$layout() {
        return glad_debug_glGetQueryObjecti64v$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTI64VPROC glad_debug_glGetQueryObjecti64v
     * }
     */
    public static MemorySegment glad_debug_glGetQueryObjecti64v$segment() {
        return glad_debug_glGetQueryObjecti64v$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTI64VPROC glad_debug_glGetQueryObjecti64v
     * }
     */
    public static MemorySegment glad_debug_glGetQueryObjecti64v() {
        return glad_debug_glGetQueryObjecti64v$constants.SEGMENT.get(glad_debug_glGetQueryObjecti64v$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTI64VPROC glad_debug_glGetQueryObjecti64v
     * }
     */
    public static void glad_debug_glGetQueryObjecti64v(MemorySegment varValue) {
        glad_debug_glGetQueryObjecti64v$constants.SEGMENT.set(glad_debug_glGetQueryObjecti64v$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetQueryObjecti64vEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetQueryObjecti64vEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTI64VEXTPROC glad_glGetQueryObjecti64vEXT
     * }
     */
    public static AddressLayout glad_glGetQueryObjecti64vEXT$layout() {
        return glad_glGetQueryObjecti64vEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTI64VEXTPROC glad_glGetQueryObjecti64vEXT
     * }
     */
    public static MemorySegment glad_glGetQueryObjecti64vEXT$segment() {
        return glad_glGetQueryObjecti64vEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTI64VEXTPROC glad_glGetQueryObjecti64vEXT
     * }
     */
    public static MemorySegment glad_glGetQueryObjecti64vEXT() {
        return glad_glGetQueryObjecti64vEXT$constants.SEGMENT.get(glad_glGetQueryObjecti64vEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTI64VEXTPROC glad_glGetQueryObjecti64vEXT
     * }
     */
    public static void glad_glGetQueryObjecti64vEXT(MemorySegment varValue) {
        glad_glGetQueryObjecti64vEXT$constants.SEGMENT.set(glad_glGetQueryObjecti64vEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetQueryObjecti64vEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetQueryObjecti64vEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTI64VEXTPROC glad_debug_glGetQueryObjecti64vEXT
     * }
     */
    public static AddressLayout glad_debug_glGetQueryObjecti64vEXT$layout() {
        return glad_debug_glGetQueryObjecti64vEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTI64VEXTPROC glad_debug_glGetQueryObjecti64vEXT
     * }
     */
    public static MemorySegment glad_debug_glGetQueryObjecti64vEXT$segment() {
        return glad_debug_glGetQueryObjecti64vEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTI64VEXTPROC glad_debug_glGetQueryObjecti64vEXT
     * }
     */
    public static MemorySegment glad_debug_glGetQueryObjecti64vEXT() {
        return glad_debug_glGetQueryObjecti64vEXT$constants.SEGMENT.get(glad_debug_glGetQueryObjecti64vEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTI64VEXTPROC glad_debug_glGetQueryObjecti64vEXT
     * }
     */
    public static void glad_debug_glGetQueryObjecti64vEXT(MemorySegment varValue) {
        glad_debug_glGetQueryObjecti64vEXT$constants.SEGMENT.set(glad_debug_glGetQueryObjecti64vEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetQueryObjectiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetQueryObjectiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTIVPROC glad_glGetQueryObjectiv
     * }
     */
    public static AddressLayout glad_glGetQueryObjectiv$layout() {
        return glad_glGetQueryObjectiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTIVPROC glad_glGetQueryObjectiv
     * }
     */
    public static MemorySegment glad_glGetQueryObjectiv$segment() {
        return glad_glGetQueryObjectiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTIVPROC glad_glGetQueryObjectiv
     * }
     */
    public static MemorySegment glad_glGetQueryObjectiv() {
        return glad_glGetQueryObjectiv$constants.SEGMENT.get(glad_glGetQueryObjectiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTIVPROC glad_glGetQueryObjectiv
     * }
     */
    public static void glad_glGetQueryObjectiv(MemorySegment varValue) {
        glad_glGetQueryObjectiv$constants.SEGMENT.set(glad_glGetQueryObjectiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetQueryObjectiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetQueryObjectiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTIVPROC glad_debug_glGetQueryObjectiv
     * }
     */
    public static AddressLayout glad_debug_glGetQueryObjectiv$layout() {
        return glad_debug_glGetQueryObjectiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTIVPROC glad_debug_glGetQueryObjectiv
     * }
     */
    public static MemorySegment glad_debug_glGetQueryObjectiv$segment() {
        return glad_debug_glGetQueryObjectiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTIVPROC glad_debug_glGetQueryObjectiv
     * }
     */
    public static MemorySegment glad_debug_glGetQueryObjectiv() {
        return glad_debug_glGetQueryObjectiv$constants.SEGMENT.get(glad_debug_glGetQueryObjectiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTIVPROC glad_debug_glGetQueryObjectiv
     * }
     */
    public static void glad_debug_glGetQueryObjectiv(MemorySegment varValue) {
        glad_debug_glGetQueryObjectiv$constants.SEGMENT.set(glad_debug_glGetQueryObjectiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetQueryObjectivARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetQueryObjectivARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTIVARBPROC glad_glGetQueryObjectivARB
     * }
     */
    public static AddressLayout glad_glGetQueryObjectivARB$layout() {
        return glad_glGetQueryObjectivARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTIVARBPROC glad_glGetQueryObjectivARB
     * }
     */
    public static MemorySegment glad_glGetQueryObjectivARB$segment() {
        return glad_glGetQueryObjectivARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTIVARBPROC glad_glGetQueryObjectivARB
     * }
     */
    public static MemorySegment glad_glGetQueryObjectivARB() {
        return glad_glGetQueryObjectivARB$constants.SEGMENT.get(glad_glGetQueryObjectivARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTIVARBPROC glad_glGetQueryObjectivARB
     * }
     */
    public static void glad_glGetQueryObjectivARB(MemorySegment varValue) {
        glad_glGetQueryObjectivARB$constants.SEGMENT.set(glad_glGetQueryObjectivARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetQueryObjectivARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetQueryObjectivARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTIVARBPROC glad_debug_glGetQueryObjectivARB
     * }
     */
    public static AddressLayout glad_debug_glGetQueryObjectivARB$layout() {
        return glad_debug_glGetQueryObjectivARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTIVARBPROC glad_debug_glGetQueryObjectivARB
     * }
     */
    public static MemorySegment glad_debug_glGetQueryObjectivARB$segment() {
        return glad_debug_glGetQueryObjectivARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTIVARBPROC glad_debug_glGetQueryObjectivARB
     * }
     */
    public static MemorySegment glad_debug_glGetQueryObjectivARB() {
        return glad_debug_glGetQueryObjectivARB$constants.SEGMENT.get(glad_debug_glGetQueryObjectivARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTIVARBPROC glad_debug_glGetQueryObjectivARB
     * }
     */
    public static void glad_debug_glGetQueryObjectivARB(MemorySegment varValue) {
        glad_debug_glGetQueryObjectivARB$constants.SEGMENT.set(glad_debug_glGetQueryObjectivARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetQueryObjectui64v$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetQueryObjectui64v").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTUI64VPROC glad_glGetQueryObjectui64v
     * }
     */
    public static AddressLayout glad_glGetQueryObjectui64v$layout() {
        return glad_glGetQueryObjectui64v$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTUI64VPROC glad_glGetQueryObjectui64v
     * }
     */
    public static MemorySegment glad_glGetQueryObjectui64v$segment() {
        return glad_glGetQueryObjectui64v$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTUI64VPROC glad_glGetQueryObjectui64v
     * }
     */
    public static MemorySegment glad_glGetQueryObjectui64v() {
        return glad_glGetQueryObjectui64v$constants.SEGMENT.get(glad_glGetQueryObjectui64v$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTUI64VPROC glad_glGetQueryObjectui64v
     * }
     */
    public static void glad_glGetQueryObjectui64v(MemorySegment varValue) {
        glad_glGetQueryObjectui64v$constants.SEGMENT.set(glad_glGetQueryObjectui64v$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetQueryObjectui64v$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetQueryObjectui64v").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTUI64VPROC glad_debug_glGetQueryObjectui64v
     * }
     */
    public static AddressLayout glad_debug_glGetQueryObjectui64v$layout() {
        return glad_debug_glGetQueryObjectui64v$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTUI64VPROC glad_debug_glGetQueryObjectui64v
     * }
     */
    public static MemorySegment glad_debug_glGetQueryObjectui64v$segment() {
        return glad_debug_glGetQueryObjectui64v$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTUI64VPROC glad_debug_glGetQueryObjectui64v
     * }
     */
    public static MemorySegment glad_debug_glGetQueryObjectui64v() {
        return glad_debug_glGetQueryObjectui64v$constants.SEGMENT.get(glad_debug_glGetQueryObjectui64v$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTUI64VPROC glad_debug_glGetQueryObjectui64v
     * }
     */
    public static void glad_debug_glGetQueryObjectui64v(MemorySegment varValue) {
        glad_debug_glGetQueryObjectui64v$constants.SEGMENT.set(glad_debug_glGetQueryObjectui64v$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetQueryObjectui64vEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetQueryObjectui64vEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTUI64VEXTPROC glad_glGetQueryObjectui64vEXT
     * }
     */
    public static AddressLayout glad_glGetQueryObjectui64vEXT$layout() {
        return glad_glGetQueryObjectui64vEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTUI64VEXTPROC glad_glGetQueryObjectui64vEXT
     * }
     */
    public static MemorySegment glad_glGetQueryObjectui64vEXT$segment() {
        return glad_glGetQueryObjectui64vEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTUI64VEXTPROC glad_glGetQueryObjectui64vEXT
     * }
     */
    public static MemorySegment glad_glGetQueryObjectui64vEXT() {
        return glad_glGetQueryObjectui64vEXT$constants.SEGMENT.get(glad_glGetQueryObjectui64vEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTUI64VEXTPROC glad_glGetQueryObjectui64vEXT
     * }
     */
    public static void glad_glGetQueryObjectui64vEXT(MemorySegment varValue) {
        glad_glGetQueryObjectui64vEXT$constants.SEGMENT.set(glad_glGetQueryObjectui64vEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetQueryObjectui64vEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetQueryObjectui64vEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTUI64VEXTPROC glad_debug_glGetQueryObjectui64vEXT
     * }
     */
    public static AddressLayout glad_debug_glGetQueryObjectui64vEXT$layout() {
        return glad_debug_glGetQueryObjectui64vEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTUI64VEXTPROC glad_debug_glGetQueryObjectui64vEXT
     * }
     */
    public static MemorySegment glad_debug_glGetQueryObjectui64vEXT$segment() {
        return glad_debug_glGetQueryObjectui64vEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTUI64VEXTPROC glad_debug_glGetQueryObjectui64vEXT
     * }
     */
    public static MemorySegment glad_debug_glGetQueryObjectui64vEXT() {
        return glad_debug_glGetQueryObjectui64vEXT$constants.SEGMENT.get(glad_debug_glGetQueryObjectui64vEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTUI64VEXTPROC glad_debug_glGetQueryObjectui64vEXT
     * }
     */
    public static void glad_debug_glGetQueryObjectui64vEXT(MemorySegment varValue) {
        glad_debug_glGetQueryObjectui64vEXT$constants.SEGMENT.set(glad_debug_glGetQueryObjectui64vEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetQueryObjectuiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetQueryObjectuiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTUIVPROC glad_glGetQueryObjectuiv
     * }
     */
    public static AddressLayout glad_glGetQueryObjectuiv$layout() {
        return glad_glGetQueryObjectuiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTUIVPROC glad_glGetQueryObjectuiv
     * }
     */
    public static MemorySegment glad_glGetQueryObjectuiv$segment() {
        return glad_glGetQueryObjectuiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTUIVPROC glad_glGetQueryObjectuiv
     * }
     */
    public static MemorySegment glad_glGetQueryObjectuiv() {
        return glad_glGetQueryObjectuiv$constants.SEGMENT.get(glad_glGetQueryObjectuiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTUIVPROC glad_glGetQueryObjectuiv
     * }
     */
    public static void glad_glGetQueryObjectuiv(MemorySegment varValue) {
        glad_glGetQueryObjectuiv$constants.SEGMENT.set(glad_glGetQueryObjectuiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetQueryObjectuiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetQueryObjectuiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTUIVPROC glad_debug_glGetQueryObjectuiv
     * }
     */
    public static AddressLayout glad_debug_glGetQueryObjectuiv$layout() {
        return glad_debug_glGetQueryObjectuiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTUIVPROC glad_debug_glGetQueryObjectuiv
     * }
     */
    public static MemorySegment glad_debug_glGetQueryObjectuiv$segment() {
        return glad_debug_glGetQueryObjectuiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTUIVPROC glad_debug_glGetQueryObjectuiv
     * }
     */
    public static MemorySegment glad_debug_glGetQueryObjectuiv() {
        return glad_debug_glGetQueryObjectuiv$constants.SEGMENT.get(glad_debug_glGetQueryObjectuiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTUIVPROC glad_debug_glGetQueryObjectuiv
     * }
     */
    public static void glad_debug_glGetQueryObjectuiv(MemorySegment varValue) {
        glad_debug_glGetQueryObjectuiv$constants.SEGMENT.set(glad_debug_glGetQueryObjectuiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetQueryObjectuivARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetQueryObjectuivARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTUIVARBPROC glad_glGetQueryObjectuivARB
     * }
     */
    public static AddressLayout glad_glGetQueryObjectuivARB$layout() {
        return glad_glGetQueryObjectuivARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTUIVARBPROC glad_glGetQueryObjectuivARB
     * }
     */
    public static MemorySegment glad_glGetQueryObjectuivARB$segment() {
        return glad_glGetQueryObjectuivARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTUIVARBPROC glad_glGetQueryObjectuivARB
     * }
     */
    public static MemorySegment glad_glGetQueryObjectuivARB() {
        return glad_glGetQueryObjectuivARB$constants.SEGMENT.get(glad_glGetQueryObjectuivARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTUIVARBPROC glad_glGetQueryObjectuivARB
     * }
     */
    public static void glad_glGetQueryObjectuivARB(MemorySegment varValue) {
        glad_glGetQueryObjectuivARB$constants.SEGMENT.set(glad_glGetQueryObjectuivARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetQueryObjectuivARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetQueryObjectuivARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTUIVARBPROC glad_debug_glGetQueryObjectuivARB
     * }
     */
    public static AddressLayout glad_debug_glGetQueryObjectuivARB$layout() {
        return glad_debug_glGetQueryObjectuivARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTUIVARBPROC glad_debug_glGetQueryObjectuivARB
     * }
     */
    public static MemorySegment glad_debug_glGetQueryObjectuivARB$segment() {
        return glad_debug_glGetQueryObjectuivARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTUIVARBPROC glad_debug_glGetQueryObjectuivARB
     * }
     */
    public static MemorySegment glad_debug_glGetQueryObjectuivARB() {
        return glad_debug_glGetQueryObjectuivARB$constants.SEGMENT.get(glad_debug_glGetQueryObjectuivARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYOBJECTUIVARBPROC glad_debug_glGetQueryObjectuivARB
     * }
     */
    public static void glad_debug_glGetQueryObjectuivARB(MemorySegment varValue) {
        glad_debug_glGetQueryObjectuivARB$constants.SEGMENT.set(glad_debug_glGetQueryObjectuivARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetQueryiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetQueryiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYIVPROC glad_glGetQueryiv
     * }
     */
    public static AddressLayout glad_glGetQueryiv$layout() {
        return glad_glGetQueryiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYIVPROC glad_glGetQueryiv
     * }
     */
    public static MemorySegment glad_glGetQueryiv$segment() {
        return glad_glGetQueryiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYIVPROC glad_glGetQueryiv
     * }
     */
    public static MemorySegment glad_glGetQueryiv() {
        return glad_glGetQueryiv$constants.SEGMENT.get(glad_glGetQueryiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYIVPROC glad_glGetQueryiv
     * }
     */
    public static void glad_glGetQueryiv(MemorySegment varValue) {
        glad_glGetQueryiv$constants.SEGMENT.set(glad_glGetQueryiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetQueryiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetQueryiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYIVPROC glad_debug_glGetQueryiv
     * }
     */
    public static AddressLayout glad_debug_glGetQueryiv$layout() {
        return glad_debug_glGetQueryiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYIVPROC glad_debug_glGetQueryiv
     * }
     */
    public static MemorySegment glad_debug_glGetQueryiv$segment() {
        return glad_debug_glGetQueryiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYIVPROC glad_debug_glGetQueryiv
     * }
     */
    public static MemorySegment glad_debug_glGetQueryiv() {
        return glad_debug_glGetQueryiv$constants.SEGMENT.get(glad_debug_glGetQueryiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYIVPROC glad_debug_glGetQueryiv
     * }
     */
    public static void glad_debug_glGetQueryiv(MemorySegment varValue) {
        glad_debug_glGetQueryiv$constants.SEGMENT.set(glad_debug_glGetQueryiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetQueryivARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetQueryivARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYIVARBPROC glad_glGetQueryivARB
     * }
     */
    public static AddressLayout glad_glGetQueryivARB$layout() {
        return glad_glGetQueryivARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYIVARBPROC glad_glGetQueryivARB
     * }
     */
    public static MemorySegment glad_glGetQueryivARB$segment() {
        return glad_glGetQueryivARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYIVARBPROC glad_glGetQueryivARB
     * }
     */
    public static MemorySegment glad_glGetQueryivARB() {
        return glad_glGetQueryivARB$constants.SEGMENT.get(glad_glGetQueryivARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYIVARBPROC glad_glGetQueryivARB
     * }
     */
    public static void glad_glGetQueryivARB(MemorySegment varValue) {
        glad_glGetQueryivARB$constants.SEGMENT.set(glad_glGetQueryivARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetQueryivARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetQueryivARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYIVARBPROC glad_debug_glGetQueryivARB
     * }
     */
    public static AddressLayout glad_debug_glGetQueryivARB$layout() {
        return glad_debug_glGetQueryivARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYIVARBPROC glad_debug_glGetQueryivARB
     * }
     */
    public static MemorySegment glad_debug_glGetQueryivARB$segment() {
        return glad_debug_glGetQueryivARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYIVARBPROC glad_debug_glGetQueryivARB
     * }
     */
    public static MemorySegment glad_debug_glGetQueryivARB() {
        return glad_debug_glGetQueryivARB$constants.SEGMENT.get(glad_debug_glGetQueryivARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETQUERYIVARBPROC glad_debug_glGetQueryivARB
     * }
     */
    public static void glad_debug_glGetQueryivARB(MemorySegment varValue) {
        glad_debug_glGetQueryivARB$constants.SEGMENT.set(glad_debug_glGetQueryivARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetRenderbufferParameteriv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetRenderbufferParameteriv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETRENDERBUFFERPARAMETERIVPROC glad_glGetRenderbufferParameteriv
     * }
     */
    public static AddressLayout glad_glGetRenderbufferParameteriv$layout() {
        return glad_glGetRenderbufferParameteriv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETRENDERBUFFERPARAMETERIVPROC glad_glGetRenderbufferParameteriv
     * }
     */
    public static MemorySegment glad_glGetRenderbufferParameteriv$segment() {
        return glad_glGetRenderbufferParameteriv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETRENDERBUFFERPARAMETERIVPROC glad_glGetRenderbufferParameteriv
     * }
     */
    public static MemorySegment glad_glGetRenderbufferParameteriv() {
        return glad_glGetRenderbufferParameteriv$constants.SEGMENT.get(glad_glGetRenderbufferParameteriv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETRENDERBUFFERPARAMETERIVPROC glad_glGetRenderbufferParameteriv
     * }
     */
    public static void glad_glGetRenderbufferParameteriv(MemorySegment varValue) {
        glad_glGetRenderbufferParameteriv$constants.SEGMENT.set(glad_glGetRenderbufferParameteriv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetRenderbufferParameteriv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetRenderbufferParameteriv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETRENDERBUFFERPARAMETERIVPROC glad_debug_glGetRenderbufferParameteriv
     * }
     */
    public static AddressLayout glad_debug_glGetRenderbufferParameteriv$layout() {
        return glad_debug_glGetRenderbufferParameteriv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETRENDERBUFFERPARAMETERIVPROC glad_debug_glGetRenderbufferParameteriv
     * }
     */
    public static MemorySegment glad_debug_glGetRenderbufferParameteriv$segment() {
        return glad_debug_glGetRenderbufferParameteriv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETRENDERBUFFERPARAMETERIVPROC glad_debug_glGetRenderbufferParameteriv
     * }
     */
    public static MemorySegment glad_debug_glGetRenderbufferParameteriv() {
        return glad_debug_glGetRenderbufferParameteriv$constants.SEGMENT.get(glad_debug_glGetRenderbufferParameteriv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETRENDERBUFFERPARAMETERIVPROC glad_debug_glGetRenderbufferParameteriv
     * }
     */
    public static void glad_debug_glGetRenderbufferParameteriv(MemorySegment varValue) {
        glad_debug_glGetRenderbufferParameteriv$constants.SEGMENT.set(glad_debug_glGetRenderbufferParameteriv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetRenderbufferParameterivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetRenderbufferParameterivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC glad_glGetRenderbufferParameterivEXT
     * }
     */
    public static AddressLayout glad_glGetRenderbufferParameterivEXT$layout() {
        return glad_glGetRenderbufferParameterivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC glad_glGetRenderbufferParameterivEXT
     * }
     */
    public static MemorySegment glad_glGetRenderbufferParameterivEXT$segment() {
        return glad_glGetRenderbufferParameterivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC glad_glGetRenderbufferParameterivEXT
     * }
     */
    public static MemorySegment glad_glGetRenderbufferParameterivEXT() {
        return glad_glGetRenderbufferParameterivEXT$constants.SEGMENT.get(glad_glGetRenderbufferParameterivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC glad_glGetRenderbufferParameterivEXT
     * }
     */
    public static void glad_glGetRenderbufferParameterivEXT(MemorySegment varValue) {
        glad_glGetRenderbufferParameterivEXT$constants.SEGMENT.set(glad_glGetRenderbufferParameterivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetRenderbufferParameterivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetRenderbufferParameterivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC glad_debug_glGetRenderbufferParameterivEXT
     * }
     */
    public static AddressLayout glad_debug_glGetRenderbufferParameterivEXT$layout() {
        return glad_debug_glGetRenderbufferParameterivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC glad_debug_glGetRenderbufferParameterivEXT
     * }
     */
    public static MemorySegment glad_debug_glGetRenderbufferParameterivEXT$segment() {
        return glad_debug_glGetRenderbufferParameterivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC glad_debug_glGetRenderbufferParameterivEXT
     * }
     */
    public static MemorySegment glad_debug_glGetRenderbufferParameterivEXT() {
        return glad_debug_glGetRenderbufferParameterivEXT$constants.SEGMENT.get(glad_debug_glGetRenderbufferParameterivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC glad_debug_glGetRenderbufferParameterivEXT
     * }
     */
    public static void glad_debug_glGetRenderbufferParameterivEXT(MemorySegment varValue) {
        glad_debug_glGetRenderbufferParameterivEXT$constants.SEGMENT.set(glad_debug_glGetRenderbufferParameterivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetSamplerParameterIiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetSamplerParameterIiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSAMPLERPARAMETERIIVPROC glad_glGetSamplerParameterIiv
     * }
     */
    public static AddressLayout glad_glGetSamplerParameterIiv$layout() {
        return glad_glGetSamplerParameterIiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSAMPLERPARAMETERIIVPROC glad_glGetSamplerParameterIiv
     * }
     */
    public static MemorySegment glad_glGetSamplerParameterIiv$segment() {
        return glad_glGetSamplerParameterIiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSAMPLERPARAMETERIIVPROC glad_glGetSamplerParameterIiv
     * }
     */
    public static MemorySegment glad_glGetSamplerParameterIiv() {
        return glad_glGetSamplerParameterIiv$constants.SEGMENT.get(glad_glGetSamplerParameterIiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSAMPLERPARAMETERIIVPROC glad_glGetSamplerParameterIiv
     * }
     */
    public static void glad_glGetSamplerParameterIiv(MemorySegment varValue) {
        glad_glGetSamplerParameterIiv$constants.SEGMENT.set(glad_glGetSamplerParameterIiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetSamplerParameterIiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetSamplerParameterIiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSAMPLERPARAMETERIIVPROC glad_debug_glGetSamplerParameterIiv
     * }
     */
    public static AddressLayout glad_debug_glGetSamplerParameterIiv$layout() {
        return glad_debug_glGetSamplerParameterIiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSAMPLERPARAMETERIIVPROC glad_debug_glGetSamplerParameterIiv
     * }
     */
    public static MemorySegment glad_debug_glGetSamplerParameterIiv$segment() {
        return glad_debug_glGetSamplerParameterIiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSAMPLERPARAMETERIIVPROC glad_debug_glGetSamplerParameterIiv
     * }
     */
    public static MemorySegment glad_debug_glGetSamplerParameterIiv() {
        return glad_debug_glGetSamplerParameterIiv$constants.SEGMENT.get(glad_debug_glGetSamplerParameterIiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSAMPLERPARAMETERIIVPROC glad_debug_glGetSamplerParameterIiv
     * }
     */
    public static void glad_debug_glGetSamplerParameterIiv(MemorySegment varValue) {
        glad_debug_glGetSamplerParameterIiv$constants.SEGMENT.set(glad_debug_glGetSamplerParameterIiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetSamplerParameterIuiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetSamplerParameterIuiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSAMPLERPARAMETERIUIVPROC glad_glGetSamplerParameterIuiv
     * }
     */
    public static AddressLayout glad_glGetSamplerParameterIuiv$layout() {
        return glad_glGetSamplerParameterIuiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSAMPLERPARAMETERIUIVPROC glad_glGetSamplerParameterIuiv
     * }
     */
    public static MemorySegment glad_glGetSamplerParameterIuiv$segment() {
        return glad_glGetSamplerParameterIuiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSAMPLERPARAMETERIUIVPROC glad_glGetSamplerParameterIuiv
     * }
     */
    public static MemorySegment glad_glGetSamplerParameterIuiv() {
        return glad_glGetSamplerParameterIuiv$constants.SEGMENT.get(glad_glGetSamplerParameterIuiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSAMPLERPARAMETERIUIVPROC glad_glGetSamplerParameterIuiv
     * }
     */
    public static void glad_glGetSamplerParameterIuiv(MemorySegment varValue) {
        glad_glGetSamplerParameterIuiv$constants.SEGMENT.set(glad_glGetSamplerParameterIuiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetSamplerParameterIuiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetSamplerParameterIuiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSAMPLERPARAMETERIUIVPROC glad_debug_glGetSamplerParameterIuiv
     * }
     */
    public static AddressLayout glad_debug_glGetSamplerParameterIuiv$layout() {
        return glad_debug_glGetSamplerParameterIuiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSAMPLERPARAMETERIUIVPROC glad_debug_glGetSamplerParameterIuiv
     * }
     */
    public static MemorySegment glad_debug_glGetSamplerParameterIuiv$segment() {
        return glad_debug_glGetSamplerParameterIuiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSAMPLERPARAMETERIUIVPROC glad_debug_glGetSamplerParameterIuiv
     * }
     */
    public static MemorySegment glad_debug_glGetSamplerParameterIuiv() {
        return glad_debug_glGetSamplerParameterIuiv$constants.SEGMENT.get(glad_debug_glGetSamplerParameterIuiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSAMPLERPARAMETERIUIVPROC glad_debug_glGetSamplerParameterIuiv
     * }
     */
    public static void glad_debug_glGetSamplerParameterIuiv(MemorySegment varValue) {
        glad_debug_glGetSamplerParameterIuiv$constants.SEGMENT.set(glad_debug_glGetSamplerParameterIuiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetSamplerParameterfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetSamplerParameterfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSAMPLERPARAMETERFVPROC glad_glGetSamplerParameterfv
     * }
     */
    public static AddressLayout glad_glGetSamplerParameterfv$layout() {
        return glad_glGetSamplerParameterfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSAMPLERPARAMETERFVPROC glad_glGetSamplerParameterfv
     * }
     */
    public static MemorySegment glad_glGetSamplerParameterfv$segment() {
        return glad_glGetSamplerParameterfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSAMPLERPARAMETERFVPROC glad_glGetSamplerParameterfv
     * }
     */
    public static MemorySegment glad_glGetSamplerParameterfv() {
        return glad_glGetSamplerParameterfv$constants.SEGMENT.get(glad_glGetSamplerParameterfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSAMPLERPARAMETERFVPROC glad_glGetSamplerParameterfv
     * }
     */
    public static void glad_glGetSamplerParameterfv(MemorySegment varValue) {
        glad_glGetSamplerParameterfv$constants.SEGMENT.set(glad_glGetSamplerParameterfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetSamplerParameterfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetSamplerParameterfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSAMPLERPARAMETERFVPROC glad_debug_glGetSamplerParameterfv
     * }
     */
    public static AddressLayout glad_debug_glGetSamplerParameterfv$layout() {
        return glad_debug_glGetSamplerParameterfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSAMPLERPARAMETERFVPROC glad_debug_glGetSamplerParameterfv
     * }
     */
    public static MemorySegment glad_debug_glGetSamplerParameterfv$segment() {
        return glad_debug_glGetSamplerParameterfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSAMPLERPARAMETERFVPROC glad_debug_glGetSamplerParameterfv
     * }
     */
    public static MemorySegment glad_debug_glGetSamplerParameterfv() {
        return glad_debug_glGetSamplerParameterfv$constants.SEGMENT.get(glad_debug_glGetSamplerParameterfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSAMPLERPARAMETERFVPROC glad_debug_glGetSamplerParameterfv
     * }
     */
    public static void glad_debug_glGetSamplerParameterfv(MemorySegment varValue) {
        glad_debug_glGetSamplerParameterfv$constants.SEGMENT.set(glad_debug_glGetSamplerParameterfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetSamplerParameteriv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetSamplerParameteriv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSAMPLERPARAMETERIVPROC glad_glGetSamplerParameteriv
     * }
     */
    public static AddressLayout glad_glGetSamplerParameteriv$layout() {
        return glad_glGetSamplerParameteriv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSAMPLERPARAMETERIVPROC glad_glGetSamplerParameteriv
     * }
     */
    public static MemorySegment glad_glGetSamplerParameteriv$segment() {
        return glad_glGetSamplerParameteriv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSAMPLERPARAMETERIVPROC glad_glGetSamplerParameteriv
     * }
     */
    public static MemorySegment glad_glGetSamplerParameteriv() {
        return glad_glGetSamplerParameteriv$constants.SEGMENT.get(glad_glGetSamplerParameteriv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSAMPLERPARAMETERIVPROC glad_glGetSamplerParameteriv
     * }
     */
    public static void glad_glGetSamplerParameteriv(MemorySegment varValue) {
        glad_glGetSamplerParameteriv$constants.SEGMENT.set(glad_glGetSamplerParameteriv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetSamplerParameteriv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetSamplerParameteriv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSAMPLERPARAMETERIVPROC glad_debug_glGetSamplerParameteriv
     * }
     */
    public static AddressLayout glad_debug_glGetSamplerParameteriv$layout() {
        return glad_debug_glGetSamplerParameteriv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSAMPLERPARAMETERIVPROC glad_debug_glGetSamplerParameteriv
     * }
     */
    public static MemorySegment glad_debug_glGetSamplerParameteriv$segment() {
        return glad_debug_glGetSamplerParameteriv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSAMPLERPARAMETERIVPROC glad_debug_glGetSamplerParameteriv
     * }
     */
    public static MemorySegment glad_debug_glGetSamplerParameteriv() {
        return glad_debug_glGetSamplerParameteriv$constants.SEGMENT.get(glad_debug_glGetSamplerParameteriv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSAMPLERPARAMETERIVPROC glad_debug_glGetSamplerParameteriv
     * }
     */
    public static void glad_debug_glGetSamplerParameteriv(MemorySegment varValue) {
        glad_debug_glGetSamplerParameteriv$constants.SEGMENT.set(glad_debug_glGetSamplerParameteriv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetSeparableFilter$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetSeparableFilter").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSEPARABLEFILTERPROC glad_glGetSeparableFilter
     * }
     */
    public static AddressLayout glad_glGetSeparableFilter$layout() {
        return glad_glGetSeparableFilter$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSEPARABLEFILTERPROC glad_glGetSeparableFilter
     * }
     */
    public static MemorySegment glad_glGetSeparableFilter$segment() {
        return glad_glGetSeparableFilter$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSEPARABLEFILTERPROC glad_glGetSeparableFilter
     * }
     */
    public static MemorySegment glad_glGetSeparableFilter() {
        return glad_glGetSeparableFilter$constants.SEGMENT.get(glad_glGetSeparableFilter$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSEPARABLEFILTERPROC glad_glGetSeparableFilter
     * }
     */
    public static void glad_glGetSeparableFilter(MemorySegment varValue) {
        glad_glGetSeparableFilter$constants.SEGMENT.set(glad_glGetSeparableFilter$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetSeparableFilter$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetSeparableFilter").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSEPARABLEFILTERPROC glad_debug_glGetSeparableFilter
     * }
     */
    public static AddressLayout glad_debug_glGetSeparableFilter$layout() {
        return glad_debug_glGetSeparableFilter$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSEPARABLEFILTERPROC glad_debug_glGetSeparableFilter
     * }
     */
    public static MemorySegment glad_debug_glGetSeparableFilter$segment() {
        return glad_debug_glGetSeparableFilter$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSEPARABLEFILTERPROC glad_debug_glGetSeparableFilter
     * }
     */
    public static MemorySegment glad_debug_glGetSeparableFilter() {
        return glad_debug_glGetSeparableFilter$constants.SEGMENT.get(glad_debug_glGetSeparableFilter$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSEPARABLEFILTERPROC glad_debug_glGetSeparableFilter
     * }
     */
    public static void glad_debug_glGetSeparableFilter(MemorySegment varValue) {
        glad_debug_glGetSeparableFilter$constants.SEGMENT.set(glad_debug_glGetSeparableFilter$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetShaderInfoLog$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetShaderInfoLog").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSHADERINFOLOGPROC glad_glGetShaderInfoLog
     * }
     */
    public static AddressLayout glad_glGetShaderInfoLog$layout() {
        return glad_glGetShaderInfoLog$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSHADERINFOLOGPROC glad_glGetShaderInfoLog
     * }
     */
    public static MemorySegment glad_glGetShaderInfoLog$segment() {
        return glad_glGetShaderInfoLog$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSHADERINFOLOGPROC glad_glGetShaderInfoLog
     * }
     */
    public static MemorySegment glad_glGetShaderInfoLog() {
        return glad_glGetShaderInfoLog$constants.SEGMENT.get(glad_glGetShaderInfoLog$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSHADERINFOLOGPROC glad_glGetShaderInfoLog
     * }
     */
    public static void glad_glGetShaderInfoLog(MemorySegment varValue) {
        glad_glGetShaderInfoLog$constants.SEGMENT.set(glad_glGetShaderInfoLog$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetShaderInfoLog$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetShaderInfoLog").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSHADERINFOLOGPROC glad_debug_glGetShaderInfoLog
     * }
     */
    public static AddressLayout glad_debug_glGetShaderInfoLog$layout() {
        return glad_debug_glGetShaderInfoLog$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSHADERINFOLOGPROC glad_debug_glGetShaderInfoLog
     * }
     */
    public static MemorySegment glad_debug_glGetShaderInfoLog$segment() {
        return glad_debug_glGetShaderInfoLog$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSHADERINFOLOGPROC glad_debug_glGetShaderInfoLog
     * }
     */
    public static MemorySegment glad_debug_glGetShaderInfoLog() {
        return glad_debug_glGetShaderInfoLog$constants.SEGMENT.get(glad_debug_glGetShaderInfoLog$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSHADERINFOLOGPROC glad_debug_glGetShaderInfoLog
     * }
     */
    public static void glad_debug_glGetShaderInfoLog(MemorySegment varValue) {
        glad_debug_glGetShaderInfoLog$constants.SEGMENT.set(glad_debug_glGetShaderInfoLog$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetShaderPrecisionFormat$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetShaderPrecisionFormat").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSHADERPRECISIONFORMATPROC glad_glGetShaderPrecisionFormat
     * }
     */
    public static AddressLayout glad_glGetShaderPrecisionFormat$layout() {
        return glad_glGetShaderPrecisionFormat$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSHADERPRECISIONFORMATPROC glad_glGetShaderPrecisionFormat
     * }
     */
    public static MemorySegment glad_glGetShaderPrecisionFormat$segment() {
        return glad_glGetShaderPrecisionFormat$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSHADERPRECISIONFORMATPROC glad_glGetShaderPrecisionFormat
     * }
     */
    public static MemorySegment glad_glGetShaderPrecisionFormat() {
        return glad_glGetShaderPrecisionFormat$constants.SEGMENT.get(glad_glGetShaderPrecisionFormat$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSHADERPRECISIONFORMATPROC glad_glGetShaderPrecisionFormat
     * }
     */
    public static void glad_glGetShaderPrecisionFormat(MemorySegment varValue) {
        glad_glGetShaderPrecisionFormat$constants.SEGMENT.set(glad_glGetShaderPrecisionFormat$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetShaderPrecisionFormat$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetShaderPrecisionFormat").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSHADERPRECISIONFORMATPROC glad_debug_glGetShaderPrecisionFormat
     * }
     */
    public static AddressLayout glad_debug_glGetShaderPrecisionFormat$layout() {
        return glad_debug_glGetShaderPrecisionFormat$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSHADERPRECISIONFORMATPROC glad_debug_glGetShaderPrecisionFormat
     * }
     */
    public static MemorySegment glad_debug_glGetShaderPrecisionFormat$segment() {
        return glad_debug_glGetShaderPrecisionFormat$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSHADERPRECISIONFORMATPROC glad_debug_glGetShaderPrecisionFormat
     * }
     */
    public static MemorySegment glad_debug_glGetShaderPrecisionFormat() {
        return glad_debug_glGetShaderPrecisionFormat$constants.SEGMENT.get(glad_debug_glGetShaderPrecisionFormat$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSHADERPRECISIONFORMATPROC glad_debug_glGetShaderPrecisionFormat
     * }
     */
    public static void glad_debug_glGetShaderPrecisionFormat(MemorySegment varValue) {
        glad_debug_glGetShaderPrecisionFormat$constants.SEGMENT.set(glad_debug_glGetShaderPrecisionFormat$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetShaderSource$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetShaderSource").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSHADERSOURCEPROC glad_glGetShaderSource
     * }
     */
    public static AddressLayout glad_glGetShaderSource$layout() {
        return glad_glGetShaderSource$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSHADERSOURCEPROC glad_glGetShaderSource
     * }
     */
    public static MemorySegment glad_glGetShaderSource$segment() {
        return glad_glGetShaderSource$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSHADERSOURCEPROC glad_glGetShaderSource
     * }
     */
    public static MemorySegment glad_glGetShaderSource() {
        return glad_glGetShaderSource$constants.SEGMENT.get(glad_glGetShaderSource$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSHADERSOURCEPROC glad_glGetShaderSource
     * }
     */
    public static void glad_glGetShaderSource(MemorySegment varValue) {
        glad_glGetShaderSource$constants.SEGMENT.set(glad_glGetShaderSource$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetShaderSource$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetShaderSource").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSHADERSOURCEPROC glad_debug_glGetShaderSource
     * }
     */
    public static AddressLayout glad_debug_glGetShaderSource$layout() {
        return glad_debug_glGetShaderSource$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSHADERSOURCEPROC glad_debug_glGetShaderSource
     * }
     */
    public static MemorySegment glad_debug_glGetShaderSource$segment() {
        return glad_debug_glGetShaderSource$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSHADERSOURCEPROC glad_debug_glGetShaderSource
     * }
     */
    public static MemorySegment glad_debug_glGetShaderSource() {
        return glad_debug_glGetShaderSource$constants.SEGMENT.get(glad_debug_glGetShaderSource$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSHADERSOURCEPROC glad_debug_glGetShaderSource
     * }
     */
    public static void glad_debug_glGetShaderSource(MemorySegment varValue) {
        glad_debug_glGetShaderSource$constants.SEGMENT.set(glad_debug_glGetShaderSource$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetShaderSourceARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetShaderSourceARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSHADERSOURCEARBPROC glad_glGetShaderSourceARB
     * }
     */
    public static AddressLayout glad_glGetShaderSourceARB$layout() {
        return glad_glGetShaderSourceARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSHADERSOURCEARBPROC glad_glGetShaderSourceARB
     * }
     */
    public static MemorySegment glad_glGetShaderSourceARB$segment() {
        return glad_glGetShaderSourceARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSHADERSOURCEARBPROC glad_glGetShaderSourceARB
     * }
     */
    public static MemorySegment glad_glGetShaderSourceARB() {
        return glad_glGetShaderSourceARB$constants.SEGMENT.get(glad_glGetShaderSourceARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSHADERSOURCEARBPROC glad_glGetShaderSourceARB
     * }
     */
    public static void glad_glGetShaderSourceARB(MemorySegment varValue) {
        glad_glGetShaderSourceARB$constants.SEGMENT.set(glad_glGetShaderSourceARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetShaderSourceARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetShaderSourceARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSHADERSOURCEARBPROC glad_debug_glGetShaderSourceARB
     * }
     */
    public static AddressLayout glad_debug_glGetShaderSourceARB$layout() {
        return glad_debug_glGetShaderSourceARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSHADERSOURCEARBPROC glad_debug_glGetShaderSourceARB
     * }
     */
    public static MemorySegment glad_debug_glGetShaderSourceARB$segment() {
        return glad_debug_glGetShaderSourceARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSHADERSOURCEARBPROC glad_debug_glGetShaderSourceARB
     * }
     */
    public static MemorySegment glad_debug_glGetShaderSourceARB() {
        return glad_debug_glGetShaderSourceARB$constants.SEGMENT.get(glad_debug_glGetShaderSourceARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSHADERSOURCEARBPROC glad_debug_glGetShaderSourceARB
     * }
     */
    public static void glad_debug_glGetShaderSourceARB(MemorySegment varValue) {
        glad_debug_glGetShaderSourceARB$constants.SEGMENT.set(glad_debug_glGetShaderSourceARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetShaderiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetShaderiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSHADERIVPROC glad_glGetShaderiv
     * }
     */
    public static AddressLayout glad_glGetShaderiv$layout() {
        return glad_glGetShaderiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSHADERIVPROC glad_glGetShaderiv
     * }
     */
    public static MemorySegment glad_glGetShaderiv$segment() {
        return glad_glGetShaderiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSHADERIVPROC glad_glGetShaderiv
     * }
     */
    public static MemorySegment glad_glGetShaderiv() {
        return glad_glGetShaderiv$constants.SEGMENT.get(glad_glGetShaderiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSHADERIVPROC glad_glGetShaderiv
     * }
     */
    public static void glad_glGetShaderiv(MemorySegment varValue) {
        glad_glGetShaderiv$constants.SEGMENT.set(glad_glGetShaderiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetShaderiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetShaderiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSHADERIVPROC glad_debug_glGetShaderiv
     * }
     */
    public static AddressLayout glad_debug_glGetShaderiv$layout() {
        return glad_debug_glGetShaderiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSHADERIVPROC glad_debug_glGetShaderiv
     * }
     */
    public static MemorySegment glad_debug_glGetShaderiv$segment() {
        return glad_debug_glGetShaderiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSHADERIVPROC glad_debug_glGetShaderiv
     * }
     */
    public static MemorySegment glad_debug_glGetShaderiv() {
        return glad_debug_glGetShaderiv$constants.SEGMENT.get(glad_debug_glGetShaderiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSHADERIVPROC glad_debug_glGetShaderiv
     * }
     */
    public static void glad_debug_glGetShaderiv(MemorySegment varValue) {
        glad_debug_glGetShaderiv$constants.SEGMENT.set(glad_debug_glGetShaderiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetString$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetString").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSTRINGPROC glad_glGetString
     * }
     */
    public static AddressLayout glad_glGetString$layout() {
        return glad_glGetString$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSTRINGPROC glad_glGetString
     * }
     */
    public static MemorySegment glad_glGetString$segment() {
        return glad_glGetString$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSTRINGPROC glad_glGetString
     * }
     */
    public static MemorySegment glad_glGetString() {
        return glad_glGetString$constants.SEGMENT.get(glad_glGetString$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSTRINGPROC glad_glGetString
     * }
     */
    public static void glad_glGetString(MemorySegment varValue) {
        glad_glGetString$constants.SEGMENT.set(glad_glGetString$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetString$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetString").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSTRINGPROC glad_debug_glGetString
     * }
     */
    public static AddressLayout glad_debug_glGetString$layout() {
        return glad_debug_glGetString$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSTRINGPROC glad_debug_glGetString
     * }
     */
    public static MemorySegment glad_debug_glGetString$segment() {
        return glad_debug_glGetString$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSTRINGPROC glad_debug_glGetString
     * }
     */
    public static MemorySegment glad_debug_glGetString() {
        return glad_debug_glGetString$constants.SEGMENT.get(glad_debug_glGetString$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSTRINGPROC glad_debug_glGetString
     * }
     */
    public static void glad_debug_glGetString(MemorySegment varValue) {
        glad_debug_glGetString$constants.SEGMENT.set(glad_debug_glGetString$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetStringi$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetStringi").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSTRINGIPROC glad_glGetStringi
     * }
     */
    public static AddressLayout glad_glGetStringi$layout() {
        return glad_glGetStringi$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSTRINGIPROC glad_glGetStringi
     * }
     */
    public static MemorySegment glad_glGetStringi$segment() {
        return glad_glGetStringi$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSTRINGIPROC glad_glGetStringi
     * }
     */
    public static MemorySegment glad_glGetStringi() {
        return glad_glGetStringi$constants.SEGMENT.get(glad_glGetStringi$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSTRINGIPROC glad_glGetStringi
     * }
     */
    public static void glad_glGetStringi(MemorySegment varValue) {
        glad_glGetStringi$constants.SEGMENT.set(glad_glGetStringi$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetStringi$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetStringi").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSTRINGIPROC glad_debug_glGetStringi
     * }
     */
    public static AddressLayout glad_debug_glGetStringi$layout() {
        return glad_debug_glGetStringi$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSTRINGIPROC glad_debug_glGetStringi
     * }
     */
    public static MemorySegment glad_debug_glGetStringi$segment() {
        return glad_debug_glGetStringi$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSTRINGIPROC glad_debug_glGetStringi
     * }
     */
    public static MemorySegment glad_debug_glGetStringi() {
        return glad_debug_glGetStringi$constants.SEGMENT.get(glad_debug_glGetStringi$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSTRINGIPROC glad_debug_glGetStringi
     * }
     */
    public static void glad_debug_glGetStringi(MemorySegment varValue) {
        glad_debug_glGetStringi$constants.SEGMENT.set(glad_debug_glGetStringi$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetSubroutineIndex$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetSubroutineIndex").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSUBROUTINEINDEXPROC glad_glGetSubroutineIndex
     * }
     */
    public static AddressLayout glad_glGetSubroutineIndex$layout() {
        return glad_glGetSubroutineIndex$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSUBROUTINEINDEXPROC glad_glGetSubroutineIndex
     * }
     */
    public static MemorySegment glad_glGetSubroutineIndex$segment() {
        return glad_glGetSubroutineIndex$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSUBROUTINEINDEXPROC glad_glGetSubroutineIndex
     * }
     */
    public static MemorySegment glad_glGetSubroutineIndex() {
        return glad_glGetSubroutineIndex$constants.SEGMENT.get(glad_glGetSubroutineIndex$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSUBROUTINEINDEXPROC glad_glGetSubroutineIndex
     * }
     */
    public static void glad_glGetSubroutineIndex(MemorySegment varValue) {
        glad_glGetSubroutineIndex$constants.SEGMENT.set(glad_glGetSubroutineIndex$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetSubroutineIndex$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetSubroutineIndex").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSUBROUTINEINDEXPROC glad_debug_glGetSubroutineIndex
     * }
     */
    public static AddressLayout glad_debug_glGetSubroutineIndex$layout() {
        return glad_debug_glGetSubroutineIndex$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSUBROUTINEINDEXPROC glad_debug_glGetSubroutineIndex
     * }
     */
    public static MemorySegment glad_debug_glGetSubroutineIndex$segment() {
        return glad_debug_glGetSubroutineIndex$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSUBROUTINEINDEXPROC glad_debug_glGetSubroutineIndex
     * }
     */
    public static MemorySegment glad_debug_glGetSubroutineIndex() {
        return glad_debug_glGetSubroutineIndex$constants.SEGMENT.get(glad_debug_glGetSubroutineIndex$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSUBROUTINEINDEXPROC glad_debug_glGetSubroutineIndex
     * }
     */
    public static void glad_debug_glGetSubroutineIndex(MemorySegment varValue) {
        glad_debug_glGetSubroutineIndex$constants.SEGMENT.set(glad_debug_glGetSubroutineIndex$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetSubroutineUniformLocation$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetSubroutineUniformLocation").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC glad_glGetSubroutineUniformLocation
     * }
     */
    public static AddressLayout glad_glGetSubroutineUniformLocation$layout() {
        return glad_glGetSubroutineUniformLocation$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC glad_glGetSubroutineUniformLocation
     * }
     */
    public static MemorySegment glad_glGetSubroutineUniformLocation$segment() {
        return glad_glGetSubroutineUniformLocation$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC glad_glGetSubroutineUniformLocation
     * }
     */
    public static MemorySegment glad_glGetSubroutineUniformLocation() {
        return glad_glGetSubroutineUniformLocation$constants.SEGMENT.get(glad_glGetSubroutineUniformLocation$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC glad_glGetSubroutineUniformLocation
     * }
     */
    public static void glad_glGetSubroutineUniformLocation(MemorySegment varValue) {
        glad_glGetSubroutineUniformLocation$constants.SEGMENT.set(glad_glGetSubroutineUniformLocation$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetSubroutineUniformLocation$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetSubroutineUniformLocation").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC glad_debug_glGetSubroutineUniformLocation
     * }
     */
    public static AddressLayout glad_debug_glGetSubroutineUniformLocation$layout() {
        return glad_debug_glGetSubroutineUniformLocation$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC glad_debug_glGetSubroutineUniformLocation
     * }
     */
    public static MemorySegment glad_debug_glGetSubroutineUniformLocation$segment() {
        return glad_debug_glGetSubroutineUniformLocation$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC glad_debug_glGetSubroutineUniformLocation
     * }
     */
    public static MemorySegment glad_debug_glGetSubroutineUniformLocation() {
        return glad_debug_glGetSubroutineUniformLocation$constants.SEGMENT.get(glad_debug_glGetSubroutineUniformLocation$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC glad_debug_glGetSubroutineUniformLocation
     * }
     */
    public static void glad_debug_glGetSubroutineUniformLocation(MemorySegment varValue) {
        glad_debug_glGetSubroutineUniformLocation$constants.SEGMENT.set(glad_debug_glGetSubroutineUniformLocation$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetSynciv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetSynciv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSYNCIVPROC glad_glGetSynciv
     * }
     */
    public static AddressLayout glad_glGetSynciv$layout() {
        return glad_glGetSynciv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSYNCIVPROC glad_glGetSynciv
     * }
     */
    public static MemorySegment glad_glGetSynciv$segment() {
        return glad_glGetSynciv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSYNCIVPROC glad_glGetSynciv
     * }
     */
    public static MemorySegment glad_glGetSynciv() {
        return glad_glGetSynciv$constants.SEGMENT.get(glad_glGetSynciv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSYNCIVPROC glad_glGetSynciv
     * }
     */
    public static void glad_glGetSynciv(MemorySegment varValue) {
        glad_glGetSynciv$constants.SEGMENT.set(glad_glGetSynciv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetSynciv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetSynciv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSYNCIVPROC glad_debug_glGetSynciv
     * }
     */
    public static AddressLayout glad_debug_glGetSynciv$layout() {
        return glad_debug_glGetSynciv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSYNCIVPROC glad_debug_glGetSynciv
     * }
     */
    public static MemorySegment glad_debug_glGetSynciv$segment() {
        return glad_debug_glGetSynciv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSYNCIVPROC glad_debug_glGetSynciv
     * }
     */
    public static MemorySegment glad_debug_glGetSynciv() {
        return glad_debug_glGetSynciv$constants.SEGMENT.get(glad_debug_glGetSynciv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETSYNCIVPROC glad_debug_glGetSynciv
     * }
     */
    public static void glad_debug_glGetSynciv(MemorySegment varValue) {
        glad_debug_glGetSynciv$constants.SEGMENT.set(glad_debug_glGetSynciv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetTexEnvfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetTexEnvfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXENVFVPROC glad_glGetTexEnvfv
     * }
     */
    public static AddressLayout glad_glGetTexEnvfv$layout() {
        return glad_glGetTexEnvfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXENVFVPROC glad_glGetTexEnvfv
     * }
     */
    public static MemorySegment glad_glGetTexEnvfv$segment() {
        return glad_glGetTexEnvfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXENVFVPROC glad_glGetTexEnvfv
     * }
     */
    public static MemorySegment glad_glGetTexEnvfv() {
        return glad_glGetTexEnvfv$constants.SEGMENT.get(glad_glGetTexEnvfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXENVFVPROC glad_glGetTexEnvfv
     * }
     */
    public static void glad_glGetTexEnvfv(MemorySegment varValue) {
        glad_glGetTexEnvfv$constants.SEGMENT.set(glad_glGetTexEnvfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetTexEnvfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetTexEnvfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXENVFVPROC glad_debug_glGetTexEnvfv
     * }
     */
    public static AddressLayout glad_debug_glGetTexEnvfv$layout() {
        return glad_debug_glGetTexEnvfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXENVFVPROC glad_debug_glGetTexEnvfv
     * }
     */
    public static MemorySegment glad_debug_glGetTexEnvfv$segment() {
        return glad_debug_glGetTexEnvfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXENVFVPROC glad_debug_glGetTexEnvfv
     * }
     */
    public static MemorySegment glad_debug_glGetTexEnvfv() {
        return glad_debug_glGetTexEnvfv$constants.SEGMENT.get(glad_debug_glGetTexEnvfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXENVFVPROC glad_debug_glGetTexEnvfv
     * }
     */
    public static void glad_debug_glGetTexEnvfv(MemorySegment varValue) {
        glad_debug_glGetTexEnvfv$constants.SEGMENT.set(glad_debug_glGetTexEnvfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetTexEnviv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetTexEnviv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXENVIVPROC glad_glGetTexEnviv
     * }
     */
    public static AddressLayout glad_glGetTexEnviv$layout() {
        return glad_glGetTexEnviv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXENVIVPROC glad_glGetTexEnviv
     * }
     */
    public static MemorySegment glad_glGetTexEnviv$segment() {
        return glad_glGetTexEnviv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXENVIVPROC glad_glGetTexEnviv
     * }
     */
    public static MemorySegment glad_glGetTexEnviv() {
        return glad_glGetTexEnviv$constants.SEGMENT.get(glad_glGetTexEnviv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXENVIVPROC glad_glGetTexEnviv
     * }
     */
    public static void glad_glGetTexEnviv(MemorySegment varValue) {
        glad_glGetTexEnviv$constants.SEGMENT.set(glad_glGetTexEnviv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetTexEnviv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetTexEnviv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXENVIVPROC glad_debug_glGetTexEnviv
     * }
     */
    public static AddressLayout glad_debug_glGetTexEnviv$layout() {
        return glad_debug_glGetTexEnviv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXENVIVPROC glad_debug_glGetTexEnviv
     * }
     */
    public static MemorySegment glad_debug_glGetTexEnviv$segment() {
        return glad_debug_glGetTexEnviv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXENVIVPROC glad_debug_glGetTexEnviv
     * }
     */
    public static MemorySegment glad_debug_glGetTexEnviv() {
        return glad_debug_glGetTexEnviv$constants.SEGMENT.get(glad_debug_glGetTexEnviv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXENVIVPROC glad_debug_glGetTexEnviv
     * }
     */
    public static void glad_debug_glGetTexEnviv(MemorySegment varValue) {
        glad_debug_glGetTexEnviv$constants.SEGMENT.set(glad_debug_glGetTexEnviv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetTexGendv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetTexGendv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXGENDVPROC glad_glGetTexGendv
     * }
     */
    public static AddressLayout glad_glGetTexGendv$layout() {
        return glad_glGetTexGendv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXGENDVPROC glad_glGetTexGendv
     * }
     */
    public static MemorySegment glad_glGetTexGendv$segment() {
        return glad_glGetTexGendv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXGENDVPROC glad_glGetTexGendv
     * }
     */
    public static MemorySegment glad_glGetTexGendv() {
        return glad_glGetTexGendv$constants.SEGMENT.get(glad_glGetTexGendv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXGENDVPROC glad_glGetTexGendv
     * }
     */
    public static void glad_glGetTexGendv(MemorySegment varValue) {
        glad_glGetTexGendv$constants.SEGMENT.set(glad_glGetTexGendv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetTexGendv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetTexGendv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXGENDVPROC glad_debug_glGetTexGendv
     * }
     */
    public static AddressLayout glad_debug_glGetTexGendv$layout() {
        return glad_debug_glGetTexGendv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXGENDVPROC glad_debug_glGetTexGendv
     * }
     */
    public static MemorySegment glad_debug_glGetTexGendv$segment() {
        return glad_debug_glGetTexGendv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXGENDVPROC glad_debug_glGetTexGendv
     * }
     */
    public static MemorySegment glad_debug_glGetTexGendv() {
        return glad_debug_glGetTexGendv$constants.SEGMENT.get(glad_debug_glGetTexGendv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXGENDVPROC glad_debug_glGetTexGendv
     * }
     */
    public static void glad_debug_glGetTexGendv(MemorySegment varValue) {
        glad_debug_glGetTexGendv$constants.SEGMENT.set(glad_debug_glGetTexGendv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetTexGenfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetTexGenfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXGENFVPROC glad_glGetTexGenfv
     * }
     */
    public static AddressLayout glad_glGetTexGenfv$layout() {
        return glad_glGetTexGenfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXGENFVPROC glad_glGetTexGenfv
     * }
     */
    public static MemorySegment glad_glGetTexGenfv$segment() {
        return glad_glGetTexGenfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXGENFVPROC glad_glGetTexGenfv
     * }
     */
    public static MemorySegment glad_glGetTexGenfv() {
        return glad_glGetTexGenfv$constants.SEGMENT.get(glad_glGetTexGenfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXGENFVPROC glad_glGetTexGenfv
     * }
     */
    public static void glad_glGetTexGenfv(MemorySegment varValue) {
        glad_glGetTexGenfv$constants.SEGMENT.set(glad_glGetTexGenfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetTexGenfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetTexGenfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXGENFVPROC glad_debug_glGetTexGenfv
     * }
     */
    public static AddressLayout glad_debug_glGetTexGenfv$layout() {
        return glad_debug_glGetTexGenfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXGENFVPROC glad_debug_glGetTexGenfv
     * }
     */
    public static MemorySegment glad_debug_glGetTexGenfv$segment() {
        return glad_debug_glGetTexGenfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXGENFVPROC glad_debug_glGetTexGenfv
     * }
     */
    public static MemorySegment glad_debug_glGetTexGenfv() {
        return glad_debug_glGetTexGenfv$constants.SEGMENT.get(glad_debug_glGetTexGenfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXGENFVPROC glad_debug_glGetTexGenfv
     * }
     */
    public static void glad_debug_glGetTexGenfv(MemorySegment varValue) {
        glad_debug_glGetTexGenfv$constants.SEGMENT.set(glad_debug_glGetTexGenfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetTexGeniv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetTexGeniv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXGENIVPROC glad_glGetTexGeniv
     * }
     */
    public static AddressLayout glad_glGetTexGeniv$layout() {
        return glad_glGetTexGeniv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXGENIVPROC glad_glGetTexGeniv
     * }
     */
    public static MemorySegment glad_glGetTexGeniv$segment() {
        return glad_glGetTexGeniv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXGENIVPROC glad_glGetTexGeniv
     * }
     */
    public static MemorySegment glad_glGetTexGeniv() {
        return glad_glGetTexGeniv$constants.SEGMENT.get(glad_glGetTexGeniv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXGENIVPROC glad_glGetTexGeniv
     * }
     */
    public static void glad_glGetTexGeniv(MemorySegment varValue) {
        glad_glGetTexGeniv$constants.SEGMENT.set(glad_glGetTexGeniv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetTexGeniv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetTexGeniv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXGENIVPROC glad_debug_glGetTexGeniv
     * }
     */
    public static AddressLayout glad_debug_glGetTexGeniv$layout() {
        return glad_debug_glGetTexGeniv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXGENIVPROC glad_debug_glGetTexGeniv
     * }
     */
    public static MemorySegment glad_debug_glGetTexGeniv$segment() {
        return glad_debug_glGetTexGeniv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXGENIVPROC glad_debug_glGetTexGeniv
     * }
     */
    public static MemorySegment glad_debug_glGetTexGeniv() {
        return glad_debug_glGetTexGeniv$constants.SEGMENT.get(glad_debug_glGetTexGeniv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXGENIVPROC glad_debug_glGetTexGeniv
     * }
     */
    public static void glad_debug_glGetTexGeniv(MemorySegment varValue) {
        glad_debug_glGetTexGeniv$constants.SEGMENT.set(glad_debug_glGetTexGeniv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetTexImage$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetTexImage").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXIMAGEPROC glad_glGetTexImage
     * }
     */
    public static AddressLayout glad_glGetTexImage$layout() {
        return glad_glGetTexImage$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXIMAGEPROC glad_glGetTexImage
     * }
     */
    public static MemorySegment glad_glGetTexImage$segment() {
        return glad_glGetTexImage$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXIMAGEPROC glad_glGetTexImage
     * }
     */
    public static MemorySegment glad_glGetTexImage() {
        return glad_glGetTexImage$constants.SEGMENT.get(glad_glGetTexImage$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXIMAGEPROC glad_glGetTexImage
     * }
     */
    public static void glad_glGetTexImage(MemorySegment varValue) {
        glad_glGetTexImage$constants.SEGMENT.set(glad_glGetTexImage$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetTexImage$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetTexImage").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXIMAGEPROC glad_debug_glGetTexImage
     * }
     */
    public static AddressLayout glad_debug_glGetTexImage$layout() {
        return glad_debug_glGetTexImage$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXIMAGEPROC glad_debug_glGetTexImage
     * }
     */
    public static MemorySegment glad_debug_glGetTexImage$segment() {
        return glad_debug_glGetTexImage$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXIMAGEPROC glad_debug_glGetTexImage
     * }
     */
    public static MemorySegment glad_debug_glGetTexImage() {
        return glad_debug_glGetTexImage$constants.SEGMENT.get(glad_debug_glGetTexImage$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXIMAGEPROC glad_debug_glGetTexImage
     * }
     */
    public static void glad_debug_glGetTexImage(MemorySegment varValue) {
        glad_debug_glGetTexImage$constants.SEGMENT.set(glad_debug_glGetTexImage$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetTexLevelParameterfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetTexLevelParameterfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXLEVELPARAMETERFVPROC glad_glGetTexLevelParameterfv
     * }
     */
    public static AddressLayout glad_glGetTexLevelParameterfv$layout() {
        return glad_glGetTexLevelParameterfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXLEVELPARAMETERFVPROC glad_glGetTexLevelParameterfv
     * }
     */
    public static MemorySegment glad_glGetTexLevelParameterfv$segment() {
        return glad_glGetTexLevelParameterfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXLEVELPARAMETERFVPROC glad_glGetTexLevelParameterfv
     * }
     */
    public static MemorySegment glad_glGetTexLevelParameterfv() {
        return glad_glGetTexLevelParameterfv$constants.SEGMENT.get(glad_glGetTexLevelParameterfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXLEVELPARAMETERFVPROC glad_glGetTexLevelParameterfv
     * }
     */
    public static void glad_glGetTexLevelParameterfv(MemorySegment varValue) {
        glad_glGetTexLevelParameterfv$constants.SEGMENT.set(glad_glGetTexLevelParameterfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetTexLevelParameterfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetTexLevelParameterfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXLEVELPARAMETERFVPROC glad_debug_glGetTexLevelParameterfv
     * }
     */
    public static AddressLayout glad_debug_glGetTexLevelParameterfv$layout() {
        return glad_debug_glGetTexLevelParameterfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXLEVELPARAMETERFVPROC glad_debug_glGetTexLevelParameterfv
     * }
     */
    public static MemorySegment glad_debug_glGetTexLevelParameterfv$segment() {
        return glad_debug_glGetTexLevelParameterfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXLEVELPARAMETERFVPROC glad_debug_glGetTexLevelParameterfv
     * }
     */
    public static MemorySegment glad_debug_glGetTexLevelParameterfv() {
        return glad_debug_glGetTexLevelParameterfv$constants.SEGMENT.get(glad_debug_glGetTexLevelParameterfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXLEVELPARAMETERFVPROC glad_debug_glGetTexLevelParameterfv
     * }
     */
    public static void glad_debug_glGetTexLevelParameterfv(MemorySegment varValue) {
        glad_debug_glGetTexLevelParameterfv$constants.SEGMENT.set(glad_debug_glGetTexLevelParameterfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetTexLevelParameteriv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetTexLevelParameteriv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXLEVELPARAMETERIVPROC glad_glGetTexLevelParameteriv
     * }
     */
    public static AddressLayout glad_glGetTexLevelParameteriv$layout() {
        return glad_glGetTexLevelParameteriv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXLEVELPARAMETERIVPROC glad_glGetTexLevelParameteriv
     * }
     */
    public static MemorySegment glad_glGetTexLevelParameteriv$segment() {
        return glad_glGetTexLevelParameteriv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXLEVELPARAMETERIVPROC glad_glGetTexLevelParameteriv
     * }
     */
    public static MemorySegment glad_glGetTexLevelParameteriv() {
        return glad_glGetTexLevelParameteriv$constants.SEGMENT.get(glad_glGetTexLevelParameteriv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXLEVELPARAMETERIVPROC glad_glGetTexLevelParameteriv
     * }
     */
    public static void glad_glGetTexLevelParameteriv(MemorySegment varValue) {
        glad_glGetTexLevelParameteriv$constants.SEGMENT.set(glad_glGetTexLevelParameteriv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetTexLevelParameteriv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetTexLevelParameteriv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXLEVELPARAMETERIVPROC glad_debug_glGetTexLevelParameteriv
     * }
     */
    public static AddressLayout glad_debug_glGetTexLevelParameteriv$layout() {
        return glad_debug_glGetTexLevelParameteriv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXLEVELPARAMETERIVPROC glad_debug_glGetTexLevelParameteriv
     * }
     */
    public static MemorySegment glad_debug_glGetTexLevelParameteriv$segment() {
        return glad_debug_glGetTexLevelParameteriv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXLEVELPARAMETERIVPROC glad_debug_glGetTexLevelParameteriv
     * }
     */
    public static MemorySegment glad_debug_glGetTexLevelParameteriv() {
        return glad_debug_glGetTexLevelParameteriv$constants.SEGMENT.get(glad_debug_glGetTexLevelParameteriv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXLEVELPARAMETERIVPROC glad_debug_glGetTexLevelParameteriv
     * }
     */
    public static void glad_debug_glGetTexLevelParameteriv(MemorySegment varValue) {
        glad_debug_glGetTexLevelParameteriv$constants.SEGMENT.set(glad_debug_glGetTexLevelParameteriv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetTexParameterIiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetTexParameterIiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXPARAMETERIIVPROC glad_glGetTexParameterIiv
     * }
     */
    public static AddressLayout glad_glGetTexParameterIiv$layout() {
        return glad_glGetTexParameterIiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXPARAMETERIIVPROC glad_glGetTexParameterIiv
     * }
     */
    public static MemorySegment glad_glGetTexParameterIiv$segment() {
        return glad_glGetTexParameterIiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXPARAMETERIIVPROC glad_glGetTexParameterIiv
     * }
     */
    public static MemorySegment glad_glGetTexParameterIiv() {
        return glad_glGetTexParameterIiv$constants.SEGMENT.get(glad_glGetTexParameterIiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXPARAMETERIIVPROC glad_glGetTexParameterIiv
     * }
     */
    public static void glad_glGetTexParameterIiv(MemorySegment varValue) {
        glad_glGetTexParameterIiv$constants.SEGMENT.set(glad_glGetTexParameterIiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetTexParameterIiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetTexParameterIiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXPARAMETERIIVPROC glad_debug_glGetTexParameterIiv
     * }
     */
    public static AddressLayout glad_debug_glGetTexParameterIiv$layout() {
        return glad_debug_glGetTexParameterIiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXPARAMETERIIVPROC glad_debug_glGetTexParameterIiv
     * }
     */
    public static MemorySegment glad_debug_glGetTexParameterIiv$segment() {
        return glad_debug_glGetTexParameterIiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXPARAMETERIIVPROC glad_debug_glGetTexParameterIiv
     * }
     */
    public static MemorySegment glad_debug_glGetTexParameterIiv() {
        return glad_debug_glGetTexParameterIiv$constants.SEGMENT.get(glad_debug_glGetTexParameterIiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXPARAMETERIIVPROC glad_debug_glGetTexParameterIiv
     * }
     */
    public static void glad_debug_glGetTexParameterIiv(MemorySegment varValue) {
        glad_debug_glGetTexParameterIiv$constants.SEGMENT.set(glad_debug_glGetTexParameterIiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetTexParameterIivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetTexParameterIivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXPARAMETERIIVEXTPROC glad_glGetTexParameterIivEXT
     * }
     */
    public static AddressLayout glad_glGetTexParameterIivEXT$layout() {
        return glad_glGetTexParameterIivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXPARAMETERIIVEXTPROC glad_glGetTexParameterIivEXT
     * }
     */
    public static MemorySegment glad_glGetTexParameterIivEXT$segment() {
        return glad_glGetTexParameterIivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXPARAMETERIIVEXTPROC glad_glGetTexParameterIivEXT
     * }
     */
    public static MemorySegment glad_glGetTexParameterIivEXT() {
        return glad_glGetTexParameterIivEXT$constants.SEGMENT.get(glad_glGetTexParameterIivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXPARAMETERIIVEXTPROC glad_glGetTexParameterIivEXT
     * }
     */
    public static void glad_glGetTexParameterIivEXT(MemorySegment varValue) {
        glad_glGetTexParameterIivEXT$constants.SEGMENT.set(glad_glGetTexParameterIivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetTexParameterIivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetTexParameterIivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXPARAMETERIIVEXTPROC glad_debug_glGetTexParameterIivEXT
     * }
     */
    public static AddressLayout glad_debug_glGetTexParameterIivEXT$layout() {
        return glad_debug_glGetTexParameterIivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXPARAMETERIIVEXTPROC glad_debug_glGetTexParameterIivEXT
     * }
     */
    public static MemorySegment glad_debug_glGetTexParameterIivEXT$segment() {
        return glad_debug_glGetTexParameterIivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXPARAMETERIIVEXTPROC glad_debug_glGetTexParameterIivEXT
     * }
     */
    public static MemorySegment glad_debug_glGetTexParameterIivEXT() {
        return glad_debug_glGetTexParameterIivEXT$constants.SEGMENT.get(glad_debug_glGetTexParameterIivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXPARAMETERIIVEXTPROC glad_debug_glGetTexParameterIivEXT
     * }
     */
    public static void glad_debug_glGetTexParameterIivEXT(MemorySegment varValue) {
        glad_debug_glGetTexParameterIivEXT$constants.SEGMENT.set(glad_debug_glGetTexParameterIivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetTexParameterIuiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetTexParameterIuiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXPARAMETERIUIVPROC glad_glGetTexParameterIuiv
     * }
     */
    public static AddressLayout glad_glGetTexParameterIuiv$layout() {
        return glad_glGetTexParameterIuiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXPARAMETERIUIVPROC glad_glGetTexParameterIuiv
     * }
     */
    public static MemorySegment glad_glGetTexParameterIuiv$segment() {
        return glad_glGetTexParameterIuiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXPARAMETERIUIVPROC glad_glGetTexParameterIuiv
     * }
     */
    public static MemorySegment glad_glGetTexParameterIuiv() {
        return glad_glGetTexParameterIuiv$constants.SEGMENT.get(glad_glGetTexParameterIuiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXPARAMETERIUIVPROC glad_glGetTexParameterIuiv
     * }
     */
    public static void glad_glGetTexParameterIuiv(MemorySegment varValue) {
        glad_glGetTexParameterIuiv$constants.SEGMENT.set(glad_glGetTexParameterIuiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetTexParameterIuiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetTexParameterIuiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXPARAMETERIUIVPROC glad_debug_glGetTexParameterIuiv
     * }
     */
    public static AddressLayout glad_debug_glGetTexParameterIuiv$layout() {
        return glad_debug_glGetTexParameterIuiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXPARAMETERIUIVPROC glad_debug_glGetTexParameterIuiv
     * }
     */
    public static MemorySegment glad_debug_glGetTexParameterIuiv$segment() {
        return glad_debug_glGetTexParameterIuiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXPARAMETERIUIVPROC glad_debug_glGetTexParameterIuiv
     * }
     */
    public static MemorySegment glad_debug_glGetTexParameterIuiv() {
        return glad_debug_glGetTexParameterIuiv$constants.SEGMENT.get(glad_debug_glGetTexParameterIuiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXPARAMETERIUIVPROC glad_debug_glGetTexParameterIuiv
     * }
     */
    public static void glad_debug_glGetTexParameterIuiv(MemorySegment varValue) {
        glad_debug_glGetTexParameterIuiv$constants.SEGMENT.set(glad_debug_glGetTexParameterIuiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetTexParameterIuivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetTexParameterIuivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXPARAMETERIUIVEXTPROC glad_glGetTexParameterIuivEXT
     * }
     */
    public static AddressLayout glad_glGetTexParameterIuivEXT$layout() {
        return glad_glGetTexParameterIuivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXPARAMETERIUIVEXTPROC glad_glGetTexParameterIuivEXT
     * }
     */
    public static MemorySegment glad_glGetTexParameterIuivEXT$segment() {
        return glad_glGetTexParameterIuivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXPARAMETERIUIVEXTPROC glad_glGetTexParameterIuivEXT
     * }
     */
    public static MemorySegment glad_glGetTexParameterIuivEXT() {
        return glad_glGetTexParameterIuivEXT$constants.SEGMENT.get(glad_glGetTexParameterIuivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXPARAMETERIUIVEXTPROC glad_glGetTexParameterIuivEXT
     * }
     */
    public static void glad_glGetTexParameterIuivEXT(MemorySegment varValue) {
        glad_glGetTexParameterIuivEXT$constants.SEGMENT.set(glad_glGetTexParameterIuivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetTexParameterIuivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetTexParameterIuivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXPARAMETERIUIVEXTPROC glad_debug_glGetTexParameterIuivEXT
     * }
     */
    public static AddressLayout glad_debug_glGetTexParameterIuivEXT$layout() {
        return glad_debug_glGetTexParameterIuivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXPARAMETERIUIVEXTPROC glad_debug_glGetTexParameterIuivEXT
     * }
     */
    public static MemorySegment glad_debug_glGetTexParameterIuivEXT$segment() {
        return glad_debug_glGetTexParameterIuivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXPARAMETERIUIVEXTPROC glad_debug_glGetTexParameterIuivEXT
     * }
     */
    public static MemorySegment glad_debug_glGetTexParameterIuivEXT() {
        return glad_debug_glGetTexParameterIuivEXT$constants.SEGMENT.get(glad_debug_glGetTexParameterIuivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXPARAMETERIUIVEXTPROC glad_debug_glGetTexParameterIuivEXT
     * }
     */
    public static void glad_debug_glGetTexParameterIuivEXT(MemorySegment varValue) {
        glad_debug_glGetTexParameterIuivEXT$constants.SEGMENT.set(glad_debug_glGetTexParameterIuivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetTexParameterfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetTexParameterfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXPARAMETERFVPROC glad_glGetTexParameterfv
     * }
     */
    public static AddressLayout glad_glGetTexParameterfv$layout() {
        return glad_glGetTexParameterfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXPARAMETERFVPROC glad_glGetTexParameterfv
     * }
     */
    public static MemorySegment glad_glGetTexParameterfv$segment() {
        return glad_glGetTexParameterfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXPARAMETERFVPROC glad_glGetTexParameterfv
     * }
     */
    public static MemorySegment glad_glGetTexParameterfv() {
        return glad_glGetTexParameterfv$constants.SEGMENT.get(glad_glGetTexParameterfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXPARAMETERFVPROC glad_glGetTexParameterfv
     * }
     */
    public static void glad_glGetTexParameterfv(MemorySegment varValue) {
        glad_glGetTexParameterfv$constants.SEGMENT.set(glad_glGetTexParameterfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetTexParameterfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetTexParameterfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXPARAMETERFVPROC glad_debug_glGetTexParameterfv
     * }
     */
    public static AddressLayout glad_debug_glGetTexParameterfv$layout() {
        return glad_debug_glGetTexParameterfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXPARAMETERFVPROC glad_debug_glGetTexParameterfv
     * }
     */
    public static MemorySegment glad_debug_glGetTexParameterfv$segment() {
        return glad_debug_glGetTexParameterfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXPARAMETERFVPROC glad_debug_glGetTexParameterfv
     * }
     */
    public static MemorySegment glad_debug_glGetTexParameterfv() {
        return glad_debug_glGetTexParameterfv$constants.SEGMENT.get(glad_debug_glGetTexParameterfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXPARAMETERFVPROC glad_debug_glGetTexParameterfv
     * }
     */
    public static void glad_debug_glGetTexParameterfv(MemorySegment varValue) {
        glad_debug_glGetTexParameterfv$constants.SEGMENT.set(glad_debug_glGetTexParameterfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetTexParameteriv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetTexParameteriv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXPARAMETERIVPROC glad_glGetTexParameteriv
     * }
     */
    public static AddressLayout glad_glGetTexParameteriv$layout() {
        return glad_glGetTexParameteriv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXPARAMETERIVPROC glad_glGetTexParameteriv
     * }
     */
    public static MemorySegment glad_glGetTexParameteriv$segment() {
        return glad_glGetTexParameteriv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXPARAMETERIVPROC glad_glGetTexParameteriv
     * }
     */
    public static MemorySegment glad_glGetTexParameteriv() {
        return glad_glGetTexParameteriv$constants.SEGMENT.get(glad_glGetTexParameteriv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXPARAMETERIVPROC glad_glGetTexParameteriv
     * }
     */
    public static void glad_glGetTexParameteriv(MemorySegment varValue) {
        glad_glGetTexParameteriv$constants.SEGMENT.set(glad_glGetTexParameteriv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetTexParameteriv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetTexParameteriv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXPARAMETERIVPROC glad_debug_glGetTexParameteriv
     * }
     */
    public static AddressLayout glad_debug_glGetTexParameteriv$layout() {
        return glad_debug_glGetTexParameteriv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXPARAMETERIVPROC glad_debug_glGetTexParameteriv
     * }
     */
    public static MemorySegment glad_debug_glGetTexParameteriv$segment() {
        return glad_debug_glGetTexParameteriv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXPARAMETERIVPROC glad_debug_glGetTexParameteriv
     * }
     */
    public static MemorySegment glad_debug_glGetTexParameteriv() {
        return glad_debug_glGetTexParameteriv$constants.SEGMENT.get(glad_debug_glGetTexParameteriv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXPARAMETERIVPROC glad_debug_glGetTexParameteriv
     * }
     */
    public static void glad_debug_glGetTexParameteriv(MemorySegment varValue) {
        glad_debug_glGetTexParameteriv$constants.SEGMENT.set(glad_debug_glGetTexParameteriv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetTextureImage$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetTextureImage").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREIMAGEPROC glad_glGetTextureImage
     * }
     */
    public static AddressLayout glad_glGetTextureImage$layout() {
        return glad_glGetTextureImage$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREIMAGEPROC glad_glGetTextureImage
     * }
     */
    public static MemorySegment glad_glGetTextureImage$segment() {
        return glad_glGetTextureImage$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREIMAGEPROC glad_glGetTextureImage
     * }
     */
    public static MemorySegment glad_glGetTextureImage() {
        return glad_glGetTextureImage$constants.SEGMENT.get(glad_glGetTextureImage$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREIMAGEPROC glad_glGetTextureImage
     * }
     */
    public static void glad_glGetTextureImage(MemorySegment varValue) {
        glad_glGetTextureImage$constants.SEGMENT.set(glad_glGetTextureImage$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetTextureImage$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetTextureImage").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREIMAGEPROC glad_debug_glGetTextureImage
     * }
     */
    public static AddressLayout glad_debug_glGetTextureImage$layout() {
        return glad_debug_glGetTextureImage$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREIMAGEPROC glad_debug_glGetTextureImage
     * }
     */
    public static MemorySegment glad_debug_glGetTextureImage$segment() {
        return glad_debug_glGetTextureImage$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREIMAGEPROC glad_debug_glGetTextureImage
     * }
     */
    public static MemorySegment glad_debug_glGetTextureImage() {
        return glad_debug_glGetTextureImage$constants.SEGMENT.get(glad_debug_glGetTextureImage$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREIMAGEPROC glad_debug_glGetTextureImage
     * }
     */
    public static void glad_debug_glGetTextureImage(MemorySegment varValue) {
        glad_debug_glGetTextureImage$constants.SEGMENT.set(glad_debug_glGetTextureImage$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetTextureImageEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetTextureImageEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREIMAGEEXTPROC glad_glGetTextureImageEXT
     * }
     */
    public static AddressLayout glad_glGetTextureImageEXT$layout() {
        return glad_glGetTextureImageEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREIMAGEEXTPROC glad_glGetTextureImageEXT
     * }
     */
    public static MemorySegment glad_glGetTextureImageEXT$segment() {
        return glad_glGetTextureImageEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREIMAGEEXTPROC glad_glGetTextureImageEXT
     * }
     */
    public static MemorySegment glad_glGetTextureImageEXT() {
        return glad_glGetTextureImageEXT$constants.SEGMENT.get(glad_glGetTextureImageEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREIMAGEEXTPROC glad_glGetTextureImageEXT
     * }
     */
    public static void glad_glGetTextureImageEXT(MemorySegment varValue) {
        glad_glGetTextureImageEXT$constants.SEGMENT.set(glad_glGetTextureImageEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetTextureImageEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetTextureImageEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREIMAGEEXTPROC glad_debug_glGetTextureImageEXT
     * }
     */
    public static AddressLayout glad_debug_glGetTextureImageEXT$layout() {
        return glad_debug_glGetTextureImageEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREIMAGEEXTPROC glad_debug_glGetTextureImageEXT
     * }
     */
    public static MemorySegment glad_debug_glGetTextureImageEXT$segment() {
        return glad_debug_glGetTextureImageEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREIMAGEEXTPROC glad_debug_glGetTextureImageEXT
     * }
     */
    public static MemorySegment glad_debug_glGetTextureImageEXT() {
        return glad_debug_glGetTextureImageEXT$constants.SEGMENT.get(glad_debug_glGetTextureImageEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREIMAGEEXTPROC glad_debug_glGetTextureImageEXT
     * }
     */
    public static void glad_debug_glGetTextureImageEXT(MemorySegment varValue) {
        glad_debug_glGetTextureImageEXT$constants.SEGMENT.set(glad_debug_glGetTextureImageEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetTextureLevelParameterfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetTextureLevelParameterfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTURELEVELPARAMETERFVPROC glad_glGetTextureLevelParameterfv
     * }
     */
    public static AddressLayout glad_glGetTextureLevelParameterfv$layout() {
        return glad_glGetTextureLevelParameterfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTURELEVELPARAMETERFVPROC glad_glGetTextureLevelParameterfv
     * }
     */
    public static MemorySegment glad_glGetTextureLevelParameterfv$segment() {
        return glad_glGetTextureLevelParameterfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTURELEVELPARAMETERFVPROC glad_glGetTextureLevelParameterfv
     * }
     */
    public static MemorySegment glad_glGetTextureLevelParameterfv() {
        return glad_glGetTextureLevelParameterfv$constants.SEGMENT.get(glad_glGetTextureLevelParameterfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTURELEVELPARAMETERFVPROC glad_glGetTextureLevelParameterfv
     * }
     */
    public static void glad_glGetTextureLevelParameterfv(MemorySegment varValue) {
        glad_glGetTextureLevelParameterfv$constants.SEGMENT.set(glad_glGetTextureLevelParameterfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetTextureLevelParameterfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetTextureLevelParameterfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTURELEVELPARAMETERFVPROC glad_debug_glGetTextureLevelParameterfv
     * }
     */
    public static AddressLayout glad_debug_glGetTextureLevelParameterfv$layout() {
        return glad_debug_glGetTextureLevelParameterfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTURELEVELPARAMETERFVPROC glad_debug_glGetTextureLevelParameterfv
     * }
     */
    public static MemorySegment glad_debug_glGetTextureLevelParameterfv$segment() {
        return glad_debug_glGetTextureLevelParameterfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTURELEVELPARAMETERFVPROC glad_debug_glGetTextureLevelParameterfv
     * }
     */
    public static MemorySegment glad_debug_glGetTextureLevelParameterfv() {
        return glad_debug_glGetTextureLevelParameterfv$constants.SEGMENT.get(glad_debug_glGetTextureLevelParameterfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTURELEVELPARAMETERFVPROC glad_debug_glGetTextureLevelParameterfv
     * }
     */
    public static void glad_debug_glGetTextureLevelParameterfv(MemorySegment varValue) {
        glad_debug_glGetTextureLevelParameterfv$constants.SEGMENT.set(glad_debug_glGetTextureLevelParameterfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetTextureLevelParameterfvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetTextureLevelParameterfvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC glad_glGetTextureLevelParameterfvEXT
     * }
     */
    public static AddressLayout glad_glGetTextureLevelParameterfvEXT$layout() {
        return glad_glGetTextureLevelParameterfvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC glad_glGetTextureLevelParameterfvEXT
     * }
     */
    public static MemorySegment glad_glGetTextureLevelParameterfvEXT$segment() {
        return glad_glGetTextureLevelParameterfvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC glad_glGetTextureLevelParameterfvEXT
     * }
     */
    public static MemorySegment glad_glGetTextureLevelParameterfvEXT() {
        return glad_glGetTextureLevelParameterfvEXT$constants.SEGMENT.get(glad_glGetTextureLevelParameterfvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC glad_glGetTextureLevelParameterfvEXT
     * }
     */
    public static void glad_glGetTextureLevelParameterfvEXT(MemorySegment varValue) {
        glad_glGetTextureLevelParameterfvEXT$constants.SEGMENT.set(glad_glGetTextureLevelParameterfvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetTextureLevelParameterfvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetTextureLevelParameterfvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC glad_debug_glGetTextureLevelParameterfvEXT
     * }
     */
    public static AddressLayout glad_debug_glGetTextureLevelParameterfvEXT$layout() {
        return glad_debug_glGetTextureLevelParameterfvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC glad_debug_glGetTextureLevelParameterfvEXT
     * }
     */
    public static MemorySegment glad_debug_glGetTextureLevelParameterfvEXT$segment() {
        return glad_debug_glGetTextureLevelParameterfvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC glad_debug_glGetTextureLevelParameterfvEXT
     * }
     */
    public static MemorySegment glad_debug_glGetTextureLevelParameterfvEXT() {
        return glad_debug_glGetTextureLevelParameterfvEXT$constants.SEGMENT.get(glad_debug_glGetTextureLevelParameterfvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC glad_debug_glGetTextureLevelParameterfvEXT
     * }
     */
    public static void glad_debug_glGetTextureLevelParameterfvEXT(MemorySegment varValue) {
        glad_debug_glGetTextureLevelParameterfvEXT$constants.SEGMENT.set(glad_debug_glGetTextureLevelParameterfvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetTextureLevelParameteriv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetTextureLevelParameteriv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTURELEVELPARAMETERIVPROC glad_glGetTextureLevelParameteriv
     * }
     */
    public static AddressLayout glad_glGetTextureLevelParameteriv$layout() {
        return glad_glGetTextureLevelParameteriv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTURELEVELPARAMETERIVPROC glad_glGetTextureLevelParameteriv
     * }
     */
    public static MemorySegment glad_glGetTextureLevelParameteriv$segment() {
        return glad_glGetTextureLevelParameteriv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTURELEVELPARAMETERIVPROC glad_glGetTextureLevelParameteriv
     * }
     */
    public static MemorySegment glad_glGetTextureLevelParameteriv() {
        return glad_glGetTextureLevelParameteriv$constants.SEGMENT.get(glad_glGetTextureLevelParameteriv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTURELEVELPARAMETERIVPROC glad_glGetTextureLevelParameteriv
     * }
     */
    public static void glad_glGetTextureLevelParameteriv(MemorySegment varValue) {
        glad_glGetTextureLevelParameteriv$constants.SEGMENT.set(glad_glGetTextureLevelParameteriv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetTextureLevelParameteriv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetTextureLevelParameteriv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTURELEVELPARAMETERIVPROC glad_debug_glGetTextureLevelParameteriv
     * }
     */
    public static AddressLayout glad_debug_glGetTextureLevelParameteriv$layout() {
        return glad_debug_glGetTextureLevelParameteriv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTURELEVELPARAMETERIVPROC glad_debug_glGetTextureLevelParameteriv
     * }
     */
    public static MemorySegment glad_debug_glGetTextureLevelParameteriv$segment() {
        return glad_debug_glGetTextureLevelParameteriv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTURELEVELPARAMETERIVPROC glad_debug_glGetTextureLevelParameteriv
     * }
     */
    public static MemorySegment glad_debug_glGetTextureLevelParameteriv() {
        return glad_debug_glGetTextureLevelParameteriv$constants.SEGMENT.get(glad_debug_glGetTextureLevelParameteriv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTURELEVELPARAMETERIVPROC glad_debug_glGetTextureLevelParameteriv
     * }
     */
    public static void glad_debug_glGetTextureLevelParameteriv(MemorySegment varValue) {
        glad_debug_glGetTextureLevelParameteriv$constants.SEGMENT.set(glad_debug_glGetTextureLevelParameteriv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetTextureLevelParameterivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetTextureLevelParameterivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC glad_glGetTextureLevelParameterivEXT
     * }
     */
    public static AddressLayout glad_glGetTextureLevelParameterivEXT$layout() {
        return glad_glGetTextureLevelParameterivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC glad_glGetTextureLevelParameterivEXT
     * }
     */
    public static MemorySegment glad_glGetTextureLevelParameterivEXT$segment() {
        return glad_glGetTextureLevelParameterivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC glad_glGetTextureLevelParameterivEXT
     * }
     */
    public static MemorySegment glad_glGetTextureLevelParameterivEXT() {
        return glad_glGetTextureLevelParameterivEXT$constants.SEGMENT.get(glad_glGetTextureLevelParameterivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC glad_glGetTextureLevelParameterivEXT
     * }
     */
    public static void glad_glGetTextureLevelParameterivEXT(MemorySegment varValue) {
        glad_glGetTextureLevelParameterivEXT$constants.SEGMENT.set(glad_glGetTextureLevelParameterivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetTextureLevelParameterivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetTextureLevelParameterivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC glad_debug_glGetTextureLevelParameterivEXT
     * }
     */
    public static AddressLayout glad_debug_glGetTextureLevelParameterivEXT$layout() {
        return glad_debug_glGetTextureLevelParameterivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC glad_debug_glGetTextureLevelParameterivEXT
     * }
     */
    public static MemorySegment glad_debug_glGetTextureLevelParameterivEXT$segment() {
        return glad_debug_glGetTextureLevelParameterivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC glad_debug_glGetTextureLevelParameterivEXT
     * }
     */
    public static MemorySegment glad_debug_glGetTextureLevelParameterivEXT() {
        return glad_debug_glGetTextureLevelParameterivEXT$constants.SEGMENT.get(glad_debug_glGetTextureLevelParameterivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC glad_debug_glGetTextureLevelParameterivEXT
     * }
     */
    public static void glad_debug_glGetTextureLevelParameterivEXT(MemorySegment varValue) {
        glad_debug_glGetTextureLevelParameterivEXT$constants.SEGMENT.set(glad_debug_glGetTextureLevelParameterivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetTextureParameterIiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetTextureParameterIiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERIIVPROC glad_glGetTextureParameterIiv
     * }
     */
    public static AddressLayout glad_glGetTextureParameterIiv$layout() {
        return glad_glGetTextureParameterIiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERIIVPROC glad_glGetTextureParameterIiv
     * }
     */
    public static MemorySegment glad_glGetTextureParameterIiv$segment() {
        return glad_glGetTextureParameterIiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERIIVPROC glad_glGetTextureParameterIiv
     * }
     */
    public static MemorySegment glad_glGetTextureParameterIiv() {
        return glad_glGetTextureParameterIiv$constants.SEGMENT.get(glad_glGetTextureParameterIiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERIIVPROC glad_glGetTextureParameterIiv
     * }
     */
    public static void glad_glGetTextureParameterIiv(MemorySegment varValue) {
        glad_glGetTextureParameterIiv$constants.SEGMENT.set(glad_glGetTextureParameterIiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetTextureParameterIiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetTextureParameterIiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERIIVPROC glad_debug_glGetTextureParameterIiv
     * }
     */
    public static AddressLayout glad_debug_glGetTextureParameterIiv$layout() {
        return glad_debug_glGetTextureParameterIiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERIIVPROC glad_debug_glGetTextureParameterIiv
     * }
     */
    public static MemorySegment glad_debug_glGetTextureParameterIiv$segment() {
        return glad_debug_glGetTextureParameterIiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERIIVPROC glad_debug_glGetTextureParameterIiv
     * }
     */
    public static MemorySegment glad_debug_glGetTextureParameterIiv() {
        return glad_debug_glGetTextureParameterIiv$constants.SEGMENT.get(glad_debug_glGetTextureParameterIiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERIIVPROC glad_debug_glGetTextureParameterIiv
     * }
     */
    public static void glad_debug_glGetTextureParameterIiv(MemorySegment varValue) {
        glad_debug_glGetTextureParameterIiv$constants.SEGMENT.set(glad_debug_glGetTextureParameterIiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetTextureParameterIivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetTextureParameterIivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERIIVEXTPROC glad_glGetTextureParameterIivEXT
     * }
     */
    public static AddressLayout glad_glGetTextureParameterIivEXT$layout() {
        return glad_glGetTextureParameterIivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERIIVEXTPROC glad_glGetTextureParameterIivEXT
     * }
     */
    public static MemorySegment glad_glGetTextureParameterIivEXT$segment() {
        return glad_glGetTextureParameterIivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERIIVEXTPROC glad_glGetTextureParameterIivEXT
     * }
     */
    public static MemorySegment glad_glGetTextureParameterIivEXT() {
        return glad_glGetTextureParameterIivEXT$constants.SEGMENT.get(glad_glGetTextureParameterIivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERIIVEXTPROC glad_glGetTextureParameterIivEXT
     * }
     */
    public static void glad_glGetTextureParameterIivEXT(MemorySegment varValue) {
        glad_glGetTextureParameterIivEXT$constants.SEGMENT.set(glad_glGetTextureParameterIivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetTextureParameterIivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetTextureParameterIivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERIIVEXTPROC glad_debug_glGetTextureParameterIivEXT
     * }
     */
    public static AddressLayout glad_debug_glGetTextureParameterIivEXT$layout() {
        return glad_debug_glGetTextureParameterIivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERIIVEXTPROC glad_debug_glGetTextureParameterIivEXT
     * }
     */
    public static MemorySegment glad_debug_glGetTextureParameterIivEXT$segment() {
        return glad_debug_glGetTextureParameterIivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERIIVEXTPROC glad_debug_glGetTextureParameterIivEXT
     * }
     */
    public static MemorySegment glad_debug_glGetTextureParameterIivEXT() {
        return glad_debug_glGetTextureParameterIivEXT$constants.SEGMENT.get(glad_debug_glGetTextureParameterIivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERIIVEXTPROC glad_debug_glGetTextureParameterIivEXT
     * }
     */
    public static void glad_debug_glGetTextureParameterIivEXT(MemorySegment varValue) {
        glad_debug_glGetTextureParameterIivEXT$constants.SEGMENT.set(glad_debug_glGetTextureParameterIivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetTextureParameterIuiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetTextureParameterIuiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERIUIVPROC glad_glGetTextureParameterIuiv
     * }
     */
    public static AddressLayout glad_glGetTextureParameterIuiv$layout() {
        return glad_glGetTextureParameterIuiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERIUIVPROC glad_glGetTextureParameterIuiv
     * }
     */
    public static MemorySegment glad_glGetTextureParameterIuiv$segment() {
        return glad_glGetTextureParameterIuiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERIUIVPROC glad_glGetTextureParameterIuiv
     * }
     */
    public static MemorySegment glad_glGetTextureParameterIuiv() {
        return glad_glGetTextureParameterIuiv$constants.SEGMENT.get(glad_glGetTextureParameterIuiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERIUIVPROC glad_glGetTextureParameterIuiv
     * }
     */
    public static void glad_glGetTextureParameterIuiv(MemorySegment varValue) {
        glad_glGetTextureParameterIuiv$constants.SEGMENT.set(glad_glGetTextureParameterIuiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetTextureParameterIuiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetTextureParameterIuiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERIUIVPROC glad_debug_glGetTextureParameterIuiv
     * }
     */
    public static AddressLayout glad_debug_glGetTextureParameterIuiv$layout() {
        return glad_debug_glGetTextureParameterIuiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERIUIVPROC glad_debug_glGetTextureParameterIuiv
     * }
     */
    public static MemorySegment glad_debug_glGetTextureParameterIuiv$segment() {
        return glad_debug_glGetTextureParameterIuiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERIUIVPROC glad_debug_glGetTextureParameterIuiv
     * }
     */
    public static MemorySegment glad_debug_glGetTextureParameterIuiv() {
        return glad_debug_glGetTextureParameterIuiv$constants.SEGMENT.get(glad_debug_glGetTextureParameterIuiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERIUIVPROC glad_debug_glGetTextureParameterIuiv
     * }
     */
    public static void glad_debug_glGetTextureParameterIuiv(MemorySegment varValue) {
        glad_debug_glGetTextureParameterIuiv$constants.SEGMENT.set(glad_debug_glGetTextureParameterIuiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetTextureParameterIuivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetTextureParameterIuivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERIUIVEXTPROC glad_glGetTextureParameterIuivEXT
     * }
     */
    public static AddressLayout glad_glGetTextureParameterIuivEXT$layout() {
        return glad_glGetTextureParameterIuivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERIUIVEXTPROC glad_glGetTextureParameterIuivEXT
     * }
     */
    public static MemorySegment glad_glGetTextureParameterIuivEXT$segment() {
        return glad_glGetTextureParameterIuivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERIUIVEXTPROC glad_glGetTextureParameterIuivEXT
     * }
     */
    public static MemorySegment glad_glGetTextureParameterIuivEXT() {
        return glad_glGetTextureParameterIuivEXT$constants.SEGMENT.get(glad_glGetTextureParameterIuivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERIUIVEXTPROC glad_glGetTextureParameterIuivEXT
     * }
     */
    public static void glad_glGetTextureParameterIuivEXT(MemorySegment varValue) {
        glad_glGetTextureParameterIuivEXT$constants.SEGMENT.set(glad_glGetTextureParameterIuivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetTextureParameterIuivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetTextureParameterIuivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERIUIVEXTPROC glad_debug_glGetTextureParameterIuivEXT
     * }
     */
    public static AddressLayout glad_debug_glGetTextureParameterIuivEXT$layout() {
        return glad_debug_glGetTextureParameterIuivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERIUIVEXTPROC glad_debug_glGetTextureParameterIuivEXT
     * }
     */
    public static MemorySegment glad_debug_glGetTextureParameterIuivEXT$segment() {
        return glad_debug_glGetTextureParameterIuivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERIUIVEXTPROC glad_debug_glGetTextureParameterIuivEXT
     * }
     */
    public static MemorySegment glad_debug_glGetTextureParameterIuivEXT() {
        return glad_debug_glGetTextureParameterIuivEXT$constants.SEGMENT.get(glad_debug_glGetTextureParameterIuivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERIUIVEXTPROC glad_debug_glGetTextureParameterIuivEXT
     * }
     */
    public static void glad_debug_glGetTextureParameterIuivEXT(MemorySegment varValue) {
        glad_debug_glGetTextureParameterIuivEXT$constants.SEGMENT.set(glad_debug_glGetTextureParameterIuivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetTextureParameterfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetTextureParameterfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERFVPROC glad_glGetTextureParameterfv
     * }
     */
    public static AddressLayout glad_glGetTextureParameterfv$layout() {
        return glad_glGetTextureParameterfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERFVPROC glad_glGetTextureParameterfv
     * }
     */
    public static MemorySegment glad_glGetTextureParameterfv$segment() {
        return glad_glGetTextureParameterfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERFVPROC glad_glGetTextureParameterfv
     * }
     */
    public static MemorySegment glad_glGetTextureParameterfv() {
        return glad_glGetTextureParameterfv$constants.SEGMENT.get(glad_glGetTextureParameterfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERFVPROC glad_glGetTextureParameterfv
     * }
     */
    public static void glad_glGetTextureParameterfv(MemorySegment varValue) {
        glad_glGetTextureParameterfv$constants.SEGMENT.set(glad_glGetTextureParameterfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetTextureParameterfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetTextureParameterfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERFVPROC glad_debug_glGetTextureParameterfv
     * }
     */
    public static AddressLayout glad_debug_glGetTextureParameterfv$layout() {
        return glad_debug_glGetTextureParameterfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERFVPROC glad_debug_glGetTextureParameterfv
     * }
     */
    public static MemorySegment glad_debug_glGetTextureParameterfv$segment() {
        return glad_debug_glGetTextureParameterfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERFVPROC glad_debug_glGetTextureParameterfv
     * }
     */
    public static MemorySegment glad_debug_glGetTextureParameterfv() {
        return glad_debug_glGetTextureParameterfv$constants.SEGMENT.get(glad_debug_glGetTextureParameterfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERFVPROC glad_debug_glGetTextureParameterfv
     * }
     */
    public static void glad_debug_glGetTextureParameterfv(MemorySegment varValue) {
        glad_debug_glGetTextureParameterfv$constants.SEGMENT.set(glad_debug_glGetTextureParameterfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetTextureParameterfvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetTextureParameterfvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERFVEXTPROC glad_glGetTextureParameterfvEXT
     * }
     */
    public static AddressLayout glad_glGetTextureParameterfvEXT$layout() {
        return glad_glGetTextureParameterfvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERFVEXTPROC glad_glGetTextureParameterfvEXT
     * }
     */
    public static MemorySegment glad_glGetTextureParameterfvEXT$segment() {
        return glad_glGetTextureParameterfvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERFVEXTPROC glad_glGetTextureParameterfvEXT
     * }
     */
    public static MemorySegment glad_glGetTextureParameterfvEXT() {
        return glad_glGetTextureParameterfvEXT$constants.SEGMENT.get(glad_glGetTextureParameterfvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERFVEXTPROC glad_glGetTextureParameterfvEXT
     * }
     */
    public static void glad_glGetTextureParameterfvEXT(MemorySegment varValue) {
        glad_glGetTextureParameterfvEXT$constants.SEGMENT.set(glad_glGetTextureParameterfvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetTextureParameterfvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetTextureParameterfvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERFVEXTPROC glad_debug_glGetTextureParameterfvEXT
     * }
     */
    public static AddressLayout glad_debug_glGetTextureParameterfvEXT$layout() {
        return glad_debug_glGetTextureParameterfvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERFVEXTPROC glad_debug_glGetTextureParameterfvEXT
     * }
     */
    public static MemorySegment glad_debug_glGetTextureParameterfvEXT$segment() {
        return glad_debug_glGetTextureParameterfvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERFVEXTPROC glad_debug_glGetTextureParameterfvEXT
     * }
     */
    public static MemorySegment glad_debug_glGetTextureParameterfvEXT() {
        return glad_debug_glGetTextureParameterfvEXT$constants.SEGMENT.get(glad_debug_glGetTextureParameterfvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERFVEXTPROC glad_debug_glGetTextureParameterfvEXT
     * }
     */
    public static void glad_debug_glGetTextureParameterfvEXT(MemorySegment varValue) {
        glad_debug_glGetTextureParameterfvEXT$constants.SEGMENT.set(glad_debug_glGetTextureParameterfvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetTextureParameteriv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetTextureParameteriv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERIVPROC glad_glGetTextureParameteriv
     * }
     */
    public static AddressLayout glad_glGetTextureParameteriv$layout() {
        return glad_glGetTextureParameteriv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERIVPROC glad_glGetTextureParameteriv
     * }
     */
    public static MemorySegment glad_glGetTextureParameteriv$segment() {
        return glad_glGetTextureParameteriv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERIVPROC glad_glGetTextureParameteriv
     * }
     */
    public static MemorySegment glad_glGetTextureParameteriv() {
        return glad_glGetTextureParameteriv$constants.SEGMENT.get(glad_glGetTextureParameteriv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERIVPROC glad_glGetTextureParameteriv
     * }
     */
    public static void glad_glGetTextureParameteriv(MemorySegment varValue) {
        glad_glGetTextureParameteriv$constants.SEGMENT.set(glad_glGetTextureParameteriv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetTextureParameteriv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetTextureParameteriv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERIVPROC glad_debug_glGetTextureParameteriv
     * }
     */
    public static AddressLayout glad_debug_glGetTextureParameteriv$layout() {
        return glad_debug_glGetTextureParameteriv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERIVPROC glad_debug_glGetTextureParameteriv
     * }
     */
    public static MemorySegment glad_debug_glGetTextureParameteriv$segment() {
        return glad_debug_glGetTextureParameteriv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERIVPROC glad_debug_glGetTextureParameteriv
     * }
     */
    public static MemorySegment glad_debug_glGetTextureParameteriv() {
        return glad_debug_glGetTextureParameteriv$constants.SEGMENT.get(glad_debug_glGetTextureParameteriv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERIVPROC glad_debug_glGetTextureParameteriv
     * }
     */
    public static void glad_debug_glGetTextureParameteriv(MemorySegment varValue) {
        glad_debug_glGetTextureParameteriv$constants.SEGMENT.set(glad_debug_glGetTextureParameteriv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetTextureParameterivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetTextureParameterivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERIVEXTPROC glad_glGetTextureParameterivEXT
     * }
     */
    public static AddressLayout glad_glGetTextureParameterivEXT$layout() {
        return glad_glGetTextureParameterivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERIVEXTPROC glad_glGetTextureParameterivEXT
     * }
     */
    public static MemorySegment glad_glGetTextureParameterivEXT$segment() {
        return glad_glGetTextureParameterivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERIVEXTPROC glad_glGetTextureParameterivEXT
     * }
     */
    public static MemorySegment glad_glGetTextureParameterivEXT() {
        return glad_glGetTextureParameterivEXT$constants.SEGMENT.get(glad_glGetTextureParameterivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERIVEXTPROC glad_glGetTextureParameterivEXT
     * }
     */
    public static void glad_glGetTextureParameterivEXT(MemorySegment varValue) {
        glad_glGetTextureParameterivEXT$constants.SEGMENT.set(glad_glGetTextureParameterivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetTextureParameterivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetTextureParameterivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERIVEXTPROC glad_debug_glGetTextureParameterivEXT
     * }
     */
    public static AddressLayout glad_debug_glGetTextureParameterivEXT$layout() {
        return glad_debug_glGetTextureParameterivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERIVEXTPROC glad_debug_glGetTextureParameterivEXT
     * }
     */
    public static MemorySegment glad_debug_glGetTextureParameterivEXT$segment() {
        return glad_debug_glGetTextureParameterivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERIVEXTPROC glad_debug_glGetTextureParameterivEXT
     * }
     */
    public static MemorySegment glad_debug_glGetTextureParameterivEXT() {
        return glad_debug_glGetTextureParameterivEXT$constants.SEGMENT.get(glad_debug_glGetTextureParameterivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTUREPARAMETERIVEXTPROC glad_debug_glGetTextureParameterivEXT
     * }
     */
    public static void glad_debug_glGetTextureParameterivEXT(MemorySegment varValue) {
        glad_debug_glGetTextureParameterivEXT$constants.SEGMENT.set(glad_debug_glGetTextureParameterivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetTextureSubImage$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetTextureSubImage").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTURESUBIMAGEPROC glad_glGetTextureSubImage
     * }
     */
    public static AddressLayout glad_glGetTextureSubImage$layout() {
        return glad_glGetTextureSubImage$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTURESUBIMAGEPROC glad_glGetTextureSubImage
     * }
     */
    public static MemorySegment glad_glGetTextureSubImage$segment() {
        return glad_glGetTextureSubImage$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTURESUBIMAGEPROC glad_glGetTextureSubImage
     * }
     */
    public static MemorySegment glad_glGetTextureSubImage() {
        return glad_glGetTextureSubImage$constants.SEGMENT.get(glad_glGetTextureSubImage$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTURESUBIMAGEPROC glad_glGetTextureSubImage
     * }
     */
    public static void glad_glGetTextureSubImage(MemorySegment varValue) {
        glad_glGetTextureSubImage$constants.SEGMENT.set(glad_glGetTextureSubImage$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetTextureSubImage$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetTextureSubImage").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTURESUBIMAGEPROC glad_debug_glGetTextureSubImage
     * }
     */
    public static AddressLayout glad_debug_glGetTextureSubImage$layout() {
        return glad_debug_glGetTextureSubImage$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTURESUBIMAGEPROC glad_debug_glGetTextureSubImage
     * }
     */
    public static MemorySegment glad_debug_glGetTextureSubImage$segment() {
        return glad_debug_glGetTextureSubImage$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTURESUBIMAGEPROC glad_debug_glGetTextureSubImage
     * }
     */
    public static MemorySegment glad_debug_glGetTextureSubImage() {
        return glad_debug_glGetTextureSubImage$constants.SEGMENT.get(glad_debug_glGetTextureSubImage$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTEXTURESUBIMAGEPROC glad_debug_glGetTextureSubImage
     * }
     */
    public static void glad_debug_glGetTextureSubImage(MemorySegment varValue) {
        glad_debug_glGetTextureSubImage$constants.SEGMENT.set(glad_debug_glGetTextureSubImage$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetTrackMatrixivNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetTrackMatrixivNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRACKMATRIXIVNVPROC glad_glGetTrackMatrixivNV
     * }
     */
    public static AddressLayout glad_glGetTrackMatrixivNV$layout() {
        return glad_glGetTrackMatrixivNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRACKMATRIXIVNVPROC glad_glGetTrackMatrixivNV
     * }
     */
    public static MemorySegment glad_glGetTrackMatrixivNV$segment() {
        return glad_glGetTrackMatrixivNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRACKMATRIXIVNVPROC glad_glGetTrackMatrixivNV
     * }
     */
    public static MemorySegment glad_glGetTrackMatrixivNV() {
        return glad_glGetTrackMatrixivNV$constants.SEGMENT.get(glad_glGetTrackMatrixivNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRACKMATRIXIVNVPROC glad_glGetTrackMatrixivNV
     * }
     */
    public static void glad_glGetTrackMatrixivNV(MemorySegment varValue) {
        glad_glGetTrackMatrixivNV$constants.SEGMENT.set(glad_glGetTrackMatrixivNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetTrackMatrixivNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetTrackMatrixivNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRACKMATRIXIVNVPROC glad_debug_glGetTrackMatrixivNV
     * }
     */
    public static AddressLayout glad_debug_glGetTrackMatrixivNV$layout() {
        return glad_debug_glGetTrackMatrixivNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRACKMATRIXIVNVPROC glad_debug_glGetTrackMatrixivNV
     * }
     */
    public static MemorySegment glad_debug_glGetTrackMatrixivNV$segment() {
        return glad_debug_glGetTrackMatrixivNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRACKMATRIXIVNVPROC glad_debug_glGetTrackMatrixivNV
     * }
     */
    public static MemorySegment glad_debug_glGetTrackMatrixivNV() {
        return glad_debug_glGetTrackMatrixivNV$constants.SEGMENT.get(glad_debug_glGetTrackMatrixivNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRACKMATRIXIVNVPROC glad_debug_glGetTrackMatrixivNV
     * }
     */
    public static void glad_debug_glGetTrackMatrixivNV(MemorySegment varValue) {
        glad_debug_glGetTrackMatrixivNV$constants.SEGMENT.set(glad_debug_glGetTrackMatrixivNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetTransformFeedbackVarying$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetTransformFeedbackVarying").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRANSFORMFEEDBACKVARYINGPROC glad_glGetTransformFeedbackVarying
     * }
     */
    public static AddressLayout glad_glGetTransformFeedbackVarying$layout() {
        return glad_glGetTransformFeedbackVarying$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRANSFORMFEEDBACKVARYINGPROC glad_glGetTransformFeedbackVarying
     * }
     */
    public static MemorySegment glad_glGetTransformFeedbackVarying$segment() {
        return glad_glGetTransformFeedbackVarying$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRANSFORMFEEDBACKVARYINGPROC glad_glGetTransformFeedbackVarying
     * }
     */
    public static MemorySegment glad_glGetTransformFeedbackVarying() {
        return glad_glGetTransformFeedbackVarying$constants.SEGMENT.get(glad_glGetTransformFeedbackVarying$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRANSFORMFEEDBACKVARYINGPROC glad_glGetTransformFeedbackVarying
     * }
     */
    public static void glad_glGetTransformFeedbackVarying(MemorySegment varValue) {
        glad_glGetTransformFeedbackVarying$constants.SEGMENT.set(glad_glGetTransformFeedbackVarying$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetTransformFeedbackVarying$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetTransformFeedbackVarying").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRANSFORMFEEDBACKVARYINGPROC glad_debug_glGetTransformFeedbackVarying
     * }
     */
    public static AddressLayout glad_debug_glGetTransformFeedbackVarying$layout() {
        return glad_debug_glGetTransformFeedbackVarying$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRANSFORMFEEDBACKVARYINGPROC glad_debug_glGetTransformFeedbackVarying
     * }
     */
    public static MemorySegment glad_debug_glGetTransformFeedbackVarying$segment() {
        return glad_debug_glGetTransformFeedbackVarying$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRANSFORMFEEDBACKVARYINGPROC glad_debug_glGetTransformFeedbackVarying
     * }
     */
    public static MemorySegment glad_debug_glGetTransformFeedbackVarying() {
        return glad_debug_glGetTransformFeedbackVarying$constants.SEGMENT.get(glad_debug_glGetTransformFeedbackVarying$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRANSFORMFEEDBACKVARYINGPROC glad_debug_glGetTransformFeedbackVarying
     * }
     */
    public static void glad_debug_glGetTransformFeedbackVarying(MemorySegment varValue) {
        glad_debug_glGetTransformFeedbackVarying$constants.SEGMENT.set(glad_debug_glGetTransformFeedbackVarying$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetTransformFeedbackVaryingEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetTransformFeedbackVaryingEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC glad_glGetTransformFeedbackVaryingEXT
     * }
     */
    public static AddressLayout glad_glGetTransformFeedbackVaryingEXT$layout() {
        return glad_glGetTransformFeedbackVaryingEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC glad_glGetTransformFeedbackVaryingEXT
     * }
     */
    public static MemorySegment glad_glGetTransformFeedbackVaryingEXT$segment() {
        return glad_glGetTransformFeedbackVaryingEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC glad_glGetTransformFeedbackVaryingEXT
     * }
     */
    public static MemorySegment glad_glGetTransformFeedbackVaryingEXT() {
        return glad_glGetTransformFeedbackVaryingEXT$constants.SEGMENT.get(glad_glGetTransformFeedbackVaryingEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC glad_glGetTransformFeedbackVaryingEXT
     * }
     */
    public static void glad_glGetTransformFeedbackVaryingEXT(MemorySegment varValue) {
        glad_glGetTransformFeedbackVaryingEXT$constants.SEGMENT.set(glad_glGetTransformFeedbackVaryingEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetTransformFeedbackVaryingEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetTransformFeedbackVaryingEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC glad_debug_glGetTransformFeedbackVaryingEXT
     * }
     */
    public static AddressLayout glad_debug_glGetTransformFeedbackVaryingEXT$layout() {
        return glad_debug_glGetTransformFeedbackVaryingEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC glad_debug_glGetTransformFeedbackVaryingEXT
     * }
     */
    public static MemorySegment glad_debug_glGetTransformFeedbackVaryingEXT$segment() {
        return glad_debug_glGetTransformFeedbackVaryingEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC glad_debug_glGetTransformFeedbackVaryingEXT
     * }
     */
    public static MemorySegment glad_debug_glGetTransformFeedbackVaryingEXT() {
        return glad_debug_glGetTransformFeedbackVaryingEXT$constants.SEGMENT.get(glad_debug_glGetTransformFeedbackVaryingEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC glad_debug_glGetTransformFeedbackVaryingEXT
     * }
     */
    public static void glad_debug_glGetTransformFeedbackVaryingEXT(MemorySegment varValue) {
        glad_debug_glGetTransformFeedbackVaryingEXT$constants.SEGMENT.set(glad_debug_glGetTransformFeedbackVaryingEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetTransformFeedbackVaryingNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetTransformFeedbackVaryingNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC glad_glGetTransformFeedbackVaryingNV
     * }
     */
    public static AddressLayout glad_glGetTransformFeedbackVaryingNV$layout() {
        return glad_glGetTransformFeedbackVaryingNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC glad_glGetTransformFeedbackVaryingNV
     * }
     */
    public static MemorySegment glad_glGetTransformFeedbackVaryingNV$segment() {
        return glad_glGetTransformFeedbackVaryingNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC glad_glGetTransformFeedbackVaryingNV
     * }
     */
    public static MemorySegment glad_glGetTransformFeedbackVaryingNV() {
        return glad_glGetTransformFeedbackVaryingNV$constants.SEGMENT.get(glad_glGetTransformFeedbackVaryingNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC glad_glGetTransformFeedbackVaryingNV
     * }
     */
    public static void glad_glGetTransformFeedbackVaryingNV(MemorySegment varValue) {
        glad_glGetTransformFeedbackVaryingNV$constants.SEGMENT.set(glad_glGetTransformFeedbackVaryingNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetTransformFeedbackVaryingNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetTransformFeedbackVaryingNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC glad_debug_glGetTransformFeedbackVaryingNV
     * }
     */
    public static AddressLayout glad_debug_glGetTransformFeedbackVaryingNV$layout() {
        return glad_debug_glGetTransformFeedbackVaryingNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC glad_debug_glGetTransformFeedbackVaryingNV
     * }
     */
    public static MemorySegment glad_debug_glGetTransformFeedbackVaryingNV$segment() {
        return glad_debug_glGetTransformFeedbackVaryingNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC glad_debug_glGetTransformFeedbackVaryingNV
     * }
     */
    public static MemorySegment glad_debug_glGetTransformFeedbackVaryingNV() {
        return glad_debug_glGetTransformFeedbackVaryingNV$constants.SEGMENT.get(glad_debug_glGetTransformFeedbackVaryingNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC glad_debug_glGetTransformFeedbackVaryingNV
     * }
     */
    public static void glad_debug_glGetTransformFeedbackVaryingNV(MemorySegment varValue) {
        glad_debug_glGetTransformFeedbackVaryingNV$constants.SEGMENT.set(glad_debug_glGetTransformFeedbackVaryingNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetTransformFeedbacki64_v$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetTransformFeedbacki64_v").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRANSFORMFEEDBACKI64_VPROC glad_glGetTransformFeedbacki64_v
     * }
     */
    public static AddressLayout glad_glGetTransformFeedbacki64_v$layout() {
        return glad_glGetTransformFeedbacki64_v$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRANSFORMFEEDBACKI64_VPROC glad_glGetTransformFeedbacki64_v
     * }
     */
    public static MemorySegment glad_glGetTransformFeedbacki64_v$segment() {
        return glad_glGetTransformFeedbacki64_v$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRANSFORMFEEDBACKI64_VPROC glad_glGetTransformFeedbacki64_v
     * }
     */
    public static MemorySegment glad_glGetTransformFeedbacki64_v() {
        return glad_glGetTransformFeedbacki64_v$constants.SEGMENT.get(glad_glGetTransformFeedbacki64_v$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRANSFORMFEEDBACKI64_VPROC glad_glGetTransformFeedbacki64_v
     * }
     */
    public static void glad_glGetTransformFeedbacki64_v(MemorySegment varValue) {
        glad_glGetTransformFeedbacki64_v$constants.SEGMENT.set(glad_glGetTransformFeedbacki64_v$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetTransformFeedbacki64_v$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetTransformFeedbacki64_v").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRANSFORMFEEDBACKI64_VPROC glad_debug_glGetTransformFeedbacki64_v
     * }
     */
    public static AddressLayout glad_debug_glGetTransformFeedbacki64_v$layout() {
        return glad_debug_glGetTransformFeedbacki64_v$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRANSFORMFEEDBACKI64_VPROC glad_debug_glGetTransformFeedbacki64_v
     * }
     */
    public static MemorySegment glad_debug_glGetTransformFeedbacki64_v$segment() {
        return glad_debug_glGetTransformFeedbacki64_v$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRANSFORMFEEDBACKI64_VPROC glad_debug_glGetTransformFeedbacki64_v
     * }
     */
    public static MemorySegment glad_debug_glGetTransformFeedbacki64_v() {
        return glad_debug_glGetTransformFeedbacki64_v$constants.SEGMENT.get(glad_debug_glGetTransformFeedbacki64_v$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRANSFORMFEEDBACKI64_VPROC glad_debug_glGetTransformFeedbacki64_v
     * }
     */
    public static void glad_debug_glGetTransformFeedbacki64_v(MemorySegment varValue) {
        glad_debug_glGetTransformFeedbacki64_v$constants.SEGMENT.set(glad_debug_glGetTransformFeedbacki64_v$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetTransformFeedbacki_v$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetTransformFeedbacki_v").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRANSFORMFEEDBACKI_VPROC glad_glGetTransformFeedbacki_v
     * }
     */
    public static AddressLayout glad_glGetTransformFeedbacki_v$layout() {
        return glad_glGetTransformFeedbacki_v$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRANSFORMFEEDBACKI_VPROC glad_glGetTransformFeedbacki_v
     * }
     */
    public static MemorySegment glad_glGetTransformFeedbacki_v$segment() {
        return glad_glGetTransformFeedbacki_v$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRANSFORMFEEDBACKI_VPROC glad_glGetTransformFeedbacki_v
     * }
     */
    public static MemorySegment glad_glGetTransformFeedbacki_v() {
        return glad_glGetTransformFeedbacki_v$constants.SEGMENT.get(glad_glGetTransformFeedbacki_v$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRANSFORMFEEDBACKI_VPROC glad_glGetTransformFeedbacki_v
     * }
     */
    public static void glad_glGetTransformFeedbacki_v(MemorySegment varValue) {
        glad_glGetTransformFeedbacki_v$constants.SEGMENT.set(glad_glGetTransformFeedbacki_v$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetTransformFeedbacki_v$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetTransformFeedbacki_v").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRANSFORMFEEDBACKI_VPROC glad_debug_glGetTransformFeedbacki_v
     * }
     */
    public static AddressLayout glad_debug_glGetTransformFeedbacki_v$layout() {
        return glad_debug_glGetTransformFeedbacki_v$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRANSFORMFEEDBACKI_VPROC glad_debug_glGetTransformFeedbacki_v
     * }
     */
    public static MemorySegment glad_debug_glGetTransformFeedbacki_v$segment() {
        return glad_debug_glGetTransformFeedbacki_v$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRANSFORMFEEDBACKI_VPROC glad_debug_glGetTransformFeedbacki_v
     * }
     */
    public static MemorySegment glad_debug_glGetTransformFeedbacki_v() {
        return glad_debug_glGetTransformFeedbacki_v$constants.SEGMENT.get(glad_debug_glGetTransformFeedbacki_v$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRANSFORMFEEDBACKI_VPROC glad_debug_glGetTransformFeedbacki_v
     * }
     */
    public static void glad_debug_glGetTransformFeedbacki_v(MemorySegment varValue) {
        glad_debug_glGetTransformFeedbacki_v$constants.SEGMENT.set(glad_debug_glGetTransformFeedbacki_v$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetTransformFeedbackiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetTransformFeedbackiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRANSFORMFEEDBACKIVPROC glad_glGetTransformFeedbackiv
     * }
     */
    public static AddressLayout glad_glGetTransformFeedbackiv$layout() {
        return glad_glGetTransformFeedbackiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRANSFORMFEEDBACKIVPROC glad_glGetTransformFeedbackiv
     * }
     */
    public static MemorySegment glad_glGetTransformFeedbackiv$segment() {
        return glad_glGetTransformFeedbackiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRANSFORMFEEDBACKIVPROC glad_glGetTransformFeedbackiv
     * }
     */
    public static MemorySegment glad_glGetTransformFeedbackiv() {
        return glad_glGetTransformFeedbackiv$constants.SEGMENT.get(glad_glGetTransformFeedbackiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRANSFORMFEEDBACKIVPROC glad_glGetTransformFeedbackiv
     * }
     */
    public static void glad_glGetTransformFeedbackiv(MemorySegment varValue) {
        glad_glGetTransformFeedbackiv$constants.SEGMENT.set(glad_glGetTransformFeedbackiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetTransformFeedbackiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetTransformFeedbackiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRANSFORMFEEDBACKIVPROC glad_debug_glGetTransformFeedbackiv
     * }
     */
    public static AddressLayout glad_debug_glGetTransformFeedbackiv$layout() {
        return glad_debug_glGetTransformFeedbackiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRANSFORMFEEDBACKIVPROC glad_debug_glGetTransformFeedbackiv
     * }
     */
    public static MemorySegment glad_debug_glGetTransformFeedbackiv$segment() {
        return glad_debug_glGetTransformFeedbackiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRANSFORMFEEDBACKIVPROC glad_debug_glGetTransformFeedbackiv
     * }
     */
    public static MemorySegment glad_debug_glGetTransformFeedbackiv() {
        return glad_debug_glGetTransformFeedbackiv$constants.SEGMENT.get(glad_debug_glGetTransformFeedbackiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETTRANSFORMFEEDBACKIVPROC glad_debug_glGetTransformFeedbackiv
     * }
     */
    public static void glad_debug_glGetTransformFeedbackiv(MemorySegment varValue) {
        glad_debug_glGetTransformFeedbackiv$constants.SEGMENT.set(glad_debug_glGetTransformFeedbackiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetUniformBlockIndex$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetUniformBlockIndex").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMBLOCKINDEXPROC glad_glGetUniformBlockIndex
     * }
     */
    public static AddressLayout glad_glGetUniformBlockIndex$layout() {
        return glad_glGetUniformBlockIndex$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMBLOCKINDEXPROC glad_glGetUniformBlockIndex
     * }
     */
    public static MemorySegment glad_glGetUniformBlockIndex$segment() {
        return glad_glGetUniformBlockIndex$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMBLOCKINDEXPROC glad_glGetUniformBlockIndex
     * }
     */
    public static MemorySegment glad_glGetUniformBlockIndex() {
        return glad_glGetUniformBlockIndex$constants.SEGMENT.get(glad_glGetUniformBlockIndex$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMBLOCKINDEXPROC glad_glGetUniformBlockIndex
     * }
     */
    public static void glad_glGetUniformBlockIndex(MemorySegment varValue) {
        glad_glGetUniformBlockIndex$constants.SEGMENT.set(glad_glGetUniformBlockIndex$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetUniformBlockIndex$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetUniformBlockIndex").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMBLOCKINDEXPROC glad_debug_glGetUniformBlockIndex
     * }
     */
    public static AddressLayout glad_debug_glGetUniformBlockIndex$layout() {
        return glad_debug_glGetUniformBlockIndex$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMBLOCKINDEXPROC glad_debug_glGetUniformBlockIndex
     * }
     */
    public static MemorySegment glad_debug_glGetUniformBlockIndex$segment() {
        return glad_debug_glGetUniformBlockIndex$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMBLOCKINDEXPROC glad_debug_glGetUniformBlockIndex
     * }
     */
    public static MemorySegment glad_debug_glGetUniformBlockIndex() {
        return glad_debug_glGetUniformBlockIndex$constants.SEGMENT.get(glad_debug_glGetUniformBlockIndex$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMBLOCKINDEXPROC glad_debug_glGetUniformBlockIndex
     * }
     */
    public static void glad_debug_glGetUniformBlockIndex(MemorySegment varValue) {
        glad_debug_glGetUniformBlockIndex$constants.SEGMENT.set(glad_debug_glGetUniformBlockIndex$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetUniformIndices$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetUniformIndices").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMINDICESPROC glad_glGetUniformIndices
     * }
     */
    public static AddressLayout glad_glGetUniformIndices$layout() {
        return glad_glGetUniformIndices$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMINDICESPROC glad_glGetUniformIndices
     * }
     */
    public static MemorySegment glad_glGetUniformIndices$segment() {
        return glad_glGetUniformIndices$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMINDICESPROC glad_glGetUniformIndices
     * }
     */
    public static MemorySegment glad_glGetUniformIndices() {
        return glad_glGetUniformIndices$constants.SEGMENT.get(glad_glGetUniformIndices$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMINDICESPROC glad_glGetUniformIndices
     * }
     */
    public static void glad_glGetUniformIndices(MemorySegment varValue) {
        glad_glGetUniformIndices$constants.SEGMENT.set(glad_glGetUniformIndices$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetUniformIndices$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetUniformIndices").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMINDICESPROC glad_debug_glGetUniformIndices
     * }
     */
    public static AddressLayout glad_debug_glGetUniformIndices$layout() {
        return glad_debug_glGetUniformIndices$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMINDICESPROC glad_debug_glGetUniformIndices
     * }
     */
    public static MemorySegment glad_debug_glGetUniformIndices$segment() {
        return glad_debug_glGetUniformIndices$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMINDICESPROC glad_debug_glGetUniformIndices
     * }
     */
    public static MemorySegment glad_debug_glGetUniformIndices() {
        return glad_debug_glGetUniformIndices$constants.SEGMENT.get(glad_debug_glGetUniformIndices$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMINDICESPROC glad_debug_glGetUniformIndices
     * }
     */
    public static void glad_debug_glGetUniformIndices(MemorySegment varValue) {
        glad_debug_glGetUniformIndices$constants.SEGMENT.set(glad_debug_glGetUniformIndices$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetUniformLocation$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetUniformLocation").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMLOCATIONPROC glad_glGetUniformLocation
     * }
     */
    public static AddressLayout glad_glGetUniformLocation$layout() {
        return glad_glGetUniformLocation$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMLOCATIONPROC glad_glGetUniformLocation
     * }
     */
    public static MemorySegment glad_glGetUniformLocation$segment() {
        return glad_glGetUniformLocation$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMLOCATIONPROC glad_glGetUniformLocation
     * }
     */
    public static MemorySegment glad_glGetUniformLocation() {
        return glad_glGetUniformLocation$constants.SEGMENT.get(glad_glGetUniformLocation$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMLOCATIONPROC glad_glGetUniformLocation
     * }
     */
    public static void glad_glGetUniformLocation(MemorySegment varValue) {
        glad_glGetUniformLocation$constants.SEGMENT.set(glad_glGetUniformLocation$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetUniformLocation$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetUniformLocation").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMLOCATIONPROC glad_debug_glGetUniformLocation
     * }
     */
    public static AddressLayout glad_debug_glGetUniformLocation$layout() {
        return glad_debug_glGetUniformLocation$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMLOCATIONPROC glad_debug_glGetUniformLocation
     * }
     */
    public static MemorySegment glad_debug_glGetUniformLocation$segment() {
        return glad_debug_glGetUniformLocation$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMLOCATIONPROC glad_debug_glGetUniformLocation
     * }
     */
    public static MemorySegment glad_debug_glGetUniformLocation() {
        return glad_debug_glGetUniformLocation$constants.SEGMENT.get(glad_debug_glGetUniformLocation$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMLOCATIONPROC glad_debug_glGetUniformLocation
     * }
     */
    public static void glad_debug_glGetUniformLocation(MemorySegment varValue) {
        glad_debug_glGetUniformLocation$constants.SEGMENT.set(glad_debug_glGetUniformLocation$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetUniformLocationARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetUniformLocationARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMLOCATIONARBPROC glad_glGetUniformLocationARB
     * }
     */
    public static AddressLayout glad_glGetUniformLocationARB$layout() {
        return glad_glGetUniformLocationARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMLOCATIONARBPROC glad_glGetUniformLocationARB
     * }
     */
    public static MemorySegment glad_glGetUniformLocationARB$segment() {
        return glad_glGetUniformLocationARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMLOCATIONARBPROC glad_glGetUniformLocationARB
     * }
     */
    public static MemorySegment glad_glGetUniformLocationARB() {
        return glad_glGetUniformLocationARB$constants.SEGMENT.get(glad_glGetUniformLocationARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMLOCATIONARBPROC glad_glGetUniformLocationARB
     * }
     */
    public static void glad_glGetUniformLocationARB(MemorySegment varValue) {
        glad_glGetUniformLocationARB$constants.SEGMENT.set(glad_glGetUniformLocationARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetUniformLocationARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetUniformLocationARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMLOCATIONARBPROC glad_debug_glGetUniformLocationARB
     * }
     */
    public static AddressLayout glad_debug_glGetUniformLocationARB$layout() {
        return glad_debug_glGetUniformLocationARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMLOCATIONARBPROC glad_debug_glGetUniformLocationARB
     * }
     */
    public static MemorySegment glad_debug_glGetUniformLocationARB$segment() {
        return glad_debug_glGetUniformLocationARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMLOCATIONARBPROC glad_debug_glGetUniformLocationARB
     * }
     */
    public static MemorySegment glad_debug_glGetUniformLocationARB() {
        return glad_debug_glGetUniformLocationARB$constants.SEGMENT.get(glad_debug_glGetUniformLocationARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMLOCATIONARBPROC glad_debug_glGetUniformLocationARB
     * }
     */
    public static void glad_debug_glGetUniformLocationARB(MemorySegment varValue) {
        glad_debug_glGetUniformLocationARB$constants.SEGMENT.set(glad_debug_glGetUniformLocationARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetUniformSubroutineuiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetUniformSubroutineuiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMSUBROUTINEUIVPROC glad_glGetUniformSubroutineuiv
     * }
     */
    public static AddressLayout glad_glGetUniformSubroutineuiv$layout() {
        return glad_glGetUniformSubroutineuiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMSUBROUTINEUIVPROC glad_glGetUniformSubroutineuiv
     * }
     */
    public static MemorySegment glad_glGetUniformSubroutineuiv$segment() {
        return glad_glGetUniformSubroutineuiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMSUBROUTINEUIVPROC glad_glGetUniformSubroutineuiv
     * }
     */
    public static MemorySegment glad_glGetUniformSubroutineuiv() {
        return glad_glGetUniformSubroutineuiv$constants.SEGMENT.get(glad_glGetUniformSubroutineuiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMSUBROUTINEUIVPROC glad_glGetUniformSubroutineuiv
     * }
     */
    public static void glad_glGetUniformSubroutineuiv(MemorySegment varValue) {
        glad_glGetUniformSubroutineuiv$constants.SEGMENT.set(glad_glGetUniformSubroutineuiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetUniformSubroutineuiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetUniformSubroutineuiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMSUBROUTINEUIVPROC glad_debug_glGetUniformSubroutineuiv
     * }
     */
    public static AddressLayout glad_debug_glGetUniformSubroutineuiv$layout() {
        return glad_debug_glGetUniformSubroutineuiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMSUBROUTINEUIVPROC glad_debug_glGetUniformSubroutineuiv
     * }
     */
    public static MemorySegment glad_debug_glGetUniformSubroutineuiv$segment() {
        return glad_debug_glGetUniformSubroutineuiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMSUBROUTINEUIVPROC glad_debug_glGetUniformSubroutineuiv
     * }
     */
    public static MemorySegment glad_debug_glGetUniformSubroutineuiv() {
        return glad_debug_glGetUniformSubroutineuiv$constants.SEGMENT.get(glad_debug_glGetUniformSubroutineuiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMSUBROUTINEUIVPROC glad_debug_glGetUniformSubroutineuiv
     * }
     */
    public static void glad_debug_glGetUniformSubroutineuiv(MemorySegment varValue) {
        glad_debug_glGetUniformSubroutineuiv$constants.SEGMENT.set(glad_debug_glGetUniformSubroutineuiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetUniformdv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetUniformdv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMDVPROC glad_glGetUniformdv
     * }
     */
    public static AddressLayout glad_glGetUniformdv$layout() {
        return glad_glGetUniformdv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMDVPROC glad_glGetUniformdv
     * }
     */
    public static MemorySegment glad_glGetUniformdv$segment() {
        return glad_glGetUniformdv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMDVPROC glad_glGetUniformdv
     * }
     */
    public static MemorySegment glad_glGetUniformdv() {
        return glad_glGetUniformdv$constants.SEGMENT.get(glad_glGetUniformdv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMDVPROC glad_glGetUniformdv
     * }
     */
    public static void glad_glGetUniformdv(MemorySegment varValue) {
        glad_glGetUniformdv$constants.SEGMENT.set(glad_glGetUniformdv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetUniformdv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetUniformdv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMDVPROC glad_debug_glGetUniformdv
     * }
     */
    public static AddressLayout glad_debug_glGetUniformdv$layout() {
        return glad_debug_glGetUniformdv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMDVPROC glad_debug_glGetUniformdv
     * }
     */
    public static MemorySegment glad_debug_glGetUniformdv$segment() {
        return glad_debug_glGetUniformdv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMDVPROC glad_debug_glGetUniformdv
     * }
     */
    public static MemorySegment glad_debug_glGetUniformdv() {
        return glad_debug_glGetUniformdv$constants.SEGMENT.get(glad_debug_glGetUniformdv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMDVPROC glad_debug_glGetUniformdv
     * }
     */
    public static void glad_debug_glGetUniformdv(MemorySegment varValue) {
        glad_debug_glGetUniformdv$constants.SEGMENT.set(glad_debug_glGetUniformdv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetUniformfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetUniformfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMFVPROC glad_glGetUniformfv
     * }
     */
    public static AddressLayout glad_glGetUniformfv$layout() {
        return glad_glGetUniformfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMFVPROC glad_glGetUniformfv
     * }
     */
    public static MemorySegment glad_glGetUniformfv$segment() {
        return glad_glGetUniformfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMFVPROC glad_glGetUniformfv
     * }
     */
    public static MemorySegment glad_glGetUniformfv() {
        return glad_glGetUniformfv$constants.SEGMENT.get(glad_glGetUniformfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMFVPROC glad_glGetUniformfv
     * }
     */
    public static void glad_glGetUniformfv(MemorySegment varValue) {
        glad_glGetUniformfv$constants.SEGMENT.set(glad_glGetUniformfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetUniformfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetUniformfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMFVPROC glad_debug_glGetUniformfv
     * }
     */
    public static AddressLayout glad_debug_glGetUniformfv$layout() {
        return glad_debug_glGetUniformfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMFVPROC glad_debug_glGetUniformfv
     * }
     */
    public static MemorySegment glad_debug_glGetUniformfv$segment() {
        return glad_debug_glGetUniformfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMFVPROC glad_debug_glGetUniformfv
     * }
     */
    public static MemorySegment glad_debug_glGetUniformfv() {
        return glad_debug_glGetUniformfv$constants.SEGMENT.get(glad_debug_glGetUniformfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMFVPROC glad_debug_glGetUniformfv
     * }
     */
    public static void glad_debug_glGetUniformfv(MemorySegment varValue) {
        glad_debug_glGetUniformfv$constants.SEGMENT.set(glad_debug_glGetUniformfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetUniformfvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetUniformfvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMFVARBPROC glad_glGetUniformfvARB
     * }
     */
    public static AddressLayout glad_glGetUniformfvARB$layout() {
        return glad_glGetUniformfvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMFVARBPROC glad_glGetUniformfvARB
     * }
     */
    public static MemorySegment glad_glGetUniformfvARB$segment() {
        return glad_glGetUniformfvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMFVARBPROC glad_glGetUniformfvARB
     * }
     */
    public static MemorySegment glad_glGetUniformfvARB() {
        return glad_glGetUniformfvARB$constants.SEGMENT.get(glad_glGetUniformfvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMFVARBPROC glad_glGetUniformfvARB
     * }
     */
    public static void glad_glGetUniformfvARB(MemorySegment varValue) {
        glad_glGetUniformfvARB$constants.SEGMENT.set(glad_glGetUniformfvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetUniformfvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetUniformfvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMFVARBPROC glad_debug_glGetUniformfvARB
     * }
     */
    public static AddressLayout glad_debug_glGetUniformfvARB$layout() {
        return glad_debug_glGetUniformfvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMFVARBPROC glad_debug_glGetUniformfvARB
     * }
     */
    public static MemorySegment glad_debug_glGetUniformfvARB$segment() {
        return glad_debug_glGetUniformfvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMFVARBPROC glad_debug_glGetUniformfvARB
     * }
     */
    public static MemorySegment glad_debug_glGetUniformfvARB() {
        return glad_debug_glGetUniformfvARB$constants.SEGMENT.get(glad_debug_glGetUniformfvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMFVARBPROC glad_debug_glGetUniformfvARB
     * }
     */
    public static void glad_debug_glGetUniformfvARB(MemorySegment varValue) {
        glad_debug_glGetUniformfvARB$constants.SEGMENT.set(glad_debug_glGetUniformfvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetUniformiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetUniformiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMIVPROC glad_glGetUniformiv
     * }
     */
    public static AddressLayout glad_glGetUniformiv$layout() {
        return glad_glGetUniformiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMIVPROC glad_glGetUniformiv
     * }
     */
    public static MemorySegment glad_glGetUniformiv$segment() {
        return glad_glGetUniformiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMIVPROC glad_glGetUniformiv
     * }
     */
    public static MemorySegment glad_glGetUniformiv() {
        return glad_glGetUniformiv$constants.SEGMENT.get(glad_glGetUniformiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMIVPROC glad_glGetUniformiv
     * }
     */
    public static void glad_glGetUniformiv(MemorySegment varValue) {
        glad_glGetUniformiv$constants.SEGMENT.set(glad_glGetUniformiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetUniformiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetUniformiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMIVPROC glad_debug_glGetUniformiv
     * }
     */
    public static AddressLayout glad_debug_glGetUniformiv$layout() {
        return glad_debug_glGetUniformiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMIVPROC glad_debug_glGetUniformiv
     * }
     */
    public static MemorySegment glad_debug_glGetUniformiv$segment() {
        return glad_debug_glGetUniformiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMIVPROC glad_debug_glGetUniformiv
     * }
     */
    public static MemorySegment glad_debug_glGetUniformiv() {
        return glad_debug_glGetUniformiv$constants.SEGMENT.get(glad_debug_glGetUniformiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMIVPROC glad_debug_glGetUniformiv
     * }
     */
    public static void glad_debug_glGetUniformiv(MemorySegment varValue) {
        glad_debug_glGetUniformiv$constants.SEGMENT.set(glad_debug_glGetUniformiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetUniformivARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetUniformivARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMIVARBPROC glad_glGetUniformivARB
     * }
     */
    public static AddressLayout glad_glGetUniformivARB$layout() {
        return glad_glGetUniformivARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMIVARBPROC glad_glGetUniformivARB
     * }
     */
    public static MemorySegment glad_glGetUniformivARB$segment() {
        return glad_glGetUniformivARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMIVARBPROC glad_glGetUniformivARB
     * }
     */
    public static MemorySegment glad_glGetUniformivARB() {
        return glad_glGetUniformivARB$constants.SEGMENT.get(glad_glGetUniformivARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMIVARBPROC glad_glGetUniformivARB
     * }
     */
    public static void glad_glGetUniformivARB(MemorySegment varValue) {
        glad_glGetUniformivARB$constants.SEGMENT.set(glad_glGetUniformivARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetUniformivARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetUniformivARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMIVARBPROC glad_debug_glGetUniformivARB
     * }
     */
    public static AddressLayout glad_debug_glGetUniformivARB$layout() {
        return glad_debug_glGetUniformivARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMIVARBPROC glad_debug_glGetUniformivARB
     * }
     */
    public static MemorySegment glad_debug_glGetUniformivARB$segment() {
        return glad_debug_glGetUniformivARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMIVARBPROC glad_debug_glGetUniformivARB
     * }
     */
    public static MemorySegment glad_debug_glGetUniformivARB() {
        return glad_debug_glGetUniformivARB$constants.SEGMENT.get(glad_debug_glGetUniformivARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMIVARBPROC glad_debug_glGetUniformivARB
     * }
     */
    public static void glad_debug_glGetUniformivARB(MemorySegment varValue) {
        glad_debug_glGetUniformivARB$constants.SEGMENT.set(glad_debug_glGetUniformivARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetUniformuiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetUniformuiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMUIVPROC glad_glGetUniformuiv
     * }
     */
    public static AddressLayout glad_glGetUniformuiv$layout() {
        return glad_glGetUniformuiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMUIVPROC glad_glGetUniformuiv
     * }
     */
    public static MemorySegment glad_glGetUniformuiv$segment() {
        return glad_glGetUniformuiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMUIVPROC glad_glGetUniformuiv
     * }
     */
    public static MemorySegment glad_glGetUniformuiv() {
        return glad_glGetUniformuiv$constants.SEGMENT.get(glad_glGetUniformuiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMUIVPROC glad_glGetUniformuiv
     * }
     */
    public static void glad_glGetUniformuiv(MemorySegment varValue) {
        glad_glGetUniformuiv$constants.SEGMENT.set(glad_glGetUniformuiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetUniformuiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetUniformuiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMUIVPROC glad_debug_glGetUniformuiv
     * }
     */
    public static AddressLayout glad_debug_glGetUniformuiv$layout() {
        return glad_debug_glGetUniformuiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMUIVPROC glad_debug_glGetUniformuiv
     * }
     */
    public static MemorySegment glad_debug_glGetUniformuiv$segment() {
        return glad_debug_glGetUniformuiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMUIVPROC glad_debug_glGetUniformuiv
     * }
     */
    public static MemorySegment glad_debug_glGetUniformuiv() {
        return glad_debug_glGetUniformuiv$constants.SEGMENT.get(glad_debug_glGetUniformuiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMUIVPROC glad_debug_glGetUniformuiv
     * }
     */
    public static void glad_debug_glGetUniformuiv(MemorySegment varValue) {
        glad_debug_glGetUniformuiv$constants.SEGMENT.set(glad_debug_glGetUniformuiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetUniformuivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetUniformuivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMUIVEXTPROC glad_glGetUniformuivEXT
     * }
     */
    public static AddressLayout glad_glGetUniformuivEXT$layout() {
        return glad_glGetUniformuivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMUIVEXTPROC glad_glGetUniformuivEXT
     * }
     */
    public static MemorySegment glad_glGetUniformuivEXT$segment() {
        return glad_glGetUniformuivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMUIVEXTPROC glad_glGetUniformuivEXT
     * }
     */
    public static MemorySegment glad_glGetUniformuivEXT() {
        return glad_glGetUniformuivEXT$constants.SEGMENT.get(glad_glGetUniformuivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMUIVEXTPROC glad_glGetUniformuivEXT
     * }
     */
    public static void glad_glGetUniformuivEXT(MemorySegment varValue) {
        glad_glGetUniformuivEXT$constants.SEGMENT.set(glad_glGetUniformuivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetUniformuivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetUniformuivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMUIVEXTPROC glad_debug_glGetUniformuivEXT
     * }
     */
    public static AddressLayout glad_debug_glGetUniformuivEXT$layout() {
        return glad_debug_glGetUniformuivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMUIVEXTPROC glad_debug_glGetUniformuivEXT
     * }
     */
    public static MemorySegment glad_debug_glGetUniformuivEXT$segment() {
        return glad_debug_glGetUniformuivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMUIVEXTPROC glad_debug_glGetUniformuivEXT
     * }
     */
    public static MemorySegment glad_debug_glGetUniformuivEXT() {
        return glad_debug_glGetUniformuivEXT$constants.SEGMENT.get(glad_debug_glGetUniformuivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETUNIFORMUIVEXTPROC glad_debug_glGetUniformuivEXT
     * }
     */
    public static void glad_debug_glGetUniformuivEXT(MemorySegment varValue) {
        glad_debug_glGetUniformuivEXT$constants.SEGMENT.set(glad_debug_glGetUniformuivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetVaryingLocationNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetVaryingLocationNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVARYINGLOCATIONNVPROC glad_glGetVaryingLocationNV
     * }
     */
    public static AddressLayout glad_glGetVaryingLocationNV$layout() {
        return glad_glGetVaryingLocationNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVARYINGLOCATIONNVPROC glad_glGetVaryingLocationNV
     * }
     */
    public static MemorySegment glad_glGetVaryingLocationNV$segment() {
        return glad_glGetVaryingLocationNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVARYINGLOCATIONNVPROC glad_glGetVaryingLocationNV
     * }
     */
    public static MemorySegment glad_glGetVaryingLocationNV() {
        return glad_glGetVaryingLocationNV$constants.SEGMENT.get(glad_glGetVaryingLocationNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVARYINGLOCATIONNVPROC glad_glGetVaryingLocationNV
     * }
     */
    public static void glad_glGetVaryingLocationNV(MemorySegment varValue) {
        glad_glGetVaryingLocationNV$constants.SEGMENT.set(glad_glGetVaryingLocationNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetVaryingLocationNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetVaryingLocationNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVARYINGLOCATIONNVPROC glad_debug_glGetVaryingLocationNV
     * }
     */
    public static AddressLayout glad_debug_glGetVaryingLocationNV$layout() {
        return glad_debug_glGetVaryingLocationNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVARYINGLOCATIONNVPROC glad_debug_glGetVaryingLocationNV
     * }
     */
    public static MemorySegment glad_debug_glGetVaryingLocationNV$segment() {
        return glad_debug_glGetVaryingLocationNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVARYINGLOCATIONNVPROC glad_debug_glGetVaryingLocationNV
     * }
     */
    public static MemorySegment glad_debug_glGetVaryingLocationNV() {
        return glad_debug_glGetVaryingLocationNV$constants.SEGMENT.get(glad_debug_glGetVaryingLocationNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVARYINGLOCATIONNVPROC glad_debug_glGetVaryingLocationNV
     * }
     */
    public static void glad_debug_glGetVaryingLocationNV(MemorySegment varValue) {
        glad_debug_glGetVaryingLocationNV$constants.SEGMENT.set(glad_debug_glGetVaryingLocationNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetVertexArrayIndexed64iv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetVertexArrayIndexed64iv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYINDEXED64IVPROC glad_glGetVertexArrayIndexed64iv
     * }
     */
    public static AddressLayout glad_glGetVertexArrayIndexed64iv$layout() {
        return glad_glGetVertexArrayIndexed64iv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYINDEXED64IVPROC glad_glGetVertexArrayIndexed64iv
     * }
     */
    public static MemorySegment glad_glGetVertexArrayIndexed64iv$segment() {
        return glad_glGetVertexArrayIndexed64iv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYINDEXED64IVPROC glad_glGetVertexArrayIndexed64iv
     * }
     */
    public static MemorySegment glad_glGetVertexArrayIndexed64iv() {
        return glad_glGetVertexArrayIndexed64iv$constants.SEGMENT.get(glad_glGetVertexArrayIndexed64iv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYINDEXED64IVPROC glad_glGetVertexArrayIndexed64iv
     * }
     */
    public static void glad_glGetVertexArrayIndexed64iv(MemorySegment varValue) {
        glad_glGetVertexArrayIndexed64iv$constants.SEGMENT.set(glad_glGetVertexArrayIndexed64iv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetVertexArrayIndexed64iv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetVertexArrayIndexed64iv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYINDEXED64IVPROC glad_debug_glGetVertexArrayIndexed64iv
     * }
     */
    public static AddressLayout glad_debug_glGetVertexArrayIndexed64iv$layout() {
        return glad_debug_glGetVertexArrayIndexed64iv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYINDEXED64IVPROC glad_debug_glGetVertexArrayIndexed64iv
     * }
     */
    public static MemorySegment glad_debug_glGetVertexArrayIndexed64iv$segment() {
        return glad_debug_glGetVertexArrayIndexed64iv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYINDEXED64IVPROC glad_debug_glGetVertexArrayIndexed64iv
     * }
     */
    public static MemorySegment glad_debug_glGetVertexArrayIndexed64iv() {
        return glad_debug_glGetVertexArrayIndexed64iv$constants.SEGMENT.get(glad_debug_glGetVertexArrayIndexed64iv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYINDEXED64IVPROC glad_debug_glGetVertexArrayIndexed64iv
     * }
     */
    public static void glad_debug_glGetVertexArrayIndexed64iv(MemorySegment varValue) {
        glad_debug_glGetVertexArrayIndexed64iv$constants.SEGMENT.set(glad_debug_glGetVertexArrayIndexed64iv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetVertexArrayIndexediv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetVertexArrayIndexediv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYINDEXEDIVPROC glad_glGetVertexArrayIndexediv
     * }
     */
    public static AddressLayout glad_glGetVertexArrayIndexediv$layout() {
        return glad_glGetVertexArrayIndexediv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYINDEXEDIVPROC glad_glGetVertexArrayIndexediv
     * }
     */
    public static MemorySegment glad_glGetVertexArrayIndexediv$segment() {
        return glad_glGetVertexArrayIndexediv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYINDEXEDIVPROC glad_glGetVertexArrayIndexediv
     * }
     */
    public static MemorySegment glad_glGetVertexArrayIndexediv() {
        return glad_glGetVertexArrayIndexediv$constants.SEGMENT.get(glad_glGetVertexArrayIndexediv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYINDEXEDIVPROC glad_glGetVertexArrayIndexediv
     * }
     */
    public static void glad_glGetVertexArrayIndexediv(MemorySegment varValue) {
        glad_glGetVertexArrayIndexediv$constants.SEGMENT.set(glad_glGetVertexArrayIndexediv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetVertexArrayIndexediv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetVertexArrayIndexediv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYINDEXEDIVPROC glad_debug_glGetVertexArrayIndexediv
     * }
     */
    public static AddressLayout glad_debug_glGetVertexArrayIndexediv$layout() {
        return glad_debug_glGetVertexArrayIndexediv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYINDEXEDIVPROC glad_debug_glGetVertexArrayIndexediv
     * }
     */
    public static MemorySegment glad_debug_glGetVertexArrayIndexediv$segment() {
        return glad_debug_glGetVertexArrayIndexediv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYINDEXEDIVPROC glad_debug_glGetVertexArrayIndexediv
     * }
     */
    public static MemorySegment glad_debug_glGetVertexArrayIndexediv() {
        return glad_debug_glGetVertexArrayIndexediv$constants.SEGMENT.get(glad_debug_glGetVertexArrayIndexediv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYINDEXEDIVPROC glad_debug_glGetVertexArrayIndexediv
     * }
     */
    public static void glad_debug_glGetVertexArrayIndexediv(MemorySegment varValue) {
        glad_debug_glGetVertexArrayIndexediv$constants.SEGMENT.set(glad_debug_glGetVertexArrayIndexediv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetVertexArrayIntegeri_vEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetVertexArrayIntegeri_vEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC glad_glGetVertexArrayIntegeri_vEXT
     * }
     */
    public static AddressLayout glad_glGetVertexArrayIntegeri_vEXT$layout() {
        return glad_glGetVertexArrayIntegeri_vEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC glad_glGetVertexArrayIntegeri_vEXT
     * }
     */
    public static MemorySegment glad_glGetVertexArrayIntegeri_vEXT$segment() {
        return glad_glGetVertexArrayIntegeri_vEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC glad_glGetVertexArrayIntegeri_vEXT
     * }
     */
    public static MemorySegment glad_glGetVertexArrayIntegeri_vEXT() {
        return glad_glGetVertexArrayIntegeri_vEXT$constants.SEGMENT.get(glad_glGetVertexArrayIntegeri_vEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC glad_glGetVertexArrayIntegeri_vEXT
     * }
     */
    public static void glad_glGetVertexArrayIntegeri_vEXT(MemorySegment varValue) {
        glad_glGetVertexArrayIntegeri_vEXT$constants.SEGMENT.set(glad_glGetVertexArrayIntegeri_vEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetVertexArrayIntegeri_vEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetVertexArrayIntegeri_vEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC glad_debug_glGetVertexArrayIntegeri_vEXT
     * }
     */
    public static AddressLayout glad_debug_glGetVertexArrayIntegeri_vEXT$layout() {
        return glad_debug_glGetVertexArrayIntegeri_vEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC glad_debug_glGetVertexArrayIntegeri_vEXT
     * }
     */
    public static MemorySegment glad_debug_glGetVertexArrayIntegeri_vEXT$segment() {
        return glad_debug_glGetVertexArrayIntegeri_vEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC glad_debug_glGetVertexArrayIntegeri_vEXT
     * }
     */
    public static MemorySegment glad_debug_glGetVertexArrayIntegeri_vEXT() {
        return glad_debug_glGetVertexArrayIntegeri_vEXT$constants.SEGMENT.get(glad_debug_glGetVertexArrayIntegeri_vEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC glad_debug_glGetVertexArrayIntegeri_vEXT
     * }
     */
    public static void glad_debug_glGetVertexArrayIntegeri_vEXT(MemorySegment varValue) {
        glad_debug_glGetVertexArrayIntegeri_vEXT$constants.SEGMENT.set(glad_debug_glGetVertexArrayIntegeri_vEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetVertexArrayIntegervEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetVertexArrayIntegervEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYINTEGERVEXTPROC glad_glGetVertexArrayIntegervEXT
     * }
     */
    public static AddressLayout glad_glGetVertexArrayIntegervEXT$layout() {
        return glad_glGetVertexArrayIntegervEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYINTEGERVEXTPROC glad_glGetVertexArrayIntegervEXT
     * }
     */
    public static MemorySegment glad_glGetVertexArrayIntegervEXT$segment() {
        return glad_glGetVertexArrayIntegervEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYINTEGERVEXTPROC glad_glGetVertexArrayIntegervEXT
     * }
     */
    public static MemorySegment glad_glGetVertexArrayIntegervEXT() {
        return glad_glGetVertexArrayIntegervEXT$constants.SEGMENT.get(glad_glGetVertexArrayIntegervEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYINTEGERVEXTPROC glad_glGetVertexArrayIntegervEXT
     * }
     */
    public static void glad_glGetVertexArrayIntegervEXT(MemorySegment varValue) {
        glad_glGetVertexArrayIntegervEXT$constants.SEGMENT.set(glad_glGetVertexArrayIntegervEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetVertexArrayIntegervEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetVertexArrayIntegervEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYINTEGERVEXTPROC glad_debug_glGetVertexArrayIntegervEXT
     * }
     */
    public static AddressLayout glad_debug_glGetVertexArrayIntegervEXT$layout() {
        return glad_debug_glGetVertexArrayIntegervEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYINTEGERVEXTPROC glad_debug_glGetVertexArrayIntegervEXT
     * }
     */
    public static MemorySegment glad_debug_glGetVertexArrayIntegervEXT$segment() {
        return glad_debug_glGetVertexArrayIntegervEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYINTEGERVEXTPROC glad_debug_glGetVertexArrayIntegervEXT
     * }
     */
    public static MemorySegment glad_debug_glGetVertexArrayIntegervEXT() {
        return glad_debug_glGetVertexArrayIntegervEXT$constants.SEGMENT.get(glad_debug_glGetVertexArrayIntegervEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYINTEGERVEXTPROC glad_debug_glGetVertexArrayIntegervEXT
     * }
     */
    public static void glad_debug_glGetVertexArrayIntegervEXT(MemorySegment varValue) {
        glad_debug_glGetVertexArrayIntegervEXT$constants.SEGMENT.set(glad_debug_glGetVertexArrayIntegervEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetVertexArrayPointeri_vEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetVertexArrayPointeri_vEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC glad_glGetVertexArrayPointeri_vEXT
     * }
     */
    public static AddressLayout glad_glGetVertexArrayPointeri_vEXT$layout() {
        return glad_glGetVertexArrayPointeri_vEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC glad_glGetVertexArrayPointeri_vEXT
     * }
     */
    public static MemorySegment glad_glGetVertexArrayPointeri_vEXT$segment() {
        return glad_glGetVertexArrayPointeri_vEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC glad_glGetVertexArrayPointeri_vEXT
     * }
     */
    public static MemorySegment glad_glGetVertexArrayPointeri_vEXT() {
        return glad_glGetVertexArrayPointeri_vEXT$constants.SEGMENT.get(glad_glGetVertexArrayPointeri_vEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC glad_glGetVertexArrayPointeri_vEXT
     * }
     */
    public static void glad_glGetVertexArrayPointeri_vEXT(MemorySegment varValue) {
        glad_glGetVertexArrayPointeri_vEXT$constants.SEGMENT.set(glad_glGetVertexArrayPointeri_vEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetVertexArrayPointeri_vEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetVertexArrayPointeri_vEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC glad_debug_glGetVertexArrayPointeri_vEXT
     * }
     */
    public static AddressLayout glad_debug_glGetVertexArrayPointeri_vEXT$layout() {
        return glad_debug_glGetVertexArrayPointeri_vEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC glad_debug_glGetVertexArrayPointeri_vEXT
     * }
     */
    public static MemorySegment glad_debug_glGetVertexArrayPointeri_vEXT$segment() {
        return glad_debug_glGetVertexArrayPointeri_vEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC glad_debug_glGetVertexArrayPointeri_vEXT
     * }
     */
    public static MemorySegment glad_debug_glGetVertexArrayPointeri_vEXT() {
        return glad_debug_glGetVertexArrayPointeri_vEXT$constants.SEGMENT.get(glad_debug_glGetVertexArrayPointeri_vEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC glad_debug_glGetVertexArrayPointeri_vEXT
     * }
     */
    public static void glad_debug_glGetVertexArrayPointeri_vEXT(MemorySegment varValue) {
        glad_debug_glGetVertexArrayPointeri_vEXT$constants.SEGMENT.set(glad_debug_glGetVertexArrayPointeri_vEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetVertexArrayPointervEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetVertexArrayPointervEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYPOINTERVEXTPROC glad_glGetVertexArrayPointervEXT
     * }
     */
    public static AddressLayout glad_glGetVertexArrayPointervEXT$layout() {
        return glad_glGetVertexArrayPointervEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYPOINTERVEXTPROC glad_glGetVertexArrayPointervEXT
     * }
     */
    public static MemorySegment glad_glGetVertexArrayPointervEXT$segment() {
        return glad_glGetVertexArrayPointervEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYPOINTERVEXTPROC glad_glGetVertexArrayPointervEXT
     * }
     */
    public static MemorySegment glad_glGetVertexArrayPointervEXT() {
        return glad_glGetVertexArrayPointervEXT$constants.SEGMENT.get(glad_glGetVertexArrayPointervEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYPOINTERVEXTPROC glad_glGetVertexArrayPointervEXT
     * }
     */
    public static void glad_glGetVertexArrayPointervEXT(MemorySegment varValue) {
        glad_glGetVertexArrayPointervEXT$constants.SEGMENT.set(glad_glGetVertexArrayPointervEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetVertexArrayPointervEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetVertexArrayPointervEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYPOINTERVEXTPROC glad_debug_glGetVertexArrayPointervEXT
     * }
     */
    public static AddressLayout glad_debug_glGetVertexArrayPointervEXT$layout() {
        return glad_debug_glGetVertexArrayPointervEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYPOINTERVEXTPROC glad_debug_glGetVertexArrayPointervEXT
     * }
     */
    public static MemorySegment glad_debug_glGetVertexArrayPointervEXT$segment() {
        return glad_debug_glGetVertexArrayPointervEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYPOINTERVEXTPROC glad_debug_glGetVertexArrayPointervEXT
     * }
     */
    public static MemorySegment glad_debug_glGetVertexArrayPointervEXT() {
        return glad_debug_glGetVertexArrayPointervEXT$constants.SEGMENT.get(glad_debug_glGetVertexArrayPointervEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYPOINTERVEXTPROC glad_debug_glGetVertexArrayPointervEXT
     * }
     */
    public static void glad_debug_glGetVertexArrayPointervEXT(MemorySegment varValue) {
        glad_debug_glGetVertexArrayPointervEXT$constants.SEGMENT.set(glad_debug_glGetVertexArrayPointervEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetVertexArrayiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetVertexArrayiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYIVPROC glad_glGetVertexArrayiv
     * }
     */
    public static AddressLayout glad_glGetVertexArrayiv$layout() {
        return glad_glGetVertexArrayiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYIVPROC glad_glGetVertexArrayiv
     * }
     */
    public static MemorySegment glad_glGetVertexArrayiv$segment() {
        return glad_glGetVertexArrayiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYIVPROC glad_glGetVertexArrayiv
     * }
     */
    public static MemorySegment glad_glGetVertexArrayiv() {
        return glad_glGetVertexArrayiv$constants.SEGMENT.get(glad_glGetVertexArrayiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYIVPROC glad_glGetVertexArrayiv
     * }
     */
    public static void glad_glGetVertexArrayiv(MemorySegment varValue) {
        glad_glGetVertexArrayiv$constants.SEGMENT.set(glad_glGetVertexArrayiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetVertexArrayiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetVertexArrayiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYIVPROC glad_debug_glGetVertexArrayiv
     * }
     */
    public static AddressLayout glad_debug_glGetVertexArrayiv$layout() {
        return glad_debug_glGetVertexArrayiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYIVPROC glad_debug_glGetVertexArrayiv
     * }
     */
    public static MemorySegment glad_debug_glGetVertexArrayiv$segment() {
        return glad_debug_glGetVertexArrayiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYIVPROC glad_debug_glGetVertexArrayiv
     * }
     */
    public static MemorySegment glad_debug_glGetVertexArrayiv() {
        return glad_debug_glGetVertexArrayiv$constants.SEGMENT.get(glad_debug_glGetVertexArrayiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXARRAYIVPROC glad_debug_glGetVertexArrayiv
     * }
     */
    public static void glad_debug_glGetVertexArrayiv(MemorySegment varValue) {
        glad_debug_glGetVertexArrayiv$constants.SEGMENT.set(glad_debug_glGetVertexArrayiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetVertexAttribIiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetVertexAttribIiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIIVPROC glad_glGetVertexAttribIiv
     * }
     */
    public static AddressLayout glad_glGetVertexAttribIiv$layout() {
        return glad_glGetVertexAttribIiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIIVPROC glad_glGetVertexAttribIiv
     * }
     */
    public static MemorySegment glad_glGetVertexAttribIiv$segment() {
        return glad_glGetVertexAttribIiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIIVPROC glad_glGetVertexAttribIiv
     * }
     */
    public static MemorySegment glad_glGetVertexAttribIiv() {
        return glad_glGetVertexAttribIiv$constants.SEGMENT.get(glad_glGetVertexAttribIiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIIVPROC glad_glGetVertexAttribIiv
     * }
     */
    public static void glad_glGetVertexAttribIiv(MemorySegment varValue) {
        glad_glGetVertexAttribIiv$constants.SEGMENT.set(glad_glGetVertexAttribIiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetVertexAttribIiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetVertexAttribIiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIIVPROC glad_debug_glGetVertexAttribIiv
     * }
     */
    public static AddressLayout glad_debug_glGetVertexAttribIiv$layout() {
        return glad_debug_glGetVertexAttribIiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIIVPROC glad_debug_glGetVertexAttribIiv
     * }
     */
    public static MemorySegment glad_debug_glGetVertexAttribIiv$segment() {
        return glad_debug_glGetVertexAttribIiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIIVPROC glad_debug_glGetVertexAttribIiv
     * }
     */
    public static MemorySegment glad_debug_glGetVertexAttribIiv() {
        return glad_debug_glGetVertexAttribIiv$constants.SEGMENT.get(glad_debug_glGetVertexAttribIiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIIVPROC glad_debug_glGetVertexAttribIiv
     * }
     */
    public static void glad_debug_glGetVertexAttribIiv(MemorySegment varValue) {
        glad_debug_glGetVertexAttribIiv$constants.SEGMENT.set(glad_debug_glGetVertexAttribIiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetVertexAttribIivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetVertexAttribIivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIIVEXTPROC glad_glGetVertexAttribIivEXT
     * }
     */
    public static AddressLayout glad_glGetVertexAttribIivEXT$layout() {
        return glad_glGetVertexAttribIivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIIVEXTPROC glad_glGetVertexAttribIivEXT
     * }
     */
    public static MemorySegment glad_glGetVertexAttribIivEXT$segment() {
        return glad_glGetVertexAttribIivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIIVEXTPROC glad_glGetVertexAttribIivEXT
     * }
     */
    public static MemorySegment glad_glGetVertexAttribIivEXT() {
        return glad_glGetVertexAttribIivEXT$constants.SEGMENT.get(glad_glGetVertexAttribIivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIIVEXTPROC glad_glGetVertexAttribIivEXT
     * }
     */
    public static void glad_glGetVertexAttribIivEXT(MemorySegment varValue) {
        glad_glGetVertexAttribIivEXT$constants.SEGMENT.set(glad_glGetVertexAttribIivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetVertexAttribIivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetVertexAttribIivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIIVEXTPROC glad_debug_glGetVertexAttribIivEXT
     * }
     */
    public static AddressLayout glad_debug_glGetVertexAttribIivEXT$layout() {
        return glad_debug_glGetVertexAttribIivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIIVEXTPROC glad_debug_glGetVertexAttribIivEXT
     * }
     */
    public static MemorySegment glad_debug_glGetVertexAttribIivEXT$segment() {
        return glad_debug_glGetVertexAttribIivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIIVEXTPROC glad_debug_glGetVertexAttribIivEXT
     * }
     */
    public static MemorySegment glad_debug_glGetVertexAttribIivEXT() {
        return glad_debug_glGetVertexAttribIivEXT$constants.SEGMENT.get(glad_debug_glGetVertexAttribIivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIIVEXTPROC glad_debug_glGetVertexAttribIivEXT
     * }
     */
    public static void glad_debug_glGetVertexAttribIivEXT(MemorySegment varValue) {
        glad_debug_glGetVertexAttribIivEXT$constants.SEGMENT.set(glad_debug_glGetVertexAttribIivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetVertexAttribIuiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetVertexAttribIuiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIUIVPROC glad_glGetVertexAttribIuiv
     * }
     */
    public static AddressLayout glad_glGetVertexAttribIuiv$layout() {
        return glad_glGetVertexAttribIuiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIUIVPROC glad_glGetVertexAttribIuiv
     * }
     */
    public static MemorySegment glad_glGetVertexAttribIuiv$segment() {
        return glad_glGetVertexAttribIuiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIUIVPROC glad_glGetVertexAttribIuiv
     * }
     */
    public static MemorySegment glad_glGetVertexAttribIuiv() {
        return glad_glGetVertexAttribIuiv$constants.SEGMENT.get(glad_glGetVertexAttribIuiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIUIVPROC glad_glGetVertexAttribIuiv
     * }
     */
    public static void glad_glGetVertexAttribIuiv(MemorySegment varValue) {
        glad_glGetVertexAttribIuiv$constants.SEGMENT.set(glad_glGetVertexAttribIuiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetVertexAttribIuiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetVertexAttribIuiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIUIVPROC glad_debug_glGetVertexAttribIuiv
     * }
     */
    public static AddressLayout glad_debug_glGetVertexAttribIuiv$layout() {
        return glad_debug_glGetVertexAttribIuiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIUIVPROC glad_debug_glGetVertexAttribIuiv
     * }
     */
    public static MemorySegment glad_debug_glGetVertexAttribIuiv$segment() {
        return glad_debug_glGetVertexAttribIuiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIUIVPROC glad_debug_glGetVertexAttribIuiv
     * }
     */
    public static MemorySegment glad_debug_glGetVertexAttribIuiv() {
        return glad_debug_glGetVertexAttribIuiv$constants.SEGMENT.get(glad_debug_glGetVertexAttribIuiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIUIVPROC glad_debug_glGetVertexAttribIuiv
     * }
     */
    public static void glad_debug_glGetVertexAttribIuiv(MemorySegment varValue) {
        glad_debug_glGetVertexAttribIuiv$constants.SEGMENT.set(glad_debug_glGetVertexAttribIuiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetVertexAttribIuivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetVertexAttribIuivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIUIVEXTPROC glad_glGetVertexAttribIuivEXT
     * }
     */
    public static AddressLayout glad_glGetVertexAttribIuivEXT$layout() {
        return glad_glGetVertexAttribIuivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIUIVEXTPROC glad_glGetVertexAttribIuivEXT
     * }
     */
    public static MemorySegment glad_glGetVertexAttribIuivEXT$segment() {
        return glad_glGetVertexAttribIuivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIUIVEXTPROC glad_glGetVertexAttribIuivEXT
     * }
     */
    public static MemorySegment glad_glGetVertexAttribIuivEXT() {
        return glad_glGetVertexAttribIuivEXT$constants.SEGMENT.get(glad_glGetVertexAttribIuivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIUIVEXTPROC glad_glGetVertexAttribIuivEXT
     * }
     */
    public static void glad_glGetVertexAttribIuivEXT(MemorySegment varValue) {
        glad_glGetVertexAttribIuivEXT$constants.SEGMENT.set(glad_glGetVertexAttribIuivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetVertexAttribIuivEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetVertexAttribIuivEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIUIVEXTPROC glad_debug_glGetVertexAttribIuivEXT
     * }
     */
    public static AddressLayout glad_debug_glGetVertexAttribIuivEXT$layout() {
        return glad_debug_glGetVertexAttribIuivEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIUIVEXTPROC glad_debug_glGetVertexAttribIuivEXT
     * }
     */
    public static MemorySegment glad_debug_glGetVertexAttribIuivEXT$segment() {
        return glad_debug_glGetVertexAttribIuivEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIUIVEXTPROC glad_debug_glGetVertexAttribIuivEXT
     * }
     */
    public static MemorySegment glad_debug_glGetVertexAttribIuivEXT() {
        return glad_debug_glGetVertexAttribIuivEXT$constants.SEGMENT.get(glad_debug_glGetVertexAttribIuivEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIUIVEXTPROC glad_debug_glGetVertexAttribIuivEXT
     * }
     */
    public static void glad_debug_glGetVertexAttribIuivEXT(MemorySegment varValue) {
        glad_debug_glGetVertexAttribIuivEXT$constants.SEGMENT.set(glad_debug_glGetVertexAttribIuivEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetVertexAttribLdv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetVertexAttribLdv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBLDVPROC glad_glGetVertexAttribLdv
     * }
     */
    public static AddressLayout glad_glGetVertexAttribLdv$layout() {
        return glad_glGetVertexAttribLdv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBLDVPROC glad_glGetVertexAttribLdv
     * }
     */
    public static MemorySegment glad_glGetVertexAttribLdv$segment() {
        return glad_glGetVertexAttribLdv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBLDVPROC glad_glGetVertexAttribLdv
     * }
     */
    public static MemorySegment glad_glGetVertexAttribLdv() {
        return glad_glGetVertexAttribLdv$constants.SEGMENT.get(glad_glGetVertexAttribLdv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBLDVPROC glad_glGetVertexAttribLdv
     * }
     */
    public static void glad_glGetVertexAttribLdv(MemorySegment varValue) {
        glad_glGetVertexAttribLdv$constants.SEGMENT.set(glad_glGetVertexAttribLdv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetVertexAttribLdv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetVertexAttribLdv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBLDVPROC glad_debug_glGetVertexAttribLdv
     * }
     */
    public static AddressLayout glad_debug_glGetVertexAttribLdv$layout() {
        return glad_debug_glGetVertexAttribLdv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBLDVPROC glad_debug_glGetVertexAttribLdv
     * }
     */
    public static MemorySegment glad_debug_glGetVertexAttribLdv$segment() {
        return glad_debug_glGetVertexAttribLdv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBLDVPROC glad_debug_glGetVertexAttribLdv
     * }
     */
    public static MemorySegment glad_debug_glGetVertexAttribLdv() {
        return glad_debug_glGetVertexAttribLdv$constants.SEGMENT.get(glad_debug_glGetVertexAttribLdv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBLDVPROC glad_debug_glGetVertexAttribLdv
     * }
     */
    public static void glad_debug_glGetVertexAttribLdv(MemorySegment varValue) {
        glad_debug_glGetVertexAttribLdv$constants.SEGMENT.set(glad_debug_glGetVertexAttribLdv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetVertexAttribLdvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetVertexAttribLdvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBLDVEXTPROC glad_glGetVertexAttribLdvEXT
     * }
     */
    public static AddressLayout glad_glGetVertexAttribLdvEXT$layout() {
        return glad_glGetVertexAttribLdvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBLDVEXTPROC glad_glGetVertexAttribLdvEXT
     * }
     */
    public static MemorySegment glad_glGetVertexAttribLdvEXT$segment() {
        return glad_glGetVertexAttribLdvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBLDVEXTPROC glad_glGetVertexAttribLdvEXT
     * }
     */
    public static MemorySegment glad_glGetVertexAttribLdvEXT() {
        return glad_glGetVertexAttribLdvEXT$constants.SEGMENT.get(glad_glGetVertexAttribLdvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBLDVEXTPROC glad_glGetVertexAttribLdvEXT
     * }
     */
    public static void glad_glGetVertexAttribLdvEXT(MemorySegment varValue) {
        glad_glGetVertexAttribLdvEXT$constants.SEGMENT.set(glad_glGetVertexAttribLdvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetVertexAttribLdvEXT$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetVertexAttribLdvEXT").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBLDVEXTPROC glad_debug_glGetVertexAttribLdvEXT
     * }
     */
    public static AddressLayout glad_debug_glGetVertexAttribLdvEXT$layout() {
        return glad_debug_glGetVertexAttribLdvEXT$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBLDVEXTPROC glad_debug_glGetVertexAttribLdvEXT
     * }
     */
    public static MemorySegment glad_debug_glGetVertexAttribLdvEXT$segment() {
        return glad_debug_glGetVertexAttribLdvEXT$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBLDVEXTPROC glad_debug_glGetVertexAttribLdvEXT
     * }
     */
    public static MemorySegment glad_debug_glGetVertexAttribLdvEXT() {
        return glad_debug_glGetVertexAttribLdvEXT$constants.SEGMENT.get(glad_debug_glGetVertexAttribLdvEXT$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBLDVEXTPROC glad_debug_glGetVertexAttribLdvEXT
     * }
     */
    public static void glad_debug_glGetVertexAttribLdvEXT(MemorySegment varValue) {
        glad_debug_glGetVertexAttribLdvEXT$constants.SEGMENT.set(glad_debug_glGetVertexAttribLdvEXT$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetVertexAttribPointerv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetVertexAttribPointerv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBPOINTERVPROC glad_glGetVertexAttribPointerv
     * }
     */
    public static AddressLayout glad_glGetVertexAttribPointerv$layout() {
        return glad_glGetVertexAttribPointerv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBPOINTERVPROC glad_glGetVertexAttribPointerv
     * }
     */
    public static MemorySegment glad_glGetVertexAttribPointerv$segment() {
        return glad_glGetVertexAttribPointerv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBPOINTERVPROC glad_glGetVertexAttribPointerv
     * }
     */
    public static MemorySegment glad_glGetVertexAttribPointerv() {
        return glad_glGetVertexAttribPointerv$constants.SEGMENT.get(glad_glGetVertexAttribPointerv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBPOINTERVPROC glad_glGetVertexAttribPointerv
     * }
     */
    public static void glad_glGetVertexAttribPointerv(MemorySegment varValue) {
        glad_glGetVertexAttribPointerv$constants.SEGMENT.set(glad_glGetVertexAttribPointerv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetVertexAttribPointerv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetVertexAttribPointerv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBPOINTERVPROC glad_debug_glGetVertexAttribPointerv
     * }
     */
    public static AddressLayout glad_debug_glGetVertexAttribPointerv$layout() {
        return glad_debug_glGetVertexAttribPointerv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBPOINTERVPROC glad_debug_glGetVertexAttribPointerv
     * }
     */
    public static MemorySegment glad_debug_glGetVertexAttribPointerv$segment() {
        return glad_debug_glGetVertexAttribPointerv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBPOINTERVPROC glad_debug_glGetVertexAttribPointerv
     * }
     */
    public static MemorySegment glad_debug_glGetVertexAttribPointerv() {
        return glad_debug_glGetVertexAttribPointerv$constants.SEGMENT.get(glad_debug_glGetVertexAttribPointerv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBPOINTERVPROC glad_debug_glGetVertexAttribPointerv
     * }
     */
    public static void glad_debug_glGetVertexAttribPointerv(MemorySegment varValue) {
        glad_debug_glGetVertexAttribPointerv$constants.SEGMENT.set(glad_debug_glGetVertexAttribPointerv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetVertexAttribPointervARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetVertexAttribPointervARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBPOINTERVARBPROC glad_glGetVertexAttribPointervARB
     * }
     */
    public static AddressLayout glad_glGetVertexAttribPointervARB$layout() {
        return glad_glGetVertexAttribPointervARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBPOINTERVARBPROC glad_glGetVertexAttribPointervARB
     * }
     */
    public static MemorySegment glad_glGetVertexAttribPointervARB$segment() {
        return glad_glGetVertexAttribPointervARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBPOINTERVARBPROC glad_glGetVertexAttribPointervARB
     * }
     */
    public static MemorySegment glad_glGetVertexAttribPointervARB() {
        return glad_glGetVertexAttribPointervARB$constants.SEGMENT.get(glad_glGetVertexAttribPointervARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBPOINTERVARBPROC glad_glGetVertexAttribPointervARB
     * }
     */
    public static void glad_glGetVertexAttribPointervARB(MemorySegment varValue) {
        glad_glGetVertexAttribPointervARB$constants.SEGMENT.set(glad_glGetVertexAttribPointervARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetVertexAttribPointervARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetVertexAttribPointervARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBPOINTERVARBPROC glad_debug_glGetVertexAttribPointervARB
     * }
     */
    public static AddressLayout glad_debug_glGetVertexAttribPointervARB$layout() {
        return glad_debug_glGetVertexAttribPointervARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBPOINTERVARBPROC glad_debug_glGetVertexAttribPointervARB
     * }
     */
    public static MemorySegment glad_debug_glGetVertexAttribPointervARB$segment() {
        return glad_debug_glGetVertexAttribPointervARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBPOINTERVARBPROC glad_debug_glGetVertexAttribPointervARB
     * }
     */
    public static MemorySegment glad_debug_glGetVertexAttribPointervARB() {
        return glad_debug_glGetVertexAttribPointervARB$constants.SEGMENT.get(glad_debug_glGetVertexAttribPointervARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBPOINTERVARBPROC glad_debug_glGetVertexAttribPointervARB
     * }
     */
    public static void glad_debug_glGetVertexAttribPointervARB(MemorySegment varValue) {
        glad_debug_glGetVertexAttribPointervARB$constants.SEGMENT.set(glad_debug_glGetVertexAttribPointervARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetVertexAttribPointervNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetVertexAttribPointervNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBPOINTERVNVPROC glad_glGetVertexAttribPointervNV
     * }
     */
    public static AddressLayout glad_glGetVertexAttribPointervNV$layout() {
        return glad_glGetVertexAttribPointervNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBPOINTERVNVPROC glad_glGetVertexAttribPointervNV
     * }
     */
    public static MemorySegment glad_glGetVertexAttribPointervNV$segment() {
        return glad_glGetVertexAttribPointervNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBPOINTERVNVPROC glad_glGetVertexAttribPointervNV
     * }
     */
    public static MemorySegment glad_glGetVertexAttribPointervNV() {
        return glad_glGetVertexAttribPointervNV$constants.SEGMENT.get(glad_glGetVertexAttribPointervNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBPOINTERVNVPROC glad_glGetVertexAttribPointervNV
     * }
     */
    public static void glad_glGetVertexAttribPointervNV(MemorySegment varValue) {
        glad_glGetVertexAttribPointervNV$constants.SEGMENT.set(glad_glGetVertexAttribPointervNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetVertexAttribPointervNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetVertexAttribPointervNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBPOINTERVNVPROC glad_debug_glGetVertexAttribPointervNV
     * }
     */
    public static AddressLayout glad_debug_glGetVertexAttribPointervNV$layout() {
        return glad_debug_glGetVertexAttribPointervNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBPOINTERVNVPROC glad_debug_glGetVertexAttribPointervNV
     * }
     */
    public static MemorySegment glad_debug_glGetVertexAttribPointervNV$segment() {
        return glad_debug_glGetVertexAttribPointervNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBPOINTERVNVPROC glad_debug_glGetVertexAttribPointervNV
     * }
     */
    public static MemorySegment glad_debug_glGetVertexAttribPointervNV() {
        return glad_debug_glGetVertexAttribPointervNV$constants.SEGMENT.get(glad_debug_glGetVertexAttribPointervNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBPOINTERVNVPROC glad_debug_glGetVertexAttribPointervNV
     * }
     */
    public static void glad_debug_glGetVertexAttribPointervNV(MemorySegment varValue) {
        glad_debug_glGetVertexAttribPointervNV$constants.SEGMENT.set(glad_debug_glGetVertexAttribPointervNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetVertexAttribdv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetVertexAttribdv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBDVPROC glad_glGetVertexAttribdv
     * }
     */
    public static AddressLayout glad_glGetVertexAttribdv$layout() {
        return glad_glGetVertexAttribdv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBDVPROC glad_glGetVertexAttribdv
     * }
     */
    public static MemorySegment glad_glGetVertexAttribdv$segment() {
        return glad_glGetVertexAttribdv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBDVPROC glad_glGetVertexAttribdv
     * }
     */
    public static MemorySegment glad_glGetVertexAttribdv() {
        return glad_glGetVertexAttribdv$constants.SEGMENT.get(glad_glGetVertexAttribdv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBDVPROC glad_glGetVertexAttribdv
     * }
     */
    public static void glad_glGetVertexAttribdv(MemorySegment varValue) {
        glad_glGetVertexAttribdv$constants.SEGMENT.set(glad_glGetVertexAttribdv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetVertexAttribdv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetVertexAttribdv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBDVPROC glad_debug_glGetVertexAttribdv
     * }
     */
    public static AddressLayout glad_debug_glGetVertexAttribdv$layout() {
        return glad_debug_glGetVertexAttribdv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBDVPROC glad_debug_glGetVertexAttribdv
     * }
     */
    public static MemorySegment glad_debug_glGetVertexAttribdv$segment() {
        return glad_debug_glGetVertexAttribdv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBDVPROC glad_debug_glGetVertexAttribdv
     * }
     */
    public static MemorySegment glad_debug_glGetVertexAttribdv() {
        return glad_debug_glGetVertexAttribdv$constants.SEGMENT.get(glad_debug_glGetVertexAttribdv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBDVPROC glad_debug_glGetVertexAttribdv
     * }
     */
    public static void glad_debug_glGetVertexAttribdv(MemorySegment varValue) {
        glad_debug_glGetVertexAttribdv$constants.SEGMENT.set(glad_debug_glGetVertexAttribdv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetVertexAttribdvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetVertexAttribdvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBDVARBPROC glad_glGetVertexAttribdvARB
     * }
     */
    public static AddressLayout glad_glGetVertexAttribdvARB$layout() {
        return glad_glGetVertexAttribdvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBDVARBPROC glad_glGetVertexAttribdvARB
     * }
     */
    public static MemorySegment glad_glGetVertexAttribdvARB$segment() {
        return glad_glGetVertexAttribdvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBDVARBPROC glad_glGetVertexAttribdvARB
     * }
     */
    public static MemorySegment glad_glGetVertexAttribdvARB() {
        return glad_glGetVertexAttribdvARB$constants.SEGMENT.get(glad_glGetVertexAttribdvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBDVARBPROC glad_glGetVertexAttribdvARB
     * }
     */
    public static void glad_glGetVertexAttribdvARB(MemorySegment varValue) {
        glad_glGetVertexAttribdvARB$constants.SEGMENT.set(glad_glGetVertexAttribdvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetVertexAttribdvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetVertexAttribdvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBDVARBPROC glad_debug_glGetVertexAttribdvARB
     * }
     */
    public static AddressLayout glad_debug_glGetVertexAttribdvARB$layout() {
        return glad_debug_glGetVertexAttribdvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBDVARBPROC glad_debug_glGetVertexAttribdvARB
     * }
     */
    public static MemorySegment glad_debug_glGetVertexAttribdvARB$segment() {
        return glad_debug_glGetVertexAttribdvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBDVARBPROC glad_debug_glGetVertexAttribdvARB
     * }
     */
    public static MemorySegment glad_debug_glGetVertexAttribdvARB() {
        return glad_debug_glGetVertexAttribdvARB$constants.SEGMENT.get(glad_debug_glGetVertexAttribdvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBDVARBPROC glad_debug_glGetVertexAttribdvARB
     * }
     */
    public static void glad_debug_glGetVertexAttribdvARB(MemorySegment varValue) {
        glad_debug_glGetVertexAttribdvARB$constants.SEGMENT.set(glad_debug_glGetVertexAttribdvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetVertexAttribdvNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetVertexAttribdvNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBDVNVPROC glad_glGetVertexAttribdvNV
     * }
     */
    public static AddressLayout glad_glGetVertexAttribdvNV$layout() {
        return glad_glGetVertexAttribdvNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBDVNVPROC glad_glGetVertexAttribdvNV
     * }
     */
    public static MemorySegment glad_glGetVertexAttribdvNV$segment() {
        return glad_glGetVertexAttribdvNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBDVNVPROC glad_glGetVertexAttribdvNV
     * }
     */
    public static MemorySegment glad_glGetVertexAttribdvNV() {
        return glad_glGetVertexAttribdvNV$constants.SEGMENT.get(glad_glGetVertexAttribdvNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBDVNVPROC glad_glGetVertexAttribdvNV
     * }
     */
    public static void glad_glGetVertexAttribdvNV(MemorySegment varValue) {
        glad_glGetVertexAttribdvNV$constants.SEGMENT.set(glad_glGetVertexAttribdvNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetVertexAttribdvNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetVertexAttribdvNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBDVNVPROC glad_debug_glGetVertexAttribdvNV
     * }
     */
    public static AddressLayout glad_debug_glGetVertexAttribdvNV$layout() {
        return glad_debug_glGetVertexAttribdvNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBDVNVPROC glad_debug_glGetVertexAttribdvNV
     * }
     */
    public static MemorySegment glad_debug_glGetVertexAttribdvNV$segment() {
        return glad_debug_glGetVertexAttribdvNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBDVNVPROC glad_debug_glGetVertexAttribdvNV
     * }
     */
    public static MemorySegment glad_debug_glGetVertexAttribdvNV() {
        return glad_debug_glGetVertexAttribdvNV$constants.SEGMENT.get(glad_debug_glGetVertexAttribdvNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBDVNVPROC glad_debug_glGetVertexAttribdvNV
     * }
     */
    public static void glad_debug_glGetVertexAttribdvNV(MemorySegment varValue) {
        glad_debug_glGetVertexAttribdvNV$constants.SEGMENT.set(glad_debug_glGetVertexAttribdvNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetVertexAttribfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetVertexAttribfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBFVPROC glad_glGetVertexAttribfv
     * }
     */
    public static AddressLayout glad_glGetVertexAttribfv$layout() {
        return glad_glGetVertexAttribfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBFVPROC glad_glGetVertexAttribfv
     * }
     */
    public static MemorySegment glad_glGetVertexAttribfv$segment() {
        return glad_glGetVertexAttribfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBFVPROC glad_glGetVertexAttribfv
     * }
     */
    public static MemorySegment glad_glGetVertexAttribfv() {
        return glad_glGetVertexAttribfv$constants.SEGMENT.get(glad_glGetVertexAttribfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBFVPROC glad_glGetVertexAttribfv
     * }
     */
    public static void glad_glGetVertexAttribfv(MemorySegment varValue) {
        glad_glGetVertexAttribfv$constants.SEGMENT.set(glad_glGetVertexAttribfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetVertexAttribfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetVertexAttribfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBFVPROC glad_debug_glGetVertexAttribfv
     * }
     */
    public static AddressLayout glad_debug_glGetVertexAttribfv$layout() {
        return glad_debug_glGetVertexAttribfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBFVPROC glad_debug_glGetVertexAttribfv
     * }
     */
    public static MemorySegment glad_debug_glGetVertexAttribfv$segment() {
        return glad_debug_glGetVertexAttribfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBFVPROC glad_debug_glGetVertexAttribfv
     * }
     */
    public static MemorySegment glad_debug_glGetVertexAttribfv() {
        return glad_debug_glGetVertexAttribfv$constants.SEGMENT.get(glad_debug_glGetVertexAttribfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBFVPROC glad_debug_glGetVertexAttribfv
     * }
     */
    public static void glad_debug_glGetVertexAttribfv(MemorySegment varValue) {
        glad_debug_glGetVertexAttribfv$constants.SEGMENT.set(glad_debug_glGetVertexAttribfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetVertexAttribfvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetVertexAttribfvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBFVARBPROC glad_glGetVertexAttribfvARB
     * }
     */
    public static AddressLayout glad_glGetVertexAttribfvARB$layout() {
        return glad_glGetVertexAttribfvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBFVARBPROC glad_glGetVertexAttribfvARB
     * }
     */
    public static MemorySegment glad_glGetVertexAttribfvARB$segment() {
        return glad_glGetVertexAttribfvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBFVARBPROC glad_glGetVertexAttribfvARB
     * }
     */
    public static MemorySegment glad_glGetVertexAttribfvARB() {
        return glad_glGetVertexAttribfvARB$constants.SEGMENT.get(glad_glGetVertexAttribfvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBFVARBPROC glad_glGetVertexAttribfvARB
     * }
     */
    public static void glad_glGetVertexAttribfvARB(MemorySegment varValue) {
        glad_glGetVertexAttribfvARB$constants.SEGMENT.set(glad_glGetVertexAttribfvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetVertexAttribfvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetVertexAttribfvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBFVARBPROC glad_debug_glGetVertexAttribfvARB
     * }
     */
    public static AddressLayout glad_debug_glGetVertexAttribfvARB$layout() {
        return glad_debug_glGetVertexAttribfvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBFVARBPROC glad_debug_glGetVertexAttribfvARB
     * }
     */
    public static MemorySegment glad_debug_glGetVertexAttribfvARB$segment() {
        return glad_debug_glGetVertexAttribfvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBFVARBPROC glad_debug_glGetVertexAttribfvARB
     * }
     */
    public static MemorySegment glad_debug_glGetVertexAttribfvARB() {
        return glad_debug_glGetVertexAttribfvARB$constants.SEGMENT.get(glad_debug_glGetVertexAttribfvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBFVARBPROC glad_debug_glGetVertexAttribfvARB
     * }
     */
    public static void glad_debug_glGetVertexAttribfvARB(MemorySegment varValue) {
        glad_debug_glGetVertexAttribfvARB$constants.SEGMENT.set(glad_debug_glGetVertexAttribfvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetVertexAttribfvNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetVertexAttribfvNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBFVNVPROC glad_glGetVertexAttribfvNV
     * }
     */
    public static AddressLayout glad_glGetVertexAttribfvNV$layout() {
        return glad_glGetVertexAttribfvNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBFVNVPROC glad_glGetVertexAttribfvNV
     * }
     */
    public static MemorySegment glad_glGetVertexAttribfvNV$segment() {
        return glad_glGetVertexAttribfvNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBFVNVPROC glad_glGetVertexAttribfvNV
     * }
     */
    public static MemorySegment glad_glGetVertexAttribfvNV() {
        return glad_glGetVertexAttribfvNV$constants.SEGMENT.get(glad_glGetVertexAttribfvNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBFVNVPROC glad_glGetVertexAttribfvNV
     * }
     */
    public static void glad_glGetVertexAttribfvNV(MemorySegment varValue) {
        glad_glGetVertexAttribfvNV$constants.SEGMENT.set(glad_glGetVertexAttribfvNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetVertexAttribfvNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetVertexAttribfvNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBFVNVPROC glad_debug_glGetVertexAttribfvNV
     * }
     */
    public static AddressLayout glad_debug_glGetVertexAttribfvNV$layout() {
        return glad_debug_glGetVertexAttribfvNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBFVNVPROC glad_debug_glGetVertexAttribfvNV
     * }
     */
    public static MemorySegment glad_debug_glGetVertexAttribfvNV$segment() {
        return glad_debug_glGetVertexAttribfvNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBFVNVPROC glad_debug_glGetVertexAttribfvNV
     * }
     */
    public static MemorySegment glad_debug_glGetVertexAttribfvNV() {
        return glad_debug_glGetVertexAttribfvNV$constants.SEGMENT.get(glad_debug_glGetVertexAttribfvNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBFVNVPROC glad_debug_glGetVertexAttribfvNV
     * }
     */
    public static void glad_debug_glGetVertexAttribfvNV(MemorySegment varValue) {
        glad_debug_glGetVertexAttribfvNV$constants.SEGMENT.set(glad_debug_glGetVertexAttribfvNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetVertexAttribiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetVertexAttribiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIVPROC glad_glGetVertexAttribiv
     * }
     */
    public static AddressLayout glad_glGetVertexAttribiv$layout() {
        return glad_glGetVertexAttribiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIVPROC glad_glGetVertexAttribiv
     * }
     */
    public static MemorySegment glad_glGetVertexAttribiv$segment() {
        return glad_glGetVertexAttribiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIVPROC glad_glGetVertexAttribiv
     * }
     */
    public static MemorySegment glad_glGetVertexAttribiv() {
        return glad_glGetVertexAttribiv$constants.SEGMENT.get(glad_glGetVertexAttribiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIVPROC glad_glGetVertexAttribiv
     * }
     */
    public static void glad_glGetVertexAttribiv(MemorySegment varValue) {
        glad_glGetVertexAttribiv$constants.SEGMENT.set(glad_glGetVertexAttribiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetVertexAttribiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetVertexAttribiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIVPROC glad_debug_glGetVertexAttribiv
     * }
     */
    public static AddressLayout glad_debug_glGetVertexAttribiv$layout() {
        return glad_debug_glGetVertexAttribiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIVPROC glad_debug_glGetVertexAttribiv
     * }
     */
    public static MemorySegment glad_debug_glGetVertexAttribiv$segment() {
        return glad_debug_glGetVertexAttribiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIVPROC glad_debug_glGetVertexAttribiv
     * }
     */
    public static MemorySegment glad_debug_glGetVertexAttribiv() {
        return glad_debug_glGetVertexAttribiv$constants.SEGMENT.get(glad_debug_glGetVertexAttribiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIVPROC glad_debug_glGetVertexAttribiv
     * }
     */
    public static void glad_debug_glGetVertexAttribiv(MemorySegment varValue) {
        glad_debug_glGetVertexAttribiv$constants.SEGMENT.set(glad_debug_glGetVertexAttribiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetVertexAttribivARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetVertexAttribivARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIVARBPROC glad_glGetVertexAttribivARB
     * }
     */
    public static AddressLayout glad_glGetVertexAttribivARB$layout() {
        return glad_glGetVertexAttribivARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIVARBPROC glad_glGetVertexAttribivARB
     * }
     */
    public static MemorySegment glad_glGetVertexAttribivARB$segment() {
        return glad_glGetVertexAttribivARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIVARBPROC glad_glGetVertexAttribivARB
     * }
     */
    public static MemorySegment glad_glGetVertexAttribivARB() {
        return glad_glGetVertexAttribivARB$constants.SEGMENT.get(glad_glGetVertexAttribivARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIVARBPROC glad_glGetVertexAttribivARB
     * }
     */
    public static void glad_glGetVertexAttribivARB(MemorySegment varValue) {
        glad_glGetVertexAttribivARB$constants.SEGMENT.set(glad_glGetVertexAttribivARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetVertexAttribivARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetVertexAttribivARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIVARBPROC glad_debug_glGetVertexAttribivARB
     * }
     */
    public static AddressLayout glad_debug_glGetVertexAttribivARB$layout() {
        return glad_debug_glGetVertexAttribivARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIVARBPROC glad_debug_glGetVertexAttribivARB
     * }
     */
    public static MemorySegment glad_debug_glGetVertexAttribivARB$segment() {
        return glad_debug_glGetVertexAttribivARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIVARBPROC glad_debug_glGetVertexAttribivARB
     * }
     */
    public static MemorySegment glad_debug_glGetVertexAttribivARB() {
        return glad_debug_glGetVertexAttribivARB$constants.SEGMENT.get(glad_debug_glGetVertexAttribivARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIVARBPROC glad_debug_glGetVertexAttribivARB
     * }
     */
    public static void glad_debug_glGetVertexAttribivARB(MemorySegment varValue) {
        glad_debug_glGetVertexAttribivARB$constants.SEGMENT.set(glad_debug_glGetVertexAttribivARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetVertexAttribivNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetVertexAttribivNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIVNVPROC glad_glGetVertexAttribivNV
     * }
     */
    public static AddressLayout glad_glGetVertexAttribivNV$layout() {
        return glad_glGetVertexAttribivNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIVNVPROC glad_glGetVertexAttribivNV
     * }
     */
    public static MemorySegment glad_glGetVertexAttribivNV$segment() {
        return glad_glGetVertexAttribivNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIVNVPROC glad_glGetVertexAttribivNV
     * }
     */
    public static MemorySegment glad_glGetVertexAttribivNV() {
        return glad_glGetVertexAttribivNV$constants.SEGMENT.get(glad_glGetVertexAttribivNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIVNVPROC glad_glGetVertexAttribivNV
     * }
     */
    public static void glad_glGetVertexAttribivNV(MemorySegment varValue) {
        glad_glGetVertexAttribivNV$constants.SEGMENT.set(glad_glGetVertexAttribivNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetVertexAttribivNV$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetVertexAttribivNV").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIVNVPROC glad_debug_glGetVertexAttribivNV
     * }
     */
    public static AddressLayout glad_debug_glGetVertexAttribivNV$layout() {
        return glad_debug_glGetVertexAttribivNV$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIVNVPROC glad_debug_glGetVertexAttribivNV
     * }
     */
    public static MemorySegment glad_debug_glGetVertexAttribivNV$segment() {
        return glad_debug_glGetVertexAttribivNV$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIVNVPROC glad_debug_glGetVertexAttribivNV
     * }
     */
    public static MemorySegment glad_debug_glGetVertexAttribivNV() {
        return glad_debug_glGetVertexAttribivNV$constants.SEGMENT.get(glad_debug_glGetVertexAttribivNV$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETVERTEXATTRIBIVNVPROC glad_debug_glGetVertexAttribivNV
     * }
     */
    public static void glad_debug_glGetVertexAttribivNV(MemorySegment varValue) {
        glad_debug_glGetVertexAttribivNV$constants.SEGMENT.set(glad_debug_glGetVertexAttribivNV$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetnColorTable$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetnColorTable").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNCOLORTABLEPROC glad_glGetnColorTable
     * }
     */
    public static AddressLayout glad_glGetnColorTable$layout() {
        return glad_glGetnColorTable$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNCOLORTABLEPROC glad_glGetnColorTable
     * }
     */
    public static MemorySegment glad_glGetnColorTable$segment() {
        return glad_glGetnColorTable$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNCOLORTABLEPROC glad_glGetnColorTable
     * }
     */
    public static MemorySegment glad_glGetnColorTable() {
        return glad_glGetnColorTable$constants.SEGMENT.get(glad_glGetnColorTable$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNCOLORTABLEPROC glad_glGetnColorTable
     * }
     */
    public static void glad_glGetnColorTable(MemorySegment varValue) {
        glad_glGetnColorTable$constants.SEGMENT.set(glad_glGetnColorTable$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetnColorTable$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetnColorTable").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNCOLORTABLEPROC glad_debug_glGetnColorTable
     * }
     */
    public static AddressLayout glad_debug_glGetnColorTable$layout() {
        return glad_debug_glGetnColorTable$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNCOLORTABLEPROC glad_debug_glGetnColorTable
     * }
     */
    public static MemorySegment glad_debug_glGetnColorTable$segment() {
        return glad_debug_glGetnColorTable$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNCOLORTABLEPROC glad_debug_glGetnColorTable
     * }
     */
    public static MemorySegment glad_debug_glGetnColorTable() {
        return glad_debug_glGetnColorTable$constants.SEGMENT.get(glad_debug_glGetnColorTable$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNCOLORTABLEPROC glad_debug_glGetnColorTable
     * }
     */
    public static void glad_debug_glGetnColorTable(MemorySegment varValue) {
        glad_debug_glGetnColorTable$constants.SEGMENT.set(glad_debug_glGetnColorTable$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetnColorTableARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetnColorTableARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNCOLORTABLEARBPROC glad_glGetnColorTableARB
     * }
     */
    public static AddressLayout glad_glGetnColorTableARB$layout() {
        return glad_glGetnColorTableARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNCOLORTABLEARBPROC glad_glGetnColorTableARB
     * }
     */
    public static MemorySegment glad_glGetnColorTableARB$segment() {
        return glad_glGetnColorTableARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNCOLORTABLEARBPROC glad_glGetnColorTableARB
     * }
     */
    public static MemorySegment glad_glGetnColorTableARB() {
        return glad_glGetnColorTableARB$constants.SEGMENT.get(glad_glGetnColorTableARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNCOLORTABLEARBPROC glad_glGetnColorTableARB
     * }
     */
    public static void glad_glGetnColorTableARB(MemorySegment varValue) {
        glad_glGetnColorTableARB$constants.SEGMENT.set(glad_glGetnColorTableARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetnColorTableARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetnColorTableARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNCOLORTABLEARBPROC glad_debug_glGetnColorTableARB
     * }
     */
    public static AddressLayout glad_debug_glGetnColorTableARB$layout() {
        return glad_debug_glGetnColorTableARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNCOLORTABLEARBPROC glad_debug_glGetnColorTableARB
     * }
     */
    public static MemorySegment glad_debug_glGetnColorTableARB$segment() {
        return glad_debug_glGetnColorTableARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNCOLORTABLEARBPROC glad_debug_glGetnColorTableARB
     * }
     */
    public static MemorySegment glad_debug_glGetnColorTableARB() {
        return glad_debug_glGetnColorTableARB$constants.SEGMENT.get(glad_debug_glGetnColorTableARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNCOLORTABLEARBPROC glad_debug_glGetnColorTableARB
     * }
     */
    public static void glad_debug_glGetnColorTableARB(MemorySegment varValue) {
        glad_debug_glGetnColorTableARB$constants.SEGMENT.set(glad_debug_glGetnColorTableARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetnCompressedTexImage$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetnCompressedTexImage").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNCOMPRESSEDTEXIMAGEPROC glad_glGetnCompressedTexImage
     * }
     */
    public static AddressLayout glad_glGetnCompressedTexImage$layout() {
        return glad_glGetnCompressedTexImage$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNCOMPRESSEDTEXIMAGEPROC glad_glGetnCompressedTexImage
     * }
     */
    public static MemorySegment glad_glGetnCompressedTexImage$segment() {
        return glad_glGetnCompressedTexImage$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNCOMPRESSEDTEXIMAGEPROC glad_glGetnCompressedTexImage
     * }
     */
    public static MemorySegment glad_glGetnCompressedTexImage() {
        return glad_glGetnCompressedTexImage$constants.SEGMENT.get(glad_glGetnCompressedTexImage$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNCOMPRESSEDTEXIMAGEPROC glad_glGetnCompressedTexImage
     * }
     */
    public static void glad_glGetnCompressedTexImage(MemorySegment varValue) {
        glad_glGetnCompressedTexImage$constants.SEGMENT.set(glad_glGetnCompressedTexImage$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetnCompressedTexImage$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetnCompressedTexImage").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNCOMPRESSEDTEXIMAGEPROC glad_debug_glGetnCompressedTexImage
     * }
     */
    public static AddressLayout glad_debug_glGetnCompressedTexImage$layout() {
        return glad_debug_glGetnCompressedTexImage$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNCOMPRESSEDTEXIMAGEPROC glad_debug_glGetnCompressedTexImage
     * }
     */
    public static MemorySegment glad_debug_glGetnCompressedTexImage$segment() {
        return glad_debug_glGetnCompressedTexImage$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNCOMPRESSEDTEXIMAGEPROC glad_debug_glGetnCompressedTexImage
     * }
     */
    public static MemorySegment glad_debug_glGetnCompressedTexImage() {
        return glad_debug_glGetnCompressedTexImage$constants.SEGMENT.get(glad_debug_glGetnCompressedTexImage$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNCOMPRESSEDTEXIMAGEPROC glad_debug_glGetnCompressedTexImage
     * }
     */
    public static void glad_debug_glGetnCompressedTexImage(MemorySegment varValue) {
        glad_debug_glGetnCompressedTexImage$constants.SEGMENT.set(glad_debug_glGetnCompressedTexImage$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetnCompressedTexImageARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetnCompressedTexImageARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC glad_glGetnCompressedTexImageARB
     * }
     */
    public static AddressLayout glad_glGetnCompressedTexImageARB$layout() {
        return glad_glGetnCompressedTexImageARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC glad_glGetnCompressedTexImageARB
     * }
     */
    public static MemorySegment glad_glGetnCompressedTexImageARB$segment() {
        return glad_glGetnCompressedTexImageARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC glad_glGetnCompressedTexImageARB
     * }
     */
    public static MemorySegment glad_glGetnCompressedTexImageARB() {
        return glad_glGetnCompressedTexImageARB$constants.SEGMENT.get(glad_glGetnCompressedTexImageARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC glad_glGetnCompressedTexImageARB
     * }
     */
    public static void glad_glGetnCompressedTexImageARB(MemorySegment varValue) {
        glad_glGetnCompressedTexImageARB$constants.SEGMENT.set(glad_glGetnCompressedTexImageARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetnCompressedTexImageARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetnCompressedTexImageARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC glad_debug_glGetnCompressedTexImageARB
     * }
     */
    public static AddressLayout glad_debug_glGetnCompressedTexImageARB$layout() {
        return glad_debug_glGetnCompressedTexImageARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC glad_debug_glGetnCompressedTexImageARB
     * }
     */
    public static MemorySegment glad_debug_glGetnCompressedTexImageARB$segment() {
        return glad_debug_glGetnCompressedTexImageARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC glad_debug_glGetnCompressedTexImageARB
     * }
     */
    public static MemorySegment glad_debug_glGetnCompressedTexImageARB() {
        return glad_debug_glGetnCompressedTexImageARB$constants.SEGMENT.get(glad_debug_glGetnCompressedTexImageARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC glad_debug_glGetnCompressedTexImageARB
     * }
     */
    public static void glad_debug_glGetnCompressedTexImageARB(MemorySegment varValue) {
        glad_debug_glGetnCompressedTexImageARB$constants.SEGMENT.set(glad_debug_glGetnCompressedTexImageARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetnConvolutionFilter$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetnConvolutionFilter").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNCONVOLUTIONFILTERPROC glad_glGetnConvolutionFilter
     * }
     */
    public static AddressLayout glad_glGetnConvolutionFilter$layout() {
        return glad_glGetnConvolutionFilter$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNCONVOLUTIONFILTERPROC glad_glGetnConvolutionFilter
     * }
     */
    public static MemorySegment glad_glGetnConvolutionFilter$segment() {
        return glad_glGetnConvolutionFilter$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNCONVOLUTIONFILTERPROC glad_glGetnConvolutionFilter
     * }
     */
    public static MemorySegment glad_glGetnConvolutionFilter() {
        return glad_glGetnConvolutionFilter$constants.SEGMENT.get(glad_glGetnConvolutionFilter$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNCONVOLUTIONFILTERPROC glad_glGetnConvolutionFilter
     * }
     */
    public static void glad_glGetnConvolutionFilter(MemorySegment varValue) {
        glad_glGetnConvolutionFilter$constants.SEGMENT.set(glad_glGetnConvolutionFilter$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetnConvolutionFilter$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetnConvolutionFilter").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNCONVOLUTIONFILTERPROC glad_debug_glGetnConvolutionFilter
     * }
     */
    public static AddressLayout glad_debug_glGetnConvolutionFilter$layout() {
        return glad_debug_glGetnConvolutionFilter$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNCONVOLUTIONFILTERPROC glad_debug_glGetnConvolutionFilter
     * }
     */
    public static MemorySegment glad_debug_glGetnConvolutionFilter$segment() {
        return glad_debug_glGetnConvolutionFilter$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNCONVOLUTIONFILTERPROC glad_debug_glGetnConvolutionFilter
     * }
     */
    public static MemorySegment glad_debug_glGetnConvolutionFilter() {
        return glad_debug_glGetnConvolutionFilter$constants.SEGMENT.get(glad_debug_glGetnConvolutionFilter$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNCONVOLUTIONFILTERPROC glad_debug_glGetnConvolutionFilter
     * }
     */
    public static void glad_debug_glGetnConvolutionFilter(MemorySegment varValue) {
        glad_debug_glGetnConvolutionFilter$constants.SEGMENT.set(glad_debug_glGetnConvolutionFilter$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetnConvolutionFilterARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetnConvolutionFilterARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNCONVOLUTIONFILTERARBPROC glad_glGetnConvolutionFilterARB
     * }
     */
    public static AddressLayout glad_glGetnConvolutionFilterARB$layout() {
        return glad_glGetnConvolutionFilterARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNCONVOLUTIONFILTERARBPROC glad_glGetnConvolutionFilterARB
     * }
     */
    public static MemorySegment glad_glGetnConvolutionFilterARB$segment() {
        return glad_glGetnConvolutionFilterARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNCONVOLUTIONFILTERARBPROC glad_glGetnConvolutionFilterARB
     * }
     */
    public static MemorySegment glad_glGetnConvolutionFilterARB() {
        return glad_glGetnConvolutionFilterARB$constants.SEGMENT.get(glad_glGetnConvolutionFilterARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNCONVOLUTIONFILTERARBPROC glad_glGetnConvolutionFilterARB
     * }
     */
    public static void glad_glGetnConvolutionFilterARB(MemorySegment varValue) {
        glad_glGetnConvolutionFilterARB$constants.SEGMENT.set(glad_glGetnConvolutionFilterARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetnConvolutionFilterARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetnConvolutionFilterARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNCONVOLUTIONFILTERARBPROC glad_debug_glGetnConvolutionFilterARB
     * }
     */
    public static AddressLayout glad_debug_glGetnConvolutionFilterARB$layout() {
        return glad_debug_glGetnConvolutionFilterARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNCONVOLUTIONFILTERARBPROC glad_debug_glGetnConvolutionFilterARB
     * }
     */
    public static MemorySegment glad_debug_glGetnConvolutionFilterARB$segment() {
        return glad_debug_glGetnConvolutionFilterARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNCONVOLUTIONFILTERARBPROC glad_debug_glGetnConvolutionFilterARB
     * }
     */
    public static MemorySegment glad_debug_glGetnConvolutionFilterARB() {
        return glad_debug_glGetnConvolutionFilterARB$constants.SEGMENT.get(glad_debug_glGetnConvolutionFilterARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNCONVOLUTIONFILTERARBPROC glad_debug_glGetnConvolutionFilterARB
     * }
     */
    public static void glad_debug_glGetnConvolutionFilterARB(MemorySegment varValue) {
        glad_debug_glGetnConvolutionFilterARB$constants.SEGMENT.set(glad_debug_glGetnConvolutionFilterARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetnHistogram$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetnHistogram").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNHISTOGRAMPROC glad_glGetnHistogram
     * }
     */
    public static AddressLayout glad_glGetnHistogram$layout() {
        return glad_glGetnHistogram$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNHISTOGRAMPROC glad_glGetnHistogram
     * }
     */
    public static MemorySegment glad_glGetnHistogram$segment() {
        return glad_glGetnHistogram$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNHISTOGRAMPROC glad_glGetnHistogram
     * }
     */
    public static MemorySegment glad_glGetnHistogram() {
        return glad_glGetnHistogram$constants.SEGMENT.get(glad_glGetnHistogram$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNHISTOGRAMPROC glad_glGetnHistogram
     * }
     */
    public static void glad_glGetnHistogram(MemorySegment varValue) {
        glad_glGetnHistogram$constants.SEGMENT.set(glad_glGetnHistogram$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetnHistogram$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetnHistogram").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNHISTOGRAMPROC glad_debug_glGetnHistogram
     * }
     */
    public static AddressLayout glad_debug_glGetnHistogram$layout() {
        return glad_debug_glGetnHistogram$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNHISTOGRAMPROC glad_debug_glGetnHistogram
     * }
     */
    public static MemorySegment glad_debug_glGetnHistogram$segment() {
        return glad_debug_glGetnHistogram$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNHISTOGRAMPROC glad_debug_glGetnHistogram
     * }
     */
    public static MemorySegment glad_debug_glGetnHistogram() {
        return glad_debug_glGetnHistogram$constants.SEGMENT.get(glad_debug_glGetnHistogram$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNHISTOGRAMPROC glad_debug_glGetnHistogram
     * }
     */
    public static void glad_debug_glGetnHistogram(MemorySegment varValue) {
        glad_debug_glGetnHistogram$constants.SEGMENT.set(glad_debug_glGetnHistogram$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetnHistogramARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetnHistogramARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNHISTOGRAMARBPROC glad_glGetnHistogramARB
     * }
     */
    public static AddressLayout glad_glGetnHistogramARB$layout() {
        return glad_glGetnHistogramARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNHISTOGRAMARBPROC glad_glGetnHistogramARB
     * }
     */
    public static MemorySegment glad_glGetnHistogramARB$segment() {
        return glad_glGetnHistogramARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNHISTOGRAMARBPROC glad_glGetnHistogramARB
     * }
     */
    public static MemorySegment glad_glGetnHistogramARB() {
        return glad_glGetnHistogramARB$constants.SEGMENT.get(glad_glGetnHistogramARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNHISTOGRAMARBPROC glad_glGetnHistogramARB
     * }
     */
    public static void glad_glGetnHistogramARB(MemorySegment varValue) {
        glad_glGetnHistogramARB$constants.SEGMENT.set(glad_glGetnHistogramARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetnHistogramARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetnHistogramARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNHISTOGRAMARBPROC glad_debug_glGetnHistogramARB
     * }
     */
    public static AddressLayout glad_debug_glGetnHistogramARB$layout() {
        return glad_debug_glGetnHistogramARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNHISTOGRAMARBPROC glad_debug_glGetnHistogramARB
     * }
     */
    public static MemorySegment glad_debug_glGetnHistogramARB$segment() {
        return glad_debug_glGetnHistogramARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNHISTOGRAMARBPROC glad_debug_glGetnHistogramARB
     * }
     */
    public static MemorySegment glad_debug_glGetnHistogramARB() {
        return glad_debug_glGetnHistogramARB$constants.SEGMENT.get(glad_debug_glGetnHistogramARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNHISTOGRAMARBPROC glad_debug_glGetnHistogramARB
     * }
     */
    public static void glad_debug_glGetnHistogramARB(MemorySegment varValue) {
        glad_debug_glGetnHistogramARB$constants.SEGMENT.set(glad_debug_glGetnHistogramARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetnMapdv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetnMapdv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMAPDVPROC glad_glGetnMapdv
     * }
     */
    public static AddressLayout glad_glGetnMapdv$layout() {
        return glad_glGetnMapdv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMAPDVPROC glad_glGetnMapdv
     * }
     */
    public static MemorySegment glad_glGetnMapdv$segment() {
        return glad_glGetnMapdv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMAPDVPROC glad_glGetnMapdv
     * }
     */
    public static MemorySegment glad_glGetnMapdv() {
        return glad_glGetnMapdv$constants.SEGMENT.get(glad_glGetnMapdv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMAPDVPROC glad_glGetnMapdv
     * }
     */
    public static void glad_glGetnMapdv(MemorySegment varValue) {
        glad_glGetnMapdv$constants.SEGMENT.set(glad_glGetnMapdv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetnMapdv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetnMapdv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMAPDVPROC glad_debug_glGetnMapdv
     * }
     */
    public static AddressLayout glad_debug_glGetnMapdv$layout() {
        return glad_debug_glGetnMapdv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMAPDVPROC glad_debug_glGetnMapdv
     * }
     */
    public static MemorySegment glad_debug_glGetnMapdv$segment() {
        return glad_debug_glGetnMapdv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMAPDVPROC glad_debug_glGetnMapdv
     * }
     */
    public static MemorySegment glad_debug_glGetnMapdv() {
        return glad_debug_glGetnMapdv$constants.SEGMENT.get(glad_debug_glGetnMapdv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMAPDVPROC glad_debug_glGetnMapdv
     * }
     */
    public static void glad_debug_glGetnMapdv(MemorySegment varValue) {
        glad_debug_glGetnMapdv$constants.SEGMENT.set(glad_debug_glGetnMapdv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetnMapdvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetnMapdvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMAPDVARBPROC glad_glGetnMapdvARB
     * }
     */
    public static AddressLayout glad_glGetnMapdvARB$layout() {
        return glad_glGetnMapdvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMAPDVARBPROC glad_glGetnMapdvARB
     * }
     */
    public static MemorySegment glad_glGetnMapdvARB$segment() {
        return glad_glGetnMapdvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMAPDVARBPROC glad_glGetnMapdvARB
     * }
     */
    public static MemorySegment glad_glGetnMapdvARB() {
        return glad_glGetnMapdvARB$constants.SEGMENT.get(glad_glGetnMapdvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMAPDVARBPROC glad_glGetnMapdvARB
     * }
     */
    public static void glad_glGetnMapdvARB(MemorySegment varValue) {
        glad_glGetnMapdvARB$constants.SEGMENT.set(glad_glGetnMapdvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetnMapdvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetnMapdvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMAPDVARBPROC glad_debug_glGetnMapdvARB
     * }
     */
    public static AddressLayout glad_debug_glGetnMapdvARB$layout() {
        return glad_debug_glGetnMapdvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMAPDVARBPROC glad_debug_glGetnMapdvARB
     * }
     */
    public static MemorySegment glad_debug_glGetnMapdvARB$segment() {
        return glad_debug_glGetnMapdvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMAPDVARBPROC glad_debug_glGetnMapdvARB
     * }
     */
    public static MemorySegment glad_debug_glGetnMapdvARB() {
        return glad_debug_glGetnMapdvARB$constants.SEGMENT.get(glad_debug_glGetnMapdvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMAPDVARBPROC glad_debug_glGetnMapdvARB
     * }
     */
    public static void glad_debug_glGetnMapdvARB(MemorySegment varValue) {
        glad_debug_glGetnMapdvARB$constants.SEGMENT.set(glad_debug_glGetnMapdvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetnMapfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetnMapfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMAPFVPROC glad_glGetnMapfv
     * }
     */
    public static AddressLayout glad_glGetnMapfv$layout() {
        return glad_glGetnMapfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMAPFVPROC glad_glGetnMapfv
     * }
     */
    public static MemorySegment glad_glGetnMapfv$segment() {
        return glad_glGetnMapfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMAPFVPROC glad_glGetnMapfv
     * }
     */
    public static MemorySegment glad_glGetnMapfv() {
        return glad_glGetnMapfv$constants.SEGMENT.get(glad_glGetnMapfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMAPFVPROC glad_glGetnMapfv
     * }
     */
    public static void glad_glGetnMapfv(MemorySegment varValue) {
        glad_glGetnMapfv$constants.SEGMENT.set(glad_glGetnMapfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetnMapfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetnMapfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMAPFVPROC glad_debug_glGetnMapfv
     * }
     */
    public static AddressLayout glad_debug_glGetnMapfv$layout() {
        return glad_debug_glGetnMapfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMAPFVPROC glad_debug_glGetnMapfv
     * }
     */
    public static MemorySegment glad_debug_glGetnMapfv$segment() {
        return glad_debug_glGetnMapfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMAPFVPROC glad_debug_glGetnMapfv
     * }
     */
    public static MemorySegment glad_debug_glGetnMapfv() {
        return glad_debug_glGetnMapfv$constants.SEGMENT.get(glad_debug_glGetnMapfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMAPFVPROC glad_debug_glGetnMapfv
     * }
     */
    public static void glad_debug_glGetnMapfv(MemorySegment varValue) {
        glad_debug_glGetnMapfv$constants.SEGMENT.set(glad_debug_glGetnMapfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetnMapfvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetnMapfvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMAPFVARBPROC glad_glGetnMapfvARB
     * }
     */
    public static AddressLayout glad_glGetnMapfvARB$layout() {
        return glad_glGetnMapfvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMAPFVARBPROC glad_glGetnMapfvARB
     * }
     */
    public static MemorySegment glad_glGetnMapfvARB$segment() {
        return glad_glGetnMapfvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMAPFVARBPROC glad_glGetnMapfvARB
     * }
     */
    public static MemorySegment glad_glGetnMapfvARB() {
        return glad_glGetnMapfvARB$constants.SEGMENT.get(glad_glGetnMapfvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMAPFVARBPROC glad_glGetnMapfvARB
     * }
     */
    public static void glad_glGetnMapfvARB(MemorySegment varValue) {
        glad_glGetnMapfvARB$constants.SEGMENT.set(glad_glGetnMapfvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetnMapfvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetnMapfvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMAPFVARBPROC glad_debug_glGetnMapfvARB
     * }
     */
    public static AddressLayout glad_debug_glGetnMapfvARB$layout() {
        return glad_debug_glGetnMapfvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMAPFVARBPROC glad_debug_glGetnMapfvARB
     * }
     */
    public static MemorySegment glad_debug_glGetnMapfvARB$segment() {
        return glad_debug_glGetnMapfvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMAPFVARBPROC glad_debug_glGetnMapfvARB
     * }
     */
    public static MemorySegment glad_debug_glGetnMapfvARB() {
        return glad_debug_glGetnMapfvARB$constants.SEGMENT.get(glad_debug_glGetnMapfvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMAPFVARBPROC glad_debug_glGetnMapfvARB
     * }
     */
    public static void glad_debug_glGetnMapfvARB(MemorySegment varValue) {
        glad_debug_glGetnMapfvARB$constants.SEGMENT.set(glad_debug_glGetnMapfvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetnMapiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetnMapiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMAPIVPROC glad_glGetnMapiv
     * }
     */
    public static AddressLayout glad_glGetnMapiv$layout() {
        return glad_glGetnMapiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMAPIVPROC glad_glGetnMapiv
     * }
     */
    public static MemorySegment glad_glGetnMapiv$segment() {
        return glad_glGetnMapiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMAPIVPROC glad_glGetnMapiv
     * }
     */
    public static MemorySegment glad_glGetnMapiv() {
        return glad_glGetnMapiv$constants.SEGMENT.get(glad_glGetnMapiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMAPIVPROC glad_glGetnMapiv
     * }
     */
    public static void glad_glGetnMapiv(MemorySegment varValue) {
        glad_glGetnMapiv$constants.SEGMENT.set(glad_glGetnMapiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetnMapiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetnMapiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMAPIVPROC glad_debug_glGetnMapiv
     * }
     */
    public static AddressLayout glad_debug_glGetnMapiv$layout() {
        return glad_debug_glGetnMapiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMAPIVPROC glad_debug_glGetnMapiv
     * }
     */
    public static MemorySegment glad_debug_glGetnMapiv$segment() {
        return glad_debug_glGetnMapiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMAPIVPROC glad_debug_glGetnMapiv
     * }
     */
    public static MemorySegment glad_debug_glGetnMapiv() {
        return glad_debug_glGetnMapiv$constants.SEGMENT.get(glad_debug_glGetnMapiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMAPIVPROC glad_debug_glGetnMapiv
     * }
     */
    public static void glad_debug_glGetnMapiv(MemorySegment varValue) {
        glad_debug_glGetnMapiv$constants.SEGMENT.set(glad_debug_glGetnMapiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetnMapivARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetnMapivARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMAPIVARBPROC glad_glGetnMapivARB
     * }
     */
    public static AddressLayout glad_glGetnMapivARB$layout() {
        return glad_glGetnMapivARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMAPIVARBPROC glad_glGetnMapivARB
     * }
     */
    public static MemorySegment glad_glGetnMapivARB$segment() {
        return glad_glGetnMapivARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMAPIVARBPROC glad_glGetnMapivARB
     * }
     */
    public static MemorySegment glad_glGetnMapivARB() {
        return glad_glGetnMapivARB$constants.SEGMENT.get(glad_glGetnMapivARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMAPIVARBPROC glad_glGetnMapivARB
     * }
     */
    public static void glad_glGetnMapivARB(MemorySegment varValue) {
        glad_glGetnMapivARB$constants.SEGMENT.set(glad_glGetnMapivARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetnMapivARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetnMapivARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMAPIVARBPROC glad_debug_glGetnMapivARB
     * }
     */
    public static AddressLayout glad_debug_glGetnMapivARB$layout() {
        return glad_debug_glGetnMapivARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMAPIVARBPROC glad_debug_glGetnMapivARB
     * }
     */
    public static MemorySegment glad_debug_glGetnMapivARB$segment() {
        return glad_debug_glGetnMapivARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMAPIVARBPROC glad_debug_glGetnMapivARB
     * }
     */
    public static MemorySegment glad_debug_glGetnMapivARB() {
        return glad_debug_glGetnMapivARB$constants.SEGMENT.get(glad_debug_glGetnMapivARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMAPIVARBPROC glad_debug_glGetnMapivARB
     * }
     */
    public static void glad_debug_glGetnMapivARB(MemorySegment varValue) {
        glad_debug_glGetnMapivARB$constants.SEGMENT.set(glad_debug_glGetnMapivARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetnMinmax$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetnMinmax").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMINMAXPROC glad_glGetnMinmax
     * }
     */
    public static AddressLayout glad_glGetnMinmax$layout() {
        return glad_glGetnMinmax$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMINMAXPROC glad_glGetnMinmax
     * }
     */
    public static MemorySegment glad_glGetnMinmax$segment() {
        return glad_glGetnMinmax$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMINMAXPROC glad_glGetnMinmax
     * }
     */
    public static MemorySegment glad_glGetnMinmax() {
        return glad_glGetnMinmax$constants.SEGMENT.get(glad_glGetnMinmax$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMINMAXPROC glad_glGetnMinmax
     * }
     */
    public static void glad_glGetnMinmax(MemorySegment varValue) {
        glad_glGetnMinmax$constants.SEGMENT.set(glad_glGetnMinmax$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetnMinmax$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetnMinmax").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMINMAXPROC glad_debug_glGetnMinmax
     * }
     */
    public static AddressLayout glad_debug_glGetnMinmax$layout() {
        return glad_debug_glGetnMinmax$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMINMAXPROC glad_debug_glGetnMinmax
     * }
     */
    public static MemorySegment glad_debug_glGetnMinmax$segment() {
        return glad_debug_glGetnMinmax$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMINMAXPROC glad_debug_glGetnMinmax
     * }
     */
    public static MemorySegment glad_debug_glGetnMinmax() {
        return glad_debug_glGetnMinmax$constants.SEGMENT.get(glad_debug_glGetnMinmax$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMINMAXPROC glad_debug_glGetnMinmax
     * }
     */
    public static void glad_debug_glGetnMinmax(MemorySegment varValue) {
        glad_debug_glGetnMinmax$constants.SEGMENT.set(glad_debug_glGetnMinmax$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetnMinmaxARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetnMinmaxARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMINMAXARBPROC glad_glGetnMinmaxARB
     * }
     */
    public static AddressLayout glad_glGetnMinmaxARB$layout() {
        return glad_glGetnMinmaxARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMINMAXARBPROC glad_glGetnMinmaxARB
     * }
     */
    public static MemorySegment glad_glGetnMinmaxARB$segment() {
        return glad_glGetnMinmaxARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMINMAXARBPROC glad_glGetnMinmaxARB
     * }
     */
    public static MemorySegment glad_glGetnMinmaxARB() {
        return glad_glGetnMinmaxARB$constants.SEGMENT.get(glad_glGetnMinmaxARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMINMAXARBPROC glad_glGetnMinmaxARB
     * }
     */
    public static void glad_glGetnMinmaxARB(MemorySegment varValue) {
        glad_glGetnMinmaxARB$constants.SEGMENT.set(glad_glGetnMinmaxARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetnMinmaxARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetnMinmaxARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMINMAXARBPROC glad_debug_glGetnMinmaxARB
     * }
     */
    public static AddressLayout glad_debug_glGetnMinmaxARB$layout() {
        return glad_debug_glGetnMinmaxARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMINMAXARBPROC glad_debug_glGetnMinmaxARB
     * }
     */
    public static MemorySegment glad_debug_glGetnMinmaxARB$segment() {
        return glad_debug_glGetnMinmaxARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMINMAXARBPROC glad_debug_glGetnMinmaxARB
     * }
     */
    public static MemorySegment glad_debug_glGetnMinmaxARB() {
        return glad_debug_glGetnMinmaxARB$constants.SEGMENT.get(glad_debug_glGetnMinmaxARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNMINMAXARBPROC glad_debug_glGetnMinmaxARB
     * }
     */
    public static void glad_debug_glGetnMinmaxARB(MemorySegment varValue) {
        glad_debug_glGetnMinmaxARB$constants.SEGMENT.set(glad_debug_glGetnMinmaxARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetnPixelMapfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetnPixelMapfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPIXELMAPFVPROC glad_glGetnPixelMapfv
     * }
     */
    public static AddressLayout glad_glGetnPixelMapfv$layout() {
        return glad_glGetnPixelMapfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPIXELMAPFVPROC glad_glGetnPixelMapfv
     * }
     */
    public static MemorySegment glad_glGetnPixelMapfv$segment() {
        return glad_glGetnPixelMapfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPIXELMAPFVPROC glad_glGetnPixelMapfv
     * }
     */
    public static MemorySegment glad_glGetnPixelMapfv() {
        return glad_glGetnPixelMapfv$constants.SEGMENT.get(glad_glGetnPixelMapfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPIXELMAPFVPROC glad_glGetnPixelMapfv
     * }
     */
    public static void glad_glGetnPixelMapfv(MemorySegment varValue) {
        glad_glGetnPixelMapfv$constants.SEGMENT.set(glad_glGetnPixelMapfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetnPixelMapfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetnPixelMapfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPIXELMAPFVPROC glad_debug_glGetnPixelMapfv
     * }
     */
    public static AddressLayout glad_debug_glGetnPixelMapfv$layout() {
        return glad_debug_glGetnPixelMapfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPIXELMAPFVPROC glad_debug_glGetnPixelMapfv
     * }
     */
    public static MemorySegment glad_debug_glGetnPixelMapfv$segment() {
        return glad_debug_glGetnPixelMapfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPIXELMAPFVPROC glad_debug_glGetnPixelMapfv
     * }
     */
    public static MemorySegment glad_debug_glGetnPixelMapfv() {
        return glad_debug_glGetnPixelMapfv$constants.SEGMENT.get(glad_debug_glGetnPixelMapfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPIXELMAPFVPROC glad_debug_glGetnPixelMapfv
     * }
     */
    public static void glad_debug_glGetnPixelMapfv(MemorySegment varValue) {
        glad_debug_glGetnPixelMapfv$constants.SEGMENT.set(glad_debug_glGetnPixelMapfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetnPixelMapfvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetnPixelMapfvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPIXELMAPFVARBPROC glad_glGetnPixelMapfvARB
     * }
     */
    public static AddressLayout glad_glGetnPixelMapfvARB$layout() {
        return glad_glGetnPixelMapfvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPIXELMAPFVARBPROC glad_glGetnPixelMapfvARB
     * }
     */
    public static MemorySegment glad_glGetnPixelMapfvARB$segment() {
        return glad_glGetnPixelMapfvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPIXELMAPFVARBPROC glad_glGetnPixelMapfvARB
     * }
     */
    public static MemorySegment glad_glGetnPixelMapfvARB() {
        return glad_glGetnPixelMapfvARB$constants.SEGMENT.get(glad_glGetnPixelMapfvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPIXELMAPFVARBPROC glad_glGetnPixelMapfvARB
     * }
     */
    public static void glad_glGetnPixelMapfvARB(MemorySegment varValue) {
        glad_glGetnPixelMapfvARB$constants.SEGMENT.set(glad_glGetnPixelMapfvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetnPixelMapfvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetnPixelMapfvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPIXELMAPFVARBPROC glad_debug_glGetnPixelMapfvARB
     * }
     */
    public static AddressLayout glad_debug_glGetnPixelMapfvARB$layout() {
        return glad_debug_glGetnPixelMapfvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPIXELMAPFVARBPROC glad_debug_glGetnPixelMapfvARB
     * }
     */
    public static MemorySegment glad_debug_glGetnPixelMapfvARB$segment() {
        return glad_debug_glGetnPixelMapfvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPIXELMAPFVARBPROC glad_debug_glGetnPixelMapfvARB
     * }
     */
    public static MemorySegment glad_debug_glGetnPixelMapfvARB() {
        return glad_debug_glGetnPixelMapfvARB$constants.SEGMENT.get(glad_debug_glGetnPixelMapfvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPIXELMAPFVARBPROC glad_debug_glGetnPixelMapfvARB
     * }
     */
    public static void glad_debug_glGetnPixelMapfvARB(MemorySegment varValue) {
        glad_debug_glGetnPixelMapfvARB$constants.SEGMENT.set(glad_debug_glGetnPixelMapfvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetnPixelMapuiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetnPixelMapuiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPIXELMAPUIVPROC glad_glGetnPixelMapuiv
     * }
     */
    public static AddressLayout glad_glGetnPixelMapuiv$layout() {
        return glad_glGetnPixelMapuiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPIXELMAPUIVPROC glad_glGetnPixelMapuiv
     * }
     */
    public static MemorySegment glad_glGetnPixelMapuiv$segment() {
        return glad_glGetnPixelMapuiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPIXELMAPUIVPROC glad_glGetnPixelMapuiv
     * }
     */
    public static MemorySegment glad_glGetnPixelMapuiv() {
        return glad_glGetnPixelMapuiv$constants.SEGMENT.get(glad_glGetnPixelMapuiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPIXELMAPUIVPROC glad_glGetnPixelMapuiv
     * }
     */
    public static void glad_glGetnPixelMapuiv(MemorySegment varValue) {
        glad_glGetnPixelMapuiv$constants.SEGMENT.set(glad_glGetnPixelMapuiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetnPixelMapuiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetnPixelMapuiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPIXELMAPUIVPROC glad_debug_glGetnPixelMapuiv
     * }
     */
    public static AddressLayout glad_debug_glGetnPixelMapuiv$layout() {
        return glad_debug_glGetnPixelMapuiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPIXELMAPUIVPROC glad_debug_glGetnPixelMapuiv
     * }
     */
    public static MemorySegment glad_debug_glGetnPixelMapuiv$segment() {
        return glad_debug_glGetnPixelMapuiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPIXELMAPUIVPROC glad_debug_glGetnPixelMapuiv
     * }
     */
    public static MemorySegment glad_debug_glGetnPixelMapuiv() {
        return glad_debug_glGetnPixelMapuiv$constants.SEGMENT.get(glad_debug_glGetnPixelMapuiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPIXELMAPUIVPROC glad_debug_glGetnPixelMapuiv
     * }
     */
    public static void glad_debug_glGetnPixelMapuiv(MemorySegment varValue) {
        glad_debug_glGetnPixelMapuiv$constants.SEGMENT.set(glad_debug_glGetnPixelMapuiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetnPixelMapuivARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetnPixelMapuivARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPIXELMAPUIVARBPROC glad_glGetnPixelMapuivARB
     * }
     */
    public static AddressLayout glad_glGetnPixelMapuivARB$layout() {
        return glad_glGetnPixelMapuivARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPIXELMAPUIVARBPROC glad_glGetnPixelMapuivARB
     * }
     */
    public static MemorySegment glad_glGetnPixelMapuivARB$segment() {
        return glad_glGetnPixelMapuivARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPIXELMAPUIVARBPROC glad_glGetnPixelMapuivARB
     * }
     */
    public static MemorySegment glad_glGetnPixelMapuivARB() {
        return glad_glGetnPixelMapuivARB$constants.SEGMENT.get(glad_glGetnPixelMapuivARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPIXELMAPUIVARBPROC glad_glGetnPixelMapuivARB
     * }
     */
    public static void glad_glGetnPixelMapuivARB(MemorySegment varValue) {
        glad_glGetnPixelMapuivARB$constants.SEGMENT.set(glad_glGetnPixelMapuivARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetnPixelMapuivARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetnPixelMapuivARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPIXELMAPUIVARBPROC glad_debug_glGetnPixelMapuivARB
     * }
     */
    public static AddressLayout glad_debug_glGetnPixelMapuivARB$layout() {
        return glad_debug_glGetnPixelMapuivARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPIXELMAPUIVARBPROC glad_debug_glGetnPixelMapuivARB
     * }
     */
    public static MemorySegment glad_debug_glGetnPixelMapuivARB$segment() {
        return glad_debug_glGetnPixelMapuivARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPIXELMAPUIVARBPROC glad_debug_glGetnPixelMapuivARB
     * }
     */
    public static MemorySegment glad_debug_glGetnPixelMapuivARB() {
        return glad_debug_glGetnPixelMapuivARB$constants.SEGMENT.get(glad_debug_glGetnPixelMapuivARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPIXELMAPUIVARBPROC glad_debug_glGetnPixelMapuivARB
     * }
     */
    public static void glad_debug_glGetnPixelMapuivARB(MemorySegment varValue) {
        glad_debug_glGetnPixelMapuivARB$constants.SEGMENT.set(glad_debug_glGetnPixelMapuivARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetnPixelMapusv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetnPixelMapusv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPIXELMAPUSVPROC glad_glGetnPixelMapusv
     * }
     */
    public static AddressLayout glad_glGetnPixelMapusv$layout() {
        return glad_glGetnPixelMapusv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPIXELMAPUSVPROC glad_glGetnPixelMapusv
     * }
     */
    public static MemorySegment glad_glGetnPixelMapusv$segment() {
        return glad_glGetnPixelMapusv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPIXELMAPUSVPROC glad_glGetnPixelMapusv
     * }
     */
    public static MemorySegment glad_glGetnPixelMapusv() {
        return glad_glGetnPixelMapusv$constants.SEGMENT.get(glad_glGetnPixelMapusv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPIXELMAPUSVPROC glad_glGetnPixelMapusv
     * }
     */
    public static void glad_glGetnPixelMapusv(MemorySegment varValue) {
        glad_glGetnPixelMapusv$constants.SEGMENT.set(glad_glGetnPixelMapusv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetnPixelMapusv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetnPixelMapusv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPIXELMAPUSVPROC glad_debug_glGetnPixelMapusv
     * }
     */
    public static AddressLayout glad_debug_glGetnPixelMapusv$layout() {
        return glad_debug_glGetnPixelMapusv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPIXELMAPUSVPROC glad_debug_glGetnPixelMapusv
     * }
     */
    public static MemorySegment glad_debug_glGetnPixelMapusv$segment() {
        return glad_debug_glGetnPixelMapusv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPIXELMAPUSVPROC glad_debug_glGetnPixelMapusv
     * }
     */
    public static MemorySegment glad_debug_glGetnPixelMapusv() {
        return glad_debug_glGetnPixelMapusv$constants.SEGMENT.get(glad_debug_glGetnPixelMapusv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPIXELMAPUSVPROC glad_debug_glGetnPixelMapusv
     * }
     */
    public static void glad_debug_glGetnPixelMapusv(MemorySegment varValue) {
        glad_debug_glGetnPixelMapusv$constants.SEGMENT.set(glad_debug_glGetnPixelMapusv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetnPixelMapusvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetnPixelMapusvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPIXELMAPUSVARBPROC glad_glGetnPixelMapusvARB
     * }
     */
    public static AddressLayout glad_glGetnPixelMapusvARB$layout() {
        return glad_glGetnPixelMapusvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPIXELMAPUSVARBPROC glad_glGetnPixelMapusvARB
     * }
     */
    public static MemorySegment glad_glGetnPixelMapusvARB$segment() {
        return glad_glGetnPixelMapusvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPIXELMAPUSVARBPROC glad_glGetnPixelMapusvARB
     * }
     */
    public static MemorySegment glad_glGetnPixelMapusvARB() {
        return glad_glGetnPixelMapusvARB$constants.SEGMENT.get(glad_glGetnPixelMapusvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPIXELMAPUSVARBPROC glad_glGetnPixelMapusvARB
     * }
     */
    public static void glad_glGetnPixelMapusvARB(MemorySegment varValue) {
        glad_glGetnPixelMapusvARB$constants.SEGMENT.set(glad_glGetnPixelMapusvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetnPixelMapusvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetnPixelMapusvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPIXELMAPUSVARBPROC glad_debug_glGetnPixelMapusvARB
     * }
     */
    public static AddressLayout glad_debug_glGetnPixelMapusvARB$layout() {
        return glad_debug_glGetnPixelMapusvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPIXELMAPUSVARBPROC glad_debug_glGetnPixelMapusvARB
     * }
     */
    public static MemorySegment glad_debug_glGetnPixelMapusvARB$segment() {
        return glad_debug_glGetnPixelMapusvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPIXELMAPUSVARBPROC glad_debug_glGetnPixelMapusvARB
     * }
     */
    public static MemorySegment glad_debug_glGetnPixelMapusvARB() {
        return glad_debug_glGetnPixelMapusvARB$constants.SEGMENT.get(glad_debug_glGetnPixelMapusvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPIXELMAPUSVARBPROC glad_debug_glGetnPixelMapusvARB
     * }
     */
    public static void glad_debug_glGetnPixelMapusvARB(MemorySegment varValue) {
        glad_debug_glGetnPixelMapusvARB$constants.SEGMENT.set(glad_debug_glGetnPixelMapusvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetnPolygonStipple$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetnPolygonStipple").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPOLYGONSTIPPLEPROC glad_glGetnPolygonStipple
     * }
     */
    public static AddressLayout glad_glGetnPolygonStipple$layout() {
        return glad_glGetnPolygonStipple$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPOLYGONSTIPPLEPROC glad_glGetnPolygonStipple
     * }
     */
    public static MemorySegment glad_glGetnPolygonStipple$segment() {
        return glad_glGetnPolygonStipple$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPOLYGONSTIPPLEPROC glad_glGetnPolygonStipple
     * }
     */
    public static MemorySegment glad_glGetnPolygonStipple() {
        return glad_glGetnPolygonStipple$constants.SEGMENT.get(glad_glGetnPolygonStipple$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPOLYGONSTIPPLEPROC glad_glGetnPolygonStipple
     * }
     */
    public static void glad_glGetnPolygonStipple(MemorySegment varValue) {
        glad_glGetnPolygonStipple$constants.SEGMENT.set(glad_glGetnPolygonStipple$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetnPolygonStipple$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetnPolygonStipple").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPOLYGONSTIPPLEPROC glad_debug_glGetnPolygonStipple
     * }
     */
    public static AddressLayout glad_debug_glGetnPolygonStipple$layout() {
        return glad_debug_glGetnPolygonStipple$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPOLYGONSTIPPLEPROC glad_debug_glGetnPolygonStipple
     * }
     */
    public static MemorySegment glad_debug_glGetnPolygonStipple$segment() {
        return glad_debug_glGetnPolygonStipple$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPOLYGONSTIPPLEPROC glad_debug_glGetnPolygonStipple
     * }
     */
    public static MemorySegment glad_debug_glGetnPolygonStipple() {
        return glad_debug_glGetnPolygonStipple$constants.SEGMENT.get(glad_debug_glGetnPolygonStipple$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPOLYGONSTIPPLEPROC glad_debug_glGetnPolygonStipple
     * }
     */
    public static void glad_debug_glGetnPolygonStipple(MemorySegment varValue) {
        glad_debug_glGetnPolygonStipple$constants.SEGMENT.set(glad_debug_glGetnPolygonStipple$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetnPolygonStippleARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetnPolygonStippleARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPOLYGONSTIPPLEARBPROC glad_glGetnPolygonStippleARB
     * }
     */
    public static AddressLayout glad_glGetnPolygonStippleARB$layout() {
        return glad_glGetnPolygonStippleARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPOLYGONSTIPPLEARBPROC glad_glGetnPolygonStippleARB
     * }
     */
    public static MemorySegment glad_glGetnPolygonStippleARB$segment() {
        return glad_glGetnPolygonStippleARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPOLYGONSTIPPLEARBPROC glad_glGetnPolygonStippleARB
     * }
     */
    public static MemorySegment glad_glGetnPolygonStippleARB() {
        return glad_glGetnPolygonStippleARB$constants.SEGMENT.get(glad_glGetnPolygonStippleARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPOLYGONSTIPPLEARBPROC glad_glGetnPolygonStippleARB
     * }
     */
    public static void glad_glGetnPolygonStippleARB(MemorySegment varValue) {
        glad_glGetnPolygonStippleARB$constants.SEGMENT.set(glad_glGetnPolygonStippleARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetnPolygonStippleARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetnPolygonStippleARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPOLYGONSTIPPLEARBPROC glad_debug_glGetnPolygonStippleARB
     * }
     */
    public static AddressLayout glad_debug_glGetnPolygonStippleARB$layout() {
        return glad_debug_glGetnPolygonStippleARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPOLYGONSTIPPLEARBPROC glad_debug_glGetnPolygonStippleARB
     * }
     */
    public static MemorySegment glad_debug_glGetnPolygonStippleARB$segment() {
        return glad_debug_glGetnPolygonStippleARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPOLYGONSTIPPLEARBPROC glad_debug_glGetnPolygonStippleARB
     * }
     */
    public static MemorySegment glad_debug_glGetnPolygonStippleARB() {
        return glad_debug_glGetnPolygonStippleARB$constants.SEGMENT.get(glad_debug_glGetnPolygonStippleARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNPOLYGONSTIPPLEARBPROC glad_debug_glGetnPolygonStippleARB
     * }
     */
    public static void glad_debug_glGetnPolygonStippleARB(MemorySegment varValue) {
        glad_debug_glGetnPolygonStippleARB$constants.SEGMENT.set(glad_debug_glGetnPolygonStippleARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetnSeparableFilter$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetnSeparableFilter").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNSEPARABLEFILTERPROC glad_glGetnSeparableFilter
     * }
     */
    public static AddressLayout glad_glGetnSeparableFilter$layout() {
        return glad_glGetnSeparableFilter$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNSEPARABLEFILTERPROC glad_glGetnSeparableFilter
     * }
     */
    public static MemorySegment glad_glGetnSeparableFilter$segment() {
        return glad_glGetnSeparableFilter$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNSEPARABLEFILTERPROC glad_glGetnSeparableFilter
     * }
     */
    public static MemorySegment glad_glGetnSeparableFilter() {
        return glad_glGetnSeparableFilter$constants.SEGMENT.get(glad_glGetnSeparableFilter$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNSEPARABLEFILTERPROC glad_glGetnSeparableFilter
     * }
     */
    public static void glad_glGetnSeparableFilter(MemorySegment varValue) {
        glad_glGetnSeparableFilter$constants.SEGMENT.set(glad_glGetnSeparableFilter$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetnSeparableFilter$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetnSeparableFilter").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNSEPARABLEFILTERPROC glad_debug_glGetnSeparableFilter
     * }
     */
    public static AddressLayout glad_debug_glGetnSeparableFilter$layout() {
        return glad_debug_glGetnSeparableFilter$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNSEPARABLEFILTERPROC glad_debug_glGetnSeparableFilter
     * }
     */
    public static MemorySegment glad_debug_glGetnSeparableFilter$segment() {
        return glad_debug_glGetnSeparableFilter$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNSEPARABLEFILTERPROC glad_debug_glGetnSeparableFilter
     * }
     */
    public static MemorySegment glad_debug_glGetnSeparableFilter() {
        return glad_debug_glGetnSeparableFilter$constants.SEGMENT.get(glad_debug_glGetnSeparableFilter$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNSEPARABLEFILTERPROC glad_debug_glGetnSeparableFilter
     * }
     */
    public static void glad_debug_glGetnSeparableFilter(MemorySegment varValue) {
        glad_debug_glGetnSeparableFilter$constants.SEGMENT.set(glad_debug_glGetnSeparableFilter$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetnSeparableFilterARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetnSeparableFilterARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNSEPARABLEFILTERARBPROC glad_glGetnSeparableFilterARB
     * }
     */
    public static AddressLayout glad_glGetnSeparableFilterARB$layout() {
        return glad_glGetnSeparableFilterARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNSEPARABLEFILTERARBPROC glad_glGetnSeparableFilterARB
     * }
     */
    public static MemorySegment glad_glGetnSeparableFilterARB$segment() {
        return glad_glGetnSeparableFilterARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNSEPARABLEFILTERARBPROC glad_glGetnSeparableFilterARB
     * }
     */
    public static MemorySegment glad_glGetnSeparableFilterARB() {
        return glad_glGetnSeparableFilterARB$constants.SEGMENT.get(glad_glGetnSeparableFilterARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNSEPARABLEFILTERARBPROC glad_glGetnSeparableFilterARB
     * }
     */
    public static void glad_glGetnSeparableFilterARB(MemorySegment varValue) {
        glad_glGetnSeparableFilterARB$constants.SEGMENT.set(glad_glGetnSeparableFilterARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetnSeparableFilterARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetnSeparableFilterARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNSEPARABLEFILTERARBPROC glad_debug_glGetnSeparableFilterARB
     * }
     */
    public static AddressLayout glad_debug_glGetnSeparableFilterARB$layout() {
        return glad_debug_glGetnSeparableFilterARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNSEPARABLEFILTERARBPROC glad_debug_glGetnSeparableFilterARB
     * }
     */
    public static MemorySegment glad_debug_glGetnSeparableFilterARB$segment() {
        return glad_debug_glGetnSeparableFilterARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNSEPARABLEFILTERARBPROC glad_debug_glGetnSeparableFilterARB
     * }
     */
    public static MemorySegment glad_debug_glGetnSeparableFilterARB() {
        return glad_debug_glGetnSeparableFilterARB$constants.SEGMENT.get(glad_debug_glGetnSeparableFilterARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNSEPARABLEFILTERARBPROC glad_debug_glGetnSeparableFilterARB
     * }
     */
    public static void glad_debug_glGetnSeparableFilterARB(MemorySegment varValue) {
        glad_debug_glGetnSeparableFilterARB$constants.SEGMENT.set(glad_debug_glGetnSeparableFilterARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetnTexImage$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetnTexImage").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNTEXIMAGEPROC glad_glGetnTexImage
     * }
     */
    public static AddressLayout glad_glGetnTexImage$layout() {
        return glad_glGetnTexImage$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNTEXIMAGEPROC glad_glGetnTexImage
     * }
     */
    public static MemorySegment glad_glGetnTexImage$segment() {
        return glad_glGetnTexImage$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNTEXIMAGEPROC glad_glGetnTexImage
     * }
     */
    public static MemorySegment glad_glGetnTexImage() {
        return glad_glGetnTexImage$constants.SEGMENT.get(glad_glGetnTexImage$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNTEXIMAGEPROC glad_glGetnTexImage
     * }
     */
    public static void glad_glGetnTexImage(MemorySegment varValue) {
        glad_glGetnTexImage$constants.SEGMENT.set(glad_glGetnTexImage$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetnTexImage$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetnTexImage").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNTEXIMAGEPROC glad_debug_glGetnTexImage
     * }
     */
    public static AddressLayout glad_debug_glGetnTexImage$layout() {
        return glad_debug_glGetnTexImage$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNTEXIMAGEPROC glad_debug_glGetnTexImage
     * }
     */
    public static MemorySegment glad_debug_glGetnTexImage$segment() {
        return glad_debug_glGetnTexImage$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNTEXIMAGEPROC glad_debug_glGetnTexImage
     * }
     */
    public static MemorySegment glad_debug_glGetnTexImage() {
        return glad_debug_glGetnTexImage$constants.SEGMENT.get(glad_debug_glGetnTexImage$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNTEXIMAGEPROC glad_debug_glGetnTexImage
     * }
     */
    public static void glad_debug_glGetnTexImage(MemorySegment varValue) {
        glad_debug_glGetnTexImage$constants.SEGMENT.set(glad_debug_glGetnTexImage$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetnTexImageARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetnTexImageARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNTEXIMAGEARBPROC glad_glGetnTexImageARB
     * }
     */
    public static AddressLayout glad_glGetnTexImageARB$layout() {
        return glad_glGetnTexImageARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNTEXIMAGEARBPROC glad_glGetnTexImageARB
     * }
     */
    public static MemorySegment glad_glGetnTexImageARB$segment() {
        return glad_glGetnTexImageARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNTEXIMAGEARBPROC glad_glGetnTexImageARB
     * }
     */
    public static MemorySegment glad_glGetnTexImageARB() {
        return glad_glGetnTexImageARB$constants.SEGMENT.get(glad_glGetnTexImageARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNTEXIMAGEARBPROC glad_glGetnTexImageARB
     * }
     */
    public static void glad_glGetnTexImageARB(MemorySegment varValue) {
        glad_glGetnTexImageARB$constants.SEGMENT.set(glad_glGetnTexImageARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetnTexImageARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetnTexImageARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNTEXIMAGEARBPROC glad_debug_glGetnTexImageARB
     * }
     */
    public static AddressLayout glad_debug_glGetnTexImageARB$layout() {
        return glad_debug_glGetnTexImageARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNTEXIMAGEARBPROC glad_debug_glGetnTexImageARB
     * }
     */
    public static MemorySegment glad_debug_glGetnTexImageARB$segment() {
        return glad_debug_glGetnTexImageARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNTEXIMAGEARBPROC glad_debug_glGetnTexImageARB
     * }
     */
    public static MemorySegment glad_debug_glGetnTexImageARB() {
        return glad_debug_glGetnTexImageARB$constants.SEGMENT.get(glad_debug_glGetnTexImageARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNTEXIMAGEARBPROC glad_debug_glGetnTexImageARB
     * }
     */
    public static void glad_debug_glGetnTexImageARB(MemorySegment varValue) {
        glad_debug_glGetnTexImageARB$constants.SEGMENT.set(glad_debug_glGetnTexImageARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetnUniformdv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetnUniformdv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMDVPROC glad_glGetnUniformdv
     * }
     */
    public static AddressLayout glad_glGetnUniformdv$layout() {
        return glad_glGetnUniformdv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMDVPROC glad_glGetnUniformdv
     * }
     */
    public static MemorySegment glad_glGetnUniformdv$segment() {
        return glad_glGetnUniformdv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMDVPROC glad_glGetnUniformdv
     * }
     */
    public static MemorySegment glad_glGetnUniformdv() {
        return glad_glGetnUniformdv$constants.SEGMENT.get(glad_glGetnUniformdv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMDVPROC glad_glGetnUniformdv
     * }
     */
    public static void glad_glGetnUniformdv(MemorySegment varValue) {
        glad_glGetnUniformdv$constants.SEGMENT.set(glad_glGetnUniformdv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetnUniformdv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetnUniformdv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMDVPROC glad_debug_glGetnUniformdv
     * }
     */
    public static AddressLayout glad_debug_glGetnUniformdv$layout() {
        return glad_debug_glGetnUniformdv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMDVPROC glad_debug_glGetnUniformdv
     * }
     */
    public static MemorySegment glad_debug_glGetnUniformdv$segment() {
        return glad_debug_glGetnUniformdv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMDVPROC glad_debug_glGetnUniformdv
     * }
     */
    public static MemorySegment glad_debug_glGetnUniformdv() {
        return glad_debug_glGetnUniformdv$constants.SEGMENT.get(glad_debug_glGetnUniformdv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMDVPROC glad_debug_glGetnUniformdv
     * }
     */
    public static void glad_debug_glGetnUniformdv(MemorySegment varValue) {
        glad_debug_glGetnUniformdv$constants.SEGMENT.set(glad_debug_glGetnUniformdv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetnUniformdvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetnUniformdvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMDVARBPROC glad_glGetnUniformdvARB
     * }
     */
    public static AddressLayout glad_glGetnUniformdvARB$layout() {
        return glad_glGetnUniformdvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMDVARBPROC glad_glGetnUniformdvARB
     * }
     */
    public static MemorySegment glad_glGetnUniformdvARB$segment() {
        return glad_glGetnUniformdvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMDVARBPROC glad_glGetnUniformdvARB
     * }
     */
    public static MemorySegment glad_glGetnUniformdvARB() {
        return glad_glGetnUniformdvARB$constants.SEGMENT.get(glad_glGetnUniformdvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMDVARBPROC glad_glGetnUniformdvARB
     * }
     */
    public static void glad_glGetnUniformdvARB(MemorySegment varValue) {
        glad_glGetnUniformdvARB$constants.SEGMENT.set(glad_glGetnUniformdvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetnUniformdvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetnUniformdvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMDVARBPROC glad_debug_glGetnUniformdvARB
     * }
     */
    public static AddressLayout glad_debug_glGetnUniformdvARB$layout() {
        return glad_debug_glGetnUniformdvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMDVARBPROC glad_debug_glGetnUniformdvARB
     * }
     */
    public static MemorySegment glad_debug_glGetnUniformdvARB$segment() {
        return glad_debug_glGetnUniformdvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMDVARBPROC glad_debug_glGetnUniformdvARB
     * }
     */
    public static MemorySegment glad_debug_glGetnUniformdvARB() {
        return glad_debug_glGetnUniformdvARB$constants.SEGMENT.get(glad_debug_glGetnUniformdvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMDVARBPROC glad_debug_glGetnUniformdvARB
     * }
     */
    public static void glad_debug_glGetnUniformdvARB(MemorySegment varValue) {
        glad_debug_glGetnUniformdvARB$constants.SEGMENT.set(glad_debug_glGetnUniformdvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetnUniformfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetnUniformfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMFVPROC glad_glGetnUniformfv
     * }
     */
    public static AddressLayout glad_glGetnUniformfv$layout() {
        return glad_glGetnUniformfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMFVPROC glad_glGetnUniformfv
     * }
     */
    public static MemorySegment glad_glGetnUniformfv$segment() {
        return glad_glGetnUniformfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMFVPROC glad_glGetnUniformfv
     * }
     */
    public static MemorySegment glad_glGetnUniformfv() {
        return glad_glGetnUniformfv$constants.SEGMENT.get(glad_glGetnUniformfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMFVPROC glad_glGetnUniformfv
     * }
     */
    public static void glad_glGetnUniformfv(MemorySegment varValue) {
        glad_glGetnUniformfv$constants.SEGMENT.set(glad_glGetnUniformfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetnUniformfv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetnUniformfv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMFVPROC glad_debug_glGetnUniformfv
     * }
     */
    public static AddressLayout glad_debug_glGetnUniformfv$layout() {
        return glad_debug_glGetnUniformfv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMFVPROC glad_debug_glGetnUniformfv
     * }
     */
    public static MemorySegment glad_debug_glGetnUniformfv$segment() {
        return glad_debug_glGetnUniformfv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMFVPROC glad_debug_glGetnUniformfv
     * }
     */
    public static MemorySegment glad_debug_glGetnUniformfv() {
        return glad_debug_glGetnUniformfv$constants.SEGMENT.get(glad_debug_glGetnUniformfv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMFVPROC glad_debug_glGetnUniformfv
     * }
     */
    public static void glad_debug_glGetnUniformfv(MemorySegment varValue) {
        glad_debug_glGetnUniformfv$constants.SEGMENT.set(glad_debug_glGetnUniformfv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetnUniformfvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetnUniformfvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMFVARBPROC glad_glGetnUniformfvARB
     * }
     */
    public static AddressLayout glad_glGetnUniformfvARB$layout() {
        return glad_glGetnUniformfvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMFVARBPROC glad_glGetnUniformfvARB
     * }
     */
    public static MemorySegment glad_glGetnUniformfvARB$segment() {
        return glad_glGetnUniformfvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMFVARBPROC glad_glGetnUniformfvARB
     * }
     */
    public static MemorySegment glad_glGetnUniformfvARB() {
        return glad_glGetnUniformfvARB$constants.SEGMENT.get(glad_glGetnUniformfvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMFVARBPROC glad_glGetnUniformfvARB
     * }
     */
    public static void glad_glGetnUniformfvARB(MemorySegment varValue) {
        glad_glGetnUniformfvARB$constants.SEGMENT.set(glad_glGetnUniformfvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetnUniformfvARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetnUniformfvARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMFVARBPROC glad_debug_glGetnUniformfvARB
     * }
     */
    public static AddressLayout glad_debug_glGetnUniformfvARB$layout() {
        return glad_debug_glGetnUniformfvARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMFVARBPROC glad_debug_glGetnUniformfvARB
     * }
     */
    public static MemorySegment glad_debug_glGetnUniformfvARB$segment() {
        return glad_debug_glGetnUniformfvARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMFVARBPROC glad_debug_glGetnUniformfvARB
     * }
     */
    public static MemorySegment glad_debug_glGetnUniformfvARB() {
        return glad_debug_glGetnUniformfvARB$constants.SEGMENT.get(glad_debug_glGetnUniformfvARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMFVARBPROC glad_debug_glGetnUniformfvARB
     * }
     */
    public static void glad_debug_glGetnUniformfvARB(MemorySegment varValue) {
        glad_debug_glGetnUniformfvARB$constants.SEGMENT.set(glad_debug_glGetnUniformfvARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetnUniformiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetnUniformiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMIVPROC glad_glGetnUniformiv
     * }
     */
    public static AddressLayout glad_glGetnUniformiv$layout() {
        return glad_glGetnUniformiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMIVPROC glad_glGetnUniformiv
     * }
     */
    public static MemorySegment glad_glGetnUniformiv$segment() {
        return glad_glGetnUniformiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMIVPROC glad_glGetnUniformiv
     * }
     */
    public static MemorySegment glad_glGetnUniformiv() {
        return glad_glGetnUniformiv$constants.SEGMENT.get(glad_glGetnUniformiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMIVPROC glad_glGetnUniformiv
     * }
     */
    public static void glad_glGetnUniformiv(MemorySegment varValue) {
        glad_glGetnUniformiv$constants.SEGMENT.set(glad_glGetnUniformiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetnUniformiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetnUniformiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMIVPROC glad_debug_glGetnUniformiv
     * }
     */
    public static AddressLayout glad_debug_glGetnUniformiv$layout() {
        return glad_debug_glGetnUniformiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMIVPROC glad_debug_glGetnUniformiv
     * }
     */
    public static MemorySegment glad_debug_glGetnUniformiv$segment() {
        return glad_debug_glGetnUniformiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMIVPROC glad_debug_glGetnUniformiv
     * }
     */
    public static MemorySegment glad_debug_glGetnUniformiv() {
        return glad_debug_glGetnUniformiv$constants.SEGMENT.get(glad_debug_glGetnUniformiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMIVPROC glad_debug_glGetnUniformiv
     * }
     */
    public static void glad_debug_glGetnUniformiv(MemorySegment varValue) {
        glad_debug_glGetnUniformiv$constants.SEGMENT.set(glad_debug_glGetnUniformiv$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetnUniformivARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetnUniformivARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMIVARBPROC glad_glGetnUniformivARB
     * }
     */
    public static AddressLayout glad_glGetnUniformivARB$layout() {
        return glad_glGetnUniformivARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMIVARBPROC glad_glGetnUniformivARB
     * }
     */
    public static MemorySegment glad_glGetnUniformivARB$segment() {
        return glad_glGetnUniformivARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMIVARBPROC glad_glGetnUniformivARB
     * }
     */
    public static MemorySegment glad_glGetnUniformivARB() {
        return glad_glGetnUniformivARB$constants.SEGMENT.get(glad_glGetnUniformivARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMIVARBPROC glad_glGetnUniformivARB
     * }
     */
    public static void glad_glGetnUniformivARB(MemorySegment varValue) {
        glad_glGetnUniformivARB$constants.SEGMENT.set(glad_glGetnUniformivARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_debug_glGetnUniformivARB$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_debug_glGetnUniformivARB").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMIVARBPROC glad_debug_glGetnUniformivARB
     * }
     */
    public static AddressLayout glad_debug_glGetnUniformivARB$layout() {
        return glad_debug_glGetnUniformivARB$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMIVARBPROC glad_debug_glGetnUniformivARB
     * }
     */
    public static MemorySegment glad_debug_glGetnUniformivARB$segment() {
        return glad_debug_glGetnUniformivARB$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMIVARBPROC glad_debug_glGetnUniformivARB
     * }
     */
    public static MemorySegment glad_debug_glGetnUniformivARB() {
        return glad_debug_glGetnUniformivARB$constants.SEGMENT.get(glad_debug_glGetnUniformivARB$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMIVARBPROC glad_debug_glGetnUniformivARB
     * }
     */
    public static void glad_debug_glGetnUniformivARB(MemorySegment varValue) {
        glad_debug_glGetnUniformivARB$constants.SEGMENT.set(glad_debug_glGetnUniformivARB$constants.LAYOUT, 0L, varValue);
    }

    private static class glad_glGetnUniformuiv$constants {
        public static final AddressLayout LAYOUT = glcore.C_POINTER;
        public static final MemorySegment SEGMENT = glcore.findOrThrow("glad_glGetnUniformuiv").reinterpret(LAYOUT.byteSize());
    }

    /**
     * Layout for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMUIVPROC glad_glGetnUniformuiv
     * }
     */
    public static AddressLayout glad_glGetnUniformuiv$layout() {
        return glad_glGetnUniformuiv$constants.LAYOUT;
    }

    /**
     * Segment for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMUIVPROC glad_glGetnUniformuiv
     * }
     */
    public static MemorySegment glad_glGetnUniformuiv$segment() {
        return glad_glGetnUniformuiv$constants.SEGMENT;
    }

    /**
     * Getter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMUIVPROC glad_glGetnUniformuiv
     * }
     */
    public static MemorySegment glad_glGetnUniformuiv() {
        return glad_glGetnUniformuiv$constants.SEGMENT.get(glad_glGetnUniformuiv$constants.LAYOUT, 0L);
    }

    /**
     * Setter for variable:
     * {@snippet lang=c :
     * extern PFNGLGETNUNIFORMUIVPROC glad_glGetnUniformuiv
     * }
     */
    public static void glad_glGetnUniformuiv(MemorySegment varValue) {
        glad_glGetnUniformuiv$constants.SEGMENT.set(glad_glGetnUniformuiv$constants.LAYOUT, 0L, varValue);
    }
}

